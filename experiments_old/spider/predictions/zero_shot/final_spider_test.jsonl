{"sample_id": 1542, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"", "pred_sql": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name = 'Open';"}
{"sample_id": 1520, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)", "pred_sql": "SELECT c.customer_details \nFROM customers c \nJOIN policies p ON c.customer_id = p.customer_id \nJOIN claim_headers ch ON p.policy_id = ch.policy_id \nWHERE ch.amount_claimed = (SELECT MAX(amount_claimed) FROM claim_headers)"}
{"sample_id": 1509, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"", "pred_sql": "SELECT DISTINCT policies.policy_type_code \nFROM customers \nJOIN policies ON customers.customer_id = policies.customer_id \nWHERE customers.customer_details = 'Dayana Robel';"}
{"sample_id": 1536, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff", "pred_sql": "SELECT customers.customer_details AS customer_name, staff.staff_details AS staff_name FROM customers, staff;"}
{"sample_id": 1507, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT customer_details FROM customers ORDER BY customer_details", "pred_sql": "SELECT customer_details FROM customers ORDER BY customer_details ASC;"}
{"sample_id": 1511, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT policy_type_code, COUNT(*) as frequency FROM policies GROUP BY policy_type_code ORDER BY frequency DESC LIMIT 1;"}
{"sample_id": 1526, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT count(*) FROM claims_processing_stages", "pred_sql": "SELECT COUNT(DISTINCT claim_stage_id) AS distinct_stages FROM claims_processing_stages;"}
{"sample_id": 1545, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)", "pred_sql": "SELECT c.customer_id, c.customer_details \nFROM customers c \nJOIN policies p ON c.customer_id = p.customer_id \nWHERE p.start_date = (SELECT MAX(start_date) FROM policies)"}
{"sample_id": 6976, "db_id": "culture_company", "gold_sql": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million", "pred_sql": "SELECT title, year, director FROM movie ORDER BY budget_million;", "token_usage": {"tokens": 711, "cost": 0.00017235}}
{"sample_id": 6970, "db_id": "culture_company", "gold_sql": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2", "pred_sql": "SELECT category FROM book_club WHERE year > '1989' GROUP BY category HAVING COUNT(book_title) >= 2;", "token_usage": {"tokens": 738, "cost": 0.00018989999999999998}}
{"sample_id": 6991, "db_id": "culture_company", "gold_sql": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999", "pred_sql": "SELECT DISTINCT culture_company.company_name \nFROM culture_company \nJOIN movie ON culture_company.movie_id = movie.movie_id \nWHERE movie.year = 1999;", "token_usage": {"tokens": 749, "cost": 0.00019739999999999997}}
{"sample_id": 6955, "db_id": "culture_company", "gold_sql": "SELECT count(*) FROM book_club", "pred_sql": "SELECT COUNT(*) AS total_book_clubs FROM book_club;", "token_usage": {"tokens": 647, "cost": 0.00013935}}
{"sample_id": 6975, "db_id": "culture_company", "gold_sql": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million", "pred_sql": "SELECT title, year, director FROM movie ORDER BY budget_million;", "token_usage": {"tokens": 678, "cost": 0.00015479999999999997}}
{"sample_id": 6988, "db_id": "culture_company", "gold_sql": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'", "pred_sql": "SELECT DISTINCT culture_company.company_name \nFROM culture_company \nJOIN book_club ON culture_company.book_club_id = book_club.book_club_id \nWHERE book_club.author_or_editor = 'Alyson';", "token_usage": {"tokens": 744, "cost": 0.00019394999999999997}}
{"sample_id": 6977, "db_id": "culture_company", "gold_sql": "SELECT COUNT (DISTINCT director) FROM movie", "pred_sql": "SELECT COUNT(DISTINCT director) AS director_count FROM movie;", "token_usage": {"tokens": 636, "cost": 0.00013275}}
{"sample_id": 6960, "db_id": "culture_company", "gold_sql": "SELECT DISTINCT publisher FROM book_club", "pred_sql": "SELECT DISTINCT publisher FROM book_club;", "token_usage": {"tokens": 625, "cost": 0.0001257}}
{"sample_id": 7672, "db_id": "poker_player", "gold_sql": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "pred_sql": "SELECT name, birth_date FROM people ORDER BY name ASC;", "token_usage": {"tokens": 517, "cost": 0.00012254999999999997}}
{"sample_id": 7658, "db_id": "poker_player", "gold_sql": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "pred_sql": "SELECT p.birth_date FROM people p JOIN poker_player pp ON p.people_id = pp.people_id ORDER BY pp.earnings ASC LIMIT 1;", "token_usage": {"tokens": 586, "cost": 0.00016439999999999998}}
{"sample_id": 7670, "db_id": "poker_player", "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "pred_sql": "SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2;", "token_usage": {"tokens": 561, "cost": 0.00014939999999999997}}
{"sample_id": 7644, "db_id": "poker_player", "gold_sql": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "pred_sql": "SELECT final_table_made, best_finish FROM poker_player;", "token_usage": {"tokens": 475, "cost": 9.824999999999999e-05}}
{"sample_id": 7656, "db_id": "poker_player", "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "pred_sql": "SELECT p.name FROM people p JOIN poker_player pp ON p.people_id = pp.people_id ORDER BY pp.final_table_made ASC;", "token_usage": {"tokens": 580, "cost": 0.00015989999999999998}}
{"sample_id": 7648, "db_id": "poker_player", "gold_sql": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "pred_sql": "SELECT money_rank FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player);", "token_usage": {"tokens": 522, "cost": 0.00012599999999999997}}
{"sample_id": 7660, "db_id": "poker_player", "gold_sql": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "pred_sql": "SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id ORDER BY p.height DESC LIMIT 1;", "token_usage": {"tokens": 531, "cost": 0.00013274999999999997}}
{"sample_id": 7669, "db_id": "poker_player", "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 543, "cost": 0.00013995}}
{"sample_id": 4924, "db_id": "store_product", "gold_sql": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5", "pred_sql": "SELECT product.product_id, product.product, product.dimensions, product.dpi, product.pages_per_minute_color, product.max_page_size, product.interface \nFROM product \nWHERE product.max_page_size = 'A4' \nAND product.pages_per_minute_color < '5';", "token_usage": {"tokens": 818, "cost": 0.0001992}}
{"sample_id": 4913, "db_id": "store_product", "gold_sql": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"", "pred_sql": "SELECT d.headquartered_city FROM store s JOIN store_district sd ON s.store_id = sd.store_id JOIN district d ON sd.district_id = d.district_id WHERE s.store_name = 'Blackville';", "token_usage": {"tokens": 797, "cost": 0.00019019999999999996}}
{"sample_id": 4898, "db_id": "store_product", "gold_sql": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "pred_sql": "SELECT district_name, city_population FROM district WHERE city_population BETWEEN '200000' AND '2000000';", "token_usage": {"tokens": 792, "cost": 0.0001827}}
{"sample_id": 4914, "db_id": "store_product", "gold_sql": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"", "pred_sql": "SELECT district.headquartered_city FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE store.store_name = 'Blackville';", "token_usage": {"tokens": 787, "cost": 0.00018599999999999997}}
{"sample_id": 4929, "db_id": "store_product", "gold_sql": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT max(max_page_size) AS prominent_max_page_size FROM product;", "token_usage": {"tokens": 732, "cost": 0.00015299999999999998}}
{"sample_id": 4893, "db_id": "store_product", "gold_sql": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC", "pred_sql": "SELECT DISTINCT district_name FROM district ORDER BY city_area DESC;", "token_usage": {"tokens": 732, "cost": 0.00015255}}
{"sample_id": 4900, "db_id": "store_product", "gold_sql": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000", "pred_sql": "SELECT district_name FROM district WHERE city_area > 10 OR city_population > 100000;", "token_usage": {"tokens": 768, "cost": 0.00016829999999999997}}
{"sample_id": 4920, "db_id": "store_product", "gold_sql": "SELECT avg(pages_per_minute_color) FROM product", "pred_sql": "SELECT AVG(pages_per_minute_color) AS average_pages_per_minute_color FROM product;", "token_usage": {"tokens": 750, "cost": 0.00016425}}
{"sample_id": 4925, "db_id": "store_product", "gold_sql": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5", "pred_sql": "SELECT * FROM product WHERE max_page_size = 'A4' OR pages_per_minute_color < '5';", "token_usage": {"tokens": 796, "cost": 0.00018734999999999997}}
{"sample_id": 4904, "db_id": "store_product", "gold_sql": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1", "pred_sql": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1;", "token_usage": {"tokens": 761, "cost": 0.00017039999999999997}}
{"sample_id": 1915, "db_id": "protein_institute", "gold_sql": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20", "pred_sql": "SELECT name FROM building WHERE height_feet >= '200' AND floors >= '20';"}
{"sample_id": 1927, "db_id": "protein_institute", "gold_sql": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id", "pred_sql": "SELECT protein.protein_name, institution.institution FROM protein JOIN institution ON protein.institution_id = institution.institution_id;"}
{"sample_id": 1921, "db_id": "protein_institute", "gold_sql": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003", "pred_sql": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution WHERE founded = '2003');"}
{"sample_id": 1928, "db_id": "protein_institute", "gold_sql": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20", "pred_sql": "SELECT COUNT(*) AS protein_count \nFROM protein p \nJOIN institution i ON p.institution_id = i.institution_id \nJOIN building b ON i.building_id = b.building_id \nWHERE b.floors >= '20';"}
{"sample_id": 1879, "db_id": "wrestler", "gold_sql": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\"", "pred_sql": "SELECT DISTINCT e1.team\nFROM elimination e1\nJOIN elimination e2 ON e1.team = e2.team\nWHERE e1.eliminated_by = (SELECT wrestler_id FROM wrestler WHERE name = 'Orton')\nAND e2.eliminated_by = (SELECT wrestler_id FROM wrestler WHERE name = 'Benjamin');"}
{"sample_id": 1845, "db_id": "wrestler", "gold_sql": "SELECT count(*) FROM wrestler", "pred_sql": "SELECT COUNT(*) AS wrestler_count FROM wrestler;"}
{"sample_id": 1865, "db_id": "wrestler", "gold_sql": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team", "pred_sql": "SELECT team, COUNT(*) AS elimination_count FROM elimination GROUP BY team;"}
{"sample_id": 1869, "db_id": "wrestler", "gold_sql": "SELECT Reign ,  Days_held FROM wrestler", "pred_sql": "SELECT reign, days_held FROM wrestler;"}
{"sample_id": 1883, "db_id": "wrestler", "gold_sql": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"", "pred_sql": "SELECT time FROM elimination WHERE eliminated_by IN (SELECT wrestler_id FROM wrestler WHERE name IN ('Punk', 'Orton'));"}
{"sample_id": 1876, "db_id": "wrestler", "gold_sql": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)", "pred_sql": "SELECT name FROM wrestler WHERE wrestler_id NOT IN (SELECT wrestler_id FROM elimination);"}
{"sample_id": 1873, "db_id": "wrestler", "gold_sql": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT reign, COUNT(*) as reign_count FROM wrestler GROUP BY reign ORDER BY reign_count DESC LIMIT 1;"}
{"sample_id": 1856, "db_id": "wrestler", "gold_sql": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "pred_sql": "SELECT wrestler.name, elimination.elimination_move FROM wrestler JOIN elimination ON wrestler.wrestler_id = elimination.wrestler_id;"}
{"sample_id": 2853, "db_id": "icfp_1", "gold_sql": "SELECT count(*) FROM inst", "pred_sql": "SELECT COUNT(*) AS institution_count FROM inst;", "token_usage": {"tokens": 518, "cost": 0.00011595}}
{"sample_id": 2900, "db_id": "icfp_1", "gold_sql": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "pred_sql": "SELECT title FROM papers WHERE title LIKE '%Database%';", "token_usage": {"tokens": 569, "cost": 0.0001407}}
{"sample_id": 2860, "db_id": "icfp_1", "gold_sql": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"", "pred_sql": "SELECT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN authors ON authorship.authid = authors.authid WHERE authors.fname = 'Aaron' AND authors.lname = 'Turon';", "token_usage": {"tokens": 613, "cost": 0.00016934999999999997}}
{"sample_id": 2902, "db_id": "icfp_1", "gold_sql": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "pred_sql": "SELECT authors.fname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN papers ON authorship.paperid = papers.paperid WHERE papers.title LIKE '%Functional%';", "token_usage": {"tokens": 592, "cost": 0.00015225}}
{"sample_id": 2855, "db_id": "icfp_1", "gold_sql": "SELECT count(*) FROM papers", "pred_sql": "SELECT COUNT(*) AS total_papers FROM papers;", "token_usage": {"tokens": 523, "cost": 0.00011805}}
{"sample_id": 2866, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "pred_sql": "SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN authors ON authorship.authid = authors.authid WHERE authors.fname = 'Katsuhiro' AND authors.lname = 'Ueno';", "token_usage": {"tokens": 624, "cost": 0.0001737}}
{"sample_id": 2876, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"", "pred_sql": "SELECT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Indiana University';", "token_usage": {"tokens": 612, "cost": 0.00016785}}
{"sample_id": 2859, "db_id": "icfp_1", "gold_sql": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"", "pred_sql": "SELECT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN authors ON authorship.authid = authors.authid WHERE authors.fname = 'Aaron' AND authors.lname = 'Turon';", "token_usage": {"tokens": 618, "cost": 0.0001737}}
{"sample_id": 2889, "db_id": "icfp_1", "gold_sql": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"", "pred_sql": "SELECT papers.title \nFROM papers \nJOIN authorship ON papers.paperid = authorship.paperid \nJOIN authors ON authorship.authid = authors.authid \nJOIN inst ON authorship.instid = inst.instid \nWHERE authors.fname = 'Ohori' AND inst.country = 'Japan' AND authorship.authorder = '1';", "token_usage": {"tokens": 733, "cost": 0.00023505}}
{"sample_id": 2861, "db_id": "icfp_1", "gold_sql": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\"", "pred_sql": "SELECT COUNT(*) AS paper_count FROM papers p JOIN authorship a ON p.paperid = a.paperid JOIN authors au ON a.authid = au.authid WHERE au.fname = 'Atsushi' AND au.lname = 'Ohori';", "token_usage": {"tokens": 625, "cost": 0.00017699999999999997}}
{"sample_id": 2910, "db_id": "icfp_1", "gold_sql": "SELECT lname FROM authors WHERE fname  =  \"Amal\"", "pred_sql": "SELECT lname FROM authors WHERE fname = 'Amal';", "token_usage": {"tokens": 539, "cost": 0.00012495}}
{"sample_id": 2864, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "pred_sql": "SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN authors ON authorship.authid = authors.authid WHERE authors.fname = 'Matthias' AND authors.lname = 'Blume';", "token_usage": {"tokens": 624, "cost": 0.0001719}}
{"sample_id": 2897, "db_id": "icfp_1", "gold_sql": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "pred_sql": "SELECT title FROM papers WHERE title LIKE '%ML%';", "token_usage": {"tokens": 544, "cost": 0.00012839999999999998}}
{"sample_id": 2865, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "pred_sql": "SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN authors ON authorship.authid = authors.authid WHERE authors.fname = 'Katsuhiro' AND authors.lname = 'Ueno';", "token_usage": {"tokens": 618, "cost": 0.00017279999999999997}}
{"sample_id": 2097, "db_id": "pilot_record", "gold_sql": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)", "pred_sql": "SELECT pilot_name FROM pilot WHERE pilot_id NOT IN (SELECT pilot_id FROM pilot_record);", "token_usage": {"tokens": 652, "cost": 0.0001518}}
{"sample_id": 2087, "db_id": "pilot_record", "gold_sql": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"", "pred_sql": "SELECT pilot_name FROM pilot WHERE team IN ('Bradley', 'Fordham');", "token_usage": {"tokens": 678, "cost": 0.0001656}}
{"sample_id": 2088, "db_id": "pilot_record", "gold_sql": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1", "pred_sql": "SELECT join_year FROM pilot WHERE rank = (SELECT MAX(rank) FROM pilot);", "token_usage": {"tokens": 638, "cost": 0.00014294999999999998}}
{"sample_id": 4586, "db_id": "solvency_ii", "gold_sql": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name", "pred_sql": "SELECT p.product_name, COUNT(pie.event_id) AS event_count\nFROM products p\nJOIN products_in_events pie ON p.product_id = pie.product_id\nGROUP BY p.product_name;", "token_usage": {"tokens": 1039, "cost": 0.0002328}}
{"sample_id": 4588, "db_id": "solvency_ii", "gold_sql": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2", "pred_sql": "SELECT p.product_name\nFROM products p\nJOIN products_in_events pie ON p.product_id = pie.product_id\nGROUP BY p.product_id\nHAVING COUNT(pie.event_id) >= 2;", "token_usage": {"tokens": 1012, "cost": 0.00021705}}
{"sample_id": 4582, "db_id": "solvency_ii", "gold_sql": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code", "pred_sql": "SELECT product_type_code, COUNT(product_id) AS product_count FROM products GROUP BY product_type_code;", "token_usage": {"tokens": 977, "cost": 0.0001947}}
{"sample_id": 1285, "db_id": "game_injury", "gold_sql": "SELECT count(DISTINCT SOURCE) FROM injury_accident", "pred_sql": "SELECT COUNT(DISTINCT source) AS different_sources FROM injury_accident;"}
{"sample_id": 1286, "db_id": "game_injury", "gold_sql": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )", "pred_sql": "SELECT COUNT(*) AS free_of_injury_games FROM game WHERE id NOT IN (SELECT game_id FROM injury_accident)"}
{"sample_id": 1277, "db_id": "game_injury", "gold_sql": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium", "pred_sql": "SELECT stadium.name, MAX(stadium.home_games) AS max_home_games, MIN(stadium.home_games) AS min_home_games, AVG(stadium.home_games) AS avg_home_games FROM stadium GROUP BY stadium.name;"}
{"sample_id": 1289, "db_id": "game_injury", "gold_sql": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id", "pred_sql": "SELECT s.name, s.average_attendance, s.total_attendance \nFROM stadium s \nLEFT JOIN game g ON s.id = g.stadium_id \nLEFT JOIN injury_accident ia ON g.id = ia.game_id \nWHERE ia.id IS NULL;"}
{"sample_id": 1274, "db_id": "game_injury", "gold_sql": "SELECT count(*) FROM game WHERE season  >  2007", "pred_sql": "SELECT COUNT(*) AS total_games FROM game WHERE season > 2007;"}
{"sample_id": 3720, "db_id": "mountain_photos", "gold_sql": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)", "pred_sql": "SELECT camera_lens.name, COUNT(photos.id) AS photo_count \nFROM camera_lens \nLEFT JOIN photos ON camera_lens.id = photos.camera_lens_id \nGROUP BY camera_lens.id \nORDER BY photo_count;", "token_usage": {"tokens": 679, "cost": 0.00017475}}
{"sample_id": 3717, "db_id": "mountain_photos", "gold_sql": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'", "pred_sql": "SELECT DISTINCT cl.brand \nFROM camera_lens cl \nJOIN photos p ON cl.id = p.camera_lens_id \nJOIN mountain m ON p.mountain_id = m.id \nWHERE m.range IN ('Toubkal Atlas', 'Lasta Massif') \nGROUP BY cl.brand \nHAVING COUNT(DISTINCT m.range) = 2;", "token_usage": {"tokens": 754, "cost": 0.0002166}}
{"sample_id": 3710, "db_id": "mountain_photos", "gold_sql": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000", "pred_sql": "SELECT photos.id, photos.name FROM photos JOIN mountain ON photos.mountain_id = mountain.id;", "token_usage": {"tokens": 614, "cost": 0.00014204999999999998}}
{"sample_id": 3711, "db_id": "mountain_photos", "gold_sql": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2", "pred_sql": "SELECT mountain.id, mountain.name FROM mountain JOIN photos ON mountain.id = photos.mountain_id GROUP BY mountain.id HAVING COUNT(photos.id) >= 2;", "token_usage": {"tokens": 658, "cost": 0.00016619999999999997}}
{"sample_id": 5632, "db_id": "railway", "gold_sql": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1", "pred_sql": "SELECT name FROM manager ORDER BY working_year_starts ASC LIMIT 1;", "token_usage": {"tokens": 695, "cost": 0.00015374999999999997}}
{"sample_id": 5639, "db_id": "railway", "gold_sql": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION", "pred_sql": "SELECT location, COUNT(railway_id) AS number_of_railways FROM railway GROUP BY location;", "token_usage": {"tokens": 710, "cost": 0.00015869999999999998}}
{"sample_id": 5642, "db_id": "railway", "gold_sql": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46", "pred_sql": "SELECT DISTINCT m1.country \nFROM manager m1 \nJOIN railway_manage rm1 ON m1.manager_id = rm1.manager_id \nWHERE m1.age > '50' \nAND m1.country IN (\n    SELECT m2.country \n    FROM manager m2 \n    WHERE m2.age < '46'\n)", "token_usage": {"tokens": 785, "cost": 0.0002028}}
{"sample_id": 5634, "db_id": "railway", "gold_sql": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\"", "pred_sql": "SELECT railway.builder FROM railway JOIN train ON railway.railway_id = train.railway_id WHERE train.name = 'Andaman Exp';", "token_usage": {"tokens": 761, "cost": 0.0001902}}
{"sample_id": 5630, "db_id": "railway", "gold_sql": "SELECT Name FROM manager ORDER BY LEVEL ASC", "pred_sql": "SELECT name FROM manager ORDER BY level ASC;", "token_usage": {"tokens": 698, "cost": 0.00015419999999999998}}
{"sample_id": 429, "db_id": "flight_1", "gold_sql": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "pred_sql": "SELECT name FROM employee WHERE eid NOT IN (SELECT eid FROM certificate WHERE aid = (SELECT aid FROM aircraft WHERE name = 'Boeing 737-800'));"}
{"sample_id": 435, "db_id": "flight_1", "gold_sql": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT e.name, e.salary FROM employee e JOIN certificate c ON e.eid = c.eid GROUP BY e.eid ORDER BY COUNT(c.aid) DESC LIMIT 1;"}
{"sample_id": 434, "db_id": "flight_1", "gold_sql": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "pred_sql": "SELECT name, distance FROM aircraft WHERE distance > 5000 AND aid IN (SELECT aid FROM flight GROUP BY aid HAVING COUNT(DISTINCT flno) >= 5)"}
{"sample_id": 430, "db_id": "flight_1", "gold_sql": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "pred_sql": "SELECT e.name FROM employee e WHERE e.eid NOT IN (SELECT c.eid FROM certificate c JOIN aircraft a ON c.aid = a.aid WHERE a.name = 'Boeing 737-800');"}
{"sample_id": 400, "db_id": "flight_1", "gold_sql": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "pred_sql": "SELECT flno FROM flight ORDER BY distance ASC LIMIT 1;"}
{"sample_id": 396, "db_id": "flight_1", "gold_sql": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "pred_sql": "SELECT origin, destination FROM flight WHERE price > '300';"}
{"sample_id": 367, "db_id": "flight_1", "gold_sql": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "pred_sql": "SELECT COUNT(*) AS employee_count FROM employee WHERE salary BETWEEN '100000' AND '200000';"}
{"sample_id": 360, "db_id": "flight_1", "gold_sql": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "pred_sql": "SELECT name FROM aircraft WHERE distance > (SELECT AVG(distance) FROM aircraft);"}
{"sample_id": 409, "db_id": "flight_1", "gold_sql": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT destination, COUNT(*) AS flight_count FROM flight GROUP BY destination ORDER BY flight_count ASC LIMIT 1;"}
{"sample_id": 375, "db_id": "flight_1", "gold_sql": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "pred_sql": "SELECT name FROM employee ORDER BY salary ASC LIMIT 3;"}
{"sample_id": 374, "db_id": "flight_1", "gold_sql": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "pred_sql": "SELECT eid, name FROM employee ORDER BY salary DESC LIMIT 1;"}
{"sample_id": 427, "db_id": "flight_1", "gold_sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "pred_sql": "SELECT e.name FROM employee e JOIN certificate c1 ON e.eid = c1.eid JOIN aircraft a1 ON c1.aid = a1.aid WHERE a1.name = 'Boeing 737-800' INTERSECT SELECT e.name FROM employee e JOIN certificate c2 ON e.eid = c2.eid JOIN aircraft a2 ON c2.aid = a2.aid WHERE a2.name = 'Airbus A340-300';"}
{"sample_id": 405, "db_id": "flight_1", "gold_sql": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "pred_sql": "SELECT destination, COUNT(*) AS number_of_flights FROM flight GROUP BY destination;"}
{"sample_id": 402, "db_id": "flight_1", "gold_sql": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "pred_sql": "SELECT AVG(distance) AS average_distance, AVG(price) AS average_price FROM flight WHERE origin = 'LA';"}
{"sample_id": 395, "db_id": "flight_1", "gold_sql": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "pred_sql": "SELECT origin, destination FROM flight WHERE price > '300';"}
{"sample_id": 438, "db_id": "flight_1", "gold_sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT e.name, e.salary FROM employee e JOIN certificate c ON e.eid = c.eid JOIN aircraft a ON c.aid = a.aid WHERE a.distance > 5000 GROUP BY e.eid ORDER BY COUNT(c.eid) DESC LIMIT 1;"}
{"sample_id": 366, "db_id": "flight_1", "gold_sql": "SELECT eid FROM Employee WHERE salary  >  100000", "pred_sql": "SELECT eid FROM employee WHERE salary >= '100000';"}
{"sample_id": 379, "db_id": "flight_1", "gold_sql": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "pred_sql": "SELECT eid, salary FROM employee WHERE name = 'Mark Young';"}
{"sample_id": 348, "db_id": "flight_1", "gold_sql": "SELECT aid FROM Aircraft WHERE distance  >  1000", "pred_sql": "SELECT aid FROM aircraft WHERE distance > 1000;"}
{"sample_id": 388, "db_id": "flight_1", "gold_sql": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "pred_sql": "SELECT DISTINCT origin FROM flight WHERE destination = 'Honolulu';"}
{"sample_id": 5648, "db_id": "customers_and_products_contacts", "gold_sql": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county", "pred_sql": "SELECT state_province_county, COUNT(*) AS address_count FROM addresses GROUP BY state_province_county;", "token_usage": {"tokens": 967, "cost": 0.00021164999999999997}}
{"sample_id": 5654, "db_id": "customers_and_products_contacts", "gold_sql": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id", "pred_sql": "SELECT p.product_name, SUM(oi.order_quantity) AS total_order_quantity\nFROM products p\nJOIN order_items oi ON p.product_id = oi.product_id\nGROUP BY p.product_name;", "token_usage": {"tokens": 976, "cost": 0.00021704999999999996}}
{"sample_id": 5646, "db_id": "customers_and_products_contacts", "gold_sql": "SELECT count(*) FROM addresses WHERE country  =  'USA'", "pred_sql": "SELECT COUNT(*) AS address_count FROM addresses WHERE country = 'USA';", "token_usage": {"tokens": 915, "cost": 0.0001818}}
{"sample_id": 526, "db_id": "allergy_1", "gold_sql": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")", "pred_sql": "SELECT AVG(age) AS average_age FROM student JOIN has_allergy ON student.stuid = has_allergy.stuid JOIN allergy_type ON has_allergy.allergy = allergy_type.allergy WHERE allergy_type.allergytype IN ('food', 'animal');"}
{"sample_id": 516, "db_id": "allergy_1", "gold_sql": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy", "pred_sql": "SELECT allergy, COUNT(stuid) AS student_count FROM has_allergy GROUP BY allergy;"}
{"sample_id": 467, "db_id": "allergy_1", "gold_sql": "SELECT DISTINCT city_code FROM Student", "pred_sql": "SELECT DISTINCT city_code FROM student;"}
{"sample_id": 495, "db_id": "allergy_1", "gold_sql": "SELECT avg(age) ,  sex FROM Student GROUP BY sex", "pred_sql": "SELECT sex, AVG(age) AS average_age FROM student GROUP BY sex;"}
{"sample_id": 489, "db_id": "allergy_1", "gold_sql": "SELECT major ,  count(*) FROM Student GROUP BY major", "pred_sql": "SELECT major, COUNT(*) AS number_of_students FROM student GROUP BY major;"}
{"sample_id": 530, "db_id": "allergy_1", "gold_sql": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "pred_sql": "SELECT COUNT(DISTINCT s.stuid) AS male_food_allergy_count\nFROM student s\nJOIN has_allergy ha ON s.stuid = ha.stuid\nJOIN allergy_type at ON ha.allergy = at.allergy\nWHERE s.sex = 'M' AND at.allergytype = 'food';"}
{"sample_id": 464, "db_id": "allergy_1", "gold_sql": "SELECT count(DISTINCT advisor) FROM Student", "pred_sql": "SELECT COUNT(DISTINCT advisor) AS advisor_count FROM student;"}
{"sample_id": 514, "db_id": "allergy_1", "gold_sql": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT allergy, COUNT(*) as count FROM has_allergy GROUP BY allergy ORDER BY count DESC LIMIT 1;"}
{"sample_id": 505, "db_id": "allergy_1", "gold_sql": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2", "pred_sql": "SELECT stuid FROM has_allergy GROUP BY stuid HAVING COUNT(allergy) >= 2;"}
{"sample_id": 460, "db_id": "allergy_1", "gold_sql": "SELECT count(*) FROM Student", "pred_sql": "SELECT COUNT(*) AS total_students FROM student;"}
{"sample_id": 507, "db_id": "allergy_1", "gold_sql": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy", "pred_sql": "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_allergy)"}
{"sample_id": 501, "db_id": "allergy_1", "gold_sql": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT advisor, COUNT(stuid) AS student_count FROM student GROUP BY advisor ORDER BY student_count DESC LIMIT 1;"}
{"sample_id": 502, "db_id": "allergy_1", "gold_sql": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT advisor, COUNT(stuid) AS student_count \nFROM student \nGROUP BY advisor \nORDER BY student_count DESC \nLIMIT 1;"}
{"sample_id": 499, "db_id": "allergy_1", "gold_sql": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor", "pred_sql": "SELECT advisor, COUNT(stuid) AS student_count FROM student GROUP BY advisor;"}
{"sample_id": 454, "db_id": "allergy_1", "gold_sql": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype", "pred_sql": "SELECT allergytype, COUNT(allergy) AS allergy_count FROM allergy_type GROUP BY allergytype;"}
{"sample_id": 535, "db_id": "allergy_1", "gold_sql": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "pred_sql": "SELECT fname, major FROM student WHERE stuid NOT IN (SELECT stuid FROM has_allergy WHERE allergy = 'soy');"}
{"sample_id": 527, "db_id": "allergy_1", "gold_sql": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "pred_sql": "SELECT s.fname, s.lname \nFROM student s \nLEFT JOIN has_allergy ha ON s.stuid = ha.stuid \nLEFT JOIN allergy_type at ON ha.allergy = at.allergy \nWHERE at.allergytype != 'food' OR at.allergytype IS NULL;"}
{"sample_id": 486, "db_id": "allergy_1", "gold_sql": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)", "pred_sql": "SELECT lname FROM student ORDER BY age ASC LIMIT 1;"}
{"sample_id": 472, "db_id": "allergy_1", "gold_sql": "SELECT StuID FROM Student WHERE Sex  =  'M'", "pred_sql": "SELECT stuid FROM student WHERE sex = 'male';"}
{"sample_id": 439, "db_id": "allergy_1", "gold_sql": "SELECT count(DISTINCT allergy) FROM Allergy_type", "pred_sql": "SELECT COUNT(*) AS total_allergies FROM allergy_type;"}
{"sample_id": 496, "db_id": "allergy_1", "gold_sql": "SELECT avg(age) ,  sex FROM Student GROUP BY sex", "pred_sql": "SELECT sex, AVG(age) AS average_age FROM student GROUP BY sex;"}
{"sample_id": 5434, "db_id": "shop_membership", "gold_sql": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'", "pred_sql": "SELECT DISTINCT branch.name \nFROM branch \nJOIN membership_register_branch ON branch.branch_id = membership_register_branch.branch_id \nJOIN member ON membership_register_branch.member_id = member.member_id \nWHERE member.hometown IN ('Louisville, Kentucky', 'Hiram, Georgia');", "token_usage": {"tokens": 789, "cost": 0.00021734999999999997}}
{"sample_id": 5411, "db_id": "shop_membership", "gold_sql": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT level, COUNT(member_id) AS member_count \nFROM member \nGROUP BY level \nORDER BY member_count DESC \nLIMIT 1;", "token_usage": {"tokens": 717, "cost": 0.0001827}}
{"sample_id": 5402, "db_id": "shop_membership", "gold_sql": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2", "pred_sql": "SELECT open_year FROM branch GROUP BY open_year HAVING COUNT(branch_id) >= 2;", "token_usage": {"tokens": 669, "cost": 0.00015255}}
{"sample_id": 5412, "db_id": "shop_membership", "gold_sql": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT level, COUNT(*) as member_count FROM member GROUP BY level ORDER BY member_count DESC LIMIT 1;", "token_usage": {"tokens": 701, "cost": 0.00017309999999999998}}
{"sample_id": 5418, "db_id": "shop_membership", "gold_sql": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "pred_sql": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch);", "token_usage": {"tokens": 673, "cost": 0.00015404999999999998}}
{"sample_id": 5401, "db_id": "shop_membership", "gold_sql": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2", "pred_sql": "SELECT open_year FROM branch GROUP BY open_year HAVING COUNT(branch_id) >= 2;", "token_usage": {"tokens": 685, "cost": 0.0001626}}
{"sample_id": 5416, "db_id": "shop_membership", "gold_sql": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id", "pred_sql": "SELECT b.branch_id, b.name FROM branch b JOIN membership_register_branch mrb ON b.branch_id = mrb.branch_id WHERE mrb.register_year > '2015';", "token_usage": {"tokens": 698, "cost": 0.0001668}}
{"sample_id": 5395, "db_id": "shop_membership", "gold_sql": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year", "pred_sql": "SELECT name, address_road, city FROM branch ORDER BY open_year;", "token_usage": {"tokens": 642, "cost": 0.00013499999999999997}}
{"sample_id": 5426, "db_id": "shop_membership", "gold_sql": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100", "pred_sql": "SELECT DISTINCT b.city\nFROM branch b\nWHERE b.open_year = 2001\nAND b.membership_amount > 100;", "token_usage": {"tokens": 709, "cost": 0.00017159999999999997}}
{"sample_id": 5417, "db_id": "shop_membership", "gold_sql": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "pred_sql": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "token_usage": {"tokens": 673, "cost": 0.0001572}}
{"sample_id": 1641, "db_id": "wedding", "gold_sql": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "pred_sql": "SELECT name, age FROM people WHERE is_male = 'yes' AND people_id NOT IN (SELECT male_id FROM wedding UNION SELECT female_id FROM wedding);"}
{"sample_id": 1648, "db_id": "wedding", "gold_sql": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016", "pred_sql": "SELECT COUNT(DISTINCT church_id) AS church_count FROM wedding WHERE year = '2016';"}
{"sample_id": 1630, "db_id": "wedding", "gold_sql": "SELECT name ,  open_date ,  organized_by FROM Church", "pred_sql": "SELECT name, open_date, organized_by FROM church;"}
{"sample_id": 1636, "db_id": "wedding", "gold_sql": "SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30", "pred_sql": "SELECT COUNT(*) FROM people WHERE is_male = 'no' AND age > '30';"}
{"sample_id": 3109, "db_id": "behavior_monitoring", "gold_sql": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1", "pred_sql": "SELECT addresses.address_id, addresses.zip_postcode\nFROM student_addresses\nJOIN addresses ON student_addresses.address_id = addresses.address_id\nORDER BY student_addresses.monthly_rental DESC\nLIMIT 1;", "token_usage": {"tokens": 1590, "cost": 0.00031005}}
{"sample_id": 3106, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\"", "pred_sql": "SELECT assessment_notes.text_of_notes \nFROM assessment_notes \nJOIN teachers ON assessment_notes.teacher_id = teachers.teacher_id \nWHERE teachers.last_name = 'Schuster';", "token_usage": {"tokens": 1553, "cost": 0.00028829999999999996}}
{"sample_id": 3082, "db_id": "behavior_monitoring", "gold_sql": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident", "pred_sql": "SELECT COUNT(DISTINCT incident_type_code) AS distinct_incident_type_count FROM ref_incident_type;", "token_usage": {"tokens": 1547, "cost": 0.00028739999999999994}}
{"sample_id": 3112, "db_id": "behavior_monitoring", "gold_sql": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\"", "pred_sql": "SELECT first_name, last_name FROM students JOIN addresses ON students.address_id = addresses.address_id WHERE addresses.state_province_county = 'Wisconsin';", "token_usage": {"tokens": 1588, "cost": 0.00030884999999999994}}
{"sample_id": 3091, "db_id": "behavior_monitoring", "gold_sql": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses", "pred_sql": "SELECT MAX(monthly_rental) AS max_monthly_rental, MIN(monthly_rental) AS min_monthly_rental FROM student_addresses;", "token_usage": {"tokens": 1551, "cost": 0.00028845}}
{"sample_id": 3108, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\"", "pred_sql": "SELECT detention.datetime_detention_start, detention.datetime_detention_end \nFROM detention \nJOIN teachers ON detention.teacher_id = teachers.teacher_id \nWHERE teachers.last_name = 'Schultz';", "token_usage": {"tokens": 1594, "cost": 0.00031154999999999996}}
{"sample_id": 3099, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT student_id, last_name FROM students WHERE student_id = (SELECT student_id FROM behavior_incident GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)", "token_usage": {"tokens": 1611, "cost": 0.00032264999999999996}}
{"sample_id": 3079, "db_id": "behavior_monitoring", "gold_sql": "SELECT count(*) FROM ASSESSMENT_NOTES", "pred_sql": "SELECT COUNT(*) AS total_assessment_notes FROM assessment_notes;", "token_usage": {"tokens": 1517, "cost": 0.00026939999999999993}}
{"sample_id": 1173, "db_id": "body_builder", "gold_sql": "SELECT min(snatch) FROM body_builder", "pred_sql": "SELECT MIN(snatch) AS minimum_snatch FROM body_builder;"}
{"sample_id": 1150, "db_id": "body_builder", "gold_sql": "SELECT count(*) FROM body_builder", "pred_sql": "SELECT COUNT(*) AS body_builder_count FROM body_builder;"}
{"sample_id": 1160, "db_id": "body_builder", "gold_sql": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315", "pred_sql": "SELECT p.height FROM people p JOIN body_builder bb ON p.people_id = bb.people_id WHERE bb.total < 315;"}
{"sample_id": 1158, "db_id": "body_builder", "gold_sql": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1", "pred_sql": "SELECT p.name FROM people p JOIN body_builder bb ON p.people_id = bb.people_id ORDER BY p.weight DESC LIMIT 1;"}
{"sample_id": 1157, "db_id": "body_builder", "gold_sql": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300", "pred_sql": "SELECT p.name FROM body_builder bb JOIN people p ON bb.people_id = p.people_id WHERE bb.total > 300;"}
{"sample_id": 1163, "db_id": "body_builder", "gold_sql": "SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place", "pred_sql": "SELECT birth_place, COUNT(*) AS number_of_people FROM people GROUP BY birth_place;"}
{"sample_id": 1249, "db_id": "apartment_rentals", "gold_sql": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "pred_sql": "SELECT booking_status_code, COUNT(*) AS booking_count FROM apartment_bookings GROUP BY booking_status_code;"}
{"sample_id": 1244, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "pred_sql": "SELECT DISTINCT ab.building_address FROM apartment_buildings ab JOIN apartments a ON ab.building_id = a.building_id WHERE a.bathroom_count > 2;"}
{"sample_id": 1206, "db_id": "apartment_rentals", "gold_sql": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "pred_sql": "SELECT MIN(bathroom_count) AS min_bathrooms, MAX(bathroom_count) AS max_bathrooms FROM apartments;"}
{"sample_id": 1194, "db_id": "apartment_rentals", "gold_sql": "SELECT count(*) FROM Apartment_Bookings", "pred_sql": "SELECT COUNT(*) AS total_bookings FROM apartment_bookings;"}
{"sample_id": 1266, "db_id": "apartment_rentals", "gold_sql": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "pred_sql": "SELECT gender_code, COUNT(guest_id) AS guest_count FROM guests GROUP BY gender_code ORDER BY guest_count DESC;"}
{"sample_id": 1254, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "pred_sql": "SELECT apt_type_code, COUNT(*) AS number_of_apartments FROM apartments GROUP BY apt_type_code ORDER BY number_of_apartments ASC;"}
{"sample_id": 1272, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "pred_sql": "SELECT apt_number FROM apartments a JOIN view_unit_status v ON a.apt_id = v.apt_id WHERE v.available_yn IN ('0', '1');"}
{"sample_id": 1213, "db_id": "apartment_rentals", "gold_sql": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"", "pred_sql": "SELECT AVG(room_count) AS average_room_count FROM apartments WHERE apt_type_code = 'Studio';"}
{"sample_id": 1268, "db_id": "apartment_rentals", "gold_sql": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)", "pred_sql": "SELECT COUNT(*) AS apartment_count FROM apartments WHERE apt_id NOT IN (SELECT apt_id FROM apartment_facilities)"}
{"sample_id": 1264, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code", "pred_sql": "SELECT apt_type_code, MAX(room_count) AS max_rooms, MIN(room_count) AS min_rooms FROM apartments GROUP BY apt_type_code;"}
{"sample_id": 1242, "db_id": "apartment_rentals", "gold_sql": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"", "pred_sql": "SELECT SUM(room_count) AS total_rooms FROM apartments WHERE building_id = (SELECT building_id FROM apartment_buildings WHERE building_short_name = 'Columbus Square');"}
{"sample_id": 1221, "db_id": "apartment_rentals", "gold_sql": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "pred_sql": "SELECT apartments.apt_number, apartment_bookings.booking_start_date, apartment_bookings.booking_end_date FROM apartment_bookings JOIN apartments ON apartment_bookings.apt_id = apartments.apt_id;"}
{"sample_id": 1219, "db_id": "apartment_rentals", "gold_sql": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"", "pred_sql": "SELECT date_of_birth FROM guests WHERE gender_code = 'Male';"}
{"sample_id": 1215, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "pred_sql": "SELECT apt_number FROM apartments WHERE apt_type_code = 'Flat';"}
{"sample_id": 1256, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3", "pred_sql": "SELECT apt_type_code, AVG(room_count) AS average_rooms\nFROM apartments\nGROUP BY apt_type_code\nORDER BY average_rooms DESC\nLIMIT 3;"}
{"sample_id": 1222, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "pred_sql": "SELECT ab.booking_start_date, ab.booking_end_date \nFROM apartment_bookings ab \nJOIN apartments a ON ab.apt_id = a.apt_id \nWHERE a.apt_type_code = 'Duplex';"}
{"sample_id": 6609, "db_id": "train_station", "gold_sql": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2", "pred_sql": "SELECT s.name \nFROM station s \nJOIN train_station ts ON s.station_id = ts.station_id \nGROUP BY s.station_id \nHAVING COUNT(ts.train_id) >= 2;", "token_usage": {"tokens": 608, "cost": 0.00015644999999999998}}
{"sample_id": 6596, "db_id": "train_station", "gold_sql": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3", "pred_sql": "SELECT name, main_services FROM station ORDER BY total_passengers DESC LIMIT 3;", "token_usage": {"tokens": 609, "cost": 0.00015299999999999998}}
{"sample_id": 6610, "db_id": "train_station", "gold_sql": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1", "pred_sql": "SELECT location FROM station GROUP BY location HAVING COUNT(station_id) = 1;", "token_usage": {"tokens": 583, "cost": 0.00014189999999999998}}
{"sample_id": 6605, "db_id": "train_station", "gold_sql": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id", "pred_sql": "SELECT s.name, COUNT(ts.train_id) AS number_of_trains\nFROM station s\nLEFT JOIN train_station ts ON s.station_id = ts.station_id\nGROUP BY s.station_id;", "token_usage": {"tokens": 647, "cost": 0.00017894999999999999}}
{"sample_id": 6612, "db_id": "train_station", "gold_sql": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\"", "pred_sql": "SELECT s.name FROM station s JOIN train_station ts1 ON s.station_id = ts1.station_id JOIN train t1 ON ts1.train_id = t1.train_id WHERE t1.name = 'Ananthapuri Express' AND s.station_id IN (SELECT ts2.station_id FROM train_station ts2 JOIN train t2 ON ts2.train_id = t2.train_id WHERE t2.name = 'Guruvayur Express');", "token_usage": {"tokens": 718, "cost": 0.00021434999999999998}}
{"sample_id": 6598, "db_id": "train_station", "gold_sql": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION", "pred_sql": "SELECT location, SUM(number_of_platforms) AS total_platforms, SUM(total_passengers) AS total_passengers FROM station GROUP BY location;", "token_usage": {"tokens": 622, "cost": 0.00016079999999999998}}
{"sample_id": 6358, "db_id": "school_bus", "gold_sql": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1", "pred_sql": "SELECT d.name FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id ORDER BY sb.years_working DESC LIMIT 1;", "token_usage": {"tokens": 606, "cost": 0.00015299999999999998}}
{"sample_id": 6344, "db_id": "school_bus", "gold_sql": "SELECT name FROM driver ORDER BY age DESC", "pred_sql": "SELECT name FROM driver ORDER BY age DESC;", "token_usage": {"tokens": 539, "cost": 0.0001155}}
{"sample_id": 6349, "db_id": "school_bus", "gold_sql": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40", "pred_sql": "SELECT DISTINCT home_city FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM driver WHERE age > '40')", "token_usage": {"tokens": 576, "cost": 0.0001359}}
{"sample_id": 6354, "db_id": "school_bus", "gold_sql": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)", "pred_sql": "SELECT school.school, school.type FROM school LEFT JOIN school_bus ON school.school_id = school_bus.school_id WHERE school_bus.school_id IS NULL;", "token_usage": {"tokens": 629, "cost": 0.00016859999999999998}}
{"sample_id": 6356, "db_id": "school_bus", "gold_sql": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40", "pred_sql": "SELECT COUNT(*) AS driver_count FROM driver WHERE home_city = 'Hartford' OR age < '40';", "token_usage": {"tokens": 567, "cost": 0.0001314}}
{"sample_id": 1104, "db_id": "match_season", "gold_sql": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)", "pred_sql": "SELECT name FROM team WHERE team_id NOT IN (SELECT DISTINCT team FROM match_season);"}
{"sample_id": 1057, "db_id": "match_season", "gold_sql": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"", "pred_sql": "SELECT DISTINCT official_native_language FROM country WHERE official_native_language LIKE '%English%';"}
{"sample_id": 1090, "db_id": "match_season", "gold_sql": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION", "pred_sql": "SELECT position, COUNT(*) AS number_of_players FROM match_season GROUP BY position;"}
{"sample_id": 1101, "db_id": "match_season", "gold_sql": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2", "pred_sql": "SELECT college FROM match_season GROUP BY college HAVING COUNT(player) >= 2;"}
{"sample_id": 1091, "db_id": "match_season", "gold_sql": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION", "pred_sql": "SELECT position, COUNT(player) AS player_count FROM match_season GROUP BY position;"}
{"sample_id": 1065, "db_id": "match_season", "gold_sql": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "pred_sql": "SELECT draft_pick_number, draft_class FROM match_season WHERE position = 'Defender';"}
{"sample_id": 1053, "db_id": "match_season", "gold_sql": "SELECT count(*) FROM country", "pred_sql": "SELECT COUNT(*) AS country_count FROM country;"}
{"sample_id": 1098, "db_id": "match_season", "gold_sql": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT college, COUNT(*) as college_count FROM match_season GROUP BY college ORDER BY college_count DESC LIMIT 3;"}
{"sample_id": 1108, "db_id": "match_season", "gold_sql": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"", "pred_sql": "SELECT DISTINCT college FROM match_season WHERE college IN (SELECT college FROM match_season WHERE position = 'midfielder') AND college IN (SELECT college FROM match_season WHERE position = 'defender');"}
{"sample_id": 1068, "db_id": "match_season", "gold_sql": "SELECT Player ,  Years_Played FROM player", "pred_sql": "SELECT player, years_played FROM player;"}
{"sample_id": 1076, "db_id": "match_season", "gold_sql": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"", "pred_sql": "SELECT DISTINCT ms.position FROM match_season ms JOIN country c ON ms.country = c.country_id WHERE c.capital = 'Dublin';"}
{"sample_id": 1084, "db_id": "match_season", "gold_sql": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"", "pred_sql": "SELECT position FROM match_season WHERE team = (SELECT team_id FROM team WHERE name = 'Ryley Goldner');"}
{"sample_id": 1066, "db_id": "match_season", "gold_sql": "SELECT count(DISTINCT Team) FROM match_season", "pred_sql": "SELECT COUNT(DISTINCT team) AS distinct_teams FROM match_season;"}
{"sample_id": 555, "db_id": "store_1", "gold_sql": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;", "pred_sql": "SELECT * FROM albums WHERE title LIKE 'A%' ORDER BY title ASC;"}
{"sample_id": 595, "db_id": "store_1", "gold_sql": "SELECT count(*) FROM employees WHERE country = \"Canada\";", "pred_sql": "SELECT COUNT(*) FROM employees WHERE country = 'Canada';"}
{"sample_id": 637, "db_id": "store_1", "gold_sql": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;", "pred_sql": "SELECT playlists.name\nFROM playlists\nJOIN playlist_tracks ON playlists.id = playlist_tracks.playlist_id\nGROUP BY playlists.id\nHAVING COUNT(playlist_tracks.track_id) > 100;"}
{"sample_id": 623, "db_id": "store_1", "gold_sql": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";", "pred_sql": "SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.album_id WHERE tracks.name = 'Balls to the Wall';"}
{"sample_id": 635, "db_id": "store_1", "gold_sql": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";", "pred_sql": "SELECT tracks.name \nFROM tracks \nJOIN playlist_tracks ON tracks.id = playlist_tracks.track_id \nJOIN playlists ON playlist_tracks.playlist_id = playlists.id \nWHERE playlists.name = 'Movies';"}
{"sample_id": 620, "db_id": "store_1", "gold_sql": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";", "pred_sql": "SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark';"}
{"sample_id": 642, "db_id": "store_1", "gold_sql": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";", "pred_sql": "SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark';"}
{"sample_id": 553, "db_id": "store_1", "gold_sql": "SELECT title FROM albums ORDER BY title;", "pred_sql": "SELECT * FROM albums ORDER BY title ASC;"}
{"sample_id": 566, "db_id": "store_1", "gold_sql": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;", "pred_sql": "SELECT billing_state, COUNT(*) AS invoice_count FROM invoices GROUP BY billing_state ORDER BY invoice_count DESC;"}
{"sample_id": 626, "db_id": "store_1", "gold_sql": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";", "pred_sql": "SELECT tracks.name FROM tracks JOIN albums ON tracks.album_id = albums.id WHERE albums.title = 'Balls to the Wall';"}
{"sample_id": 643, "db_id": "store_1", "gold_sql": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'", "pred_sql": "SELECT t.name \nFROM tracks t \nJOIN playlist_tracks pt1 ON t.id = pt1.track_id \nJOIN playlists p1 ON pt1.playlist_id = p1.id \nWHERE p1.name = 'Movies' \nAND t.id NOT IN (\n    SELECT t2.id \n    FROM tracks t2 \n    JOIN playlist_tracks pt2 ON t2.id = pt2.track_id \n    JOIN playlists p2 ON pt2.playlist_id = p2.id \n    WHERE p2.name = 'Music'\n);"}
{"sample_id": 549, "db_id": "store_1", "gold_sql": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;", "pred_sql": "SELECT genres.name, COUNT(tracks.id) AS total_tracks\nFROM genres\nLEFT JOIN tracks ON genres.id = tracks.genre_id\nGROUP BY genres.id\nORDER BY total_tracks DESC\nLIMIT 5;"}
{"sample_id": 591, "db_id": "store_1", "gold_sql": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "pred_sql": "SELECT address FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';"}
{"sample_id": 548, "db_id": "store_1", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;", "pred_sql": "SELECT c.first_name, c.last_name, SUM(i.total) AS total_sales\nFROM customers c\nJOIN invoices i ON c.id = i.customer_id\nGROUP BY c.id\nORDER BY total_sales DESC\nLIMIT 10;"}
{"sample_id": 573, "db_id": "store_1", "gold_sql": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";", "pred_sql": "SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins';"}
{"sample_id": 645, "db_id": "store_1", "gold_sql": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'", "pred_sql": "SELECT DISTINCT t.name \nFROM tracks t \nJOIN playlist_tracks pt ON t.id = pt.track_id \nJOIN playlists p ON pt.playlist_id = p.id \nWHERE p.name IN ('Movies', 'Music') \nGROUP BY t.id \nHAVING COUNT(DISTINCT p.name) = 2;"}
{"sample_id": 598, "db_id": "store_1", "gold_sql": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "pred_sql": "SELECT phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';"}
{"sample_id": 559, "db_id": "store_1", "gold_sql": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "pred_sql": "SELECT SUM(total) AS total_amount FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL';"}
{"sample_id": 560, "db_id": "store_1", "gold_sql": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "pred_sql": "SELECT SUM(total) AS total_amount FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'Illinois';"}
{"sample_id": 633, "db_id": "store_1", "gold_sql": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\"", "pred_sql": "SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id WHERE genres.name IN ('Rock', 'Jazz');"}
{"sample_id": 640, "db_id": "store_1", "gold_sql": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";", "pred_sql": "SELECT tracks.name FROM tracks JOIN invoice_lines ON tracks.id = invoice_lines.track_id JOIN invoices ON invoice_lines.invoice_id = invoices.id JOIN customers ON invoices.customer_id = customers.id WHERE customers.first_name = 'Dean' AND customers.last_name = 'Peeters';"}
{"sample_id": 618, "db_id": "store_1", "gold_sql": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";", "pred_sql": "SELECT composer FROM tracks WHERE name = 'Fast As a Shark';"}
{"sample_id": 572, "db_id": "store_1", "gold_sql": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";", "pred_sql": "SELECT COUNT(*) AS album_count FROM albums WHERE artist_id = (SELECT id FROM artists WHERE name = 'Billy Cobham');"}
{"sample_id": 5825, "db_id": "workshop_paper", "gold_sql": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "pred_sql": "SELECT submission.author, acceptance.result FROM submission JOIN acceptance ON submission.submission_id = acceptance.submission_id;", "token_usage": {"tokens": 550, "cost": 0.00013695}}
{"sample_id": 5810, "db_id": "workshop_paper", "gold_sql": "SELECT Author FROM submission ORDER BY Scores ASC", "pred_sql": "SELECT submission.author FROM submission ORDER BY submission.scores ASC;", "token_usage": {"tokens": 536, "cost": 0.00012719999999999997}}
{"sample_id": 5813, "db_id": "workshop_paper", "gold_sql": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"", "pred_sql": "SELECT DISTINCT s.author FROM submission s JOIN acceptance a ON s.submission_id = a.submission_id JOIN workshop w ON a.workshop_id = w.workshop_id WHERE s.college IN (SELECT college_id FROM college WHERE name IN ('Florida', 'Temple'));", "token_usage": {"tokens": 590, "cost": 0.0001605}}
{"sample_id": 5836, "db_id": "workshop_paper", "gold_sql": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)", "pred_sql": "SELECT DISTINCT author FROM submission WHERE author NOT IN (SELECT DISTINCT author FROM acceptance)", "token_usage": {"tokens": 513, "cost": 0.00011654999999999999}}
{"sample_id": 5815, "db_id": "workshop_paper", "gold_sql": "SELECT avg(Scores) FROM submission", "pred_sql": "SELECT AVG(scores) AS average_score FROM submission;", "token_usage": {"tokens": 494, "cost": 0.00010559999999999999}}
{"sample_id": 5816, "db_id": "workshop_paper", "gold_sql": "SELECT avg(Scores) FROM submission", "pred_sql": "SELECT AVG(scores) AS average_score FROM submission;", "token_usage": {"tokens": 496, "cost": 0.00010724999999999999}}
{"sample_id": 4544, "db_id": "company_office", "gold_sql": "SELECT avg(Profits_billion) FROM Companies", "pred_sql": "SELECT AVG(profits_billion) AS average_profits FROM companies;", "token_usage": {"tokens": 608, "cost": 0.00013935}}
{"sample_id": 4552, "db_id": "company_office", "gold_sql": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1", "pred_sql": "SELECT stories FROM buildings WHERE height = (SELECT MAX(height) FROM buildings);", "token_usage": {"tokens": 639, "cost": 0.0001566}}
{"sample_id": 4543, "db_id": "company_office", "gold_sql": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "pred_sql": "SELECT name, assets_billion FROM companies ORDER BY name ASC;", "token_usage": {"tokens": 617, "cost": 0.00014159999999999997}}
{"sample_id": 4562, "db_id": "company_office", "gold_sql": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry", "pred_sql": "SELECT industry, COUNT(*) AS number_of_companies FROM companies GROUP BY industry;", "token_usage": {"tokens": 633, "cost": 0.00015164999999999997}}
{"sample_id": 4536, "db_id": "company_office", "gold_sql": "SELECT count(*) FROM Companies", "pred_sql": "SELECT COUNT(*) AS company_count FROM companies;", "token_usage": {"tokens": 571, "cost": 0.00011804999999999998}}
{"sample_id": 4545, "db_id": "company_office", "gold_sql": "SELECT avg(Profits_billion) FROM Companies", "pred_sql": "SELECT AVG(profits_billion) AS average_profits FROM companies;", "token_usage": {"tokens": 594, "cost": 0.0001314}}
{"sample_id": 4538, "db_id": "company_office", "gold_sql": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC", "pred_sql": "SELECT name FROM companies ORDER BY market_value_billion DESC;", "token_usage": {"tokens": 612, "cost": 0.00013995}}
{"sample_id": 4548, "db_id": "company_office", "gold_sql": "SELECT count(DISTINCT Industry) FROM Companies", "pred_sql": "SELECT COUNT(DISTINCT industry) AS different_industries FROM companies;", "token_usage": {"tokens": 607, "cost": 0.00013829999999999997}}
{"sample_id": 2552, "db_id": "county_public_safety", "gold_sql": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "pred_sql": "SELECT cps.crime_rate FROM county_public_safety cps JOIN city c ON cps.county_id = c.county_id WHERE (c.white / (c.white + c.black + c.amerindian + c.asian + c.multiracial + c.hispanic)) > 0.90;", "token_usage": {"tokens": 712, "cost": 0.00018779999999999998}}
{"sample_id": 2551, "db_id": "county_public_safety", "gold_sql": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "pred_sql": "SELECT cps.crime_rate FROM county_public_safety cps JOIN city c ON cps.county_id = c.county_id WHERE (c.white / (c.white + c.black + c.amerindian + c.asian + c.multiracial + c.hispanic)) > 0.90;", "token_usage": {"tokens": 719, "cost": 0.00019289999999999997}}
{"sample_id": 2531, "db_id": "county_public_safety", "gold_sql": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety", "pred_sql": "SELECT MIN(crime_rate) AS min_crime_rate, MAX(crime_rate) AS max_crime_rate FROM county_public_safety;", "token_usage": {"tokens": 643, "cost": 0.00015}}
{"sample_id": 2559, "db_id": "county_public_safety", "gold_sql": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"", "pred_sql": "SELECT DISTINCT police_force FROM county_public_safety WHERE location IN ('east', 'west');", "token_usage": {"tokens": 631, "cost": 0.000141}}
{"sample_id": 2560, "db_id": "county_public_safety", "gold_sql": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"", "pred_sql": "SELECT DISTINCT cps1.police_force FROM county_public_safety cps1 JOIN county_public_safety cps2 ON cps1.police_force = cps2.police_force WHERE cps1.location = 'East' AND cps2.location = 'West';", "token_usage": {"tokens": 708, "cost": 0.00018585}}
{"sample_id": 2553, "db_id": "county_public_safety", "gold_sql": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force", "pred_sql": "SELECT police_force, COUNT(*) AS county_count FROM county_public_safety GROUP BY police_force;", "token_usage": {"tokens": 618, "cost": 0.00013319999999999999}}
{"sample_id": 2561, "db_id": "county_public_safety", "gold_sql": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "pred_sql": "SELECT city.name FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id WHERE county_public_safety.crime_rate < 100;", "token_usage": {"tokens": 693, "cost": 0.00017729999999999997}}
{"sample_id": 2541, "db_id": "county_public_safety", "gold_sql": "SELECT Name FROM city ORDER BY White DESC LIMIT 5", "pred_sql": "SELECT name FROM city ORDER BY (white / (white + black + amerindian + asian + multiracial + hispanic)) DESC LIMIT 5;", "token_usage": {"tokens": 683, "cost": 0.00017265}}
{"sample_id": 4621, "db_id": "customers_campaigns_ecommerce", "gold_sql": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2", "pred_sql": "SELECT c.customer_name \nFROM customers c \nJOIN mailshot_customers mc ON c.customer_id = mc.customer_id \nWHERE mc.outcome_code = 'Order' \nGROUP BY c.customer_id \nHAVING COUNT(mc.mailshot_id) >= 2;", "token_usage": {"tokens": 1236, "cost": 0.00026954999999999997}}
{"sample_id": 4619, "db_id": "customers_campaigns_ecommerce", "gold_sql": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'", "pred_sql": "SELECT customers.customer_name, customers.customer_phone \nFROM customers \nJOIN mailshot_customers ON customers.customer_id = mailshot_customers.customer_id \nWHERE mailshot_customers.outcome_code = 'No Response';", "token_usage": {"tokens": 1164, "cost": 0.00022679999999999998}}
{"sample_id": 4622, "db_id": "customers_campaigns_ecommerce", "gold_sql": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT c.customer_name, COUNT(m.mailshot_id) AS mailshot_count\nFROM customers c\nJOIN mailshot_customers mc ON c.customer_id = mc.customer_id\nJOIN mailshot_campaigns m ON mc.mailshot_id = m.mailshot_id\nGROUP BY c.customer_name\nORDER BY mailshot_count DESC;", "token_usage": {"tokens": 1234, "cost": 0.0002715}}
{"sample_id": 5539, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "pred_sql": "SELECT p.color_code, c.color_description \nFROM products p \nJOIN ref_colors c ON p.color_code = c.color_code \nWHERE p.product_name = 'chervil';", "token_usage": {"tokens": 823, "cost": 0.00018645}}
{"sample_id": 5592, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2", "pred_sql": "SELECT c.characteristic_name\nFROM characteristics c\nJOIN product_characteristics pc ON c.characteristic_id = pc.characteristic_id\nJOIN products p ON pc.product_id = p.product_id\nGROUP BY c.characteristic_name\nHAVING COUNT(DISTINCT p.product_id) >= 2;", "token_usage": {"tokens": 850, "cost": 0.00020445}}
{"sample_id": 5535, "db_id": "products_gen_characteristics", "gold_sql": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'", "pred_sql": "SELECT DISTINCT rpc.product_category_description\nFROM products p\nJOIN ref_product_categories rpc ON p.product_category_code = rpc.product_category_code\nWHERE p.product_description LIKE '%t%';", "token_usage": {"tokens": 813, "cost": 0.0001818}}
{"sample_id": 5562, "db_id": "products_gen_characteristics", "gold_sql": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"", "pred_sql": "SELECT p.product_name \nFROM products p \nJOIN ref_colors c ON p.color_code = c.color_code \nJOIN product_characteristics pc ON p.product_id = pc.product_id \nJOIN characteristics ch ON pc.characteristic_id = ch.characteristic_id \nWHERE c.color_description = 'red' \nAND ch.characteristic_name = 'fast';", "token_usage": {"tokens": 857, "cost": 0.00020414999999999997}}
{"sample_id": 5523, "db_id": "products_gen_characteristics", "gold_sql": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "pred_sql": "SELECT products.product_name, ref_colors.color_description, products.product_description \nFROM products \nJOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code \nJOIN ref_colors ON products.color_code = ref_colors.color_code \nWHERE ref_product_categories.product_category_description = 'Herbs';", "token_usage": {"tokens": 846, "cost": 0.00020025}}
{"sample_id": 5569, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"", "pred_sql": "SELECT COUNT(DISTINCT p.product_id) AS product_count\nFROM products p\nLEFT JOIN ref_colors c ON p.color_code = c.color_code\nLEFT JOIN product_characteristics pc ON p.product_id = pc.product_id\nLEFT JOIN characteristics ch ON pc.characteristic_id = ch.characteristic_id\nWHERE c.color_description = 'white' OR ch.characteristic_name = 'hot';", "token_usage": {"tokens": 933, "cost": 0.00025155}}
{"sample_id": 5580, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "pred_sql": "SELECT ref_product_categories.unit_of_measure, ref_product_categories.product_category_code \nFROM products \nJOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code \nWHERE products.product_name = 'chervil';", "token_usage": {"tokens": 875, "cost": 0.0002172}}
{"sample_id": 5522, "db_id": "products_gen_characteristics", "gold_sql": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"", "pred_sql": "SELECT product_name FROM products WHERE product_category_code = (SELECT product_category_code FROM ref_product_categories WHERE product_category_description = 'Spices');", "token_usage": {"tokens": 820, "cost": 0.0001869}}
{"sample_id": 5543, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"", "pred_sql": "SELECT products.product_name FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'white';", "token_usage": {"tokens": 818, "cost": 0.0001857}}
{"sample_id": 5514, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM CHARACTERISTICS", "pred_sql": "SELECT COUNT(*) AS characteristic_count FROM characteristics;", "token_usage": {"tokens": 758, "cost": 0.0001524}}
{"sample_id": 5553, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "pred_sql": "SELECT characteristics.characteristic_name, characteristics.characteristic_data_type \nFROM products \nJOIN product_characteristics ON products.product_id = product_characteristics.product_id \nJOIN characteristics ON product_characteristics.characteristic_id = characteristics.characteristic_id \nWHERE products.product_name = 'cumin';", "token_usage": {"tokens": 843, "cost": 0.00019979999999999998}}
{"sample_id": 5586, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT rc.color_description\nFROM ref_colors rc\nJOIN products p ON rc.color_code = p.color_code\nGROUP BY rc.color_description\nORDER BY COUNT(p.product_id) ASC\nLIMIT 1;", "token_usage": {"tokens": 823, "cost": 0.00018915}}
{"sample_id": 5589, "db_id": "products_gen_characteristics", "gold_sql": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id", "pred_sql": "SELECT c.characteristic_name, c.other_characteristic_details, c.characteristic_data_type \nFROM characteristics c \nLEFT JOIN product_characteristics pc ON c.characteristic_id = pc.characteristic_id \nWHERE pc.product_id IS NULL;", "token_usage": {"tokens": 842, "cost": 0.0001965}}
{"sample_id": 5546, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "pred_sql": "SELECT products.product_name, products.typical_buying_price, products.typical_selling_price \nFROM products \nJOIN ref_colors ON products.color_code = ref_colors.color_code \nWHERE ref_colors.color_description = 'yellow';", "token_usage": {"tokens": 865, "cost": 0.00020984999999999998}}
{"sample_id": 5593, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )", "pred_sql": "SELECT COUNT(*) AS unused_color_count\nFROM ref_colors\nWHERE color_code NOT IN (\n    SELECT DISTINCT color_code\n    FROM products\n);", "token_usage": {"tokens": 809, "cost": 0.0001812}}
{"sample_id": 5521, "db_id": "products_gen_characteristics", "gold_sql": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"", "pred_sql": "SELECT product_name FROM products WHERE product_category_code = (SELECT product_category_code FROM ref_product_categories WHERE product_category_description = 'Spices');", "token_usage": {"tokens": 822, "cost": 0.00018764999999999998}}
{"sample_id": 5594, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )", "pred_sql": "SELECT COUNT(*) AS unused_color_count FROM ref_colors WHERE color_code NOT IN (SELECT DISTINCT color_code FROM products);", "token_usage": {"tokens": 812, "cost": 0.00018165}}
{"sample_id": 5525, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"", "pred_sql": "SELECT COUNT(*) AS product_count FROM products WHERE product_category_code = (SELECT product_category_code FROM ref_product_categories WHERE product_category_description = 'Seeds');", "token_usage": {"tokens": 780, "cost": 0.0001629}}
{"sample_id": 2958, "db_id": "sakila_1", "gold_sql": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id", "pred_sql": "SELECT c.category_id, c.name, COUNT(fc.film_id) AS film_count\nFROM category c\nLEFT JOIN film_category fc ON c.category_id = fc.category_id\nGROUP BY c.category_id, c.name;", "token_usage": {"tokens": 2129, "cost": 0.00043545}}
{"sample_id": 2994, "db_id": "sakila_1", "gold_sql": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1", "pred_sql": "SELECT MAX(amount) AS largest_payment FROM payment;", "token_usage": {"tokens": 1948, "cost": 0.0003318}}
{"sample_id": 2964, "db_id": "sakila_1", "gold_sql": "SELECT count(DISTINCT language_id) FROM film", "pred_sql": "SELECT COUNT(DISTINCT language_id) AS different_languages FROM film;", "token_usage": {"tokens": 1961, "cost": 0.0003387}}
{"sample_id": 2988, "db_id": "sakila_1", "gold_sql": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1", "pred_sql": "SELECT c.first_name || ' ' || c.last_name AS full_name\nFROM customer c\nJOIN rental r ON c.customer_id = r.customer_id\nORDER BY r.rental_date ASC\nLIMIT 1;", "token_usage": {"tokens": 2009, "cost": 0.00036615}}
{"sample_id": 2936, "db_id": "sakila_1", "gold_sql": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3", "pred_sql": "SELECT country.country FROM country JOIN city ON country.country_id = city.country_id GROUP BY country.country_id HAVING COUNT(city.city_id) >= 3;", "token_usage": {"tokens": 2005, "cost": 0.00036419999999999996}}
{"sample_id": 2948, "db_id": "sakila_1", "gold_sql": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "pred_sql": "SELECT a.first_name || ' ' || a.last_name AS full_name\nFROM actor a\nJOIN film_actor fa ON a.actor_id = fa.actor_id\nGROUP BY a.actor_id\nHAVING COUNT(fa.film_id) > 30;", "token_usage": {"tokens": 2039, "cost": 0.00038234999999999994}}
{"sample_id": 2931, "db_id": "sakila_1", "gold_sql": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3", "pred_sql": "SELECT f.film_id, f.title FROM film f JOIN inventory i ON f.film_id = i.film_id WHERE i.store_id IN (SELECT store_id FROM inventory GROUP BY film_id HAVING COUNT(*) < 3) AND f.rental_rate = 0.99;", "token_usage": {"tokens": 2078, "cost": 0.00040035}}
{"sample_id": 2986, "db_id": "sakila_1", "gold_sql": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200", "pred_sql": "SELECT title FROM film WHERE (length > 100 OR rating = 'PG') AND replacement_cost <= 200;", "token_usage": {"tokens": 2093, "cost": 0.00040934999999999995}}
{"sample_id": 2923, "db_id": "sakila_1", "gold_sql": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2", "pred_sql": "SELECT district FROM address GROUP BY district HAVING COUNT(address_id) >= 2;", "token_usage": {"tokens": 1958, "cost": 0.0003378}}
{"sample_id": 2949, "db_id": "sakila_1", "gold_sql": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT store.store_id, COUNT(inventory.inventory_id) AS item_count\nFROM store\nJOIN inventory ON store.store_id = inventory.store_id\nGROUP BY store.store_id\nORDER BY item_count DESC\nLIMIT 1;", "token_usage": {"tokens": 2035, "cost": 0.0003849}}
{"sample_id": 2966, "db_id": "sakila_1", "gold_sql": "SELECT title FROM film WHERE rating  =  'R'", "pred_sql": "SELECT title FROM film WHERE rating = 'R';", "token_usage": {"tokens": 1959, "cost": 0.00033705}}
{"sample_id": 2984, "db_id": "sakila_1", "gold_sql": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "pred_sql": "SELECT address.address, customer.email FROM customer JOIN address ON customer.address_id = address.address_id WHERE customer.first_name = 'Linda';", "token_usage": {"tokens": 2017, "cost": 0.00037049999999999995}}
{"sample_id": 2937, "db_id": "sakila_1", "gold_sql": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'", "pred_sql": "SELECT payment_date FROM payment JOIN staff ON payment.staff_id = staff.staff_id WHERE amount > 10 AND staff.first_name = 'Elsa';", "token_usage": {"tokens": 2018, "cost": 0.00036435}}
{"sample_id": 2973, "db_id": "sakila_1", "gold_sql": "SELECT count(*) FROM store", "pred_sql": "SELECT COUNT(*) AS store_count FROM store;", "token_usage": {"tokens": 1958, "cost": 0.0003387}}
{"sample_id": 2972, "db_id": "sakila_1", "gold_sql": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'", "pred_sql": "SELECT language.name FROM film JOIN language ON film.language_id = language.language_id WHERE film.title = 'AIRPORT POLLOCK';", "token_usage": {"tokens": 2052, "cost": 0.00038924999999999995}}
{"sample_id": 2961, "db_id": "sakila_1", "gold_sql": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT f.title, i.inventory_id\nFROM film f\nJOIN inventory i ON f.film_id = i.film_id\nJOIN rental r ON i.inventory_id = r.inventory_id\nGROUP BY i.inventory_id\nORDER BY COUNT(r.rental_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 2059, "cost": 0.000393}}
{"sample_id": 2989, "db_id": "sakila_1", "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "pred_sql": "SELECT staff.first_name || ' ' || staff.last_name AS full_name\nFROM staff\nJOIN rental ON staff.staff_id = rental.staff_id\nJOIN customer ON rental.customer_id = customer.customer_id\nWHERE customer.first_name = 'April' AND customer.last_name = 'Burns';", "token_usage": {"tokens": 2051, "cost": 0.00038459999999999997}}
{"sample_id": 6954, "db_id": "architecture", "gold_sql": "SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet", "pred_sql": "SELECT bridge.name FROM bridge JOIN architect ON bridge.architect_id = architect.id WHERE architect.nationality = 'American' ORDER BY bridge.length_feet;", "token_usage": {"tokens": 655, "cost": 0.00016484999999999997}}
{"sample_id": 6942, "db_id": "architecture", "gold_sql": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'", "pred_sql": "SELECT name, built_year FROM mill WHERE type = 'Grondzeiler';", "token_usage": {"tokens": 626, "cost": 0.00014924999999999997}}
{"sample_id": 6949, "db_id": "architecture", "gold_sql": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'", "pred_sql": "SELECT location FROM bridge WHERE name IN ('Kolob Arch', 'Rainbow Bridge');", "token_usage": {"tokens": 617, "cost": 0.00014429999999999998}}
{"sample_id": 6944, "db_id": "architecture", "gold_sql": "SELECT name FROM mill WHERE LOCATION != 'Donceel'", "pred_sql": "SELECT name FROM mill WHERE location != 'Donceel';", "token_usage": {"tokens": 614, "cost": 0.00014294999999999998}}
{"sample_id": 2605, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;", "pred_sql": "SELECT roomname FROM rooms WHERE maxoccupancy = (SELECT MAX(maxoccupancy) FROM rooms);", "token_usage": {"tokens": 606, "cost": 0.0001539}}
{"sample_id": 2613, "db_id": "inn_1", "gold_sql": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "pred_sql": "SELECT decor, AVG(baseprice) AS average_price, MIN(baseprice) AS minimum_price FROM rooms GROUP BY decor;", "token_usage": {"tokens": 615, "cost": 0.0001584}}
{"sample_id": 2577, "db_id": "inn_1", "gold_sql": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "pred_sql": "SELECT adults FROM reservations WHERE firstname = 'CONRAD' AND lastname = 'SELBIG' AND checkin = '2010-10-23';", "token_usage": {"tokens": 603, "cost": 0.00014714999999999997}}
{"sample_id": 2628, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "pred_sql": "SELECT roomname FROM rooms WHERE baseprice > (SELECT AVG(baseprice) FROM rooms);", "token_usage": {"tokens": 587, "cost": 0.00014159999999999997}}
{"sample_id": 2638, "db_id": "inn_1", "gold_sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "pred_sql": "SELECT rooms.roomname FROM rooms JOIN reservations ON rooms.roomid = reservations.room WHERE reservations.firstname LIKE '%ROY%';", "token_usage": {"tokens": 598, "cost": 0.00014549999999999999}}
{"sample_id": 2606, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;", "pred_sql": "SELECT roomname FROM rooms ORDER BY maxoccupancy DESC LIMIT 1;", "token_usage": {"tokens": 603, "cost": 0.00015075}}
{"sample_id": 2602, "db_id": "inn_1", "gold_sql": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";", "pred_sql": "SELECT COUNT(*) AS room_count FROM rooms WHERE bedtype = 'king';", "token_usage": {"tokens": 558, "cost": 0.00012644999999999998}}
{"sample_id": 2593, "db_id": "inn_1", "gold_sql": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;", "pred_sql": "SELECT r.decor, COUNT(res.code) AS reservation_count \nFROM rooms r \nLEFT JOIN reservations res ON r.roomid = res.room \nGROUP BY r.decor \nORDER BY reservation_count ASC \nLIMIT 1;", "token_usage": {"tokens": 662, "cost": 0.0001875}}
{"sample_id": 2634, "db_id": "inn_1", "gold_sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "pred_sql": "SELECT r.roomname \nFROM rooms r \nJOIN reservations res ON r.roomid = res.room \nGROUP BY r.roomid \nHAVING COUNT(res.code) > 60;", "token_usage": {"tokens": 633, "cost": 0.00016874999999999998}}
{"sample_id": 2637, "db_id": "inn_1", "gold_sql": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "pred_sql": "SELECT rooms.roomname FROM rooms JOIN reservations ON rooms.roomid = reservations.room WHERE reservations.firstname LIKE '%ROY%';", "token_usage": {"tokens": 622, "cost": 0.00016125}}
{"sample_id": 2598, "db_id": "inn_1", "gold_sql": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "pred_sql": "SELECT r.firstname, r.lastname FROM reservations r JOIN rooms rm ON r.room = rm.roomid WHERE r.rate > rm.baseprice;", "token_usage": {"tokens": 599, "cost": 0.00014565}}
{"sample_id": 2632, "db_id": "inn_1", "gold_sql": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "pred_sql": "SELECT rooms.roomname, COUNT(reservations.room) AS reservation_count \nFROM rooms \nLEFT JOIN reservations ON rooms.roomid = reservations.room \nGROUP BY rooms.roomid;", "token_usage": {"tokens": 620, "cost": 0.00015915}}
{"sample_id": 2590, "db_id": "inn_1", "gold_sql": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "pred_sql": "SELECT bedtype, AVG(baseprice) AS average_base_price FROM rooms GROUP BY bedtype;", "token_usage": {"tokens": 594, "cost": 0.0001449}}
{"sample_id": 2619, "db_id": "inn_1", "gold_sql": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "pred_sql": "SELECT bedtype, AVG(baseprice) AS average_price FROM rooms GROUP BY bedtype;", "token_usage": {"tokens": 569, "cost": 0.0001317}}
{"sample_id": 2616, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms ORDER BY basePrice;", "pred_sql": "SELECT roomname FROM rooms ORDER BY baseprice ASC;", "token_usage": {"tokens": 559, "cost": 0.00012389999999999998}}
{"sample_id": 2585, "db_id": "inn_1", "gold_sql": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "pred_sql": "SELECT roomname, baseprice FROM rooms ORDER BY baseprice ASC LIMIT 1;", "token_usage": {"tokens": 598, "cost": 0.00014639999999999998}}
{"sample_id": 3432, "db_id": "hr_1", "gold_sql": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'", "pred_sql": "SELECT * FROM employees WHERE hire_date > '1987-09-07';", "token_usage": {"tokens": 949, "cost": 0.00019634999999999998}}
{"sample_id": 3409, "db_id": "hr_1", "gold_sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'", "pred_sql": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%';", "token_usage": {"tokens": 929, "cost": 0.00018434999999999998}}
{"sample_id": 3438, "db_id": "hr_1", "gold_sql": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50", "pred_sql": "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = '50';", "token_usage": {"tokens": 1016, "cost": 0.00022799999999999996}}
{"sample_id": 3478, "db_id": "hr_1", "gold_sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "pred_sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(DISTINCT job_id) >= 2;", "token_usage": {"tokens": 984, "cost": 0.0002169}}
{"sample_id": 3507, "db_id": "hr_1", "gold_sql": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "pred_sql": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history);", "token_usage": {"tokens": 950, "cost": 0.00019604999999999997}}
{"sample_id": 3437, "db_id": "hr_1", "gold_sql": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "pred_sql": "SELECT job_title, min_salary, max_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000;", "token_usage": {"tokens": 989, "cost": 0.0002163}}
{"sample_id": 3491, "db_id": "hr_1", "gold_sql": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "pred_sql": "SELECT employee_id FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN '100' AND '200');", "token_usage": {"tokens": 974, "cost": 0.0002073}}
{"sample_id": 3413, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id ASC;", "token_usage": {"tokens": 973, "cost": 0.00020399999999999997}}
{"sample_id": 3511, "db_id": "hr_1", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "pred_sql": "SELECT employees.first_name || ' ' || employees.last_name AS full_name, departments.department_name, locations.city, locations.state_province\nFROM employees\nJOIN departments ON employees.department_id = departments.department_id\nJOIN locations ON departments.location_id = locations.location_id;", "token_usage": {"tokens": 989, "cost": 0.00021945}}
{"sample_id": 3435, "db_id": "hr_1", "gold_sql": "SELECT job_title FROM jobs WHERE min_salary  >  9000", "pred_sql": "SELECT job_title FROM jobs WHERE max_salary > 9000;", "token_usage": {"tokens": 943, "cost": 0.00019364999999999996}}
{"sample_id": 3490, "db_id": "hr_1", "gold_sql": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "pred_sql": "SELECT employee_id FROM employees WHERE department_id NOT IN (SELECT DISTINCT department_id FROM employees WHERE manager_id BETWEEN '100' AND '200');", "token_usage": {"tokens": 960, "cost": 0.00019664999999999998}}
{"sample_id": 3399, "db_id": "hr_1", "gold_sql": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "pred_sql": "SELECT employees.first_name, departments.department_name FROM employees JOIN departments ON employees.department_id = departments.department_id;", "token_usage": {"tokens": 926, "cost": 0.00018389999999999997}}
{"sample_id": 3424, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "pred_sql": "SELECT first_name, last_name FROM employees WHERE department_id IN ('70', '90');", "token_usage": {"tokens": 974, "cost": 0.00020864999999999998}}
{"sample_id": 3467, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "pred_sql": "SELECT e.first_name || ' ' || e.last_name AS full_name, e.department_id FROM employees e WHERE e.salary = (SELECT MIN(salary) FROM employees);", "token_usage": {"tokens": 1024, "cost": 0.00024045}}
{"sample_id": 3481, "db_id": "hr_1", "gold_sql": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4", "pred_sql": "SELECT DISTINCT d.department_id\nFROM departments d\nJOIN employees e ON d.department_id = e.department_id\nWHERE d.manager_id IN (\n    SELECT manager_id\n    FROM employees\n    GROUP BY manager_id\n    HAVING COUNT(employee_id) >= 4\n);", "token_usage": {"tokens": 1009, "cost": 0.00022964999999999997}}
{"sample_id": 3400, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name, salary FROM employees WHERE salary < 6000;", "token_usage": {"tokens": 936, "cost": 0.00018539999999999998}}
{"sample_id": 3425, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name FROM employees WHERE department_id IN ('70', '90');", "token_usage": {"tokens": 976, "cost": 0.00021164999999999997}}
{"sample_id": 3436, "db_id": "hr_1", "gold_sql": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "pred_sql": "SELECT job_title, (max_salary - min_salary) AS salary_difference \nFROM jobs \nWHERE max_salary BETWEEN 12000 AND 18000;", "token_usage": {"tokens": 957, "cost": 0.00019529999999999998}}
{"sample_id": 3470, "db_id": "hr_1", "gold_sql": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "pred_sql": "SELECT employee_id, salary FROM employees WHERE manager_id = (SELECT employee_id FROM employees WHERE first_name = 'Payam')", "token_usage": {"tokens": 988, "cost": 0.00021839999999999997}}
{"sample_id": 3521, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "pred_sql": "SELECT e.first_name || ' ' || e.last_name AS full_name, e.salary FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN locations l ON d.location_id = l.location_id JOIN countries c ON l.country_id = c.country_id WHERE l.city = 'London';", "token_usage": {"tokens": 1034, "cost": 0.00024734999999999997}}
{"sample_id": 3479, "db_id": "hr_1", "gold_sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "pred_sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(job_id) >= 2;", "token_usage": {"tokens": 954, "cost": 0.00019979999999999998}}
{"sample_id": 3411, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name, hire_date, salary, department_id FROM employees WHERE first_name NOT LIKE '%M%';", "token_usage": {"tokens": 957, "cost": 0.00019664999999999998}}
{"sample_id": 3407, "db_id": "hr_1", "gold_sql": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "pred_sql": "SELECT * FROM departments WHERE department_name = 'Marketing';", "token_usage": {"tokens": 905, "cost": 0.00017219999999999998}}
{"sample_id": 3474, "db_id": "hr_1", "gold_sql": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id", "pred_sql": "SELECT e.* FROM employees e JOIN departments d ON e.employee_id = d.manager_id;", "token_usage": {"tokens": 980, "cost": 0.0002172}}
{"sample_id": 3472, "db_id": "hr_1", "gold_sql": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "pred_sql": "SELECT DISTINCT d.department_name \nFROM departments d \nJOIN employees e ON d.department_id = e.department_id;", "token_usage": {"tokens": 960, "cost": 0.00020159999999999997}}
{"sample_id": 3448, "db_id": "hr_1", "gold_sql": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id", "pred_sql": "SELECT countries.country_id, COUNT(locations.city) AS number_of_cities\nFROM countries\nJOIN locations ON countries.country_id = locations.country_id\nGROUP BY countries.country_id;", "token_usage": {"tokens": 948, "cost": 0.00019709999999999997}}
{"sample_id": 271, "db_id": "musical", "gold_sql": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"", "pred_sql": "SELECT DISTINCT nominee FROM musical WHERE award IN ('Tony Award', 'Drama Desk Award') AND result = 'Nominated' GROUP BY nominee HAVING COUNT(DISTINCT award) = 2;"}
{"sample_id": 259, "db_id": "musical", "gold_sql": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3", "pred_sql": "SELECT m.name \nFROM musical m \nJOIN actor a ON m.musical_id = a.musical_id \nGROUP BY m.musical_id \nHAVING COUNT(a.actor_id) >= 3;"}
{"sample_id": 252, "db_id": "musical", "gold_sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"", "pred_sql": "SELECT actor.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE musical.name = 'The Phantom of the Opera';"}
{"sample_id": 269, "db_id": "musical", "gold_sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)", "pred_sql": "SELECT name FROM musical WHERE musical_id NOT IN (SELECT musical_id FROM actor);"}
{"sample_id": 253, "db_id": "musical", "gold_sql": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"", "pred_sql": "SELECT actor.name FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE musical.name = 'The Phantom of the Opera';"}
{"sample_id": 236, "db_id": "musical", "gold_sql": "SELECT Name FROM actor ORDER BY Name ASC", "pred_sql": "SELECT name FROM actor ORDER BY name ASC;"}
{"sample_id": 262, "db_id": "musical", "gold_sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT nominee, COUNT(*) as nomination_count FROM musical GROUP BY nominee ORDER BY nomination_count DESC LIMIT 1;"}
{"sample_id": 249, "db_id": "musical", "gold_sql": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"", "pred_sql": "SELECT DISTINCT nominee FROM musical WHERE award != 'Tony Award';"}
{"sample_id": 6929, "db_id": "tracking_orders", "gold_sql": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"", "pred_sql": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < '1989-09-03' OR invoice_date > '2007-12-25';", "token_usage": {"tokens": 875, "cost": 0.00018884999999999998}}
{"sample_id": 6897, "db_id": "tracking_orders", "gold_sql": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "pred_sql": "SELECT orders.date_order_placed FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie';", "token_usage": {"tokens": 861, "cost": 0.00018404999999999997}}
{"sample_id": 6888, "db_id": "tracking_orders", "gold_sql": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"", "pred_sql": "SELECT DISTINCT c.* FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_status = 'On Road';", "token_usage": {"tokens": 862, "cost": 0.0001851}}
{"sample_id": 6933, "db_id": "tracking_orders", "gold_sql": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2", "pred_sql": "SELECT c.customer_name FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id HAVING COUNT(o.order_id) <= 2;", "token_usage": {"tokens": 881, "cost": 0.00019739999999999997}}
{"sample_id": 6906, "db_id": "tracking_orders", "gold_sql": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452", "pred_sql": "SELECT o.date_order_placed FROM orders o JOIN shipments s ON o.order_id = s.order_id WHERE s.shipment_tracking_number = '3452';", "token_usage": {"tokens": 889, "cost": 0.0002004}}
{"sample_id": 6907, "db_id": "tracking_orders", "gold_sql": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452", "pred_sql": "SELECT o.date_order_placed FROM orders o JOIN shipments s ON o.order_id = s.order_id WHERE s.shipment_tracking_number = '3452';", "token_usage": {"tokens": 913, "cost": 0.00021614999999999997}}
{"sample_id": 6912, "db_id": "tracking_orders", "gold_sql": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "pred_sql": "SELECT p.product_name, COUNT(oi.order_item_id) AS product_count \nFROM products p \nJOIN order_items oi ON p.product_id = oi.product_id \nJOIN orders o ON oi.order_id = o.order_id \nGROUP BY p.product_name;", "token_usage": {"tokens": 900, "cost": 0.00021014999999999999}}
{"sample_id": 6899, "db_id": "tracking_orders", "gold_sql": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"", "pred_sql": "SELECT DISTINCT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed BETWEEN '2009-01-01' AND '2010-01-01';", "token_usage": {"tokens": 879, "cost": 0.0001917}}
{"sample_id": 6896, "db_id": "tracking_orders", "gold_sql": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "pred_sql": "SELECT orders.date_order_placed FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie';", "token_usage": {"tokens": 873, "cost": 0.00019214999999999998}}
{"sample_id": 6884, "db_id": "tracking_orders", "gold_sql": "SELECT order_item_id FROM order_items WHERE product_id = 11", "pred_sql": "SELECT order_item_id FROM order_items WHERE product_id = '11';", "token_usage": {"tokens": 869, "cost": 0.0001902}}
{"sample_id": 6926, "db_id": "tracking_orders", "gold_sql": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"", "pred_sql": "SELECT invoice_number FROM invoices WHERE invoice_date < '1989-09-03' OR invoice_date > '2007-12-25';", "token_usage": {"tokens": 874, "cost": 0.00018869999999999998}}
{"sample_id": 6901, "db_id": "tracking_orders", "gold_sql": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"", "pred_sql": "SELECT DISTINCT products.product_id FROM products JOIN order_items ON products.product_id = order_items.product_id JOIN orders ON order_items.order_id = orders.order_id WHERE orders.date_order_placed BETWEEN '1975-01-01' AND '1976-01-01';", "token_usage": {"tokens": 940, "cost": 0.0002283}}
{"sample_id": 1555, "db_id": "customers_and_invoices", "gold_sql": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "pred_sql": "SELECT accounts.account_name, accounts.other_account_details \nFROM accounts \nJOIN customers ON accounts.customer_id = customers.customer_id \nWHERE customers.customer_first_name = 'Meaghan' AND customers.customer_last_name = 'Keeling';"}
{"sample_id": 1595, "db_id": "customers_and_invoices", "gold_sql": "SELECT DISTINCT product_size FROM Products", "pred_sql": "SELECT DISTINCT product_size FROM products;"}
{"sample_id": 1593, "db_id": "customers_and_invoices", "gold_sql": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4", "pred_sql": "SELECT a.account_id, a.account_name \nFROM accounts a \nJOIN financial_transactions ft ON a.account_id = ft.account_id \nGROUP BY a.account_id, a.account_name \nHAVING COUNT(ft.transaction_id) >= 4;"}
{"sample_id": 1623, "db_id": "customers_and_invoices", "gold_sql": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id", "pred_sql": "SELECT orders.order_id, COUNT(order_items.product_id) AS number_of_products\nFROM orders\nJOIN order_items ON orders.order_id = order_items.order_id\nGROUP BY orders.order_id;"}
{"sample_id": 1617, "db_id": "customers_and_invoices", "gold_sql": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id", "pred_sql": "SELECT orders.order_id, COUNT(order_items.order_item_id) AS number_of_items\nFROM orders\nLEFT JOIN order_items ON orders.order_id = order_items.order_id\nGROUP BY orders.order_id;"}
{"sample_id": 1551, "db_id": "customers_and_invoices", "gold_sql": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "pred_sql": "SELECT account_id, date_account_opened, account_name, other_account_details FROM accounts;"}
{"sample_id": 1552, "db_id": "customers_and_invoices", "gold_sql": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "pred_sql": "SELECT account_id, date_account_opened, account_name, other_account_details FROM accounts;"}
{"sample_id": 1549, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(DISTINCT customer_id) FROM Accounts", "pred_sql": "SELECT COUNT(*) AS customer_count FROM accounts;"}
{"sample_id": 1587, "db_id": "customers_and_invoices", "gold_sql": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type", "pred_sql": "SELECT transaction_type, SUM(transaction_amount) AS total_amount FROM financial_transactions GROUP BY transaction_type;"}
{"sample_id": 1603, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) FROM Invoices", "pred_sql": "SELECT COUNT(*) AS total_invoices FROM invoices;"}
{"sample_id": 1620, "db_id": "customers_and_invoices", "gold_sql": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id", "pred_sql": "SELECT products.product_id, COUNT(DISTINCT order_items.order_id) AS distinct_order_count\nFROM products\nJOIN order_items ON products.product_id = order_items.product_id\nGROUP BY products.product_id;"}
{"sample_id": 1600, "db_id": "customers_and_invoices", "gold_sql": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number", "pred_sql": "SELECT invoice_number, COUNT(transaction_id) AS transaction_count\nFROM financial_transactions\nGROUP BY invoice_number;"}
{"sample_id": 1609, "db_id": "customers_and_invoices", "gold_sql": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2", "pred_sql": "SELECT o.order_id, o.order_details \nFROM orders o \nJOIN invoices i ON o.order_id = i.order_id \nGROUP BY o.order_id, o.order_details \nHAVING COUNT(i.invoice_number) > 2;"}
{"sample_id": 1566, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id", "pred_sql": "SELECT customer_id, COUNT(account_id) AS account_count FROM accounts GROUP BY customer_id;"}
{"sample_id": 1618, "db_id": "customers_and_invoices", "gold_sql": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id", "pred_sql": "SELECT order_id, COUNT(order_item_id) AS order_item_count FROM order_items GROUP BY order_id;"}
{"sample_id": 1605, "db_id": "customers_and_invoices", "gold_sql": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "pred_sql": "SELECT invoices.invoice_date, orders.order_id, orders.order_details \nFROM invoices \nJOIN orders ON invoices.order_id = orders.order_id;"}
{"sample_id": 1550, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(DISTINCT customer_id) FROM Accounts", "pred_sql": "SELECT COUNT(*) AS customer_count FROM accounts;"}
{"sample_id": 4639, "db_id": "college_3", "gold_sql": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268", "pred_sql": "SELECT dphone FROM department WHERE room = '268';", "token_usage": {"tokens": 1027, "cost": 0.00020084999999999998}}
{"sample_id": 4644, "db_id": "college_3", "gold_sql": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'", "pred_sql": "SELECT fname FROM student WHERE fname LIKE '%a%';", "token_usage": {"tokens": 1041, "cost": 0.00020744999999999997}}
{"sample_id": 4650, "db_id": "college_3", "gold_sql": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"", "pred_sql": "SELECT dname FROM department WHERE building = 'Mergenthaler';", "token_usage": {"tokens": 1038, "cost": 0.00020564999999999998}}
{"sample_id": 4669, "db_id": "college_3", "gold_sql": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT d.dname FROM department d JOIN member_of m ON d.dno = m.dno GROUP BY d.dno ORDER BY COUNT(m.facid) ASC LIMIT 1;", "token_usage": {"tokens": 1109, "cost": 0.0002487}}
{"sample_id": 4632, "db_id": "college_3", "gold_sql": "SELECT CName FROM COURSE WHERE Credits  =  1", "pred_sql": "SELECT cname FROM course WHERE credits = 1;", "token_usage": {"tokens": 1020, "cost": 0.00019665}}
{"sample_id": 4681, "db_id": "college_3", "gold_sql": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "pred_sql": "SELECT department.dname, department.room FROM course JOIN department ON course.dno = department.dno WHERE course.cname = 'INTRODUCTION TO COMPUTER SCIENCE';", "token_usage": {"tokens": 1133, "cost": 0.0002613}}
{"sample_id": 4668, "db_id": "college_3", "gold_sql": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT d.dname FROM department d JOIN member_of m ON d.dno = m.dno GROUP BY d.dno ORDER BY COUNT(m.facid) ASC LIMIT 1;", "token_usage": {"tokens": 1082, "cost": 0.00023249999999999999}}
{"sample_id": 4649, "db_id": "college_3", "gold_sql": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"", "pred_sql": "SELECT room FROM faculty WHERE rank = 'professor' AND building = 'NEB';", "token_usage": {"tokens": 1011, "cost": 0.00018674999999999999}}
{"sample_id": 4699, "db_id": "college_3", "gold_sql": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\"", "pred_sql": "SELECT dname FROM department WHERE division = 'AS' OR (division = 'EN' AND building = 'NEB');", "token_usage": {"tokens": 1071, "cost": 0.00022229999999999998}}
{"sample_id": 4662, "db_id": "college_3", "gold_sql": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname", "pred_sql": "SELECT fname FROM faculty WHERE rank = 'Professor' ORDER BY fname ASC;", "token_usage": {"tokens": 1058, "cost": 0.00021765}}
{"sample_id": 4633, "db_id": "college_3", "gold_sql": "SELECT CName FROM COURSE WHERE Credits  =  1", "pred_sql": "SELECT cname FROM course WHERE credits = 1;", "token_usage": {"tokens": 1036, "cost": 0.00020580000000000002}}
{"sample_id": 4636, "db_id": "college_3", "gold_sql": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"", "pred_sql": "SELECT COUNT(*) AS number_of_departments FROM department WHERE division = 'AS';", "token_usage": {"tokens": 1039, "cost": 0.00020714999999999997}}
{"sample_id": 4688, "db_id": "college_3", "gold_sql": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "pred_sql": "SELECT student.fname, student.lname FROM student JOIN minor_in ON student.stuid = minor_in.stuid WHERE minor_in.dno = '140';", "token_usage": {"tokens": 1109, "cost": 0.00024465}}
{"sample_id": 4666, "db_id": "college_3", "gold_sql": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO", "pred_sql": "SELECT d.dname FROM department d LEFT JOIN minor_in m ON d.dno = m.dno WHERE m.stuid IS NULL;", "token_usage": {"tokens": 1066, "cost": 0.00022244999999999999}}
{"sample_id": 4685, "db_id": "college_3", "gold_sql": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8", "pred_sql": "SELECT DISTINCT student.fname FROM student JOIN enrolled_in ON student.stuid = enrolled_in.stuid JOIN gradeconversion ON enrolled_in.grade = gradeconversion.lettergrade WHERE gradeconversion.gradepoint >= 3.8;", "token_usage": {"tokens": 1104, "cost": 0.00024029999999999999}}
{"sample_id": 4676, "db_id": "college_3", "gold_sql": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5", "pred_sql": "SELECT cname FROM course WHERE cid IN (SELECT cid FROM enrolled_in GROUP BY cid HAVING COUNT(stuid) >= 5);", "token_usage": {"tokens": 1147, "cost": 0.00027105}}
{"sample_id": 3888, "db_id": "insurance_policies", "gold_sql": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "pred_sql": "SELECT c.date_claim_made, c.date_claim_settled, s.amount_settled \nFROM claims c \nJOIN settlements s ON c.claim_id = s.claim_id \nGROUP BY c.claim_id \nHAVING COUNT(s.settlement_id) = 1;", "token_usage": {"tokens": 911, "cost": 0.00021854999999999997}}
{"sample_id": 3876, "db_id": "insurance_policies", "gold_sql": "SELECT sum(Amount_Payment) FROM Payments", "pred_sql": "SELECT SUM(amount_payment) AS total_amount_processed FROM payments;", "token_usage": {"tokens": 801, "cost": 0.00016245}}
{"sample_id": 3865, "db_id": "insurance_policies", "gold_sql": "SELECT sum(Amount_Settled) FROM Settlements", "pred_sql": "SELECT SUM(amount_settled) AS total_settlement_amount FROM settlements;", "token_usage": {"tokens": 837, "cost": 0.00018179999999999997}}
{"sample_id": 3878, "db_id": "insurance_policies", "gold_sql": "SELECT DISTINCT customer_details FROM Customers", "pred_sql": "SELECT DISTINCT customer_details FROM customers;", "token_usage": {"tokens": 781, "cost": 0.00015134999999999997}}
{"sample_id": 3875, "db_id": "insurance_policies", "gold_sql": "SELECT sum(Amount_Payment) FROM Payments", "pred_sql": "SELECT SUM(amount_payment) AS total_amount_payment FROM payments;", "token_usage": {"tokens": 801, "cost": 0.00016245}}
{"sample_id": 3864, "db_id": "insurance_policies", "gold_sql": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1", "pred_sql": "SELECT MIN(date_claim_made) AS first_claim_date FROM claims;", "token_usage": {"tokens": 835, "cost": 0.00018104999999999998}}
{"sample_id": 3853, "db_id": "insurance_policies", "gold_sql": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "pred_sql": "SELECT date_claim_made, date_claim_settled FROM claims WHERE amount_claimed > (SELECT AVG(amount_claimed) FROM claims);", "token_usage": {"tokens": 876, "cost": 0.00019754999999999998}}
{"sample_id": 3880, "db_id": "insurance_policies", "gold_sql": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT policy_type_code, COUNT(DISTINCT customer_id) AS customer_count\nFROM customer_policies\nGROUP BY policy_type_code\nORDER BY customer_count DESC\nLIMIT 1;", "token_usage": {"tokens": 899, "cost": 0.00022079999999999997}}
{"sample_id": 3889, "db_id": "insurance_policies", "gold_sql": "SELECT sum(Amount_Claimed) FROM Claims", "pred_sql": "SELECT SUM(amount_claimed) AS total_claimed_amount FROM claims;", "token_usage": {"tokens": 812, "cost": 0.00016815}}
{"sample_id": 3851, "db_id": "insurance_policies", "gold_sql": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1", "pred_sql": "SELECT c.amount_claimed, s.amount_settled \nFROM claims c \nJOIN settlements s ON c.claim_id = s.claim_id \nWHERE s.amount_settled = (SELECT MIN(amount_settled) FROM settlements)", "token_usage": {"tokens": 877, "cost": 0.00019905}}
{"sample_id": 3858, "db_id": "insurance_policies", "gold_sql": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id", "pred_sql": "SELECT claims.claim_id, COUNT(settlements.settlement_id) AS number_of_settlements\nFROM claims\nLEFT JOIN settlements ON claims.claim_id = settlements.claim_id\nGROUP BY claims.claim_id;", "token_usage": {"tokens": 868, "cost": 0.00019769999999999998}}
{"sample_id": 7253, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT count(*) FROM employee", "pred_sql": "SELECT COUNT(*) AS employee_count FROM employee;", "token_usage": {"tokens": 578, "cost": 0.00011864999999999998}}
{"sample_id": 7270, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT e.name\nFROM employee e\nJOIN evaluation ev ON e.employee_id = ev.employee_id\nGROUP BY e.employee_id\nORDER BY COUNT(ev.year_awarded) DESC\nLIMIT 1;", "token_usage": {"tokens": 663, "cost": 0.0001656}}
{"sample_id": 7256, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT count(*) ,  city FROM employee GROUP BY city", "pred_sql": "SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city;", "token_usage": {"tokens": 628, "cost": 0.00014685}}
{"sample_id": 7269, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "pred_sql": "SELECT name FROM shop WHERE number_products > (SELECT AVG(number_products) FROM shop);", "token_usage": {"tokens": 652, "cost": 0.00015855}}
{"sample_id": 7255, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT name FROM employee ORDER BY age", "pred_sql": "SELECT name FROM employee ORDER BY age ASC;", "token_usage": {"tokens": 603, "cost": 0.00013049999999999997}}
{"sample_id": 7273, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "pred_sql": "SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id ORDER BY ev.bonus DESC LIMIT 1;", "token_usage": {"tokens": 652, "cost": 0.00015989999999999998}}
{"sample_id": 7272, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "pred_sql": "SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation) LIMIT 1;", "token_usage": {"tokens": 650, "cost": 0.00015825}}
{"sample_id": 7285, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT * FROM hiring", "pred_sql": "SELECT * FROM hiring;", "token_usage": {"tokens": 586, "cost": 0.00012255}}
{"sample_id": 7264, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "pred_sql": "SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop;", "token_usage": {"tokens": 625, "cost": 0.00014415}}
{"sample_id": 5750, "db_id": "dorm_1", "gold_sql": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "pred_sql": "SELECT s.fname FROM student s JOIN lives_in l ON s.stuid = l.stuid JOIN has_amenity ha ON l.dormid = ha.dormid WHERE l.dormid = (SELECT dormid FROM has_amenity GROUP BY dormid ORDER BY COUNT(amenid) DESC LIMIT 1)", "token_usage": {"tokens": 812, "cost": 0.00021494999999999997}}
{"sample_id": 5744, "db_id": "dorm_1", "gold_sql": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'", "pred_sql": "SELECT da.amenity_name FROM dorm d JOIN has_amenity ha ON d.dormid = ha.dormid JOIN dorm_amenity da ON ha.amenid = da.amenid WHERE d.dorm_name = 'Smith Hall';", "token_usage": {"tokens": 812, "cost": 0.00021764999999999998}}
{"sample_id": 5688, "db_id": "dorm_1", "gold_sql": "SELECT count(DISTINCT gender) FROM dorm", "pred_sql": "SELECT COUNT(DISTINCT gender) AS different_genders FROM dorm;", "token_usage": {"tokens": 705, "cost": 0.00015389999999999997}}
{"sample_id": 5685, "db_id": "dorm_1", "gold_sql": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)", "pred_sql": "SELECT dorm.dorm_name FROM dorm LEFT JOIN has_amenity ON dorm.dormid = has_amenity.dormid WHERE has_amenity.amenid IS NULL;", "token_usage": {"tokens": 792, "cost": 0.00020474999999999996}}
{"sample_id": 5690, "db_id": "dorm_1", "gold_sql": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "pred_sql": "SELECT student_capacity, gender FROM dorm WHERE dorm_name LIKE '%Donor%';", "token_usage": {"tokens": 740, "cost": 0.00016994999999999998}}
{"sample_id": 5748, "db_id": "dorm_1", "gold_sql": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT amenity_name, COUNT(*) as amenity_count\nFROM has_amenity\nJOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid\nGROUP BY amenity_name\nORDER BY amenity_count DESC\nLIMIT 1;", "token_usage": {"tokens": 791, "cost": 0.00020504999999999997}}
{"sample_id": 5729, "db_id": "dorm_1", "gold_sql": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "pred_sql": "SELECT dorm.dorm_name, AVG(CAST(student.age AS INTEGER)) AS average_age FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON lives_in.dormid = dorm.dormid GROUP BY dorm.dorm_name;", "token_usage": {"tokens": 770, "cost": 0.00019065}}
{"sample_id": 5707, "db_id": "dorm_1", "gold_sql": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "pred_sql": "SELECT fname, lname FROM student WHERE age < (SELECT AVG(age) FROM student);", "token_usage": {"tokens": 705, "cost": 0.0001512}}
{"sample_id": 5743, "db_id": "dorm_1", "gold_sql": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'", "pred_sql": "SELECT da.amenity_name FROM dorm d JOIN has_amenity ha ON d.dormid = ha.dormid JOIN dorm_amenity da ON ha.amenid = da.amenid WHERE d.dorm_name = 'Smith Hall';", "token_usage": {"tokens": 764, "cost": 0.00018974999999999998}}
{"sample_id": 5734, "db_id": "dorm_1", "gold_sql": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name", "pred_sql": "SELECT d.dorm_name, COUNT(s.stuid) AS student_count FROM student s JOIN lives_in l ON s.stuid = l.stuid JOIN dorm d ON l.dormid = d.dormid WHERE s.age > '20' GROUP BY d.dorm_name;", "token_usage": {"tokens": 762, "cost": 0.00018764999999999998}}
{"sample_id": 5683, "db_id": "dorm_1", "gold_sql": "SELECT count(DISTINCT dormid) FROM has_amenity", "pred_sql": "SELECT COUNT(DISTINCT d.dormid) AS number_of_dorms_with_amenities\nFROM dorm d\nJOIN has_amenity ha ON d.dormid = ha.dormid;", "token_usage": {"tokens": 776, "cost": 0.00019604999999999997}}
{"sample_id": 5733, "db_id": "dorm_1", "gold_sql": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name", "pred_sql": "SELECT d.dorm_name, COUNT(s.stuid) AS number_of_students\nFROM dorm d\nLEFT JOIN lives_in l ON d.dormid = l.dormid\nLEFT JOIN student s ON l.stuid = s.stuid AND s.age > '20'\nGROUP BY d.dorm_name;", "token_usage": {"tokens": 816, "cost": 0.00021869999999999995}}
{"sample_id": 5678, "db_id": "dorm_1", "gold_sql": "SELECT count(*) FROM student", "pred_sql": "SELECT COUNT(*) AS total_students FROM student;", "token_usage": {"tokens": 670, "cost": 0.0001356}}
{"sample_id": 5674, "db_id": "dorm_1", "gold_sql": "SELECT count(*) FROM dorm_amenity", "pred_sql": "SELECT COUNT(DISTINCT amenid) AS total_amenities FROM dorm_amenity;", "token_usage": {"tokens": 720, "cost": 0.00016334999999999999}}
{"sample_id": 5747, "db_id": "dorm_1", "gold_sql": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT da.amenity_name\nFROM dorm_amenity da\nJOIN has_amenity ha ON da.amenid = ha.amenid\nGROUP BY da.amenity_name\nORDER BY COUNT(ha.dormid) DESC\nLIMIT 1;", "token_usage": {"tokens": 770, "cost": 0.00019109999999999998}}
{"sample_id": 5736, "db_id": "dorm_1", "gold_sql": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'", "pred_sql": "SELECT fname FROM student INNER JOIN lives_in ON student.stuid = lives_in.stuid INNER JOIN dorm ON lives_in.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall';", "token_usage": {"tokens": 748, "cost": 0.00017925}}
{"sample_id": 5720, "db_id": "dorm_1", "gold_sql": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code", "pred_sql": "SELECT city_code, COUNT(stuid) AS student_count, AVG(age) AS average_age FROM student GROUP BY city_code;", "token_usage": {"tokens": 752, "cost": 0.00018074999999999998}}
{"sample_id": 5669, "db_id": "dorm_1", "gold_sql": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25", "pred_sql": "SELECT fname FROM student WHERE city_code = 'PHL' AND age BETWEEN '20' AND '25';", "token_usage": {"tokens": 748, "cost": 0.00017519999999999998}}
{"sample_id": 5663, "db_id": "dorm_1", "gold_sql": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300", "pred_sql": "SELECT dorm_name FROM dorm WHERE student_capacity > 300;", "token_usage": {"tokens": 722, "cost": 0.0001623}}
{"sample_id": 5737, "db_id": "dorm_1", "gold_sql": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)", "pred_sql": "SELECT AVG(age) AS average_age FROM student WHERE stuid IN (SELECT stuid FROM lives_in WHERE dormid = (SELECT dormid FROM dorm ORDER BY student_capacity DESC LIMIT 1));", "token_usage": {"tokens": 725, "cost": 0.00016319999999999998}}
{"sample_id": 6221, "db_id": "ship_1", "gold_sql": "SELECT name ,  CLASS ,  rank FROM captain", "pred_sql": "SELECT name, class, rank FROM captain;", "token_usage": {"tokens": 473, "cost": 0.00010245}}
{"sample_id": 6251, "db_id": "ship_1", "gold_sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "pred_sql": "SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id GROUP BY ship.ship_id HAVING COUNT(captain.captain_id) > 1;", "token_usage": {"tokens": 549, "cost": 0.00014759999999999998}}
{"sample_id": 6239, "db_id": "ship_1", "gold_sql": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "pred_sql": "SELECT name, type, flag FROM ship WHERE built_year = (SELECT MAX(built_year) FROM ship);", "token_usage": {"tokens": 517, "cost": 0.00012524999999999998}}
{"sample_id": 6259, "db_id": "ship_1", "gold_sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "pred_sql": "SELECT DISTINCT s.name\nFROM ship s\nJOIN captain c1 ON s.ship_id = c1.ship_id\nJOIN captain c2 ON s.ship_id = c2.ship_id\nWHERE c1.rank = 'Midshipman' AND c2.rank = 'Lieutenant';", "token_usage": {"tokens": 580, "cost": 0.00016034999999999997}}
{"sample_id": 6224, "db_id": "ship_1", "gold_sql": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT rank FROM captain GROUP BY rank ORDER BY COUNT(captain_id) ASC LIMIT 1;", "token_usage": {"tokens": 557, "cost": 0.0001524}}
{"sample_id": 6260, "db_id": "ship_1", "gold_sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "pred_sql": "SELECT DISTINCT s.name \nFROM ship s \nJOIN captain c ON s.ship_id = c.ship_id \nWHERE c.rank IN ('Midshipman', 'Lieutenant') \nGROUP BY s.ship_id \nHAVING COUNT(DISTINCT c.rank) = 2;", "token_usage": {"tokens": 633, "cost": 0.00019079999999999998}}
{"sample_id": 6222, "db_id": "ship_1", "gold_sql": "SELECT name ,  CLASS ,  rank FROM captain", "pred_sql": "SELECT name, class, rank FROM captain;", "token_usage": {"tokens": 476, "cost": 0.00010334999999999999}}
{"sample_id": 6245, "db_id": "ship_1", "gold_sql": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "pred_sql": "SELECT name FROM ship ORDER BY built_year, class;", "token_usage": {"tokens": 522, "cost": 0.0001314}}
{"sample_id": 6254, "db_id": "ship_1", "gold_sql": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "pred_sql": "SELECT ship.name, ship.class FROM ship LEFT JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.captain_id IS NULL;", "token_usage": {"tokens": 587, "cost": 0.00016994999999999998}}
{"sample_id": 6242, "db_id": "ship_1", "gold_sql": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "pred_sql": "SELECT flag, COUNT(*) AS ship_count FROM ship GROUP BY flag;", "token_usage": {"tokens": 535, "cost": 0.00013874999999999998}}
{"sample_id": 6249, "db_id": "ship_1", "gold_sql": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT built_year, COUNT(*) as ship_count FROM ship GROUP BY built_year ORDER BY ship_count DESC LIMIT 1;", "token_usage": {"tokens": 558, "cost": 0.00015479999999999997}}
{"sample_id": 2402, "db_id": "candidate_poll", "gold_sql": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'", "pred_sql": "SELECT AVG(height) AS average_height, AVG(weight) AS average_weight FROM people WHERE sex = 'M';", "token_usage": {"tokens": 587, "cost": 0.00015059999999999997}}
{"sample_id": 2419, "db_id": "candidate_poll", "gold_sql": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate", "pred_sql": "SELECT MAX(support_rate) AS highest_support_percentage, MIN(consider_rate) AS lowest_consider_rate, MIN(oppose_rate) AS lowest_oppose_rate FROM candidate;", "token_usage": {"tokens": 564, "cost": 0.0001359}}
{"sample_id": 2418, "db_id": "candidate_poll", "gold_sql": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex", "pred_sql": "SELECT p.sex, COUNT(*) AS number_of_people FROM people p WHERE p.weight > 85 GROUP BY p.sex;", "token_usage": {"tokens": 582, "cost": 0.00014625}}
{"sample_id": 2394, "db_id": "candidate_poll", "gold_sql": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1", "pred_sql": "SELECT candidate_id FROM candidate ORDER BY oppose_rate ASC LIMIT 1;", "token_usage": {"tokens": 566, "cost": 0.00013844999999999998}}
{"sample_id": 2404, "db_id": "candidate_poll", "gold_sql": "SELECT name FROM people WHERE height  >  200 OR height  <  190", "pred_sql": "SELECT name FROM people WHERE height > 200 OR height < 190;", "token_usage": {"tokens": 576, "cost": 0.0001413}}
{"sample_id": 2408, "db_id": "candidate_poll", "gold_sql": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1", "pred_sql": "SELECT p.name, p.sex FROM candidate c JOIN people p ON c.people_id = p.people_id ORDER BY c.support_rate DESC LIMIT 1;", "token_usage": {"tokens": 613, "cost": 0.00016575}}
{"sample_id": 2392, "db_id": "candidate_poll", "gold_sql": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3", "pred_sql": "SELECT candidate_id, support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3;", "token_usage": {"tokens": 554, "cost": 0.00013304999999999998}}
{"sample_id": 2406, "db_id": "candidate_poll", "gold_sql": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex", "pred_sql": "SELECT sex, AVG(weight) AS average_weight, MIN(weight) AS minimum_weight FROM people GROUP BY sex;", "token_usage": {"tokens": 578, "cost": 0.00014565}}
{"sample_id": 4236, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "pred_sql": "SELECT DISTINCT destruction_authorised_by_employee_id FROM documents_to_be_destroyed;", "token_usage": {"tokens": 1082, "cost": 0.00021854999999999997}}
{"sample_id": 4157, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT count(*) FROM Ref_document_types", "pred_sql": "SELECT COUNT(*) AS number_of_document_types FROM ref_document_types;", "token_usage": {"tokens": 1054, "cost": 0.00020444999999999996}}
{"sample_id": 4192, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "pred_sql": "SELECT employee_name, role_code, date_of_birth FROM employees WHERE employee_name = 'Armani';", "token_usage": {"tokens": 1087, "cost": 0.00021794999999999999}}
{"sample_id": 4234, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "pred_sql": "SELECT employee_id FROM employees WHERE employee_id NOT IN (SELECT destruction_authorised_by_employee_id FROM documents_to_be_destroyed)", "token_usage": {"tokens": 1119, "cost": 0.00023939999999999996}}
{"sample_id": 4231, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID", "pred_sql": "SELECT destroyed_by_employee_id, COUNT(document_id) AS number_of_documents_destroyed \nFROM documents_to_be_destroyed \nGROUP BY destroyed_by_employee_id;", "token_usage": {"tokens": 1105, "cost": 0.00023189999999999994}}
{"sample_id": 4199, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT role_code FROM employees GROUP BY role_code ORDER BY COUNT(employee_id) DESC LIMIT 1;", "token_usage": {"tokens": 1085, "cost": 0.0002208}}
{"sample_id": 4223, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3", "pred_sql": "SELECT dl.location_code\nFROM document_locations dl\nGROUP BY dl.location_code\nHAVING COUNT(dl.document_id) >= 3;", "token_usage": {"tokens": 1082, "cost": 0.00021945}}
{"sample_id": 4212, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT DISTINCT location_code FROM Document_locations", "pred_sql": "SELECT DISTINCT location_code FROM document_locations;", "token_usage": {"tokens": 1034, "cost": 0.00019109999999999998}}
{"sample_id": 4171, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"", "pred_sql": "SELECT ref_document_types.document_type_name \nFROM all_documents \nJOIN ref_document_types ON all_documents.document_type_code = ref_document_types.document_type_code \nWHERE all_documents.document_name = 'How to read a book';", "token_usage": {"tokens": 1133, "cost": 0.00024645}}
{"sample_id": 4178, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "pred_sql": "SELECT location_name, location_description FROM ref_locations WHERE location_code = 'x';", "token_usage": {"tokens": 1061, "cost": 0.00020595}}
{"sample_id": 4228, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "pred_sql": "SELECT e1.employee_name AS authorized_by, e2.employee_name AS destroyed_by\nFROM documents_to_be_destroyed d\nJOIN employees e1 ON d.destruction_authorised_by_employee_id = e1.employee_id\nJOIN employees e2 ON d.destroyed_by_employee_id = e2.employee_id;", "token_usage": {"tokens": 1164, "cost": 0.00026415}}
{"sample_id": 4173, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT count(*) FROM Ref_locations", "pred_sql": "SELECT COUNT(*) AS number_of_locations FROM ref_locations;", "token_usage": {"tokens": 1030, "cost": 0.0001905}}
{"sample_id": 4203, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT role_code FROM employees GROUP BY role_code ORDER BY COUNT(employee_id) ASC LIMIT 1;", "token_usage": {"tokens": 1110, "cost": 0.00023714999999999996}}
{"sample_id": 4208, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"", "pred_sql": "SELECT employee_name FROM employees JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name = 'Editor';", "token_usage": {"tokens": 1085, "cost": 0.00021944999999999997}}
{"sample_id": 4163, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"", "pred_sql": "SELECT document_type_code FROM ref_document_types WHERE document_type_name = 'Paper';", "token_usage": {"tokens": 1071, "cost": 0.00021194999999999997}}
{"sample_id": 4221, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT location_code, COUNT(document_id) AS document_count\nFROM document_locations\nGROUP BY location_code\nORDER BY document_count DESC\nLIMIT 1;", "token_usage": {"tokens": 1115, "cost": 0.00023969999999999997}}
{"sample_id": 4220, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code", "pred_sql": "SELECT l.location_code, COUNT(dl.document_id) AS document_count\nFROM ref_locations l\nLEFT JOIN document_locations dl ON l.location_code = dl.location_code\nGROUP BY l.location_code;", "token_usage": {"tokens": 1114, "cost": 0.00023639999999999997}}
{"sample_id": 4193, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"", "pred_sql": "SELECT employee_id FROM employees WHERE employee_name = 'Ebba';", "token_usage": {"tokens": 1039, "cost": 0.00019365}}
{"sample_id": 5244, "db_id": "music_2", "gold_sql": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\"", "pred_sql": "SELECT COUNT(DISTINCT songid) AS different_songs_with_shared_vocals FROM vocals WHERE type = 'shared';", "token_usage": {"tokens": 777, "cost": 0.00017685}}
{"sample_id": 5241, "db_id": "music_2", "gold_sql": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "pred_sql": "SELECT COUNT(DISTINCT type) AS number_of_vocal_types\nFROM vocals\nJOIN songs ON vocals.songid = songs.songid\nWHERE songs.title = 'Le Pop';", "token_usage": {"tokens": 780, "cost": 0.0001764}}
{"sample_id": 5246, "db_id": "music_2", "gold_sql": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "pred_sql": "SELECT DISTINCT songs.title FROM songs LEFT JOIN vocals ON songs.songid = vocals.songid WHERE vocals.type IS NULL OR vocals.type != 'backing';", "token_usage": {"tokens": 810, "cost": 0.00019485}}
{"sample_id": 5184, "db_id": "music_2", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "pred_sql": "SELECT b.firstname, b.lastname \nFROM performance p \nJOIN songs s ON p.songid = s.songid \nJOIN band b ON p.bandmate = b.id \nWHERE s.title = 'Badlands' AND p.stageposition = 'back'", "token_usage": {"tokens": 836, "cost": 0.00020459999999999999}}
{"sample_id": 5260, "db_id": "music_2", "gold_sql": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"", "pred_sql": "SELECT songs.title FROM songs JOIN tracklists ON songs.songid = tracklists.songid JOIN albums ON tracklists.albumid = albums.aid WHERE albums.title = 'A Kiss Before You Go: Live in Hamburg';", "token_usage": {"tokens": 807, "cost": 0.00018944999999999997}}
{"sample_id": 5173, "db_id": "music_2", "gold_sql": "SELECT count(*) FROM Songs", "pred_sql": "SELECT COUNT(*) AS total_songs FROM songs;", "token_usage": {"tokens": 730, "cost": 0.00014954999999999998}}
{"sample_id": 5196, "db_id": "music_2", "gold_sql": "SELECT DISTINCT instrument FROM Instruments", "pred_sql": "SELECT DISTINCT instrument FROM instruments;", "token_usage": {"tokens": 707, "cost": 0.00013394999999999998}}
{"sample_id": 5245, "db_id": "music_2", "gold_sql": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "pred_sql": "SELECT songs.title FROM songs LEFT JOIN vocals ON songs.songid = vocals.songid AND vocals.type = 'backing' WHERE vocals.songid IS NULL;", "token_usage": {"tokens": 797, "cost": 0.00018705}}
{"sample_id": 5177, "db_id": "music_2", "gold_sql": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\"", "pred_sql": "SELECT COUNT(DISTINCT performance.bandmate) AS musician_count FROM performance JOIN songs ON performance.songid = songs.songid WHERE songs.title = 'Flash';", "token_usage": {"tokens": 790, "cost": 0.00018329999999999998}}
{"sample_id": 5203, "db_id": "music_2", "gold_sql": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "pred_sql": "SELECT instruments.instrument \nFROM instruments \nJOIN songs ON instruments.songid = songs.songid \nWHERE songs.title = 'Le Pop';", "token_usage": {"tokens": 780, "cost": 0.00017685}}
{"sample_id": 5227, "db_id": "music_2", "gold_sql": "SELECT DISTINCT TYPE FROM vocals", "pred_sql": "SELECT DISTINCT type FROM vocals;", "token_usage": {"tokens": 712, "cost": 0.00013874999999999998}}
{"sample_id": 5243, "db_id": "music_2", "gold_sql": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\"", "pred_sql": "SELECT COUNT(DISTINCT v1.songid) AS shared_vocal_songs\nFROM vocals v1\nJOIN vocals v2 ON v1.songid = v2.songid AND v1.bandmate <> v2.bandmate;", "token_usage": {"tokens": 798, "cost": 0.00018945}}
{"sample_id": 5258, "db_id": "music_2", "gold_sql": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "pred_sql": "SELECT songs.title FROM songs LEFT JOIN vocals ON songs.songid = vocals.songid AND vocals.type = 'backing' WHERE vocals.songid IS NULL;", "token_usage": {"tokens": 799, "cost": 0.00018734999999999997}}
{"sample_id": 5179, "db_id": "music_2", "gold_sql": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"", "pred_sql": "SELECT songs.title FROM songs JOIN instruments ON songs.songid = instruments.songid JOIN band ON instruments.bandmateid = band.id WHERE band.firstname = 'Marianne';", "token_usage": {"tokens": 797, "cost": 0.00018615}}
{"sample_id": 5181, "db_id": "music_2", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "pred_sql": "SELECT band.firstname, band.lastname FROM performance JOIN songs ON performance.songid = songs.songid JOIN band ON performance.bandmate = band.id WHERE songs.title = 'Badlands';", "token_usage": {"tokens": 793, "cost": 0.00018195}}
{"sample_id": 5204, "db_id": "music_2", "gold_sql": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "pred_sql": "SELECT instruments.instrument FROM instruments JOIN songs ON instruments.songid = songs.songid WHERE songs.title = 'Le Pop';", "token_usage": {"tokens": 787, "cost": 0.00018015}}
{"sample_id": 5240, "db_id": "music_2", "gold_sql": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "pred_sql": "SELECT DISTINCT vocals.type FROM vocals JOIN songs ON vocals.songid = songs.songid WHERE songs.title = 'Badlands';", "token_usage": {"tokens": 792, "cost": 0.00018314999999999998}}
{"sample_id": 5182, "db_id": "music_2", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "pred_sql": "SELECT band.firstname, band.lastname FROM performance JOIN songs ON performance.songid = songs.songid JOIN band ON performance.bandmate = band.id WHERE songs.title = 'Badlands';", "token_usage": {"tokens": 805, "cost": 0.00018825}}
{"sample_id": 5212, "db_id": "music_2", "gold_sql": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT songs.title, COUNT(vocals.bandmate) AS vocal_count \nFROM songs \nJOIN vocals ON songs.songid = vocals.songid \nGROUP BY songs.songid \nORDER BY vocal_count DESC \nLIMIT 1;", "token_usage": {"tokens": 828, "cost": 0.000207}}
{"sample_id": 5253, "db_id": "music_2", "gold_sql": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT v.type, COUNT(v.type) AS type_count\nFROM vocals v\nJOIN band b ON v.bandmate = b.id\nWHERE b.firstname = 'Marianne'\nGROUP BY v.type\nORDER BY type_count DESC\nLIMIT 1;", "token_usage": {"tokens": 844, "cost": 0.00021255}}
{"sample_id": 4264, "db_id": "club_1", "gold_sql": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "pred_sql": "SELECT student.fname, student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE student.sex = 'female' AND club.clubname = 'Bootup Baltimore';", "token_usage": {"tokens": 685, "cost": 0.0001905}}
{"sample_id": 4252, "db_id": "club_1", "gold_sql": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "pred_sql": "SELECT student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE club.clubname = 'Bootup Baltimore';", "token_usage": {"tokens": 633, "cost": 0.0001602}}
{"sample_id": 4309, "db_id": "club_1", "gold_sql": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "pred_sql": "SELECT AVG(age) AS average_age FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE club.clubname = 'Hopkins Student Enterprises';", "token_usage": {"tokens": 662, "cost": 0.00017939999999999997}}
{"sample_id": 4253, "db_id": "club_1", "gold_sql": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "pred_sql": "SELECT student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE club.clubname = 'Hopkins Student Enterprises';", "token_usage": {"tokens": 663, "cost": 0.0001782}}
{"sample_id": 4259, "db_id": "club_1", "gold_sql": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\"", "pred_sql": "SELECT COUNT(DISTINCT club.clubid) AS club_count FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE student.fname = 'Linda' AND student.lname = 'Smith';", "token_usage": {"tokens": 662, "cost": 0.00018119999999999996}}
{"sample_id": 4251, "db_id": "club_1", "gold_sql": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "pred_sql": "SELECT student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE club.clubname = 'Bootup Baltimore';", "token_usage": {"tokens": 706, "cost": 0.00020579999999999996}}
{"sample_id": 4304, "db_id": "club_1", "gold_sql": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"", "pred_sql": "SELECT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Steven' AND student.lname = 'Davis';", "token_usage": {"tokens": 645, "cost": 0.00016785}}
{"sample_id": 4305, "db_id": "club_1", "gold_sql": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121", "pred_sql": "SELECT DISTINCT club.clubname \nFROM club \nJOIN member_of_club ON club.clubid = member_of_club.clubid \nJOIN student ON member_of_club.stuid = student.stuid \nWHERE student.advisor = '1121';", "token_usage": {"tokens": 649, "cost": 0.0001716}}
{"sample_id": 4276, "db_id": "club_1", "gold_sql": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "pred_sql": "SELECT clubdesc FROM club WHERE clubname = 'Pen and Paper Gaming';", "token_usage": {"tokens": 575, "cost": 0.00012764999999999999}}
{"sample_id": 4312, "db_id": "club_1", "gold_sql": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"", "pred_sql": "SELECT AVG(age) AS average_age FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE club.clubname = 'Tennis Club';", "token_usage": {"tokens": 645, "cost": 0.0001692}}
{"sample_id": 4274, "db_id": "club_1", "gold_sql": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"", "pred_sql": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club';", "token_usage": {"tokens": 589, "cost": 0.00013695}}
{"sample_id": 4284, "db_id": "club_1", "gold_sql": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"", "pred_sql": "SELECT clubname FROM club WHERE clublocation = 'AKW';", "token_usage": {"tokens": 621, "cost": 0.00015524999999999998}}
{"sample_id": 4273, "db_id": "club_1", "gold_sql": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"", "pred_sql": "SELECT clubdesc FROM club WHERE clubname = 'Tennis Club';", "token_usage": {"tokens": 573, "cost": 0.00012644999999999998}}
{"sample_id": 4301, "db_id": "club_1", "gold_sql": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\"", "pred_sql": "SELECT COUNT(*) AS club_count FROM member_of_club INNER JOIN student ON member_of_club.stuid = student.stuid WHERE student.fname = 'Eric' AND student.lname = 'Tai';", "token_usage": {"tokens": 651, "cost": 0.00017324999999999998}}
{"sample_id": 7364, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "pred_sql": "SELECT d.document_id\nFROM documents d\nJOIN paragraphs p ON d.document_id = p.document_id\nGROUP BY d.document_id\nHAVING COUNT(p.paragraph_id) >= 2;", "token_usage": {"tokens": 689, "cost": 0.00016994999999999998}}
{"sample_id": 7340, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "pred_sql": "SELECT template_type_code, template_type_description FROM ref_template_types;", "token_usage": {"tokens": 610, "cost": 0.00012345}}
{"sample_id": 7306, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "pred_sql": "SELECT t.template_id\nFROM templates t\nJOIN documents d ON t.template_id = d.template_id\nGROUP BY t.template_id\nHAVING COUNT(d.document_id) > 1;", "token_usage": {"tokens": 681, "cost": 0.00016334999999999999}}
{"sample_id": 7295, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "pred_sql": "SELECT document_name, template_id FROM documents WHERE document_description LIKE '%w%';", "token_usage": {"tokens": 655, "cost": 0.00014639999999999998}}
{"sample_id": 7351, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(*) FROM Paragraphs", "pred_sql": "SELECT COUNT(*) AS paragraph_count FROM paragraphs;", "token_usage": {"tokens": 614, "cost": 0.00012675}}
{"sample_id": 7362, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "pred_sql": "SELECT d.document_id, d.document_name, COUNT(p.paragraph_id) AS paragraph_count\nFROM documents d\nLEFT JOIN paragraphs p ON d.document_id = p.document_id\nGROUP BY d.document_id, d.document_name;", "token_usage": {"tokens": 700, "cost": 0.0001743}}
{"sample_id": 7333, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "pred_sql": "SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK';", "token_usage": {"tokens": 652, "cost": 0.00014595}}
{"sample_id": 7350, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(*) FROM Paragraphs", "pred_sql": "SELECT COUNT(*) AS total_paragraphs FROM paragraphs;", "token_usage": {"tokens": 630, "cost": 0.00013634999999999998}}
{"sample_id": 7365, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "pred_sql": "SELECT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;", "token_usage": {"tokens": 697, "cost": 0.00017295}}
{"sample_id": 7327, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "pred_sql": "SELECT r.template_type_code FROM ref_template_types r LEFT JOIN templates t ON r.template_type_code = t.template_type_code GROUP BY r.template_type_code HAVING COUNT(t.template_id) < 3;", "token_usage": {"tokens": 728, "cost": 0.00019109999999999998}}
{"sample_id": 7315, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT DISTINCT template_type_code FROM Templates", "pred_sql": "SELECT DISTINCT template_type_code FROM ref_template_types;", "token_usage": {"tokens": 612, "cost": 0.00012465}}
{"sample_id": 7290, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(*) FROM Documents", "pred_sql": "SELECT COUNT(*) AS document_count FROM documents;", "token_usage": {"tokens": 620, "cost": 0.00012989999999999999}}
{"sample_id": 7298, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(DISTINCT template_id) FROM Documents", "pred_sql": "SELECT COUNT(DISTINCT template_id) AS different_templates_count FROM documents;", "token_usage": {"tokens": 632, "cost": 0.0001362}}
{"sample_id": 7296, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "pred_sql": "SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV';", "token_usage": {"tokens": 710, "cost": 0.0001785}}
{"sample_id": 7309, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "pred_sql": "SELECT template_id FROM templates WHERE template_id NOT IN (SELECT DISTINCT template_id FROM documents);", "token_usage": {"tokens": 681, "cost": 0.00016334999999999999}}
{"sample_id": 7328, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "pred_sql": "SELECT MIN(version_number) AS smallest_version_number, template_type_code FROM templates GROUP BY template_type_code;", "token_usage": {"tokens": 726, "cost": 0.0001917}}
{"sample_id": 7339, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "pred_sql": "SELECT ref_template_types.template_type_code FROM ref_template_types LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code LEFT JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_id IS NULL;", "token_usage": {"tokens": 733, "cost": 0.0001941}}
{"sample_id": 7310, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(*) FROM Templates", "pred_sql": "SELECT COUNT(*) AS total_templates FROM templates;", "token_usage": {"tokens": 622, "cost": 0.0001311}}
{"sample_id": 2814, "db_id": "restaurant_1", "gold_sql": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";", "pred_sql": "SELECT address FROM restaurant WHERE resname = 'Subway';", "token_usage": {"tokens": 691, "cost": 0.00014864999999999998}}
{"sample_id": 2816, "db_id": "restaurant_1", "gold_sql": "SELECT ResTypeName FROM Restaurant_Type;", "pred_sql": "SELECT * FROM restaurant_type;", "token_usage": {"tokens": 654, "cost": 0.00012825}}
{"sample_id": 2832, "db_id": "restaurant_1", "gold_sql": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "pred_sql": "SELECT time FROM visits_restaurant vr JOIN student s ON vr.stuid = s.stuid JOIN restaurant r ON vr.resid = r.resid WHERE s.fname = 'Linda' AND s.lname = 'Smith' AND r.resname = 'Subway';", "token_usage": {"tokens": 751, "cost": 0.00018554999999999998}}
{"sample_id": 2828, "db_id": "restaurant_1", "gold_sql": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';", "pred_sql": "SELECT fname, lname FROM student WHERE sex = 'female' AND age > '18' AND major != '600';", "token_usage": {"tokens": 751, "cost": 0.00017609999999999997}}
{"sample_id": 2817, "db_id": "restaurant_1", "gold_sql": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";", "pred_sql": "SELECT restypedescription FROM restaurant_type WHERE restypename = 'Sandwich';", "token_usage": {"tokens": 700, "cost": 0.0001536}}
{"sample_id": 111, "db_id": "bike_1", "gold_sql": "SELECT name FROM station WHERE lat  <  37.5", "pred_sql": "SELECT name FROM station WHERE lat < '37.5';"}
{"sample_id": 186, "db_id": "bike_1", "gold_sql": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "pred_sql": "SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5;"}
{"sample_id": 155, "db_id": "bike_1", "gold_sql": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60", "pred_sql": "SELECT trip.id FROM trip JOIN weather ON trip.zip_code = weather.zip_code WHERE weather.mean_temperature_f > 60;"}
{"sample_id": 173, "db_id": "bike_1", "gold_sql": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1", "pred_sql": "SELECT name, lat, city FROM station ORDER BY lat ASC LIMIT 1;"}
{"sample_id": 143, "db_id": "bike_1", "gold_sql": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"", "pred_sql": "SELECT s.name, s.id \nFROM station s \nJOIN status st ON s.id = st.station_id \nGROUP BY s.id \nHAVING AVG(st.bikes_available) > 14 OR strftime('%m', s.installation_date) = '12';"}
{"sample_id": 194, "db_id": "bike_1", "gold_sql": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100", "pred_sql": "SELECT DISTINCT start_station_name FROM trip WHERE duration < 100;"}
{"sample_id": 152, "db_id": "bike_1", "gold_sql": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)", "pred_sql": "SELECT AVG(long) AS mean_longitude FROM station WHERE id NOT IN (SELECT station_id FROM status WHERE bikes_available > 10);"}
{"sample_id": 145, "db_id": "bike_1", "gold_sql": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3", "pred_sql": "SELECT cloud_cover, COUNT(cloud_cover) AS count FROM weather WHERE zip_code = 94107 GROUP BY cloud_cover ORDER BY count DESC LIMIT 3;"}
{"sample_id": 196, "db_id": "bike_1", "gold_sql": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70", "pred_sql": "SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f < 70;"}
{"sample_id": 170, "db_id": "bike_1", "gold_sql": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7", "pred_sql": "SELECT s.id FROM station s JOIN status st ON s.id = st.station_id WHERE s.lat > 37.4 GROUP BY s.id HAVING MIN(st.bikes_available) >= 7;"}
{"sample_id": 131, "db_id": "bike_1", "gold_sql": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7", "pred_sql": "SELECT DISTINCT s.name FROM station s JOIN status st ON s.id = st.station_id WHERE st.bikes_available = 7;"}
{"sample_id": 156, "db_id": "bike_1", "gold_sql": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60", "pred_sql": "SELECT DISTINCT trip.id\nFROM trip\nJOIN weather ON trip.zip_code = weather.zip_code\nWHERE weather.mean_temperature_f > 60;"}
{"sample_id": 212, "db_id": "bike_1", "gold_sql": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id", "pred_sql": "SELECT AVG(lat) AS average_latitude, AVG(long) AS average_longitude FROM station WHERE id IN (SELECT start_station_id FROM trip);"}
{"sample_id": 142, "db_id": "bike_1", "gold_sql": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10", "pred_sql": "SELECT s.id FROM station s JOIN status st ON s.id = st.station_id WHERE s.city = 'San Francisco' AND st.bikes_available > 10;"}
{"sample_id": 120, "db_id": "bike_1", "gold_sql": "SELECT id FROM trip ORDER BY duration LIMIT 1", "pred_sql": "SELECT id FROM trip ORDER BY duration ASC LIMIT 1;"}
{"sample_id": 180, "db_id": "bike_1", "gold_sql": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200", "pred_sql": "SELECT start_station_id, start_station_name\nFROM trip\nGROUP BY start_station_id, start_station_name\nHAVING COUNT(id) >= 200;"}
{"sample_id": 181, "db_id": "bike_1", "gold_sql": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10", "pred_sql": "SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_visibility_miles) < 10;"}
{"sample_id": 115, "db_id": "bike_1", "gold_sql": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3", "pred_sql": "SELECT start_station_name, end_station_name FROM trip ORDER BY id ASC LIMIT 3;"}
{"sample_id": 136, "db_id": "bike_1", "gold_sql": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT bike_id FROM trip WHERE zip_code = '94002' ORDER BY duration DESC LIMIT 1;"}
{"sample_id": 149, "db_id": "bike_1", "gold_sql": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")", "pred_sql": "SELECT AVG(s.bikes_available) AS average_bike_availability\nFROM status s\nJOIN station st ON s.station_id = st.id\nWHERE st.city != 'Palo Alto';"}
{"sample_id": 113, "db_id": "bike_1", "gold_sql": "SELECT city ,  max(lat) FROM station GROUP BY city", "pred_sql": "SELECT city, MAX(lat) AS highest_latitude FROM station GROUP BY city;"}
{"sample_id": 141, "db_id": "bike_1", "gold_sql": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10", "pred_sql": "SELECT s.id FROM station s JOIN status st ON s.id = st.station_id WHERE s.city = 'San Francisco' GROUP BY s.id HAVING AVG(st.bikes_available) > 10;"}
{"sample_id": 7629, "db_id": "tvshow", "gold_sql": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "pred_sql": "SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey');", "token_usage": {"tokens": 808, "cost": 0.00018554999999999998}}
{"sample_id": 7621, "db_id": "tvshow", "gold_sql": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "pred_sql": "SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by;", "token_usage": {"tokens": 792, "cost": 0.00017864999999999998}}
{"sample_id": 7608, "db_id": "tvshow", "gold_sql": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "pred_sql": "SELECT tv_series.episode, tv_series.rating FROM tv_series ORDER BY tv_series.rating DESC LIMIT 3;", "token_usage": {"tokens": 773, "cost": 0.0001623}}
{"sample_id": 7581, "db_id": "tvshow", "gold_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "pred_sql": "SELECT title FROM cartoon WHERE directed_by = 'Ben Jones';", "token_usage": {"tokens": 771, "cost": 0.00016424999999999998}}
{"sample_id": 7598, "db_id": "tvshow", "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "pred_sql": "SELECT language, COUNT(*) AS number_of_channels \nFROM tv_channel \nGROUP BY language \nORDER BY number_of_channels ASC \nLIMIT 1;", "token_usage": {"tokens": 793, "cost": 0.00017475}}
{"sample_id": 7635, "db_id": "tvshow", "gold_sql": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "pred_sql": "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) > 2;", "token_usage": {"tokens": 755, "cost": 0.0001524}}
{"sample_id": 7589, "db_id": "tvshow", "gold_sql": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT country, COUNT(*) as channel_count FROM tv_channel GROUP BY country ORDER BY channel_count DESC LIMIT 1;", "token_usage": {"tokens": 792, "cost": 0.00017414999999999998}}
{"sample_id": 7626, "db_id": "tvshow", "gold_sql": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "pred_sql": "SELECT DISTINCT tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.written_by = 'Todd Casey';", "token_usage": {"tokens": 830, "cost": 0.00019874999999999998}}
{"sample_id": 7632, "db_id": "tvshow", "gold_sql": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "pred_sql": "SELECT pixel_aspect_ratio_par, country FROM tv_channel WHERE language != 'English';", "token_usage": {"tokens": 752, "cost": 0.0001506}}
{"sample_id": 7638, "db_id": "tvshow", "gold_sql": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "pred_sql": "SELECT package_option FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones');", "token_usage": {"tokens": 805, "cost": 0.00018150000000000002}}
{"sample_id": 7634, "db_id": "tvshow", "gold_sql": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "pred_sql": "SELECT id FROM tv_channel WHERE country IN (SELECT country FROM tv_channel GROUP BY country HAVING COUNT(*) > 2)", "token_usage": {"tokens": 793, "cost": 0.00017475}}
{"sample_id": 7627, "db_id": "tvshow", "gold_sql": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "pred_sql": "SELECT DISTINCT tv_channel.country FROM cartoon JOIN tv_channel ON cartoon.channel = tv_channel.id WHERE cartoon.written_by = 'Todd Casey';", "token_usage": {"tokens": 785, "cost": 0.00017084999999999998}}
{"sample_id": 7599, "db_id": "tvshow", "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "pred_sql": "SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1;", "token_usage": {"tokens": 832, "cost": 0.00019769999999999998}}
{"sample_id": 3389, "db_id": "manufacturer", "gold_sql": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20", "pred_sql": "SELECT AVG(num_of_factories) AS average_factories FROM manufacturer WHERE num_of_shops > 20;", "token_usage": {"tokens": 597, "cost": 0.00014984999999999998}}
{"sample_id": 3393, "db_id": "manufacturer", "gold_sql": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1", "pred_sql": "SELECT m.manufacturer_id, m.num_of_shops \nFROM manufacturer m \nJOIN furniture_manufacte fm ON m.manufacturer_id = fm.manufacturer_id \nJOIN furniture f ON fm.furniture_id = f.furniture_id \nWHERE f.market_rate = (SELECT MAX(market_rate) FROM furniture)", "token_usage": {"tokens": 670, "cost": 0.00019364999999999996}}
{"sample_id": 3396, "db_id": "manufacturer", "gold_sql": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)", "pred_sql": "SELECT f.name, f.market_rate FROM furniture f LEFT JOIN furniture_manufacte fm ON f.furniture_id = fm.furniture_id WHERE fm.manufacturer_id IS NULL;", "token_usage": {"tokens": 651, "cost": 0.00018135}}
{"sample_id": 3384, "db_id": "manufacturer", "gold_sql": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2", "pred_sql": "SELECT SUM(f.market_rate) AS total_market_rate\nFROM furniture f\nJOIN furniture_manufacte fm ON f.furniture_id = fm.furniture_id\nGROUP BY fm.furniture_id\nORDER BY SUM(fm.price_in_dollar) DESC\nLIMIT 2;", "token_usage": {"tokens": 687, "cost": 0.0002034}}
{"sample_id": 4841, "db_id": "local_govt_and_lot", "gold_sql": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3", "pred_sql": "SELECT c.customer_id, c.customer_details \nFROM customers c \nJOIN customer_events ce ON c.customer_id = ce.customer_id \nGROUP BY c.customer_id \nHAVING COUNT(ce.customer_event_id) >= 3;", "token_usage": {"tokens": 1447, "cost": 0.0002967}}
{"sample_id": 4851, "db_id": "local_govt_and_lot", "gold_sql": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM customer_events)", "token_usage": {"tokens": 1356, "cost": 0.0002457}}
{"sample_id": 4840, "db_id": "local_govt_and_lot", "gold_sql": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id", "pred_sql": "SELECT things.thing_id, things.type_of_thing_code, organizations.organization_details \nFROM things \nJOIN organizations ON things.organization_id = organizations.organization_id;", "token_usage": {"tokens": 1414, "cost": 0.000276}}
{"sample_id": 4845, "db_id": "local_govt_and_lot", "gold_sql": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'", "pred_sql": "SELECT COUNT(DISTINCT location_code) AS distinct_locations\nFROM timed_locations_of_things\nJOIN things ON timed_locations_of_things.thing_id = things.thing_id\nWHERE things.service_details = 'Unsatisfied';", "token_usage": {"tokens": 1450, "cost": 0.00029804999999999995}}
{"sample_id": 1502, "db_id": "debate", "gold_sql": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC", "pred_sql": "SELECT people.name, debate.date, debate.venue \nFROM debate_people \nJOIN people ON debate_people.negative = people.people_id \nJOIN debate ON debate_people.debate_id = debate.debate_id \nORDER BY people.name ASC;"}
{"sample_id": 1494, "db_id": "debate", "gold_sql": "SELECT Date ,  Venue FROM debate", "pred_sql": "SELECT date, venue FROM debate;"}
{"sample_id": 1493, "db_id": "debate", "gold_sql": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC", "pred_sql": "SELECT venue FROM debate ORDER BY num_of_audience ASC;"}
{"sample_id": 7900, "db_id": "network_1", "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.liked_id GROUP BY h.id ORDER BY COUNT(l.student_id) DESC LIMIT 1;", "token_usage": {"tokens": 534, "cost": 0.0001503}}
{"sample_id": 7876, "db_id": "network_1", "gold_sql": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "pred_sql": "SELECT h.name, COUNT(f.friend_id) AS friend_count\nFROM highschooler h\nLEFT JOIN friend f ON h.id = f.student_id\nGROUP BY h.id, h.name;", "token_usage": {"tokens": 555, "cost": 0.00016424999999999998}}
{"sample_id": 7902, "db_id": "network_1", "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "pred_sql": "SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id HAVING COUNT(l.liked_id) >= 2;", "token_usage": {"tokens": 534, "cost": 0.00014895}}
{"sample_id": 7857, "db_id": "network_1", "gold_sql": "SELECT name ,  grade FROM Highschooler", "pred_sql": "SELECT name, grade FROM highschooler;", "token_usage": {"tokens": 450, "cost": 9.989999999999999e-05}}
{"sample_id": 7886, "db_id": "network_1", "gold_sql": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "pred_sql": "SELECT COUNT(friend_id) AS friend_count FROM friend WHERE student_id = (SELECT id FROM highschooler WHERE name = 'Kyle');", "token_usage": {"tokens": 465, "cost": 0.00011025}}
{"sample_id": 7891, "db_id": "network_1", "gold_sql": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "pred_sql": "SELECT DISTINCT h.id FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.liked_id;", "token_usage": {"tokens": 567, "cost": 0.00016694999999999997}}
{"sample_id": 7904, "db_id": "network_1", "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "pred_sql": "SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id WHERE h.grade > '5' GROUP BY h.id HAVING COUNT(f.friend_id) >= 2;", "token_usage": {"tokens": 587, "cost": 0.00017625}}
{"sample_id": 7860, "db_id": "network_1", "gold_sql": "SELECT grade FROM Highschooler", "pred_sql": "SELECT name, grade FROM highschooler;", "token_usage": {"tokens": 468, "cost": 0.00011114999999999999}}
{"sample_id": 7868, "db_id": "network_1", "gold_sql": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "pred_sql": "SELECT COUNT(*) AS number_of_students FROM highschooler WHERE grade IN ('9', '10');", "token_usage": {"tokens": 500, "cost": 0.00012809999999999997}}
{"sample_id": 7869, "db_id": "network_1", "gold_sql": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "pred_sql": "SELECT grade, COUNT(*) AS number_of_students FROM highschooler GROUP BY grade;", "token_usage": {"tokens": 476, "cost": 0.00011549999999999999}}
{"sample_id": 7898, "db_id": "network_1", "gold_sql": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "pred_sql": "SELECT h.name, COUNT(l.liked_id) AS like_count \nFROM highschooler h \nJOIN likes l ON h.id = l.student_id \nGROUP BY h.id;", "token_usage": {"tokens": 521, "cost": 0.00013845}}
{"sample_id": 7888, "db_id": "network_1", "gold_sql": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "pred_sql": "SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)", "token_usage": {"tokens": 505, "cost": 0.00013154999999999997}}
{"sample_id": 3061, "db_id": "loan_1", "gold_sql": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1", "pred_sql": "SELECT b.bname FROM bank b JOIN loan l ON b.branch_id = l.branch_id JOIN customer c ON l.cust_id = c.cust_id WHERE c.credit_score < 100 GROUP BY b.branch_id ORDER BY SUM(l.amount) DESC LIMIT 1;", "token_usage": {"tokens": 780, "cost": 0.000225}}
{"sample_id": 3072, "db_id": "loan_1", "gold_sql": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100", "pred_sql": "SELECT DISTINCT b.bname FROM bank b JOIN loan l ON b.branch_id = l.branch_id JOIN customer c ON l.cust_id = c.cust_id WHERE c.credit_score < 100;", "token_usage": {"tokens": 675, "cost": 0.00016425}}
{"sample_id": 3026, "db_id": "loan_1", "gold_sql": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "pred_sql": "SELECT cust_name, acc_bal FROM customer WHERE cust_name LIKE '%a%';", "token_usage": {"tokens": 659, "cost": 0.000156}}
{"sample_id": 3056, "db_id": "loan_1", "gold_sql": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1", "pred_sql": "SELECT c.cust_name FROM customer c JOIN loan l ON c.cust_id = l.cust_id GROUP BY c.cust_id HAVING COUNT(l.loan_id) > 1;", "token_usage": {"tokens": 658, "cost": 0.0001563}}
{"sample_id": 3038, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)", "pred_sql": "SELECT cust_name FROM customer WHERE credit_score < (SELECT AVG(credit_score) FROM customer);", "token_usage": {"tokens": 664, "cost": 0.00015854999999999998}}
{"sample_id": 3025, "db_id": "loan_1", "gold_sql": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "pred_sql": "SELECT cust_name, acc_bal FROM customer WHERE cust_name LIKE '%a%';", "token_usage": {"tokens": 637, "cost": 0.0001428}}
{"sample_id": 3012, "db_id": "loan_1", "gold_sql": "SELECT bname FROM bank WHERE state  =  'New York'", "pred_sql": "SELECT bname FROM bank WHERE state = 'New York';", "token_usage": {"tokens": 628, "cost": 0.0001392}}
{"sample_id": 3013, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer ORDER BY acc_bal", "pred_sql": "SELECT cust_name FROM customer ORDER BY acc_bal ASC;", "token_usage": {"tokens": 636, "cost": 0.00014309999999999998}}
{"sample_id": 3066, "db_id": "loan_1", "gold_sql": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "pred_sql": "SELECT DISTINCT c.cust_name, c.credit_score \nFROM customer c \nJOIN loan l ON c.cust_id = l.cust_id;", "token_usage": {"tokens": 644, "cost": 0.00014744999999999998}}
{"sample_id": 3024, "db_id": "loan_1", "gold_sql": "SELECT count(DISTINCT acc_type) FROM customer", "pred_sql": "SELECT COUNT(DISTINCT acc_type) AS different_account_types FROM customer;", "token_usage": {"tokens": 618, "cost": 0.00013544999999999999}}
{"sample_id": 3018, "db_id": "loan_1", "gold_sql": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "pred_sql": "SELECT c.state, c.acc_type, c.credit_score FROM customer c WHERE c.no_of_loans = 0;", "token_usage": {"tokens": 692, "cost": 0.00017489999999999997}}
{"sample_id": 3019, "db_id": "loan_1", "gold_sql": "SELECT count(DISTINCT city) FROM bank", "pred_sql": "SELECT COUNT(DISTINCT city) AS number_of_cities FROM bank;", "token_usage": {"tokens": 625, "cost": 0.00013785}}
{"sample_id": 3005, "db_id": "loan_1", "gold_sql": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'", "pred_sql": "SELECT AVG(no_of_customers) AS average_customers FROM bank WHERE state = 'Utah';", "token_usage": {"tokens": 674, "cost": 0.0001668}}
{"sample_id": 3030, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'", "pred_sql": "SELECT cust_name FROM customer WHERE acc_type IN ('savings', 'checking') GROUP BY cust_id HAVING COUNT(DISTINCT acc_type) = 2;", "token_usage": {"tokens": 692, "cost": 0.00017715}}
{"sample_id": 3062, "db_id": "loan_1", "gold_sql": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1", "pred_sql": "SELECT b.bname \nFROM bank b \nJOIN loan l ON b.branch_id = l.branch_id \nJOIN customer c ON l.cust_id = c.cust_id \nWHERE c.credit_score < 100 \nGROUP BY b.branch_id \nORDER BY SUM(l.amount) DESC \nLIMIT 1;", "token_usage": {"tokens": 740, "cost": 0.00019920000000000002}}
{"sample_id": 3047, "db_id": "loan_1", "gold_sql": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1", "pred_sql": "SELECT state, COUNT(*) AS customer_count FROM customer GROUP BY state ORDER BY customer_count DESC LIMIT 1;", "token_usage": {"tokens": 647, "cost": 0.0001515}}
{"sample_id": 1036, "db_id": "phone_1", "gold_sql": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;", "pred_sql": "SELECT p.hardware_model_name FROM phone p JOIN chip_model c ON p.chip_model = c.model_name WHERE c.launch_year = '2002' ORDER BY CAST(c.ram_mib AS INTEGER) DESC LIMIT 1;"}
{"sample_id": 1027, "db_id": "phone_1", "gold_sql": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";", "pred_sql": "SELECT MAX(c.ram_mib) AS max_ram, MIN(c.ram_mib) AS min_ram FROM phone p JOIN chip_model c ON p.chip_model = c.model_name WHERE p.company_name = 'Nokia Corporation';"}
{"sample_id": 1031, "db_id": "phone_1", "gold_sql": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "pred_sql": "SELECT sm.char_cells, sm.pixels, sm.hardware_colours FROM phone p JOIN screen_mode sm ON p.screen_mode = sm.graphics_mode WHERE p.hardware_model_name = 'LG-P760';"}
{"sample_id": 1033, "db_id": "phone_1", "gold_sql": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;", "pred_sql": "SELECT company_name, COUNT(hardware_model_name) AS model_count \nFROM phone \nGROUP BY company_name \nORDER BY model_count ASC \nLIMIT 1;"}
{"sample_id": 1051, "db_id": "phone_1", "gold_sql": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full'", "pred_sql": "SELECT DISTINCT sm.pixels \nFROM screen_mode sm \nJOIN phone p ON sm.graphics_mode = p.screen_mode \nWHERE p.accreditation_type IN ('Full', 'Provisional') \nGROUP BY sm.pixels \nHAVING COUNT(DISTINCT p.accreditation_type) = 2;"}
{"sample_id": 1044, "db_id": "phone_1", "gold_sql": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3", "pred_sql": "SELECT accreditation_level FROM phone GROUP BY accreditation_level HAVING COUNT(*) > 3;"}
{"sample_id": 1030, "db_id": "phone_1", "gold_sql": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';", "pred_sql": "SELECT company_name, hardware_model_name FROM phone WHERE accreditation_type LIKE '%Full%';"}
{"sample_id": 4878, "db_id": "school_player", "gold_sql": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "pred_sql": "SELECT school.location, school_details.nickname FROM school JOIN school_details ON school.school_id = school_details.school_id;", "token_usage": {"tokens": 794, "cost": 0.0001713}}
{"sample_id": 4869, "db_id": "school_player", "gold_sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5", "pred_sql": "SELECT team FROM player WHERE player_id IN (SELECT player_id FROM player ORDER BY age DESC LIMIT 5)", "token_usage": {"tokens": 805, "cost": 0.0001761}}
{"sample_id": 4868, "db_id": "school_player", "gold_sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1", "pred_sql": "SELECT team FROM player WHERE age = (SELECT MAX(age) FROM player)", "token_usage": {"tokens": 783, "cost": 0.00016605}}
{"sample_id": 4867, "db_id": "school_player", "gold_sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1", "pred_sql": "SELECT team FROM player WHERE age = (SELECT MAX(age) FROM player)", "token_usage": {"tokens": 794, "cost": 0.00017085}}
{"sample_id": 4863, "db_id": "school_player", "gold_sql": "SELECT Team FROM player ORDER BY Team ASC", "pred_sql": "SELECT DISTINCT team FROM player ORDER BY team ASC;", "token_usage": {"tokens": 789, "cost": 0.00016649999999999998}}
{"sample_id": 4862, "db_id": "school_player", "gold_sql": "SELECT avg(Enrollment) FROM school", "pred_sql": "SELECT AVG(enrollment) AS average_enrollment FROM school;", "token_usage": {"tokens": 767, "cost": 0.000156}}
{"sample_id": 4864, "db_id": "school_player", "gold_sql": "SELECT Team FROM player ORDER BY Team ASC", "pred_sql": "SELECT team FROM player ORDER BY team ASC;", "token_usage": {"tokens": 786, "cost": 0.0001647}}
{"sample_id": 4882, "db_id": "school_player", "gold_sql": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "pred_sql": "SELECT denomination, COUNT(*) AS school_count FROM school GROUP BY denomination ORDER BY school_count DESC;", "token_usage": {"tokens": 808, "cost": 0.00017384999999999997}}
{"sample_id": 2652, "db_id": "local_govt_mdm", "gold_sql": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'", "pred_sql": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%';", "token_usage": {"tokens": 889, "cost": 0.00018554999999999998}}
{"sample_id": 2646, "db_id": "local_govt_mdm", "gold_sql": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references", "pred_sql": "SELECT COUNT(DISTINCT source_system_code) AS different_source_system_codes FROM cmi_cross_references;", "token_usage": {"tokens": 887, "cost": 0.000183}}
{"sample_id": 2639, "db_id": "local_govt_mdm", "gold_sql": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax'", "pred_sql": "SELECT customer_master_index.* FROM customer_master_index JOIN cmi_cross_references ON customer_master_index.master_customer_id = cmi_cross_references.master_customer_id WHERE cmi_cross_references.source_system_code = 'Tax';", "token_usage": {"tokens": 962, "cost": 0.00022619999999999997}}
{"sample_id": 2650, "db_id": "local_govt_mdm", "gold_sql": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'", "pred_sql": "SELECT DISTINCT cmi_cross_references.source_system_code\nFROM cmi_cross_references\nJOIN customer_master_index ON cmi_cross_references.master_customer_id = customer_master_index.master_customer_id\nWHERE customer_master_index.cmi_details = 'Gottlieb, Becker and Wyman';", "token_usage": {"tokens": 1008, "cost": 0.00024974999999999997}}
{"sample_id": 7951, "db_id": "dog_kennels", "gold_sql": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "pred_sql": "SELECT d.date_arrived, d.date_departed FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id;", "token_usage": {"tokens": 1210, "cost": 0.0002454}}
{"sample_id": 7923, "db_id": "dog_kennels", "gold_sql": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT owners.owner_id, owners.first_name, owners.last_name\nFROM owners\nJOIN dogs ON owners.owner_id = dogs.owner_id\nGROUP BY owners.owner_id, owners.first_name, owners.last_name\nORDER BY COUNT(dogs.dog_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1274, "cost": 0.00028425}}
{"sample_id": 7949, "db_id": "dog_kennels", "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "pred_sql": "SELECT owners.first_name, dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia';", "token_usage": {"tokens": 1204, "cost": 0.0002409}}
{"sample_id": 7979, "db_id": "dog_kennels", "gold_sql": "SELECT avg(age) FROM Dogs", "pred_sql": "SELECT AVG(age) AS average_age FROM dogs;", "token_usage": {"tokens": 1141, "cost": 0.00020805}}
{"sample_id": 7922, "db_id": "dog_kennels", "gold_sql": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "pred_sql": "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM treatments)", "token_usage": {"tokens": 1186, "cost": 0.00023054999999999997}}
{"sample_id": 7968, "db_id": "dog_kennels", "gold_sql": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "pred_sql": "SELECT COUNT(*) AS dog_count FROM dogs WHERE age < (SELECT AVG(age) FROM dogs);", "token_usage": {"tokens": 1177, "cost": 0.00022874999999999995}}
{"sample_id": 7970, "db_id": "dog_kennels", "gold_sql": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "pred_sql": "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1;", "token_usage": {"tokens": 1175, "cost": 0.00022799999999999999}}
{"sample_id": 7977, "db_id": "dog_kennels", "gold_sql": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "pred_sql": "SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1;", "token_usage": {"tokens": 1216, "cost": 0.0002445}}
{"sample_id": 7965, "db_id": "dog_kennels", "gold_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "pred_sql": "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%';", "token_usage": {"tokens": 1185, "cost": 0.00022815}}
{"sample_id": 7932, "db_id": "dog_kennels", "gold_sql": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "pred_sql": "SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code = (SELECT treatment_type_code FROM treatments ORDER BY cost_of_treatment ASC LIMIT 1)", "token_usage": {"tokens": 1229, "cost": 0.0002586}}
{"sample_id": 7953, "db_id": "dog_kennels", "gold_sql": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "pred_sql": "SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id ORDER BY d.date_of_birth DESC LIMIT 1;", "token_usage": {"tokens": 1190, "cost": 0.00023654999999999998}}
{"sample_id": 7989, "db_id": "dog_kennels", "gold_sql": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "pred_sql": "SELECT breeds.breed_name, sizes.size_description FROM breeds CROSS JOIN sizes;", "token_usage": {"tokens": 1177, "cost": 0.00022874999999999995}}
{"sample_id": 7976, "db_id": "dog_kennels", "gold_sql": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "pred_sql": "SELECT COUNT(*) AS number_of_professionals_without_treatments \nFROM professionals \nWHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM treatments);", "token_usage": {"tokens": 1178, "cost": 0.00022934999999999996}}
{"sample_id": 7962, "db_id": "dog_kennels", "gold_sql": "SELECT count(DISTINCT professional_id) FROM Treatments", "pred_sql": "SELECT COUNT(DISTINCT professional_id) AS number_of_professionals FROM treatments;", "token_usage": {"tokens": 1150, "cost": 0.00021299999999999997}}
{"sample_id": 7987, "db_id": "dog_kennels", "gold_sql": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "pred_sql": "SELECT email_address, cell_number, home_phone FROM professionals;", "token_usage": {"tokens": 1138, "cost": 0.00020444999999999996}}
{"sample_id": 7912, "db_id": "dog_kennels", "gold_sql": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "pred_sql": "SELECT DISTINCT owners.state FROM owners INNER JOIN professionals ON owners.state = professionals.state;", "token_usage": {"tokens": 1133, "cost": 0.00020324999999999998}}
{"sample_id": 7991, "db_id": "dog_kennels", "gold_sql": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "pred_sql": "SELECT professionals.first_name, treatment_types.treatment_type_description \nFROM treatments \nJOIN professionals ON treatments.professional_id = professionals.professional_id \nJOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code;", "token_usage": {"tokens": 1251, "cost": 0.00026999999999999995}}
{"sample_id": 873, "db_id": "chinook_1", "gold_sql": "SELECT Title FROM ALBUM ORDER BY Title", "pred_sql": "SELECT title FROM album ORDER BY title ASC;"}
{"sample_id": 831, "db_id": "chinook_1", "gold_sql": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK", "pred_sql": "SELECT MAX(milliseconds) AS longest_duration, MIN(milliseconds) AS shortest_duration FROM track;"}
{"sample_id": 862, "db_id": "chinook_1", "gold_sql": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"", "pred_sql": "SELECT DISTINCT customer.address, customer.city, customer.state, customer.country, customer.postalcode \nFROM customer \nJOIN invoice ON customer.customerid = invoice.customerid \nWHERE customer.country = 'Germany';"}
{"sample_id": 877, "db_id": "chinook_1", "gold_sql": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId", "pred_sql": "SELECT name FROM artist WHERE artistid NOT IN (SELECT artistid FROM album)"}
{"sample_id": 810, "db_id": "chinook_1", "gold_sql": "SELECT Name FROM GENRE", "pred_sql": "SELECT DISTINCT name FROM genre;"}
{"sample_id": 814, "db_id": "chinook_1", "gold_sql": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "pred_sql": "SELECT firstname || ' ' || lastname AS full_name FROM employee WHERE city = 'Calgary';"}
{"sample_id": 822, "db_id": "chinook_1", "gold_sql": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"", "pred_sql": "SELECT COUNT(*) AS album_count FROM album WHERE artistid = (SELECT artistid FROM artist WHERE name = 'Metallica');"}
{"sample_id": 861, "db_id": "chinook_1", "gold_sql": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"", "pred_sql": "SELECT DISTINCT customer.address \nFROM customer \nJOIN invoice ON customer.customerid = invoice.customerid \nWHERE customer.country = 'Germany';"}
{"sample_id": 829, "db_id": "chinook_1", "gold_sql": "SELECT AVG(UnitPrice) FROM TRACK", "pred_sql": "SELECT AVG(unitprice) AS average_unit_price FROM track;"}
{"sample_id": 881, "db_id": "chinook_1", "gold_sql": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\"", "pred_sql": "SELECT MAX(milliseconds) AS longest_duration, MIN(milliseconds) AS shortest_duration FROM track WHERE genreid = (SELECT genreid FROM genre WHERE name = 'Pop');"}
{"sample_id": 849, "db_id": "chinook_1", "gold_sql": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "pred_sql": "SELECT employee.firstname, employee.lastname \nFROM customer \nJOIN employee ON customer.supportrepid = employee.employeeid \nWHERE customer.firstname = 'Leonie';"}
{"sample_id": 883, "db_id": "chinook_1", "gold_sql": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"", "pred_sql": "SELECT birthdate FROM employee WHERE city = 'Edmonton';"}
{"sample_id": 872, "db_id": "chinook_1", "gold_sql": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20", "pred_sql": "SELECT e.lastname\nFROM employee e\nJOIN customer c ON e.employeeid = c.supportrepid\nGROUP BY e.employeeid\nHAVING COUNT(c.customerid) <= 20;"}
{"sample_id": 859, "db_id": "chinook_1", "gold_sql": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"", "pred_sql": "SELECT DISTINCT customer.firstname FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE customer.country = 'Brazil';"}
{"sample_id": 812, "db_id": "chinook_1", "gold_sql": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"", "pred_sql": "SELECT * FROM customer WHERE state = 'NY';"}
{"sample_id": 840, "db_id": "chinook_1", "gold_sql": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID", "pred_sql": "SELECT DISTINCT album.albumid, album.title FROM album JOIN track ON album.albumid = track.albumid WHERE track.unitprice > 1;"}
{"sample_id": 875, "db_id": "chinook_1", "gold_sql": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name", "pred_sql": "SELECT a.artistid, a.name FROM artist a JOIN album al ON a.artistid = al.artistid GROUP BY a.artistid HAVING COUNT(al.albumid) >= 3 ORDER BY a.name ASC;"}
{"sample_id": 823, "db_id": "chinook_1", "gold_sql": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"", "pred_sql": "SELECT artist.name FROM artist JOIN album ON artist.artistid = album.artistid WHERE album.title = 'Balls to the Wall';"}
{"sample_id": 2015, "db_id": "gas_company", "gold_sql": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005", "pred_sql": "SELECT COUNT(*) AS number_of_gas_stations FROM gas_station WHERE open_year BETWEEN 2000 AND 2005;", "token_usage": {"tokens": 690, "cost": 0.0001692}}
{"sample_id": 2028, "db_id": "gas_company", "gold_sql": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'", "pred_sql": "SELECT gas_station.manager_name FROM gas_station JOIN station_company ON gas_station.station_id = station_company.station_id JOIN company ON station_company.company_id = company.company_id WHERE company.company = 'ExxonMobil';", "token_usage": {"tokens": 690, "cost": 0.0001674}}
{"sample_id": 2004, "db_id": "gas_company", "gold_sql": "SELECT DISTINCT main_industry FROM company", "pred_sql": "SELECT DISTINCT main_industry FROM company;", "token_usage": {"tokens": 604, "cost": 0.00011985}}
{"sample_id": 2032, "db_id": "gas_company", "gold_sql": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT manager_name, COUNT(*) AS station_count \nFROM gas_station \nWHERE open_year > 2000 \nGROUP BY manager_name \nORDER BY station_count DESC \nLIMIT 1;", "token_usage": {"tokens": 743, "cost": 0.00019920000000000002}}
{"sample_id": 1993, "db_id": "gas_company", "gold_sql": "SELECT count(*) FROM company", "pred_sql": "SELECT COUNT(DISTINCT company_id) AS number_of_gas_companies FROM station_company;", "token_usage": {"tokens": 628, "cost": 0.0001356}}
{"sample_id": 1997, "db_id": "gas_company", "gold_sql": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "pred_sql": "SELECT company, main_industry FROM company WHERE headquarters != 'USA';", "token_usage": {"tokens": 630, "cost": 0.00013185}}
{"sample_id": 2029, "db_id": "gas_company", "gold_sql": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100", "pred_sql": "SELECT gas_station.location FROM gas_station JOIN station_company ON gas_station.station_id = station_company.station_id JOIN company ON station_company.company_id = company.company_id WHERE company.market_value > 100;", "token_usage": {"tokens": 692, "cost": 0.00016859999999999998}}
{"sample_id": 2027, "db_id": "gas_company", "gold_sql": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'", "pred_sql": "SELECT gas_station.manager_name FROM gas_station JOIN station_company ON gas_station.station_id = station_company.station_id JOIN company ON station_company.company_id = company.company_id WHERE company.company = 'ExxonMobil';", "token_usage": {"tokens": 706, "cost": 0.00017925}}
{"sample_id": 1994, "db_id": "gas_company", "gold_sql": "SELECT count(*) FROM company", "pred_sql": "SELECT COUNT(*) AS total_companies FROM company;", "token_usage": {"tokens": 634, "cost": 0.00013874999999999998}}
{"sample_id": 2020, "db_id": "gas_company", "gold_sql": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'", "pred_sql": "SELECT DISTINCT c.headquarters \nFROM company c \nWHERE c.main_industry IN ('banking', 'oil and gas') \nAND c.company_id IN (\n    SELECT sc.company_id \n    FROM station_company sc \n    JOIN gas_station gs ON sc.station_id = gs.station_id\n)", "token_usage": {"tokens": 759, "cost": 0.00020834999999999997}}
{"sample_id": 1367, "db_id": "college_2", "gold_sql": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "pred_sql": "SELECT DISTINCT teaches.id \nFROM teaches \nWHERE (teaches.semester = 'Fall' AND teaches.year = '2009') \nAND teaches.id NOT IN (\n    SELECT DISTINCT teaches.id \n    FROM teaches \n    WHERE teaches.semester = 'Spring' AND teaches.year = '2010'\n);"}
{"sample_id": 1473, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE name LIKE '%dar%'", "pred_sql": "SELECT name FROM instructor WHERE name LIKE '%dar%';"}
{"sample_id": 1459, "db_id": "college_2", "gold_sql": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "pred_sql": "SELECT name, salary FROM instructor WHERE salary < (SELECT AVG(salary) FROM instructor WHERE dept_name = 'Physics');"}
{"sample_id": 1374, "db_id": "college_2", "gold_sql": "SELECT title FROM course ORDER BY title ,  credits", "pred_sql": "SELECT title, credits FROM course ORDER BY title, credits;"}
{"sample_id": 1333, "db_id": "college_2", "gold_sql": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1", "pred_sql": "SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1;"}
{"sample_id": 1486, "db_id": "college_2", "gold_sql": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", "pred_sql": "SELECT department.dept_name, AVG(instructor.salary) AS average_salary\nFROM department\nJOIN instructor ON department.dept_name = instructor.dept_name\nGROUP BY department.dept_name\nHAVING AVG(instructor.salary) > 42000;"}
{"sample_id": 1455, "db_id": "college_2", "gold_sql": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name", "pred_sql": "SELECT d.dept_name, COUNT(DISTINCT s.id) AS student_count, COUNT(DISTINCT i.id) AS instructor_count\nFROM department d\nLEFT JOIN student s ON d.dept_name = s.dept_name\nLEFT JOIN instructor i ON d.dept_name = i.dept_name\nGROUP BY d.dept_name;"}
{"sample_id": 1352, "db_id": "college_2", "gold_sql": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'", "pred_sql": "SELECT SUM(budget) AS total_budget FROM department WHERE dept_name IN ('Marketing', 'Finance');"}
{"sample_id": 1378, "db_id": "college_2", "gold_sql": "SELECT dept_name ,  building FROM department ORDER BY budget DESC", "pred_sql": "SELECT dept_name, building FROM department ORDER BY budget DESC;"}
{"sample_id": 1348, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "pred_sql": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"sample_id": 1407, "db_id": "college_2", "gold_sql": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT year, semester, COUNT(course_id) AS course_count\nFROM section\nGROUP BY year, semester\nORDER BY course_count DESC\nLIMIT 1;"}
{"sample_id": 1427, "db_id": "college_2", "gold_sql": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)", "pred_sql": "SELECT DISTINCT student.name FROM student JOIN takes ON student.id = takes.id WHERE takes.semester = 'Fall' AND takes.year = '2003';"}
{"sample_id": 1438, "db_id": "college_2", "gold_sql": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1", "pred_sql": "SELECT i.name \nFROM instructor i \nJOIN advisor a ON i.id = a.i_id \nJOIN student s ON a.s_id = s.id \nWHERE s.tot_cred = (SELECT MAX(tot_cred) FROM student);"}
{"sample_id": 1408, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT dept_name FROM department WHERE dept_name = (SELECT dept_name FROM student GROUP BY dept_name ORDER BY COUNT(*) DESC LIMIT 1);"}
{"sample_id": 1397, "db_id": "college_2", "gold_sql": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1", "pred_sql": "SELECT DISTINCT c.title\nFROM course c\nJOIN department d ON c.dept_name = d.dept_name\nGROUP BY c.title\nHAVING COUNT(DISTINCT d.dept_name) > 1;"}
{"sample_id": 1443, "db_id": "college_2", "gold_sql": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches", "pred_sql": "SELECT id FROM instructor WHERE id NOT IN (SELECT DISTINCT teaches.id FROM teaches);"}
{"sample_id": 1474, "db_id": "college_2", "gold_sql": "SELECT DISTINCT name FROM  instructor ORDER BY name", "pred_sql": "SELECT DISTINCT name FROM instructor ORDER BY name;"}
{"sample_id": 1338, "db_id": "college_2", "gold_sql": "SELECT count(DISTINCT dept_name) FROM course", "pred_sql": "SELECT COUNT(DISTINCT dept_name) AS number_of_departments FROM course;"}
{"sample_id": 1355, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'", "pred_sql": "SELECT department.dept_name FROM department JOIN instructor ON department.dept_name = instructor.dept_name WHERE instructor.name LIKE 'Soisalon';"}
{"sample_id": 1362, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'", "pred_sql": "SELECT title FROM course WHERE dept_name IN ('Statistics', 'Psychology') GROUP BY title HAVING COUNT(DISTINCT dept_name) = 2;"}
{"sample_id": 1421, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "pred_sql": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"sample_id": 1363, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'", "pred_sql": "SELECT title FROM course WHERE dept_name IN ('Statistics', 'Psychology') GROUP BY title HAVING COUNT(DISTINCT dept_name) = 2;"}
{"sample_id": 1406, "db_id": "college_2", "gold_sql": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT year, semester, COUNT(course_id) AS course_count\nFROM section\nGROUP BY year, semester\nORDER BY course_count DESC\nLIMIT 1;"}
{"sample_id": 1449, "db_id": "college_2", "gold_sql": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", "pred_sql": "SELECT COUNT(i.id) AS instructor_count, AVG(i.salary) AS average_salary\nFROM instructor i\nJOIN department d ON i.dept_name = d.dept_name\nWHERE d.budget = (SELECT MAX(budget) FROM department);"}
{"sample_id": 1467, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000", "pred_sql": "SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.' AND salary > 80000;"}
{"sample_id": 1391, "db_id": "college_2", "gold_sql": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1", "pred_sql": "SELECT student.name\nFROM student\nJOIN advisor ON student.id = advisor.s_id\nGROUP BY student.id\nHAVING COUNT(advisor.i_id) > 1;"}
{"sample_id": 1396, "db_id": "college_2", "gold_sql": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1", "pred_sql": "SELECT DISTINCT c.title\nFROM course c\nJOIN department d ON c.dept_name = d.dept_name\nGROUP BY c.title\nHAVING COUNT(DISTINCT d.dept_name) > 1;"}
{"sample_id": 1358, "db_id": "college_2", "gold_sql": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "pred_sql": "SELECT dept_name, budget FROM department WHERE budget > (SELECT AVG(budget) FROM department)"}
{"sample_id": 1419, "db_id": "college_2", "gold_sql": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq", "pred_sql": "SELECT course_id FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"sample_id": 1430, "db_id": "college_2", "gold_sql": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'", "pred_sql": "SELECT DISTINCT instructor.name \nFROM instructor \nJOIN teaches ON instructor.id = teaches.id \nJOIN course ON teaches.course_id = course.course_id \nWHERE course.title = 'C Programming';"}
{"sample_id": 1350, "db_id": "college_2", "gold_sql": "SELECT COUNT (DISTINCT id) FROM teaches", "pred_sql": "SELECT COUNT(DISTINCT id) AS different_instructors FROM teaches;"}
{"sample_id": 1475, "db_id": "college_2", "gold_sql": "SELECT DISTINCT name FROM  instructor ORDER BY name", "pred_sql": "SELECT DISTINCT name FROM instructor ORDER BY name;"}
{"sample_id": 1325, "db_id": "college_2", "gold_sql": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'", "pred_sql": "SELECT COUNT(*) AS num_classrooms_not_in_lamberton FROM classroom WHERE building != 'Lamberton';"}
{"sample_id": 1343, "db_id": "college_2", "gold_sql": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2", "pred_sql": "SELECT c.title \nFROM course c \nJOIN prereq p ON c.course_id = p.course_id \nGROUP BY c.course_id \nHAVING COUNT(p.prereq_id) = 2;"}
{"sample_id": 5392, "db_id": "tracking_software_problems", "gold_sql": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\"", "pred_sql": "SELECT DISTINCT p.product_id, pr.product_name \nFROM problems p \nJOIN staff s1 ON p.reported_by_staff_id = s1.staff_id \nJOIN staff s2 ON p.reported_by_staff_id = s2.staff_id \nJOIN product pr ON p.product_id = pr.product_id \nWHERE (s1.staff_first_name = 'Lacey' AND s1.staff_last_name = 'Bosco') \nAND (s2.staff_first_name = 'Kenton' AND s2.staff_last_name = 'Champlin');", "token_usage": {"tokens": 1059, "cost": 0.00027539999999999997}}
{"sample_id": 5388, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"", "pred_sql": "SELECT problem_id FROM problems WHERE product_id IN (SELECT product_id FROM product WHERE product_name = 'voluptatem') AND date_problem_reported > '1995-01-01';", "token_usage": {"tokens": 1017, "cost": 0.0002493}}
{"sample_id": 5382, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )", "pred_sql": "SELECT p.problem_id \nFROM problems p \nWHERE p.date_problem_reported < (\n    SELECT MIN(p2.date_problem_reported) \n    FROM problems p2 \n    WHERE p2.reported_by_staff_id = (\n        SELECT s.staff_id \n        FROM staff s \n        WHERE s.staff_first_name = 'Lysanne' AND s.staff_last_name = 'Turcotte'\n    )\n)", "token_usage": {"tokens": 980, "cost": 0.00022574999999999998}}
{"sample_id": 5390, "db_id": "tracking_software_problems", "gold_sql": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"", "pred_sql": "SELECT DISTINCT s.staff_first_name, s.staff_last_name \nFROM staff s \nJOIN problems p ON s.staff_id = p.reported_by_staff_id \nWHERE p.product_id IN (SELECT product_id FROM product WHERE product_name = 'rem') \nAND p.product_id NOT IN (SELECT product_id FROM product WHERE product_name = 'aut');", "token_usage": {"tokens": 1010, "cost": 0.00024509999999999994}}
{"sample_id": 5350, "db_id": "tracking_software_problems", "gold_sql": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "pred_sql": "SELECT problem_log_id, log_entry_date FROM problem_log WHERE problem_id = '10';", "token_usage": {"tokens": 893, "cost": 0.00017805}}
{"sample_id": 5361, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"", "pred_sql": "SELECT problems.problem_description \nFROM problems \nJOIN staff ON problems.reported_by_staff_id = staff.staff_id \nWHERE staff.staff_first_name = 'Christop';", "token_usage": {"tokens": 994, "cost": 0.00023684999999999998}}
{"sample_id": 5372, "db_id": "tracking_software_problems", "gold_sql": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "pred_sql": "SELECT product.product_id, COUNT(problems.problem_id) AS problem_count\nFROM problems\nWHERE date_problem_reported > '1986-11-13'\nGROUP BY product.product_id;", "token_usage": {"tokens": 1013, "cost": 0.0002415}}
{"sample_id": 5383, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )", "pred_sql": "SELECT problem_id FROM problems WHERE date_problem_reported > (SELECT MAX(date_problem_reported) FROM problems WHERE reported_by_staff_id = (SELECT staff_id FROM staff WHERE staff_first_name = 'Rylan' AND staff_last_name = 'Homenick'))", "token_usage": {"tokens": 930, "cost": 0.00019845}}
{"sample_id": 5363, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"", "pred_sql": "SELECT problem_id FROM problems WHERE reported_by_staff_id IN (SELECT staff_id FROM staff WHERE staff_last_name = 'Bosco');", "token_usage": {"tokens": 934, "cost": 0.00020265}}
{"sample_id": 5384, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )", "pred_sql": "SELECT p.problem_id \nFROM problems p \nWHERE p.date_problem_reported > (SELECT MAX(p2.date_problem_reported) \n                                   FROM problems p2 \n                                   WHERE p2.reported_by_staff_id = (SELECT s.staff_id \n                                                                     FROM staff s \n                                                                     WHERE s.staff_first_name = 'Rylan' AND s.staff_last_name = 'Homenick'))", "token_usage": {"tokens": 956, "cost": 0.0002136}}
{"sample_id": 5346, "db_id": "tracking_software_problems", "gold_sql": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1", "pred_sql": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1;", "token_usage": {"tokens": 910, "cost": 0.00019004999999999998}}
{"sample_id": 3148, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name", "pred_sql": "SELECT staff.staff_name, COUNT(engineer_visits.engineer_id) AS number_of_engineers_contacted\nFROM staff\nLEFT JOIN engineer_visits ON staff.staff_id = engineer_visits.contact_staff_id\nGROUP BY staff.staff_name;", "token_usage": {"tokens": 1768, "cost": 0.00034439999999999997}}
{"sample_id": 3119, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2", "pred_sql": "SELECT a.asset_id, a.asset_details \nFROM assets a \nJOIN asset_parts ap ON a.asset_id = ap.asset_id \nLEFT JOIN fault_log fl ON a.asset_id = fl.asset_id \nGROUP BY a.asset_id \nHAVING COUNT(ap.part_id) = 2 AND COUNT(fl.fault_log_entry_id) < 2;", "token_usage": {"tokens": 1800, "cost": 0.0003627}}
{"sample_id": 3144, "db_id": "assets_maintenance", "gold_sql": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1", "pred_sql": "SELECT part_id, chargeable_amount FROM parts ORDER BY chargeable_amount ASC LIMIT 1;", "token_usage": {"tokens": 1729, "cost": 0.0003228}}
{"sample_id": 3142, "db_id": "assets_maintenance", "gold_sql": "SELECT DISTINCT asset_model FROM Assets", "pred_sql": "SELECT DISTINCT asset_model FROM assets;", "token_usage": {"tokens": 1668, "cost": 0.0002898}}
{"sample_id": 3146, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1", "pred_sql": "SELECT tc.company_type FROM third_party_companies tc JOIN maintenance_contracts mc ON tc.company_id = mc.maintenance_contract_company_id WHERE mc.contract_end_date = (SELECT MAX(contract_end_date) FROM maintenance_contracts)", "token_usage": {"tokens": 1745, "cost": 0.00033194999999999996}}
{"sample_id": 3139, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id", "pred_sql": "SELECT staff.staff_name, maintenance_engineers.first_name, maintenance_engineers.last_name \nFROM engineer_visits \nJOIN staff ON engineer_visits.contact_staff_id = staff.staff_id \nJOIN maintenance_engineers ON engineer_visits.engineer_id = maintenance_engineers.engineer_id;", "token_usage": {"tokens": 1752, "cost": 0.0003348}}
{"sample_id": 3134, "db_id": "assets_maintenance", "gold_sql": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets", "pred_sql": "SELECT asset_id, asset_details, asset_make, asset_model FROM assets;", "token_usage": {"tokens": 1664, "cost": 0.0002847}}
{"sample_id": 5961, "db_id": "cre_Theme_park", "gold_sql": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "pred_sql": "SELECT COUNT(*) AS tourists_not_visited FROM visitors WHERE tourist_id NOT IN (SELECT DISTINCT tourist_id FROM visits);", "token_usage": {"tokens": 1510, "cost": 0.00029265}}
{"sample_id": 5958, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "pred_sql": "SELECT ta.name\nFROM tourist_attractions ta\nJOIN visits v1 ON ta.tourist_attraction_id = v1.tourist_attraction_id\nJOIN visitors vi1 ON v1.tourist_id = vi1.tourist_id\nWHERE vi1.tourist_details = 'Alison'\nAND ta.tourist_attraction_id NOT IN (\n    SELECT ta2.tourist_attraction_id\n    FROM tourist_attractions ta2\n    JOIN visits v2 ON ta2.tourist_attraction_id = v2.tourist_attraction_id\n    JOIN visitors vi2 ON v2.tourist_id = vi2.tourist_id\n    WHERE vi2.tourist_details = 'Rosalind'\n)", "token_usage": {"tokens": 1699, "cost": 0.0004038}}
{"sample_id": 5889, "db_id": "cre_Theme_park", "gold_sql": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"", "pred_sql": "SELECT price_range FROM hotels WHERE star_rating_code = '5';", "token_usage": {"tokens": 1486, "cost": 0.00027915}}
{"sample_id": 5943, "db_id": "cre_Theme_park", "gold_sql": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "pred_sql": "SELECT how_to_get_there, COUNT(tourist_attraction_id) AS number_of_attractions\nFROM tourist_attractions\nGROUP BY how_to_get_there;", "token_usage": {"tokens": 1555, "cost": 0.0003156}}
{"sample_id": 5909, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "pred_sql": "SELECT museum_details, opening_hours FROM museums JOIN tourist_attractions ON museums.museum_id = tourist_attractions.tourist_attraction_id;", "token_usage": {"tokens": 1504, "cost": 0.0002895}}
{"sample_id": 5911, "db_id": "cre_Theme_park", "gold_sql": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "pred_sql": "SELECT ta.name FROM photos p JOIN tourist_attractions ta ON p.tourist_attraction_id = ta.tourist_attraction_id WHERE p.name = 'game1';", "token_usage": {"tokens": 1525, "cost": 0.00029984999999999994}}
{"sample_id": 5918, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "pred_sql": "SELECT staff.name \nFROM staff \nJOIN tourist_attractions ON staff.tourist_attraction_id = tourist_attractions.tourist_attraction_id \nWHERE tourist_attractions.name = 'US museum';", "token_usage": {"tokens": 1510, "cost": 0.00028905}}
{"sample_id": 5904, "db_id": "cre_Theme_park", "gold_sql": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "pred_sql": "SELECT name, opening_hours FROM tourist_attractions WHERE how_to_get_there LIKE '%bus%' OR how_to_get_there LIKE '%walk%';", "token_usage": {"tokens": 1535, "cost": 0.00030405}}
{"sample_id": 5934, "db_id": "cre_Theme_park", "gold_sql": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "pred_sql": "SELECT * FROM hotels ORDER BY price_range DESC LIMIT 3;", "token_usage": {"tokens": 1459, "cost": 0.00026205}}
{"sample_id": 5899, "db_id": "cre_Theme_park", "gold_sql": "SELECT count(DISTINCT Name) FROM PHOTOS", "pred_sql": "SELECT COUNT(DISTINCT name) AS distinct_photo_names_count FROM photos;", "token_usage": {"tokens": 1457, "cost": 0.0002613}}
{"sample_id": 5914, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "pred_sql": "SELECT tourist_attractions.name, tourist_attractions.description, tourist_attractions.how_to_get_there, tourist_attractions.other_details \nFROM tourist_attractions \nJOIN royal_family ON tourist_attractions.tourist_attraction_id = royal_family.royal_family_id;", "token_usage": {"tokens": 1537, "cost": 0.00030704999999999996}}
{"sample_id": 5924, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "pred_sql": "SELECT ta.name, ta.description \nFROM tourist_attractions ta \nJOIN visits v ON ta.tourist_attraction_id = v.tourist_attraction_id \nJOIN visitors vi ON v.tourist_id = vi.tourist_id \nWHERE vi.tourist_details = 'Vincent';", "token_usage": {"tokens": 1546, "cost": 0.00031335}}
{"sample_id": 5959, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "pred_sql": "SELECT ta.name\nFROM tourist_attractions ta\nJOIN visits v1 ON ta.tourist_attraction_id = v1.tourist_attraction_id\nJOIN visitors vi1 ON v1.tourist_id = vi1.tourist_id\nWHERE vi1.tourist_details = 'Alison'\nAND ta.tourist_attraction_id NOT IN (\n    SELECT ta2.tourist_attraction_id\n    FROM tourist_attractions ta2\n    JOIN visits v2 ON ta2.tourist_attraction_id = v2.tourist_attraction_id\n    JOIN visitors vi2 ON v2.tourist_id = vi2.tourist_id\n    WHERE vi2.tourist_details = 'Rosalind'\n)", "token_usage": {"tokens": 1654, "cost": 0.00037499999999999995}}
{"sample_id": 5954, "db_id": "cre_Theme_park", "gold_sql": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "pred_sql": "SELECT name FROM tourist_attractions WHERE how_to_get_there LIKE '%bus%' OR location_id IN (SELECT location_id FROM locations WHERE address = '254 Ottilie Junction')", "token_usage": {"tokens": 1569, "cost": 0.0003231}}
{"sample_id": 5917, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "pred_sql": "SELECT * FROM shops WHERE shop_id IN (SELECT tourist_attraction_id FROM tourist_attractions WHERE how_to_get_there LIKE '%walk%');", "token_usage": {"tokens": 1496, "cost": 0.00028379999999999996}}
{"sample_id": 5919, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "pred_sql": "SELECT staff.name \nFROM staff \nJOIN tourist_attractions ON staff.tourist_attraction_id = tourist_attractions.tourist_attraction_id \nWHERE tourist_attractions.name = 'US museum';", "token_usage": {"tokens": 1512, "cost": 0.0002916}}
{"sample_id": 5937, "db_id": "cre_Theme_park", "gold_sql": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "pred_sql": "SELECT h.hotel_id, h.other_hotel_details, h.price_range, r.star_rating_description \nFROM hotels h \nJOIN ref_hotel_star_ratings r ON h.star_rating_code = r.star_rating_code \nORDER BY h.price_range ASC \nLIMIT 3;", "token_usage": {"tokens": 1562, "cost": 0.0003216}}
{"sample_id": 5887, "db_id": "cre_Theme_park", "gold_sql": "SELECT Tourist_Details FROM VISITORS", "pred_sql": "SELECT * FROM visitors;", "token_usage": {"tokens": 1430, "cost": 0.00024644999999999995}}
{"sample_id": 1986, "db_id": "phone_market", "gold_sql": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64", "pred_sql": "SELECT DISTINCT p1.carrier \nFROM phone p1 \nJOIN phone p2 ON p1.carrier = p2.carrier \nWHERE p1.memory_in_g < '32' AND p2.memory_in_g > '64';", "token_usage": {"tokens": 660, "cost": 0.00018179999999999997}}
{"sample_id": 1990, "db_id": "phone_market", "gold_sql": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name", "pred_sql": "SELECT phone.name, SUM(phone_market.num_of_stock) AS total_stock\nFROM phone\nJOIN phone_market ON phone.phone_id = phone_market.phone_id\nGROUP BY phone.name;", "token_usage": {"tokens": 601, "cost": 0.00015045}}
{"sample_id": 1983, "db_id": "phone_market", "gold_sql": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1", "pred_sql": "SELECT carrier FROM phone WHERE price = (SELECT MAX(price) FROM phone);", "token_usage": {"tokens": 562, "cost": 0.0001284}}
{"sample_id": 5092, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "pred_sql": "SELECT customer_phone, customer_email_address FROM clients WHERE customer_name = 'Harold';", "token_usage": {"tokens": 2266, "cost": 0.00038444999999999994}}
{"sample_id": 5154, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT status_code, COUNT(*) as count FROM bookings GROUP BY status_code ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 2342, "cost": 0.00043049999999999995}}
{"sample_id": 5164, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'", "pred_sql": "SELECT DISTINCT rst.service_type_description\nFROM ref_service_types rst\nJOIN services s ON rst.service_type_code = s.service_type_code\nJOIN order_items oi ON s.product_name IN ('photo', 'film')\nJOIN products p ON oi.product_id = p.product_id\nGROUP BY rst.service_type_description\nHAVING COUNT(DISTINCT p.product_name) = 2;", "token_usage": {"tokens": 2434, "cost": 0.0004816499999999999}}
{"sample_id": 5116, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"", "pred_sql": "SELECT DISTINCT a.state_county\nFROM stores s\nJOIN addresses a ON s.address_id = a.address_id\nWHERE s.marketing_region_code = 'CA';", "token_usage": {"tokens": 2328, "cost": 0.0004194}}
{"sample_id": 5140, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000", "pred_sql": "SELECT co.order_date \nFROM customer_orders co \nJOIN order_items oi ON co.order_id = oi.order_id \nJOIN products p ON oi.product_id = p.product_id \nWHERE p.product_price > 1000;", "token_usage": {"tokens": 2331, "cost": 0.000423}}
{"sample_id": 5153, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT status_code, COUNT(*) as frequency FROM bookings GROUP BY status_code ORDER BY frequency DESC LIMIT 1;", "token_usage": {"tokens": 2327, "cost": 0.00042284999999999995}}
{"sample_id": 5132, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000", "pred_sql": "SELECT product_name FROM products GROUP BY product_name HAVING AVG(product_price) < 1000000;", "token_usage": {"tokens": 2300, "cost": 0.00040395}}
{"sample_id": 5093, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Store_Name FROM Drama_Workshop_Groups", "pred_sql": "SELECT store_name FROM drama_workshop_groups;", "token_usage": {"tokens": 2246, "cost": 0.0003738}}
{"sample_id": 5101, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "pred_sql": "SELECT DISTINCT product_name FROM products WHERE product_price > (SELECT AVG(product_price) FROM products);", "token_usage": {"tokens": 2300, "cost": 0.00040484999999999995}}
{"sample_id": 5111, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT payment_method_code, COUNT(*) as order_count\nFROM invoices\nGROUP BY payment_method_code\nORDER BY order_count DESC\nLIMIT 1;", "token_usage": {"tokens": 2345, "cost": 0.00043229999999999994}}
{"sample_id": 5124, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT ref_service_types.service_type_description, ref_service_types.service_type_code\nFROM ref_service_types\nJOIN services ON ref_service_types.service_type_code = services.service_type_code\nJOIN bookings_services ON services.service_id = bookings_services.product_id\nGROUP BY ref_service_types.service_type_code\nORDER BY COUNT(bookings_services.order_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 2437, "cost": 0.00048569999999999993}}
{"sample_id": 5146, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"", "pred_sql": "SELECT dg.store_email_address FROM drama_workshop_groups dg JOIN addresses a ON dg.address_id = a.address_id WHERE a.state_county = 'Alaska';", "token_usage": {"tokens": 2342, "cost": 0.0004296}}
{"sample_id": 5099, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"", "pred_sql": "SELECT marketing_region_name, marketing_region_descriptrion FROM marketing_regions WHERE marketing_region_name = 'China';", "token_usage": {"tokens": 2281, "cost": 0.00039479999999999995}}
{"sample_id": 5131, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000", "pred_sql": "SELECT product_name FROM products GROUP BY product_name HAVING AVG(product_price) < 1000000;", "token_usage": {"tokens": 2272, "cost": 0.0003866999999999999}}
{"sample_id": 5094, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Store_Name FROM Drama_Workshop_Groups", "pred_sql": "SELECT store_name FROM drama_workshop_groups;", "token_usage": {"tokens": 2266, "cost": 0.00038579999999999995}}
{"sample_id": 5135, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000", "pred_sql": "SELECT * FROM customer_orders co JOIN order_items oi ON co.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE p.product_price > 2000;", "token_usage": {"tokens": 2299, "cost": 0.0004028999999999999}}
{"sample_id": 5102, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "pred_sql": "SELECT DISTINCT product_name FROM products WHERE product_price > (SELECT AVG(product_price) FROM products);", "token_usage": {"tokens": 2299, "cost": 0.00040334999999999997}}
{"sample_id": 1729, "db_id": "riding_club", "gold_sql": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1", "pred_sql": "SELECT player.player_name FROM player JOIN player_coach ON player.player_id = player_coach.player_id JOIN coach ON player_coach.coach_id = coach.coach_id WHERE coach.rank = '1';"}
{"sample_id": 1731, "db_id": "riding_club", "gold_sql": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC", "pred_sql": "SELECT player.player_name, coach.coach_name \nFROM player \nJOIN player_coach ON player.player_id = player_coach.player_id \nJOIN coach ON player_coach.coach_id = coach.coach_id \nORDER BY player.votes DESC;"}
{"sample_id": 1725, "db_id": "riding_club", "gold_sql": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation", "pred_sql": "SELECT occupation, COUNT(player_id) AS number_of_players FROM player GROUP BY occupation;"}
{"sample_id": 1730, "db_id": "riding_club", "gold_sql": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011", "pred_sql": "SELECT player.player_name, player.gender \nFROM player \nJOIN player_coach ON player.player_id = player_coach.player_id \nJOIN coach ON player_coach.coach_id = coach.coach_id \nWHERE coach.starting_year > 2011;"}
{"sample_id": 6023, "db_id": "game_1", "gold_sql": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"", "pred_sql": "SELECT SUM(s.hoursperweek) AS total_hours_per_week, SUM(s.gamesplayed) AS total_games_played \nFROM sportsinfo s \nJOIN student st ON s.stuid = st.stuid \nWHERE st.fname = 'David' AND st.lname = 'Shieber';", "token_usage": {"tokens": 765, "cost": 0.00020114999999999998}}
{"sample_id": 6038, "db_id": "game_1", "gold_sql": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000", "pred_sql": "SELECT vg.gname FROM video_games vg JOIN plays_games pg ON vg.gameid = pg.gameid WHERE pg.hours_played >= '1000';", "token_usage": {"tokens": 695, "cost": 0.00016184999999999998}}
{"sample_id": 6040, "db_id": "game_1", "gold_sql": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"", "pred_sql": "SELECT video_games.gname FROM video_games JOIN plays_games ON video_games.gameid = plays_games.gameid JOIN student ON plays_games.stuid = student.stuid WHERE student.fname = 'Linda' AND student.lname = 'Smith';", "token_usage": {"tokens": 781, "cost": 0.00021524999999999995}}
{"sample_id": 5992, "db_id": "game_1", "gold_sql": "SELECT count(DISTINCT sportname) FROM Sportsinfo", "pred_sql": "SELECT COUNT(DISTINCT sportname) AS total_sports FROM sportsinfo;", "token_usage": {"tokens": 665, "cost": 0.00014654999999999998}}
{"sample_id": 6004, "db_id": "game_1", "gold_sql": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname", "pred_sql": "SELECT sportname, COUNT(stuid) AS number_of_students FROM sportsinfo GROUP BY sportname;", "token_usage": {"tokens": 676, "cost": 0.00015179999999999998}}
{"sample_id": 5988, "db_id": "game_1", "gold_sql": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major", "pred_sql": "SELECT major, AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM student GROUP BY major;", "token_usage": {"tokens": 700, "cost": 0.00016484999999999997}}
{"sample_id": 5966, "db_id": "game_1", "gold_sql": "SELECT DISTINCT gtype FROM Video_games", "pred_sql": "SELECT DISTINCT gtype FROM video_games;", "token_usage": {"tokens": 630, "cost": 0.000126}}
{"sample_id": 6041, "db_id": "game_1", "gold_sql": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"", "pred_sql": "SELECT video_games.gname FROM video_games JOIN plays_games ON video_games.gameid = plays_games.gameid JOIN student ON plays_games.stuid = student.stuid WHERE student.fname = 'Linda' AND student.lname = 'Smith';", "token_usage": {"tokens": 820, "cost": 0.00023729999999999997}}
{"sample_id": 6015, "db_id": "game_1", "gold_sql": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo", "pred_sql": "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM sportsinfo);", "token_usage": {"tokens": 692, "cost": 0.0001605}}
{"sample_id": 6002, "db_id": "game_1", "gold_sql": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'", "pred_sql": "SELECT SUM(gamesplayed) AS total_games_played\nFROM sportsinfo s\nJOIN student st ON s.stuid = st.stuid\nWHERE s.sportname = 'Football' AND s.onscholarship = 'Yes';", "token_usage": {"tokens": 774, "cost": 0.00020879999999999998}}
{"sample_id": 5978, "db_id": "game_1", "gold_sql": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT gtype, COUNT(*) AS number_of_games FROM video_games GROUP BY gtype ORDER BY number_of_games DESC LIMIT 1;", "token_usage": {"tokens": 732, "cost": 0.00018585}}
{"sample_id": 6005, "db_id": "game_1", "gold_sql": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname", "pred_sql": "SELECT sportname, COUNT(stuid) AS student_count FROM sportsinfo GROUP BY sportname;", "token_usage": {"tokens": 666, "cost": 0.00014714999999999997}}
{"sample_id": 5976, "db_id": "game_1", "gold_sql": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype", "pred_sql": "SELECT gtype, COUNT(*) AS number_of_games FROM video_games GROUP BY gtype;", "token_usage": {"tokens": 710, "cost": 0.00016994999999999998}}
{"sample_id": 5993, "db_id": "game_1", "gold_sql": "SELECT count(DISTINCT sportname) FROM Sportsinfo", "pred_sql": "SELECT COUNT(DISTINCT sportname) AS different_sports FROM sportsinfo;", "token_usage": {"tokens": 665, "cost": 0.00014519999999999998}}
{"sample_id": 6007, "db_id": "game_1", "gold_sql": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID", "pred_sql": "SELECT s.stuid, COUNT(DISTINCT sp.sportname) AS sports_count, COUNT(DISTINCT pg.gameid) AS games_count\nFROM student s\nLEFT JOIN sportsinfo sp ON s.stuid = sp.stuid\nLEFT JOIN plays_games pg ON s.stuid = pg.stuid\nGROUP BY s.stuid;", "token_usage": {"tokens": 817, "cost": 0.00023279999999999997}}
{"sample_id": 6032, "db_id": "game_1", "gold_sql": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid", "pred_sql": "SELECT gameid, SUM(hours_played) AS total_hours_played FROM plays_games GROUP BY gameid;", "token_usage": {"tokens": 675, "cost": 0.00015074999999999998}}
{"sample_id": 6022, "db_id": "game_1", "gold_sql": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"", "pred_sql": "SELECT s.fname, s.lname, si.hoursperweek, si.gamesplayed \nFROM student s \nJOIN sportsinfo si ON s.stuid = si.stuid \nWHERE s.fname = 'David' AND s.lname = 'Shieber';", "token_usage": {"tokens": 770, "cost": 0.00020549999999999998}}
{"sample_id": 5975, "db_id": "game_1", "gold_sql": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"", "pred_sql": "SELECT COUNT(*) AS game_count FROM video_games WHERE gtype = 'Massively multiplayer online';", "token_usage": {"tokens": 698, "cost": 0.00016319999999999998}}
{"sample_id": 229, "db_id": "book_2", "gold_sql": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)", "pred_sql": "SELECT title FROM book WHERE book_id NOT IN (SELECT book_id FROM publication);"}
{"sample_id": 223, "db_id": "book_2", "gold_sql": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000", "pred_sql": "SELECT DISTINCT b.writer FROM book b JOIN publication p ON b.book_id = p.book_id WHERE p.price > '4000000';"}
{"sample_id": 216, "db_id": "book_2", "gold_sql": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\"", "pred_sql": "SELECT b.title FROM book b WHERE b.writer != (SELECT writer FROM book WHERE writer = 'Elaine Lee');"}
{"sample_id": 218, "db_id": "book_2", "gold_sql": "SELECT Publication_Date FROM publication ORDER BY Price DESC", "pred_sql": "SELECT publication_date FROM publication ORDER BY price DESC;"}
{"sample_id": 224, "db_id": "book_2", "gold_sql": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC", "pred_sql": "SELECT b.title FROM book b JOIN publication p ON b.book_id = p.book_id ORDER BY p.price DESC;"}
{"sample_id": 7024, "db_id": "concert_singer", "gold_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "pred_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = '2014');", "token_usage": {"tokens": 708, "cost": 0.00015255}}
{"sample_id": 7037, "db_id": "concert_singer", "gold_sql": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "pred_sql": "SELECT COUNT(concert.concert_id) AS number_of_concerts\nFROM concert\nJOIN stadium ON concert.stadium_id = stadium.stadium_id\nWHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium);", "token_usage": {"tokens": 797, "cost": 0.0002073}}
{"sample_id": 6999, "db_id": "concert_singer", "gold_sql": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "pred_sql": "SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);", "token_usage": {"tokens": 667, "cost": 0.00012974999999999998}}
{"sample_id": 7036, "db_id": "concert_singer", "gold_sql": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "pred_sql": "SELECT COUNT(*) AS number_of_concerts\nFROM concert\nWHERE stadium_id = (\n    SELECT stadium_id\n    FROM stadium\n    ORDER BY capacity DESC\n    LIMIT 1\n)", "token_usage": {"tokens": 724, "cost": 0.00016439999999999998}}
{"sample_id": 7025, "db_id": "concert_singer", "gold_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "pred_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = '2014');", "token_usage": {"tokens": 719, "cost": 0.00015915}}
{"sample_id": 7026, "db_id": "concert_singer", "gold_sql": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "pred_sql": "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS number_of_singers\nFROM concert\nLEFT JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id\nGROUP BY concert.concert_id;", "token_usage": {"tokens": 759, "cost": 0.00018405}}
{"sample_id": 7021, "db_id": "concert_singer", "gold_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "pred_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT DISTINCT stadium_id FROM concert);", "token_usage": {"tokens": 710, "cost": 0.00015869999999999998}}
{"sample_id": 7015, "db_id": "concert_singer", "gold_sql": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "pred_sql": "SELECT stadium.name, COUNT(concert.concert_id) AS number_of_concerts\nFROM stadium\nLEFT JOIN concert ON stadium.stadium_id = concert.stadium_id\nGROUP BY stadium.name;", "token_usage": {"tokens": 758, "cost": 0.00018524999999999998}}
{"sample_id": 6995, "db_id": "concert_singer", "gold_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "pred_sql": "SELECT name, country, age FROM singer ORDER BY age DESC;", "token_usage": {"tokens": 703, "cost": 0.00014954999999999998}}
{"sample_id": 37, "db_id": "farm", "gold_sql": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1", "pred_sql": "SELECT c.official_name FROM city c JOIN farm_competition fc ON c.city_id = fc.host_city_id GROUP BY c.city_id HAVING COUNT(fc.competition_id) > 1;"}
{"sample_id": 27, "db_id": "farm", "gold_sql": "SELECT max(Cows) ,  min(Cows) FROM farm", "pred_sql": "SELECT MAX(cows) AS max_cows, MIN(cows) AS min_cows FROM farm;"}
{"sample_id": 48, "db_id": "farm", "gold_sql": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)", "pred_sql": "SELECT official_name FROM city WHERE city_id NOT IN (SELECT host_city_id FROM farm_competition)"}
{"sample_id": 36, "db_id": "farm", "gold_sql": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1", "pred_sql": "SELECT c.official_name FROM city c JOIN farm_competition fc ON c.city_id = fc.host_city_id GROUP BY c.city_id HAVING COUNT(fc.competition_id) > 1;"}
{"sample_id": 55, "db_id": "farm", "gold_sql": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"", "pred_sql": "SELECT census_ranking FROM city WHERE status != 'Village';"}
{"sample_id": 45, "db_id": "farm", "gold_sql": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC", "pred_sql": "SELECT status, COUNT(*) as frequency FROM city GROUP BY status ORDER BY frequency ASC;"}
{"sample_id": 39, "db_id": "farm", "gold_sql": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT c.status FROM city c JOIN farm_competition fc ON c.city_id = fc.host_city_id GROUP BY c.city_id ORDER BY COUNT(fc.competition_id) DESC LIMIT 1;"}
{"sample_id": 17, "db_id": "farm", "gold_sql": "SELECT count(*) FROM farm", "pred_sql": "SELECT COUNT(*) AS number_of_farms FROM farm;"}
{"sample_id": 3932, "db_id": "hospital_1", "gold_sql": "SELECT count(DISTINCT roomtype) FROM room", "pred_sql": "SELECT COUNT(DISTINCT roomtype) AS distinct_room_types FROM room;", "token_usage": {"tokens": 1609, "cost": 0.00028139999999999996}}
{"sample_id": 3943, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111", "pred_sql": "SELECT DISTINCT patient.name \nFROM patient \nJOIN undergoes ON patient.ssn = undergoes.patient \nJOIN stay ON patient.ssn = stay.patient \nWHERE stay.room = 111;", "token_usage": {"tokens": 1722, "cost": 0.0003447}}
{"sample_id": 3917, "db_id": "hospital_1", "gold_sql": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1", "pred_sql": "SELECT patient.ssn, patient.name, stay.staystart, stay.stayend \nFROM stay \nJOIN patient ON stay.patient = patient.ssn \nWHERE stay.room = 111 \nORDER BY stay.staystart DESC \nLIMIT 1;", "token_usage": {"tokens": 1697, "cost": 0.00033285}}
{"sample_id": 3966, "db_id": "hospital_1", "gold_sql": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "pred_sql": "SELECT DISTINCT p.name \nFROM physician p \nJOIN trained_in t ON p.employeeid = t.physician \nJOIN procedures pr ON t.treatment = pr.code \nWHERE pr.cost > 5000;", "token_usage": {"tokens": 1686, "cost": 0.0003249}}
{"sample_id": 3948, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID", "pred_sql": "SELECT DISTINCT n.name \nFROM nurse n \nJOIN appointment a ON n.employeeid = a.prepnurse \nJOIN undergoes u ON a.patient = u.patient \nWHERE u.physician IS NOT NULL;", "token_usage": {"tokens": 1659, "cost": 0.00031094999999999994}}
{"sample_id": 3971, "db_id": "hospital_1", "gold_sql": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "pred_sql": "SELECT procedures.name \nFROM procedures \nJOIN trained_in ON procedures.code = trained_in.treatment \nJOIN physician ON trained_in.physician = physician.employeeid \nWHERE physician.name = 'John Wen';", "token_usage": {"tokens": 1712, "cost": 0.00034139999999999995}}
{"sample_id": 3937, "db_id": "hospital_1", "gold_sql": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "pred_sql": "SELECT m.brand, COUNT(p.medication) AS medication_count\nFROM medication m\nJOIN prescribes p ON m.code = p.medication\nGROUP BY m.brand;", "token_usage": {"tokens": 1670, "cost": 0.00031754999999999994}}
{"sample_id": 3906, "db_id": "hospital_1", "gold_sql": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "pred_sql": "SELECT name FROM physician WHERE employeeid NOT IN (SELECT physician FROM appointment)", "token_usage": {"tokens": 1673, "cost": 0.00031844999999999996}}
{"sample_id": 3918, "db_id": "hospital_1", "gold_sql": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1", "pred_sql": "SELECT patient FROM stay WHERE room = 111 ORDER BY stayend DESC LIMIT 1;", "token_usage": {"tokens": 1639, "cost": 0.00029624999999999996}}
{"sample_id": 3974, "db_id": "hospital_1", "gold_sql": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "pred_sql": "SELECT procedures.name, procedures.cost \nFROM procedures \nWHERE procedures.cost > 1000 \n   OR procedures.code IN (\n       SELECT trained_in.treatment \n       FROM physician \n       JOIN trained_in ON physician.employeeid = trained_in.physician \n       WHERE physician.name = 'John Wen'\n   );", "token_usage": {"tokens": 1752, "cost": 0.00036224999999999994}}
{"sample_id": 3955, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1", "pred_sql": "SELECT DISTINCT d.name\nFROM department d\nJOIN affiliated_with a ON d.departmentid = a.department\nWHERE a.primaryaffiliation = 'yes';", "token_usage": {"tokens": 1654, "cost": 0.00030659999999999997}}
{"sample_id": 3980, "db_id": "hospital_1", "gold_sql": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'", "pred_sql": "SELECT p.name FROM physician p\nJOIN affiliated_with a1 ON p.employeeid = a1.physician\nJOIN department d1 ON a1.department = d1.departmentid\nJOIN affiliated_with a2 ON p.employeeid = a2.physician\nJOIN department d2 ON a2.department = d2.departmentid\nWHERE d1.name = 'Surgery' AND d2.name = 'Psychiatry';", "token_usage": {"tokens": 1741, "cost": 0.00035744999999999993}}
{"sample_id": 3950, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT name FROM medication ORDER BY name", "pred_sql": "SELECT DISTINCT name FROM medication ORDER BY name ASC;", "token_usage": {"tokens": 1621, "cost": 0.00028724999999999996}}
{"sample_id": 3915, "db_id": "hospital_1", "gold_sql": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111", "pred_sql": "SELECT medication.name \nFROM medication \nJOIN prescribes ON medication.code = prescribes.medication \nJOIN stay ON prescribes.patient = stay.patient \nWHERE stay.room = 111;", "token_usage": {"tokens": 1676, "cost": 0.00031844999999999996}}
{"sample_id": 3933, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"", "pred_sql": "SELECT physician.name FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician JOIN medication ON prescribes.medication = medication.code WHERE medication.name = 'Thesisin';", "token_usage": {"tokens": 1669, "cost": 0.0003156}}
{"sample_id": 3919, "db_id": "hospital_1", "gold_sql": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT nurse.name\nFROM nurse\nJOIN appointment ON nurse.employeeid = appointment.prepnurse\nGROUP BY nurse.employeeid\nORDER BY COUNT(appointment.appointmentid) DESC\nLIMIT 1;", "token_usage": {"tokens": 1676, "cost": 0.00032024999999999995}}
{"sample_id": 3914, "db_id": "hospital_1", "gold_sql": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"", "pred_sql": "SELECT COUNT(*) AS prescription_count \nFROM prescribes \nJOIN physician ON prescribes.physician = physician.employeeid \nWHERE physician.name = 'John Dorian';", "token_usage": {"tokens": 1672, "cost": 0.00031739999999999996}}
{"sample_id": 3944, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111", "pred_sql": "SELECT DISTINCT patient.name\nFROM patient\nJOIN stay ON patient.ssn = stay.patient\nJOIN undergoes ON stay.stayid = undergoes.stay\nWHERE stay.room = 111;", "token_usage": {"tokens": 1686, "cost": 0.0003231}}
{"sample_id": 3902, "db_id": "hospital_1", "gold_sql": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1", "pred_sql": "SELECT appointmentid FROM appointment ORDER BY start DESC LIMIT 1;", "token_usage": {"tokens": 1630, "cost": 0.00029265}}
{"sample_id": 3907, "db_id": "hospital_1", "gold_sql": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "pred_sql": "SELECT physician.name AS physician_name, department.name AS department_name\nFROM physician\nJOIN affiliated_with ON physician.employeeid = affiliated_with.physician\nJOIN department ON affiliated_with.department = department.departmentid\nWHERE affiliated_with.primaryaffiliation = 'yes';", "token_usage": {"tokens": 1749, "cost": 0.00036314999999999996}}
{"sample_id": 2282, "db_id": "entrepreneur", "gold_sql": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT investor, COUNT(entrepreneur_id) AS number_of_investments \nFROM entrepreneur \nGROUP BY investor \nORDER BY number_of_investments DESC \nLIMIT 1;", "token_usage": {"tokens": 560, "cost": 0.0001587}}
{"sample_id": 2281, "db_id": "entrepreneur", "gold_sql": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor", "pred_sql": "SELECT investor, COUNT(entrepreneur_id) AS entrepreneur_count FROM entrepreneur GROUP BY investor;", "token_usage": {"tokens": 492, "cost": 0.00012059999999999998}}
{"sample_id": 2271, "db_id": "entrepreneur", "gold_sql": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1", "pred_sql": "SELECT weight FROM people WHERE height = (SELECT MIN(height) FROM people);", "token_usage": {"tokens": 507, "cost": 0.00012959999999999998}}
{"sample_id": 2293, "db_id": "entrepreneur", "gold_sql": "SELECT count(DISTINCT Company) FROM entrepreneur", "pred_sql": "SELECT COUNT(DISTINCT company) AS different_companies FROM entrepreneur;", "token_usage": {"tokens": 493, "cost": 0.00012164999999999998}}
{"sample_id": 2263, "db_id": "entrepreneur", "gold_sql": "SELECT avg(Money_Requested) FROM entrepreneur", "pred_sql": "SELECT AVG(money_requested) AS average_money_requested FROM entrepreneur;", "token_usage": {"tokens": 485, "cost": 0.00011595}}
{"sample_id": 2279, "db_id": "entrepreneur", "gold_sql": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC", "pred_sql": "SELECT p.weight FROM entrepreneur e JOIN people p ON e.people_id = p.people_id ORDER BY e.money_requested DESC;", "token_usage": {"tokens": 547, "cost": 0.00015089999999999998}}
{"sample_id": 2265, "db_id": "entrepreneur", "gold_sql": "SELECT Name FROM People ORDER BY Weight ASC", "pred_sql": "SELECT name FROM people ORDER BY weight ASC;", "token_usage": {"tokens": 457, "cost": 9.825e-05}}
{"sample_id": 2270, "db_id": "entrepreneur", "gold_sql": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1", "pred_sql": "SELECT weight FROM people WHERE height = (SELECT MIN(height) FROM people);", "token_usage": {"tokens": 498, "cost": 0.00012375}}
{"sample_id": 1009, "db_id": "university_basketball", "gold_sql": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"", "pred_sql": "SELECT COUNT(*) FROM university WHERE location LIKE '%NY%';"}
{"sample_id": 979, "db_id": "university_basketball", "gold_sql": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "pred_sql": "SELECT school, location FROM university WHERE affiliation = 'public';"}
{"sample_id": 989, "db_id": "university_basketball", "gold_sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1", "pred_sql": "SELECT u.primary_conference FROM basketball_match bm JOIN university u ON bm.school_id = u.school_id ORDER BY bm.acc_percent ASC LIMIT 1;"}
{"sample_id": 1012, "db_id": "university_basketball", "gold_sql": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)", "pred_sql": "SELECT bm.team_name \nFROM basketball_match bm \nJOIN university u ON bm.school_id = u.school_id \nWHERE u.enrollment < (SELECT AVG(enrollment) FROM university);"}
{"sample_id": 987, "db_id": "university_basketball", "gold_sql": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1", "pred_sql": "SELECT MAX(acc_percent) AS highest_acc_percent FROM basketball_match;"}
{"sample_id": 1013, "db_id": "university_basketball", "gold_sql": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation", "pred_sql": "SELECT affiliation, COUNT(*) AS university_count \nFROM university \nWHERE enrollment > 20000 \nGROUP BY affiliation;"}
{"sample_id": 1014, "db_id": "university_basketball", "gold_sql": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation", "pred_sql": "SELECT affiliation, COUNT(*) AS school_count \nFROM university \nWHERE enrollment > 20000 \nGROUP BY affiliation;"}
{"sample_id": 990, "db_id": "university_basketball", "gold_sql": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1", "pred_sql": "SELECT u.primary_conference FROM university u JOIN basketball_match b ON u.school_id = b.school_id ORDER BY b.acc_percent ASC LIMIT 1;"}
{"sample_id": 1002, "db_id": "university_basketball", "gold_sql": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation", "pred_sql": "SELECT affiliation, SUM(enrollment) AS total_enrollment FROM university GROUP BY affiliation;"}
{"sample_id": 977, "db_id": "university_basketball", "gold_sql": "SELECT school ,  nickname FROM university ORDER BY founded", "pred_sql": "SELECT university.school, university.nickname FROM university ORDER BY university.founded;"}
{"sample_id": 5062, "db_id": "device", "gold_sql": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "pred_sql": "SELECT DISTINCT shop.shop_name, device.carrier FROM shop JOIN stock ON shop.shop_id = stock.shop_id JOIN device ON stock.device_id = device.device_id;", "token_usage": {"tokens": 657, "cost": 0.00018179999999999997}}
{"sample_id": 5064, "db_id": "device", "gold_sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1", "pred_sql": "SELECT shop.shop_name\nFROM shop\nJOIN stock ON shop.shop_id = stock.shop_id\nJOIN device ON stock.device_id = device.device_id\nGROUP BY shop.shop_id\nHAVING COUNT(DISTINCT stock.device_id) > 1;", "token_usage": {"tokens": 637, "cost": 0.00017114999999999999}}
{"sample_id": 5050, "db_id": "device", "gold_sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC", "pred_sql": "SELECT shop_name FROM shop ORDER BY open_year ASC;", "token_usage": {"tokens": 572, "cost": 0.0001344}}
{"sample_id": 5053, "db_id": "device", "gold_sql": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC", "pred_sql": "SELECT shop_name, location FROM shop ORDER BY shop_name ASC;", "token_usage": {"tokens": 599, "cost": 0.00014925}}
{"sample_id": 5068, "db_id": "device", "gold_sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1", "pred_sql": "SELECT shop.shop_name FROM shop JOIN stock ON shop.shop_id = stock.shop_id GROUP BY shop.shop_id ORDER BY SUM(stock.quantity) DESC LIMIT 1;", "token_usage": {"tokens": 619, "cost": 0.0001608}}
{"sample_id": 5078, "db_id": "device", "gold_sql": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008", "pred_sql": "SELECT DISTINCT location FROM shop WHERE open_year > 2012 AND location IN (SELECT location FROM shop WHERE open_year < 2008);", "token_usage": {"tokens": 619, "cost": 0.00015854999999999998}}
{"sample_id": 5044, "db_id": "device", "gold_sql": "SELECT count(*) FROM device", "pred_sql": "SELECT COUNT(*) AS device_count FROM device;", "token_usage": {"tokens": 538, "cost": 0.00011715}}
{"sample_id": 5080, "db_id": "device", "gold_sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)", "pred_sql": "SELECT DISTINCT device.carrier FROM device LEFT JOIN stock ON device.device_id = stock.device_id WHERE stock.device_id IS NULL;", "token_usage": {"tokens": 612, "cost": 0.0001584}}
{"sample_id": 2253, "db_id": "machine_repair", "gold_sql": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)", "pred_sql": "SELECT name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment);", "token_usage": {"tokens": 675, "cost": 0.00015299999999999998}}
{"sample_id": 2235, "db_id": "machine_repair", "gold_sql": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37", "pred_sql": "SELECT name FROM technician WHERE age IN ('36', '37');", "token_usage": {"tokens": 660, "cost": 0.00014445000000000001}}
{"sample_id": 2237, "db_id": "machine_repair", "gold_sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1", "pred_sql": "SELECT MIN(starting_year) AS oldest_starting_year FROM technician;", "token_usage": {"tokens": 664, "cost": 0.0001491}}
{"sample_id": 2232, "db_id": "machine_repair", "gold_sql": "SELECT Name FROM technician WHERE Team != \"NYY\"", "pred_sql": "SELECT name FROM technician WHERE team != 'NYY';", "token_usage": {"tokens": 653, "cost": 0.00014115}}
{"sample_id": 2236, "db_id": "machine_repair", "gold_sql": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1", "pred_sql": "SELECT MIN(starting_year) AS oldest_starting_year FROM technician;", "token_usage": {"tokens": 664, "cost": 0.0001491}}
{"sample_id": 2255, "db_id": "machine_repair", "gold_sql": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"", "pred_sql": "SELECT DISTINCT starting_year FROM technician WHERE team IN ('CLE', 'CWS');", "token_usage": {"tokens": 674, "cost": 0.00015015}}
{"sample_id": 664, "db_id": "journal_committee", "gold_sql": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)", "pred_sql": "SELECT name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee);"}
{"sample_id": 653, "db_id": "journal_committee", "gold_sql": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25", "pred_sql": "SELECT name FROM editor WHERE age IN (24, 25);"}
{"sample_id": 654, "db_id": "journal_committee", "gold_sql": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1", "pred_sql": "SELECT name FROM editor ORDER BY age ASC LIMIT 1;"}
{"sample_id": 649, "db_id": "journal_committee", "gold_sql": "SELECT count(*) FROM editor", "pred_sql": "SELECT COUNT(*) AS editor_count FROM editor;"}
{"sample_id": 665, "db_id": "journal_committee", "gold_sql": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID", "pred_sql": "SELECT date, theme, sales FROM journal WHERE journal_id NOT IN (SELECT journal_id FROM journal_committee WHERE editor_id IN (SELECT editor_id FROM editor WHERE name IN ('editor1', 'editor2', 'editor3')));"}
{"sample_id": 320, "db_id": "product_catalog", "gold_sql": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1", "pred_sql": "SELECT cs.catalog_level_name FROM catalog_contents cc JOIN catalog_structure cs ON cc.catalog_level_number = cs.catalog_level_number WHERE cc.price_in_dollars = (SELECT MIN(price_in_dollars) FROM catalog_contents)"}
{"sample_id": 321, "db_id": "product_catalog", "gold_sql": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents", "pred_sql": "SELECT AVG(price_in_euros) AS average_price, MIN(price_in_euros) AS minimum_price FROM catalog_contents;"}
{"sample_id": 314, "db_id": "product_catalog", "gold_sql": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "pred_sql": "SELECT catalogs.catalog_name, catalogs.date_of_publication \nFROM catalogs \nJOIN catalog_structure ON catalogs.catalog_id = catalog_structure.catalog_id \nWHERE catalog_structure.catalog_level_number > '5';"}
{"sample_id": 339, "db_id": "product_catalog", "gold_sql": "SELECT count(*) FROM catalog_contents", "pred_sql": "SELECT COUNT(*) AS total_products FROM catalog_contents;"}
{"sample_id": 304, "db_id": "product_catalog", "gold_sql": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3", "pred_sql": "SELECT attribute_data_type FROM attribute_definitions GROUP BY attribute_data_type HAVING COUNT(attribute_id) > 3;"}
{"sample_id": 333, "db_id": "product_catalog", "gold_sql": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "pred_sql": "SELECT ad.attribute_name, ad.attribute_id \nFROM attribute_definitions ad \nJOIN catalog_contents_additional_attributes cca ON ad.attribute_id = cca.attribute_id \nWHERE cca.attribute_value = 0;"}
{"sample_id": 336, "db_id": "product_catalog", "gold_sql": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "pred_sql": "SELECT catalog_entry_name, capacity FROM catalog_contents WHERE price_in_dollars > '700';"}
{"sample_id": 341, "db_id": "product_catalog", "gold_sql": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8", "pred_sql": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > '8';"}
{"sample_id": 316, "db_id": "product_catalog", "gold_sql": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)", "pred_sql": "SELECT cc.catalog_entry_name\nFROM catalog_contents cc\nJOIN catalog_contents_additional_attributes cca ON cc.catalog_entry_id = cca.catalog_entry_id\nWHERE cca.attribute_id IN (\n    SELECT attribute_id\n    FROM catalog_contents_additional_attributes\n    GROUP BY attribute_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)"}
{"sample_id": 5471, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "pred_sql": "SELECT DISTINCT s.advisor FROM student s JOIN voting_record v ON s.stuid = v.stuid WHERE v.treasurer_vote IS NOT NULL AND v.election_cycle = 'spring';", "token_usage": {"tokens": 744, "cost": 0.00018269999999999997}}
{"sample_id": 5464, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "pred_sql": "SELECT DISTINCT president_vote, vice_president_vote FROM voting_record;", "token_usage": {"tokens": 667, "cost": 0.00013874999999999998}}
{"sample_id": 5503, "db_id": "voter_2", "gold_sql": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT major, COUNT(*) as count FROM student WHERE sex = 'F' GROUP BY major ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 764, "cost": 0.00019559999999999998}}
{"sample_id": 5454, "db_id": "voter_2", "gold_sql": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "pred_sql": "SELECT MIN(age) AS youngest_age, MAX(age) AS oldest_age FROM student WHERE major = '600';", "token_usage": {"tokens": 732, "cost": 0.00017639999999999998}}
{"sample_id": 5463, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "pred_sql": "SELECT DISTINCT president_vote, vice_president_vote FROM voting_record;", "token_usage": {"tokens": 666, "cost": 0.00013859999999999998}}
{"sample_id": 5440, "db_id": "voter_2", "gold_sql": "SELECT count(*) FROM VOTING_RECORD", "pred_sql": "SELECT COUNT(*) FROM voting_record;", "token_usage": {"tokens": 664, "cost": 0.00013874999999999998}}
{"sample_id": 5459, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "pred_sql": "SELECT DISTINCT president_vote FROM voting_record WHERE registration_date = '2015-08-30';", "token_usage": {"tokens": 696, "cost": 0.00015479999999999997}}
{"sample_id": 5483, "db_id": "voter_2", "gold_sql": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "pred_sql": "SELECT AVG(age) AS average_age FROM student JOIN voting_record ON student.stuid = voting_record.stuid WHERE student.city_code = 'NYC' AND voting_record.election_cycle = 'spring' AND voting_record.secretary_vote IS NOT NULL;", "token_usage": {"tokens": 785, "cost": 0.0002028}}
{"sample_id": 5441, "db_id": "voter_2", "gold_sql": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD", "pred_sql": "SELECT COUNT(DISTINCT president_vote) AS distinct_president_votes FROM voting_record;", "token_usage": {"tokens": 672, "cost": 0.00014355}}
{"sample_id": 5457, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "pred_sql": "SELECT DISTINCT secretary_vote FROM voting_record WHERE election_cycle = 'fall';", "token_usage": {"tokens": 683, "cost": 0.00014835}}
{"sample_id": 5461, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "pred_sql": "SELECT DISTINCT registration_date, election_cycle FROM voting_record;", "token_usage": {"tokens": 674, "cost": 0.00014384999999999997}}
{"sample_id": 5482, "db_id": "voter_2", "gold_sql": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "pred_sql": "SELECT COUNT(*) FROM student s JOIN voting_record v ON s.stuid = v.stuid WHERE s.city_code = 'NYC' AND v.election_cycle = 'spring' AND v.class_senator_vote IS NOT NULL;", "token_usage": {"tokens": 731, "cost": 0.0001704}}
{"sample_id": 5488, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"", "pred_sql": "SELECT DISTINCT fname FROM student JOIN voting_record ON student.stuid = voting_record.stuid WHERE vice_president_vote IS NOT NULL AND city_code != 'PIT';", "token_usage": {"tokens": 778, "cost": 0.00019905}}
{"sample_id": 5451, "db_id": "voter_2", "gold_sql": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"", "pred_sql": "SELECT AVG(age) AS average_age FROM student WHERE sex = 'F';", "token_usage": {"tokens": 718, "cost": 0.00016845}}
{"sample_id": 5474, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "pred_sql": "SELECT DISTINCT s.major FROM student s JOIN voting_record v ON s.stuid = v.treasurer_vote WHERE v.treasurer_vote IS NOT NULL;", "token_usage": {"tokens": 725, "cost": 0.00017264999999999997}}
{"sample_id": 4136, "db_id": "film_rank", "gold_sql": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT studio FROM film GROUP BY studio ORDER BY COUNT(film_id) DESC LIMIT 1;", "token_usage": {"tokens": 637, "cost": 0.00015989999999999998}}
{"sample_id": 4105, "db_id": "film_rank", "gold_sql": "SELECT count(*) FROM film", "pred_sql": "SELECT COUNT(*) AS total_films FROM film;", "token_usage": {"tokens": 576, "cost": 0.00012644999999999998}}
{"sample_id": 4138, "db_id": "film_rank", "gold_sql": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2", "pred_sql": "SELECT studio FROM film GROUP BY studio HAVING COUNT(film_id) >= 2;", "token_usage": {"tokens": 631, "cost": 0.00015585}}
{"sample_id": 4131, "db_id": "film_rank", "gold_sql": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC", "pred_sql": "SELECT DISTINCT fme.year FROM film_market_estimation fme JOIN market m ON fme.market_id = m.market_id WHERE m.country = 'Japan' ORDER BY fme.year DESC;", "token_usage": {"tokens": 631, "cost": 0.00015225}}
{"sample_id": 4113, "db_id": "film_rank", "gold_sql": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995", "pred_sql": "SELECT DISTINCT type FROM film_market_estimation WHERE year = '1995';", "token_usage": {"tokens": 574, "cost": 0.00012119999999999999}}
{"sample_id": 4140, "db_id": "film_rank", "gold_sql": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)", "pred_sql": "SELECT title FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation)", "token_usage": {"tokens": 632, "cost": 0.000156}}
{"sample_id": 4114, "db_id": "film_rank", "gold_sql": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995", "pred_sql": "SELECT DISTINCT type FROM film_market_estimation WHERE year = '1995';", "token_usage": {"tokens": 585, "cost": 0.00012869999999999998}}
{"sample_id": 4117, "db_id": "film_rank", "gold_sql": "SELECT count(*) FROM market WHERE Number_cities  <  300", "pred_sql": "SELECT COUNT(*) AS market_count FROM market WHERE number_cities < 300;", "token_usage": {"tokens": 610, "cost": 0.00014415}}
{"sample_id": 4148, "db_id": "film_rank", "gold_sql": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000", "pred_sql": "SELECT studio FROM film GROUP BY studio HAVING AVG(gross_in_dollar) > 4500000;", "token_usage": {"tokens": 636, "cost": 0.00015929999999999997}}
{"sample_id": 4107, "db_id": "film_rank", "gold_sql": "SELECT DISTINCT Director FROM film", "pred_sql": "SELECT DISTINCT director FROM film;", "token_usage": {"tokens": 577, "cost": 0.00012614999999999998}}
{"sample_id": 4133, "db_id": "film_rank", "gold_sql": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio", "pred_sql": "SELECT studio, COUNT(film_id) AS number_of_films FROM film GROUP BY studio;", "token_usage": {"tokens": 614, "cost": 0.00014475}}
{"sample_id": 3995, "db_id": "ship_mission", "gold_sql": "SELECT TYPE ,  Nationality FROM ship", "pred_sql": "SELECT type, nationality FROM ship;", "token_usage": {"tokens": 483, "cost": 0.00010169999999999999}}
{"sample_id": 4019, "db_id": "ship_mission", "gold_sql": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "pred_sql": "SELECT DISTINCT s.type FROM ship s WHERE s.tonnage > 6000 OR s.tonnage < 4000 GROUP BY s.type HAVING COUNT(CASE WHEN s.tonnage > 6000 THEN 1 END) > 0 AND COUNT(CASE WHEN s.tonnage < 4000 THEN 1 END) > 0;", "token_usage": {"tokens": 684, "cost": 0.00021375}}
{"sample_id": 4007, "db_id": "ship_mission", "gold_sql": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "pred_sql": "SELECT nationality FROM ship GROUP BY nationality HAVING COUNT(ship_id) > 2;", "token_usage": {"tokens": 577, "cost": 0.00015764999999999998}}
{"sample_id": 4016, "db_id": "ship_mission", "gold_sql": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "pred_sql": "SELECT DISTINCT m.fate FROM mission m JOIN ship s ON m.ship_id = s.ship_id WHERE s.nationality = 'United States';", "token_usage": {"tokens": 558, "cost": 0.0001431}}
{"sample_id": 4008, "db_id": "ship_mission", "gold_sql": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "pred_sql": "SELECT nationality FROM ship GROUP BY nationality HAVING COUNT(ship_id) > 2;", "token_usage": {"tokens": 540, "cost": 0.00013499999999999997}}
{"sample_id": 4004, "db_id": "ship_mission", "gold_sql": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "pred_sql": "SELECT type, COUNT(*) AS ship_count FROM ship GROUP BY type;", "token_usage": {"tokens": 507, "cost": 0.00011564999999999999}}
{"sample_id": 6295, "db_id": "city_record", "gold_sql": "SELECT venue FROM MATCH ORDER BY date DESC", "pred_sql": "SELECT venue FROM match ORDER BY date DESC;", "token_usage": {"tokens": 772, "cost": 0.00016754999999999998}}
{"sample_id": 6292, "db_id": "city_record", "gold_sql": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000", "pred_sql": "SELECT city FROM city WHERE regional_population > 8000000 OR regional_population < 5000000;", "token_usage": {"tokens": 766, "cost": 0.00016439999999999998}}
{"sample_id": 6288, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "pred_sql": "SELECT DISTINCT c.city \nFROM city c \nJOIN temperature t ON c.city_id = t.city_id \nJOIN hosting_city h ON c.city_id = h.host_city \nWHERE (t.feb > t.jun) OR (h.host_city IS NOT NULL)", "token_usage": {"tokens": 840, "cost": 0.00020835}}
{"sample_id": 6274, "db_id": "city_record", "gold_sql": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"", "pred_sql": "SELECT year FROM hosting_city WHERE host_city = (SELECT city_id FROM city WHERE city = 'Taizhou ( Zhejiang )');", "token_usage": {"tokens": 787, "cost": 0.0001761}}
{"sample_id": 6291, "db_id": "city_record", "gold_sql": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000", "pred_sql": "SELECT city FROM city WHERE regional_population > 8000000 OR regional_population < 5000000;", "token_usage": {"tokens": 767, "cost": 0.0001623}}
{"sample_id": 6276, "db_id": "city_record", "gold_sql": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3", "pred_sql": "SELECT city, regional_population FROM city ORDER BY regional_population DESC LIMIT 3;", "token_usage": {"tokens": 766, "cost": 0.00016664999999999998}}
{"sample_id": 6281, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct", "pred_sql": "SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.mar < temperature.jul OR temperature.mar > temperature.oct;", "token_usage": {"tokens": 766, "cost": 0.00016169999999999997}}
{"sample_id": 6285, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "pred_sql": "SELECT c.city_id, c.city, c.hanzi, c.hanyu_pinyin, c.regional_population, c.gdp \nFROM city c \nJOIN temperature t ON c.city_id = t.city_id \nWHERE t.mar < t.dec \nAND c.city_id NOT IN (SELECT host_city FROM hosting_city)", "token_usage": {"tokens": 868, "cost": 0.00022244999999999996}}
{"sample_id": 6362, "db_id": "flight_company", "gold_sql": "SELECT max(group_equity_shareholding) FROM operate_company", "pred_sql": "SELECT MAX(group_equity_shareholding) AS max_equity_shareholding FROM operate_company;", "token_usage": {"tokens": 653, "cost": 0.0001416}}
{"sample_id": 6366, "db_id": "flight_company", "gold_sql": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200", "pred_sql": "SELECT DISTINCT o.type FROM operate_company o JOIN flight f ON o.id = f.company_id WHERE f.velocity < 200;", "token_usage": {"tokens": 724, "cost": 0.00018014999999999996}}
{"sample_id": 6367, "db_id": "flight_company", "gold_sql": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1", "pred_sql": "SELECT operate_company.id, operate_company.name FROM operate_company JOIN flight ON operate_company.id = flight.company_id GROUP BY operate_company.id HAVING COUNT(flight.id) > 1;", "token_usage": {"tokens": 721, "cost": 0.00018015}}
{"sample_id": 6373, "db_id": "flight_company", "gold_sql": "SELECT name FROM airport WHERE name LIKE '%international%'", "pred_sql": "SELECT name FROM airport WHERE name LIKE '%international%';", "token_usage": {"tokens": 686, "cost": 0.00016094999999999998}}
{"sample_id": 6377, "db_id": "flight_company", "gold_sql": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT pilot, COUNT(*) AS flight_count FROM flight GROUP BY pilot ORDER BY flight_count DESC LIMIT 1;", "token_usage": {"tokens": 712, "cost": 0.00017654999999999998}}
{"sample_id": 1692, "db_id": "epinions_1", "gold_sql": "SELECT count(*) FROM useracct", "pred_sql": "SELECT COUNT(*) AS user_count FROM useracct;"}
{"sample_id": 1710, "db_id": "epinions_1", "gold_sql": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id", "pred_sql": "SELECT useracct.name, COUNT(review.a_id) AS review_count\nFROM useracct\nLEFT JOIN review ON useracct.u_id = review.u_id\nGROUP BY useracct.u_id;"}
{"sample_id": 1693, "db_id": "epinions_1", "gold_sql": "SELECT avg(rating) ,  max(rating) FROM review", "pred_sql": "SELECT AVG(rating) AS average_rating, MAX(rating) AS maximum_rating FROM review;"}
{"sample_id": 1703, "db_id": "epinions_1", "gold_sql": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5", "pred_sql": "SELECT item.title FROM item JOIN review ON item.i_id = review.i_id GROUP BY item.i_id HAVING AVG(review.rating) > 5 AND MAX(review.rank) > 3;"}
{"sample_id": 1718, "db_id": "epinions_1", "gold_sql": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)", "pred_sql": "SELECT COUNT(*) AS num_items_without_reviews FROM item WHERE i_id NOT IN (SELECT DISTINCT i_id FROM review);"}
{"sample_id": 1716, "db_id": "epinions_1", "gold_sql": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)", "pred_sql": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"}
{"sample_id": 61, "db_id": "student_assessment", "gold_sql": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "pred_sql": "SELECT p.first_name, p.last_name FROM people p JOIN candidates c ON p.person_id = c.candidate_id;"}
{"sample_id": 57, "db_id": "student_assessment", "gold_sql": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT courses.course_name\nFROM courses\nJOIN student_course_registrations ON courses.course_id = student_course_registrations.course_id\nGROUP BY courses.course_id\nORDER BY COUNT(student_course_registrations.student_id) DESC\nLIMIT 1;"}
{"sample_id": 59, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT student_id FROM student_course_registrations GROUP BY student_id HAVING COUNT(course_id) = (SELECT MIN(course_count) FROM (SELECT COUNT(course_id) AS course_count FROM student_course_registrations GROUP BY student_id));"}
{"sample_id": 95, "db_id": "student_assessment", "gold_sql": "SELECT course_name FROM courses ORDER BY course_name", "pred_sql": "SELECT course_name FROM courses ORDER BY course_name ASC;"}
{"sample_id": 91, "db_id": "student_assessment", "gold_sql": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "pred_sql": "SELECT DISTINCT a.city FROM addresses a JOIN people_addresses pa ON a.address_id = pa.address_id;"}
{"sample_id": 72, "db_id": "student_assessment", "gold_sql": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171", "pred_sql": "SELECT COUNT(*) AS course_count FROM student_course_attendance WHERE student_id = '171';"}
{"sample_id": 69, "db_id": "student_assessment", "gold_sql": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"", "pred_sql": "SELECT COUNT(DISTINCT student_course_attendance.student_id) AS student_count\nFROM student_course_attendance\nJOIN student_course_registrations ON student_course_attendance.student_id = student_course_registrations.student_id\nJOIN courses ON student_course_registrations.course_id = courses.course_id\nWHERE courses.course_name = 'English';"}
{"sample_id": 90, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1", "pred_sql": "SELECT student_id FROM student_course_registrations WHERE course_id = '301' ORDER BY registration_date DESC LIMIT 1;"}
{"sample_id": 102, "db_id": "student_assessment", "gold_sql": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121", "pred_sql": "SELECT DISTINCT course_id FROM student_course_registrations WHERE student_id = '121' UNION SELECT DISTINCT course_id FROM student_course_attendance WHERE student_id = '121';"}
{"sample_id": 63, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "pred_sql": "SELECT s.student_id FROM students s LEFT JOIN student_course_attendance a ON s.student_id = a.student_id WHERE a.course_id IS NULL;"}
{"sample_id": 99, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance", "pred_sql": "SELECT DISTINCT student_id FROM student_course_registrations UNION SELECT DISTINCT student_id FROM student_course_attendance;"}
{"sample_id": 62, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "pred_sql": "SELECT s.student_id FROM students s LEFT JOIN student_course_attendance a ON s.student_id = a.student_id WHERE a.course_id IS NULL;"}
{"sample_id": 4389, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT role_code, COUNT(*) as role_count FROM project_staff GROUP BY role_code ORDER BY role_count DESC LIMIT 1;", "token_usage": {"tokens": 1216, "cost": 0.00024989999999999995}}
{"sample_id": 4328, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'", "pred_sql": "SELECT d.sent_date \nFROM documents d \nJOIN grants g ON d.grant_id = g.grant_id \nJOIN projects p ON g.grant_id = p.organisation_id \nJOIN project_outcomes po ON p.project_id = po.project_id \nJOIN research_outcomes ro ON po.outcome_code = ro.outcome_code \nWHERE g.grant_amount > 5000;", "token_usage": {"tokens": 1285, "cost": 0.00028409999999999997}}
{"sample_id": 4324, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT organisations.organisation_type, organisations.organisation_id\nFROM organisations\nJOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id\nGROUP BY organisations.organisation_id, organisations.organisation_type\nORDER BY COUNT(research_staff.staff_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1244, "cost": 0.00026355}}
{"sample_id": 4331, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )", "pred_sql": "SELECT p.project_id, p.project_details \nFROM projects p \nLEFT JOIN project_staff ps ON p.project_id = ps.project_id AND ps.role_code = (SELECT role_code FROM staff_roles WHERE role_description = 'researcher') \nWHERE ps.staff_id IS NULL;", "token_usage": {"tokens": 1230, "cost": 0.00025425}}
{"sample_id": 4374, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'", "pred_sql": "SELECT project_outcomes.outcome_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id WHERE projects.project_details = 'sint';", "token_usage": {"tokens": 1283, "cost": 0.00028694999999999995}}
{"sample_id": 4376, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT o.organisation_id, COUNT(po.outcome_code) AS outcome_count\nFROM organisations o\nJOIN projects p ON o.organisation_id = p.organisation_id\nJOIN project_outcomes po ON p.project_id = po.project_id\nGROUP BY o.organisation_id\nORDER BY outcome_count DESC\nLIMIT 1;", "token_usage": {"tokens": 1303, "cost": 0.00029714999999999993}}
{"sample_id": 4325, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT organisation_types.organisation_type_description, COUNT(research_staff.staff_id) AS staff_count\nFROM research_staff\nJOIN organisations ON research_staff.employer_organisation_id = organisations.organisation_id\nJOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type\nGROUP BY organisation_types.organisation_type_description\nORDER BY staff_count DESC\nLIMIT 1;", "token_usage": {"tokens": 1263, "cost": 0.00027854999999999997}}
{"sample_id": 4387, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code", "pred_sql": "SELECT outcome_details FROM project_outcomes;", "token_usage": {"tokens": 1148, "cost": 0.00020864999999999998}}
{"sample_id": 4339, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id", "pred_sql": "SELECT organisations.organisation_id, SUM(grants.grant_amount) AS total_grant_amount\nFROM grants\nJOIN organisations ON grants.organisation_id = organisations.organisation_id\nGROUP BY organisations.organisation_id;", "token_usage": {"tokens": 1236, "cost": 0.00025785}}
{"sample_id": 4381, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT count(*) FROM Tasks", "pred_sql": "SELECT COUNT(*) AS total_tasks FROM tasks;", "token_usage": {"tokens": 1156, "cost": 0.00021434999999999998}}
{"sample_id": 4377, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )", "pred_sql": "SELECT projects.project_details FROM projects JOIN organisations ON projects.organisation_id = organisations.organisation_id;", "token_usage": {"tokens": 1185, "cost": 0.00022994999999999998}}
{"sample_id": 4352, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )", "pred_sql": "SELECT p.project_id, p.organisation_id, p.project_details \nFROM projects p \nLEFT JOIN project_outcomes po ON p.project_id = po.project_id \nWHERE po.outcome_code IS NULL;", "token_usage": {"tokens": 1210, "cost": 0.0002454}}
{"sample_id": 4361, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT grant_id, COUNT(document_id) AS document_count FROM documents GROUP BY grant_id ORDER BY document_count DESC LIMIT 1;", "token_usage": {"tokens": 1199, "cost": 0.0002361}}
{"sample_id": 4318, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'", "pred_sql": "SELECT SUM(grant_amount) AS total_grant_amount FROM grants INNER JOIN organisations ON grants.organisation_id = organisations.organisation_id INNER JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id;", "token_usage": {"tokens": 1220, "cost": 0.0002514}}
{"sample_id": 4341, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'", "pred_sql": "SELECT p.project_details \nFROM projects p \nJOIN project_outcomes po ON p.project_id = po.project_id \nJOIN research_outcomes ro ON po.outcome_code = ro.outcome_code \nWHERE ro.outcome_description LIKE '%Published%';", "token_usage": {"tokens": 1243, "cost": 0.00026205}}
{"sample_id": 4371, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1", "pred_sql": "SELECT MAX(date_to) AS last_date_of_leaving FROM project_staff;", "token_usage": {"tokens": 1160, "cost": 0.00021494999999999997}}
{"sample_id": 4316, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'", "pred_sql": "SELECT p.project_id, p.project_details \nFROM projects p \nJOIN project_outcomes po ON p.project_id = po.project_id \nJOIN research_outcomes ro ON po.outcome_code = ro.outcome_code \nWHERE ro.outcome_description IN ('patent', 'paper') \nGROUP BY p.project_id \nHAVING COUNT(DISTINCT ro.outcome_description) = 2;", "token_usage": {"tokens": 1298, "cost": 0.00029549999999999997}}
{"sample_id": 6145, "db_id": "music_4", "gold_sql": "SELECT distinct(Famous_Release_date) FROM artist", "pred_sql": "SELECT DISTINCT famous_release_date FROM artist;", "token_usage": {"tokens": 574, "cost": 0.00012075}}
{"sample_id": 6176, "db_id": "music_4", "gold_sql": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT result, COUNT(result) AS count FROM music_festival GROUP BY result ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 652, "cost": 0.0001671}}
{"sample_id": 6184, "db_id": "music_4", "gold_sql": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2", "pred_sql": "SELECT a.famous_title \nFROM artist a \nJOIN volume v ON a.artist_id = v.artist_id \nWHERE v.weeks_on_top > 2 \n   OR v.weeks_on_top < 2 \nGROUP BY a.famous_title;", "token_usage": {"tokens": 661, "cost": 0.00016349999999999996}}
{"sample_id": 6153, "db_id": "music_4", "gold_sql": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1", "pred_sql": "SELECT volume.song FROM volume WHERE volume.weeks_on_top > 1;", "token_usage": {"tokens": 593, "cost": 0.00012944999999999998}}
{"sample_id": 6152, "db_id": "music_4", "gold_sql": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1", "pred_sql": "SELECT volume.song FROM volume WHERE volume.weeks_on_top > 1;", "token_usage": {"tokens": 627, "cost": 0.00015029999999999997}}
{"sample_id": 6157, "db_id": "music_4", "gold_sql": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "pred_sql": "SELECT COUNT(DISTINCT artist.artist_id) AS distinct_artist_count FROM artist JOIN volume ON artist.artist_id = volume.artist_id;", "token_usage": {"tokens": 627, "cost": 0.00015255}}
{"sample_id": 6142, "db_id": "music_4", "gold_sql": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"", "pred_sql": "SELECT famous_title FROM artist WHERE artist = 'Triumfall';", "token_usage": {"tokens": 593, "cost": 0.00013035}}
{"sample_id": 6177, "db_id": "music_4", "gold_sql": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT result, COUNT(result) AS frequency FROM music_festival GROUP BY result ORDER BY frequency DESC LIMIT 1;", "token_usage": {"tokens": 634, "cost": 0.0001563}}
{"sample_id": 6160, "db_id": "music_4", "gold_sql": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"", "pred_sql": "SELECT volume.song FROM music_festival JOIN volume ON music_festival.volume = volume.volume_id WHERE music_festival.result = 'nominated';", "token_usage": {"tokens": 632, "cost": 0.00015329999999999999}}
{"sample_id": 6158, "db_id": "music_4", "gold_sql": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2", "pred_sql": "SELECT DISTINCT mf.date_of_ceremony \nFROM music_festival mf \nJOIN volume v ON mf.volume = v.volume_id \nWHERE v.weeks_on_top > 2;", "token_usage": {"tokens": 663, "cost": 0.00017009999999999996}}
{"sample_id": 6173, "db_id": "music_4", "gold_sql": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1", "pred_sql": "SELECT famous_release_date FROM artist ORDER BY age ASC LIMIT 1;", "token_usage": {"tokens": 598, "cost": 0.00013515}}
{"sample_id": 6193, "db_id": "music_4", "gold_sql": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "pred_sql": "SELECT result, COUNT(*) as count FROM music_festival GROUP BY result ORDER BY count DESC;", "token_usage": {"tokens": 625, "cost": 0.00014864999999999998}}
{"sample_id": 7415, "db_id": "museum_visit", "gold_sql": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "pred_sql": "SELECT name FROM museum WHERE museum_id NOT IN (SELECT DISTINCT museum_id FROM visit);", "token_usage": {"tokens": 544, "cost": 0.00013335}}
{"sample_id": 7409, "db_id": "museum_visit", "gold_sql": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "pred_sql": "SELECT AVG(num_of_staff) AS average_staff FROM museum WHERE open_year < '2009';", "token_usage": {"tokens": 576, "cost": 0.00015029999999999997}}
{"sample_id": 7408, "db_id": "museum_visit", "gold_sql": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "pred_sql": "SELECT museum_id, name FROM museum ORDER BY num_of_staff DESC LIMIT 1;", "token_usage": {"tokens": 567, "cost": 0.00014625}}
{"sample_id": 7416, "db_id": "museum_visit", "gold_sql": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "pred_sql": "SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id ORDER BY vi.num_of_ticket DESC LIMIT 1;", "token_usage": {"tokens": 618, "cost": 0.00017639999999999998}}
{"sample_id": 7421, "db_id": "museum_visit", "gold_sql": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "pred_sql": "SELECT COUNT(*) AS museum_count FROM museum WHERE open_year > '2013' OR open_year < '2008';", "token_usage": {"tokens": 540, "cost": 0.00013005}}
{"sample_id": 694, "db_id": "customers_card_transactions", "gold_sql": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "pred_sql": "SELECT customer_id, customer_first_name || ' ' || customer_last_name AS full_name, customer_phone FROM customers;"}
{"sample_id": 690, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(DISTINCT customer_id) FROM Accounts", "pred_sql": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count\nFROM customers c\nJOIN accounts a ON c.customer_id = a.customer_id;"}
{"sample_id": 736, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions", "pred_sql": "SELECT COUNT(DISTINCT transaction_type) AS different_transaction_types FROM financial_transactions;"}
{"sample_id": 678, "db_id": "customers_card_transactions", "gold_sql": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id", "pred_sql": "SELECT customer_id, COUNT(account_id) AS account_count FROM accounts GROUP BY customer_id;"}
{"sample_id": 746, "db_id": "customers_card_transactions", "gold_sql": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id", "pred_sql": "SELECT account_id, COUNT(transaction_id) AS transaction_count FROM financial_transactions GROUP BY account_id;"}
{"sample_id": 682, "db_id": "customers_card_transactions", "gold_sql": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT c.customer_id, c.customer_first_name || ' ' || c.customer_last_name AS full_name\nFROM customers c\nJOIN accounts a ON c.customer_id = a.customer_id\nGROUP BY c.customer_id\nORDER BY COUNT(a.account_id) ASC\nLIMIT 1;"}
{"sample_id": 669, "db_id": "customers_card_transactions", "gold_sql": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "pred_sql": "SELECT account_id, customer_id, account_name FROM accounts;"}
{"sample_id": 720, "db_id": "customers_card_transactions", "gold_sql": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code", "pred_sql": "SELECT card_type_code, COUNT(card_id) AS card_count FROM customers_cards GROUP BY card_type_code;"}
{"sample_id": 667, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Accounts", "pred_sql": "SELECT COUNT(*) AS total_accounts FROM accounts;"}
{"sample_id": 697, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Customers_cards", "pred_sql": "SELECT COUNT(*) AS number_of_customer_cards FROM customers_cards;"}
{"sample_id": 681, "db_id": "customers_card_transactions", "gold_sql": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT c.customer_first_name, c.customer_last_name, c.customer_id \nFROM customers c \nJOIN accounts a ON c.customer_id = a.customer_id \nGROUP BY c.customer_id \nORDER BY COUNT(a.account_id) ASC \nLIMIT 1;"}
{"sample_id": 680, "db_id": "customers_card_transactions", "gold_sql": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT customer_id, COUNT(account_id) AS account_count\nFROM accounts\nGROUP BY customer_id\nORDER BY account_count DESC\nLIMIT 1;"}
{"sample_id": 715, "db_id": "customers_card_transactions", "gold_sql": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "pred_sql": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name \nFROM customers c \nJOIN customers_cards cc ON c.customer_id = cc.customer_id \nGROUP BY c.customer_id \nHAVING COUNT(cc.card_id) >= 2;"}
{"sample_id": 713, "db_id": "customers_card_transactions", "gold_sql": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT customer_id, COUNT(card_id) AS card_count \nFROM customers_cards \nGROUP BY customer_id \nORDER BY card_count DESC \nLIMIT 1;"}
{"sample_id": 684, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM accounts)"}
{"sample_id": 723, "db_id": "customers_card_transactions", "gold_sql": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5", "pred_sql": "SELECT card_type_code FROM customers_cards GROUP BY card_type_code HAVING COUNT(card_id) >= 5;"}
{"sample_id": 5623, "db_id": "swimming", "gold_sql": "SELECT * FROM swimmer", "pred_sql": "SELECT * FROM swimmer;", "token_usage": {"tokens": 732, "cost": 0.0001503}}
{"sample_id": 5613, "db_id": "swimming", "gold_sql": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT stadium.name FROM stadium JOIN event ON stadium.id = event.stadium_id GROUP BY stadium.id ORDER BY COUNT(event.id) DESC LIMIT 1;", "token_usage": {"tokens": 802, "cost": 0.0001896}}
{"sample_id": 5606, "db_id": "swimming", "gold_sql": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006", "pred_sql": "SELECT DISTINCT nationality FROM swimmer WHERE nationality NOT IN (SELECT DISTINCT country FROM stadium WHERE opening_year > 2006);", "token_usage": {"tokens": 770, "cost": 0.0001695}}
{"sample_id": 5618, "db_id": "swimming", "gold_sql": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1", "pred_sql": "SELECT swimmer.name, swimmer.nationality \nFROM swimmer \nJOIN record ON swimmer.id = record.swimmer_id \nWHERE record.result = 'win' \nGROUP BY swimmer.id \nHAVING COUNT(record.id) > 1;", "token_usage": {"tokens": 856, "cost": 0.00021525}}
{"sample_id": 5601, "db_id": "swimming", "gold_sql": "SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT country, COUNT(*) as stadium_count FROM stadium GROUP BY country ORDER BY stadium_count DESC LIMIT 1;", "token_usage": {"tokens": 792, "cost": 0.00018494999999999997}}
{"sample_id": 5602, "db_id": "swimming", "gold_sql": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3", "pred_sql": "SELECT country FROM stadium GROUP BY country HAVING COUNT(id) <= 3;", "token_usage": {"tokens": 747, "cost": 0.00015749999999999998}}
{"sample_id": 4489, "db_id": "decoration_competition", "gold_sql": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3", "pred_sql": "SELECT member.name FROM member JOIN round ON member.member_id = round.member_id WHERE round.rank_in_round > '3';", "token_usage": {"tokens": 582, "cost": 0.00015299999999999998}}
{"sample_id": 4485, "db_id": "decoration_competition", "gold_sql": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID", "pred_sql": "SELECT member.name AS member_name, college.name AS college_name FROM member JOIN college ON member.college_id = college.college_id;", "token_usage": {"tokens": 558, "cost": 0.00013995}}
{"sample_id": 4480, "db_id": "decoration_competition", "gold_sql": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"", "pred_sql": "SELECT name FROM member WHERE country IN ('United States', 'Canada');", "token_usage": {"tokens": 543, "cost": 0.00012959999999999998}}
{"sample_id": 928, "db_id": "insurance_fnol", "gold_sql": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements", "pred_sql": "SELECT MAX(settlement_amount) AS max_settlement, MIN(settlement_amount) AS min_settlement FROM settlements;"}
{"sample_id": 910, "db_id": "insurance_fnol", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT c.customer_name, COUNT(cp.policy_id) AS policy_count\nFROM customers c\nJOIN customers_policies cp ON c.customer_id = cp.customer_id\nGROUP BY c.customer_id\nORDER BY policy_count DESC\nLIMIT 1;"}
{"sample_id": 903, "db_id": "insurance_fnol", "gold_sql": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2", "pred_sql": "SELECT s.service_name\nFROM first_notification_of_loss fnol\nJOIN services s ON fnol.service_id = s.service_id\nGROUP BY fnol.service_id\nHAVING COUNT(fnol.fnol_id) > 2;"}
{"sample_id": 932, "db_id": "insurance_fnol", "gold_sql": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "pred_sql": "SELECT cp.date_opened, cp.date_closed \nFROM customers AS c \nJOIN customers_policies AS cp ON c.customer_id = cp.customer_id \nWHERE c.customer_name LIKE '%Diana%';"}
{"sample_id": 915, "db_id": "insurance_fnol", "gold_sql": "SELECT service_name FROM services ORDER BY service_name", "pred_sql": "SELECT service_name FROM services ORDER BY service_name ASC;"}
{"sample_id": 916, "db_id": "insurance_fnol", "gold_sql": "SELECT service_name FROM services ORDER BY service_name", "pred_sql": "SELECT service_name FROM services ORDER BY service_name ASC;"}
{"sample_id": 912, "db_id": "insurance_fnol", "gold_sql": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"", "pred_sql": "SELECT DISTINCT ap.policy_type_code \nFROM customers c \nJOIN customers_policies cp ON c.customer_id = cp.customer_id \nJOIN available_policies ap ON cp.policy_id = ap.policy_id \nWHERE c.customer_name = 'Dayana Robel';"}
{"sample_id": 929, "db_id": "insurance_fnol", "gold_sql": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC", "pred_sql": "SELECT * FROM customers ORDER BY customer_id ASC;"}
{"sample_id": 907, "db_id": "insurance_fnol", "gold_sql": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"", "pred_sql": "SELECT COUNT(*) AS policy_count FROM customers c JOIN customers_policies cp ON c.customer_id = cp.customer_id WHERE c.customer_name = 'Dayana Robel';"}
{"sample_id": 7428, "db_id": "wta_1", "gold_sql": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches", "pred_sql": "SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;", "token_usage": {"tokens": 1069, "cost": 0.00019949999999999997}}
{"sample_id": 7463, "db_id": "wta_1", "gold_sql": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "pred_sql": "SELECT players.first_name, AVG(CAST(rankings.ranking AS FLOAT)) AS average_ranking\nFROM players\nJOIN rankings ON players.player_id = rankings.player_id\nGROUP BY players.first_name;", "token_usage": {"tokens": 1141, "cost": 0.00024179999999999997}}
{"sample_id": 7436, "db_id": "wta_1", "gold_sql": "SELECT count(DISTINCT loser_name) FROM matches", "pred_sql": "SELECT COUNT(DISTINCT loser_name) AS distinct_loser_names FROM matches;", "token_usage": {"tokens": 1085, "cost": 0.00021045}}
{"sample_id": 7471, "db_id": "wta_1", "gold_sql": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50", "pred_sql": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;", "token_usage": {"tokens": 1087, "cost": 0.00020984999999999998}}
{"sample_id": 7467, "db_id": "wta_1", "gold_sql": "SELECT count(*) ,  country_code FROM players GROUP BY country_code", "pred_sql": "SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;", "token_usage": {"tokens": 1074, "cost": 0.00020429999999999998}}
{"sample_id": 7474, "db_id": "wta_1", "gold_sql": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR", "pred_sql": "SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year;", "token_usage": {"tokens": 1084, "cost": 0.0002094}}
{"sample_id": 7462, "db_id": "wta_1", "gold_sql": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name", "pred_sql": "SELECT players.first_name, AVG(CAST(rankings.ranking AS FLOAT)) AS average_ranking\nFROM players\nJOIN rankings ON players.player_id = rankings.player_id\nGROUP BY players.player_id, players.first_name;", "token_usage": {"tokens": 1171, "cost": 0.0002607}}
{"sample_id": 7483, "db_id": "wta_1", "gold_sql": "SELECT count(*) ,  hand FROM players GROUP BY hand", "pred_sql": "SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;", "token_usage": {"tokens": 1098, "cost": 0.00021779999999999998}}
{"sample_id": 7473, "db_id": "wta_1", "gold_sql": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date", "pred_sql": "SELECT ranking_date, COUNT(DISTINCT tours) AS total_tours FROM rankings GROUP BY ranking_date;", "token_usage": {"tokens": 1105, "cost": 0.00022154999999999996}}
{"sample_id": 7431, "db_id": "wta_1", "gold_sql": "SELECT avg(winner_rank) FROM matches", "pred_sql": "SELECT AVG(winner_rank) AS average_winner_rank FROM matches;", "token_usage": {"tokens": 1080, "cost": 0.00020654999999999998}}
{"sample_id": 7432, "db_id": "wta_1", "gold_sql": "SELECT min(loser_rank) FROM matches", "pred_sql": "SELECT MAX(rankings.ranking) AS highest_loser_rank\nFROM matches\nJOIN players ON matches.loser_id = players.player_id\nJOIN rankings ON players.player_id = rankings.player_id;", "token_usage": {"tokens": 1128, "cost": 0.00023579999999999999}}
{"sample_id": 7426, "db_id": "wta_1", "gold_sql": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "pred_sql": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';", "token_usage": {"tokens": 1096, "cost": 0.00021344999999999998}}
{"sample_id": 7434, "db_id": "wta_1", "gold_sql": "SELECT count(DISTINCT country_code) FROM players", "pred_sql": "SELECT COUNT(DISTINCT country_code) AS distinct_country_codes FROM players;", "token_usage": {"tokens": 1074, "cost": 0.00020294999999999997}}
{"sample_id": 4819, "db_id": "aircraft", "gold_sql": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "pred_sql": "SELECT winning_aircraft AS aircraft_name, COUNT(*) AS win_count \nFROM match \nGROUP BY winning_aircraft \nHAVING COUNT(*) > 0;", "token_usage": {"tokens": 903, "cost": 0.0002025}}
{"sample_id": 4816, "db_id": "aircraft", "gold_sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT winning_aircraft, COUNT(winning_aircraft) AS win_count \nFROM match \nGROUP BY winning_aircraft \nORDER BY win_count DESC \nLIMIT 1;", "token_usage": {"tokens": 916, "cost": 0.00021164999999999997}}
{"sample_id": 4821, "db_id": "aircraft", "gold_sql": "SELECT Name FROM pilot ORDER BY Age DESC", "pred_sql": "SELECT name FROM pilot ORDER BY age DESC;", "token_usage": {"tokens": 838, "cost": 0.00016754999999999998}}
{"sample_id": 4820, "db_id": "aircraft", "gold_sql": "SELECT Name FROM pilot ORDER BY Age DESC", "pred_sql": "SELECT name FROM pilot ORDER BY age DESC;", "token_usage": {"tokens": 839, "cost": 0.00016859999999999998}}
{"sample_id": 4800, "db_id": "aircraft", "gold_sql": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "pred_sql": "SELECT MAX(transit_passengers) AS max_transit_passengers, MIN(transit_passengers) AS min_transit_passengers FROM airport;", "token_usage": {"tokens": 863, "cost": 0.00018119999999999999}}
{"sample_id": 4793, "db_id": "aircraft", "gold_sql": "SELECT Description FROM aircraft", "pred_sql": "SELECT description FROM aircraft;", "token_usage": {"tokens": 816, "cost": 0.0001557}}
{"sample_id": 4829, "db_id": "aircraft", "gold_sql": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "pred_sql": "SELECT * FROM airport WHERE international_passengers = (SELECT MAX(international_passengers) FROM airport);", "token_usage": {"tokens": 885, "cost": 0.00019395}}
{"sample_id": 4803, "db_id": "aircraft", "gold_sql": "SELECT Name FROM pilot WHERE Age  >=  25", "pred_sql": "SELECT name FROM pilot WHERE age >= '25';", "token_usage": {"tokens": 871, "cost": 0.00018554999999999998}}
{"sample_id": 4792, "db_id": "aircraft", "gold_sql": "SELECT Description FROM aircraft", "pred_sql": "SELECT description FROM aircraft;", "token_usage": {"tokens": 816, "cost": 0.00015614999999999997}}
{"sample_id": 4808, "db_id": "aircraft", "gold_sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "pred_sql": "SELECT aircraft.aircraft FROM aircraft JOIN airport_aircraft ON aircraft.aircraft_id = airport_aircraft.aircraft_id JOIN airport ON airport_aircraft.airport_id = airport.airport_id WHERE airport.airport_name = 'London Gatwick';", "token_usage": {"tokens": 941, "cost": 0.0002271}}
{"sample_id": 2320, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"", "pred_sql": "SELECT * FROM campuses WHERE location = 'Chico';", "token_usage": {"tokens": 725, "cost": 0.00014744999999999998}}
{"sample_id": 2384, "db_id": "csu_1", "gold_sql": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000", "pred_sql": "SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 2000;", "token_usage": {"tokens": 822, "cost": 0.00020114999999999998}}
{"sample_id": 2357, "db_id": "csu_1", "gold_sql": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"", "pred_sql": "SELECT COUNT(*) AS campus_count FROM campuses WHERE county = 'Los Angeles';", "token_usage": {"tokens": 742, "cost": 0.0001563}}
{"sample_id": 2322, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE YEAR  =  1958", "pred_sql": "SELECT campus FROM campuses WHERE year = '1958';", "token_usage": {"tokens": 729, "cost": 0.00014805}}
{"sample_id": 2375, "db_id": "csu_1", "gold_sql": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1", "pred_sql": "SELECT f.campus, COUNT(f.faculty) AS faculty_count \nFROM faculty f \nJOIN degrees d ON f.campus = d.campus \nWHERE d.year = '2001' \nGROUP BY f.campus \nORDER BY COUNT(d.degrees) ASC \nLIMIT 1;", "token_usage": {"tokens": 875, "cost": 0.00023024999999999999}}
{"sample_id": 2349, "db_id": "csu_1", "gold_sql": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus", "pred_sql": "SELECT COUNT(*) AS total_degrees FROM degrees WHERE year BETWEEN '1998' AND '2002';", "token_usage": {"tokens": 766, "cost": 0.00016799999999999996}}
{"sample_id": 2324, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE YEAR  <  1800", "pred_sql": "SELECT campus FROM campuses WHERE year < '1800';", "token_usage": {"tokens": 733, "cost": 0.00015179999999999998}}
{"sample_id": 2325, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939", "pred_sql": "SELECT campus FROM campuses WHERE year BETWEEN '1935' AND '1939';", "token_usage": {"tokens": 737, "cost": 0.00015194999999999998}}
{"sample_id": 2319, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"", "pred_sql": "SELECT campus FROM campuses WHERE location = 'Chico';", "token_usage": {"tokens": 747, "cost": 0.00015884999999999999}}
{"sample_id": 2383, "db_id": "csu_1", "gold_sql": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000", "pred_sql": "SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 2000;", "token_usage": {"tokens": 822, "cost": 0.00020114999999999998}}
{"sample_id": 2352, "db_id": "csu_1", "gold_sql": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus", "pred_sql": "SELECT campuses.campus, COUNT(degrees.degrees) AS total_degrees\nFROM campuses\nJOIN degrees ON campuses.id = degrees.campus\nWHERE campuses.county = 'Orange' AND degrees.year > '2000'\nGROUP BY campuses.campus;", "token_usage": {"tokens": 838, "cost": 0.0002103}}
{"sample_id": 2355, "db_id": "csu_1", "gold_sql": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200", "pred_sql": "SELECT c.campus \nFROM campuses c \nJOIN enrollments e ON c.id = e.campus \nWHERE e.year = '1956' \nAND e.totalenrollment_ay > 400 \nAND e.fte_ay > 200;", "token_usage": {"tokens": 792, "cost": 0.00018045}}
{"sample_id": 2348, "db_id": "csu_1", "gold_sql": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005", "pred_sql": "SELECT AVG(campusfee) AS average_fee FROM csu_fees WHERE year = 2005;", "token_usage": {"tokens": 766, "cost": 0.00016754999999999998}}
{"sample_id": 2358, "db_id": "csu_1", "gold_sql": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"", "pred_sql": "SELECT COUNT(*) AS campus_count FROM campuses WHERE county = 'LA';", "token_usage": {"tokens": 755, "cost": 0.00016365}}
{"sample_id": 1680, "db_id": "theme_gallery", "gold_sql": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "pred_sql": "SELECT exhibition.theme, exhibition_record.date, exhibition_record.attendance \nFROM exhibition \nJOIN exhibition_record ON exhibition.exhibition_id = exhibition_record.exhibition_id \nWHERE exhibition.year = 2004;"}
{"sample_id": 1658, "db_id": "theme_gallery", "gold_sql": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "pred_sql": "SELECT COUNT(*) FROM artist WHERE age > '46' AND year_join > '1990';"}
{"sample_id": 1671, "db_id": "theme_gallery", "gold_sql": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "pred_sql": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"}
{"sample_id": 1679, "db_id": "theme_gallery", "gold_sql": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "pred_sql": "SELECT exhibition.theme, exhibition_record.date, exhibition_record.attendance \nFROM exhibition \nJOIN exhibition_record ON exhibition.exhibition_id = exhibition_record.exhibition_id \nWHERE exhibition.year = 2004;"}
{"sample_id": 1653, "db_id": "theme_gallery", "gold_sql": "SELECT DISTINCT country FROM artist", "pred_sql": "SELECT DISTINCT country FROM artist;"}
{"sample_id": 1655, "db_id": "theme_gallery", "gold_sql": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "pred_sql": "SELECT name, year_join FROM artist WHERE country != 'United States';"}
{"sample_id": 1686, "db_id": "theme_gallery", "gold_sql": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "pred_sql": "SELECT COUNT(*) FROM exhibition e JOIN exhibition_record er ON e.exhibition_id = er.exhibition_id WHERE er.attendance > 100 OR e.ticket_price < 10;"}
{"sample_id": 1675, "db_id": "theme_gallery", "gold_sql": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "pred_sql": "SELECT AVG(ticket_price) AS average_ticket_price, MIN(ticket_price) AS minimum_ticket_price, MAX(ticket_price) AS maximum_ticket_price FROM exhibition WHERE year < 2009;"}
{"sample_id": 3161, "db_id": "station_weather", "gold_sql": "SELECT count(DISTINCT services) FROM station", "pred_sql": "SELECT SUM(services) AS total_services FROM station;", "token_usage": {"tokens": 671, "cost": 0.0001497}}
{"sample_id": 3153, "db_id": "station_weather", "gold_sql": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\"", "pred_sql": "SELECT COUNT(*) AS train_count FROM train WHERE name LIKE '%Express%';", "token_usage": {"tokens": 693, "cost": 0.00016244999999999996}}
{"sample_id": 3158, "db_id": "station_weather", "gold_sql": "SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week", "pred_sql": "SELECT day_of_week, AVG(high_temperature) AS average_high_temperature FROM weekly_weather GROUP BY day_of_week;", "token_usage": {"tokens": 656, "cost": 0.00013979999999999998}}
{"sample_id": 3155, "db_id": "station_weather", "gold_sql": "SELECT origin ,  count(*) FROM train GROUP BY origin", "pred_sql": "SELECT origin, COUNT(*) AS number_of_trains FROM train GROUP BY origin;", "token_usage": {"tokens": 659, "cost": 0.0001425}}
{"sample_id": 296, "db_id": "twitter_1", "gold_sql": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2", "pred_sql": "SELECT up.name, up.partitionid FROM user_profiles up JOIN tweets t ON up.uid = t.uid GROUP BY up.uid HAVING COUNT(t.id) < 2;"}
{"sample_id": 289, "db_id": "twitter_1", "gold_sql": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\"", "pred_sql": "SELECT f1 FROM follows JOIN user_profiles ON follows.f2 = user_profiles.uid WHERE user_profiles.name IN ('Mary', 'Susan');"}
{"sample_id": 292, "db_id": "twitter_1", "gold_sql": "SELECT name ,  followers FROM user_profiles ORDER BY followers DESC", "pred_sql": "SELECT name, followers FROM user_profiles ORDER BY followers DESC;"}
{"sample_id": 276, "db_id": "twitter_1", "gold_sql": "SELECT count(*) FROM user_profiles", "pred_sql": "SELECT COUNT(*) AS user_count FROM user_profiles;"}
{"sample_id": 300, "db_id": "twitter_1", "gold_sql": "SELECT max(followers) ,  sum(followers) FROM user_profiles", "pred_sql": "SELECT MAX(followers) AS max_followers, SUM(followers) AS total_followers FROM user_profiles;"}
{"sample_id": 282, "db_id": "twitter_1", "gold_sql": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'", "pred_sql": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%';"}
{"sample_id": 1313, "db_id": "performance_attendance", "gold_sql": "SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION", "pred_sql": "SELECT location, COUNT(performance_id) AS number_of_performances FROM performance GROUP BY location;"}
{"sample_id": 1320, "db_id": "performance_attendance", "gold_sql": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC", "pred_sql": "SELECT m.name, p.date FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id JOIN performance p ON ma.performance_id = p.performance_id ORDER BY p.attendance DESC;"}
{"sample_id": 1317, "db_id": "performance_attendance", "gold_sql": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID", "pred_sql": "SELECT member.name, performance.location \nFROM member \nJOIN member_attendance ON member.member_id = member_attendance.member_id \nJOIN performance ON member_attendance.performance_id = performance.performance_id;"}
{"sample_id": 6313, "db_id": "e_government", "gold_sql": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1", "pred_sql": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1;", "token_usage": {"tokens": 1257, "cost": 0.0002466}}
{"sample_id": 6316, "db_id": "e_government", "gold_sql": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1", "pred_sql": "SELECT i.individual_last_name \nFROM organization_contact_individuals oci \nJOIN individuals i ON oci.individual_id = i.individual_id \nJOIN organizations org ON oci.organization_id = org.organization_id \nWHERE org.organization_name = 'Labour party' \nORDER BY oci.date_contact_to DESC \nLIMIT 1;", "token_usage": {"tokens": 1371, "cost": 0.0003096}}
{"sample_id": 6323, "db_id": "e_government", "gold_sql": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses", "pred_sql": "SELECT DISTINCT town_city, state_province_county FROM addresses;", "token_usage": {"tokens": 1234, "cost": 0.00023189999999999994}}
{"sample_id": 6308, "db_id": "e_government", "gold_sql": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "pred_sql": "SELECT payment_method_code, party_phone FROM parties WHERE party_email = 'enrico09@example.com';", "token_usage": {"tokens": 1259, "cost": 0.00024104999999999998}}
{"sample_id": 6303, "db_id": "e_government", "gold_sql": "SELECT DISTINCT form_type_code FROM forms", "pred_sql": "SELECT DISTINCT form_type_code FROM forms;", "token_usage": {"tokens": 1193, "cost": 0.00020865}}
{"sample_id": 6321, "db_id": "e_government", "gold_sql": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id", "pred_sql": "SELECT service_name FROM services WHERE service_id NOT IN (SELECT service_id FROM party_services);", "token_usage": {"tokens": 1257, "cost": 0.00024524999999999997}}
{"sample_id": 6304, "db_id": "e_government", "gold_sql": "SELECT DISTINCT form_type_code FROM forms", "pred_sql": "SELECT DISTINCT form_type_code FROM forms;", "token_usage": {"tokens": 1198, "cost": 0.00021119999999999996}}
{"sample_id": 6320, "db_id": "e_government", "gold_sql": "SELECT count(*) FROM services", "pred_sql": "SELECT COUNT(*) AS service_count FROM services;", "token_usage": {"tokens": 1209, "cost": 0.00021869999999999995}}
{"sample_id": 4784, "db_id": "department_store", "gold_sql": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "pred_sql": "SELECT customer_id, customer_name FROM customers WHERE customer_address LIKE '%WY%' AND payment_method_code != 'credit_card';", "token_usage": {"tokens": 1480, "cost": 0.00028409999999999997}}
{"sample_id": 4718, "db_id": "department_store", "gold_sql": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code", "pred_sql": "SELECT product_type_code, AVG(product_price) AS average_price FROM products GROUP BY product_type_code;", "token_usage": {"tokens": 1448, "cost": 0.0002694}}
{"sample_id": 4727, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id", "pred_sql": "SELECT DISTINCT customers.customer_name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending' ORDER BY customers.customer_id;", "token_usage": {"tokens": 1453, "cost": 0.00026880000000000003}}
{"sample_id": 4740, "db_id": "department_store", "gold_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)", "pred_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING AVG(product_price) > (SELECT AVG(product_price) FROM products);", "token_usage": {"tokens": 1481, "cost": 0.00028649999999999997}}
{"sample_id": 4786, "db_id": "department_store", "gold_sql": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'", "pred_sql": "SELECT AVG(product_price) AS average_price FROM products WHERE product_type_code = 'clothes';", "token_usage": {"tokens": 1468, "cost": 0.0002823}}
{"sample_id": 4762, "db_id": "department_store", "gold_sql": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "pred_sql": "SELECT product_id, product_name FROM products WHERE product_price < 600 OR product_price > 900;", "token_usage": {"tokens": 1441, "cost": 0.0002607}}
{"sample_id": 4765, "db_id": "department_store", "gold_sql": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000", "pred_sql": "SELECT supplier_id FROM product_suppliers GROUP BY supplier_id HAVING AVG(total_amount_purchased) > 50000 OR AVG(total_amount_purchased) < 30000;", "token_usage": {"tokens": 1500, "cost": 0.0002952}}
{"sample_id": 4750, "db_id": "department_store", "gold_sql": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "pred_sql": "SELECT customer_name, customer_id FROM customers WHERE customer_address LIKE '%TN%';", "token_usage": {"tokens": 1453, "cost": 0.0002715}}
{"sample_id": 4781, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "pred_sql": "SELECT DISTINCT c.customer_name\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nJOIN order_items oi ON co.order_id = oi.order_id\nGROUP BY c.customer_id\nHAVING COUNT(DISTINCT oi.product_id) >= 3;", "token_usage": {"tokens": 1530, "cost": 0.00031634999999999996}}
{"sample_id": 4778, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2", "pred_sql": "SELECT DISTINCT p.product_name\nFROM products p\nJOIN order_items oi ON p.product_id = oi.product_id\nJOIN customer_orders co ON oi.order_id = co.order_id\nJOIN customers c ON co.customer_id = c.customer_id\nGROUP BY p.product_id\nHAVING COUNT(DISTINCT c.customer_id) >= 2;", "token_usage": {"tokens": 1561, "cost": 0.0003354}}
{"sample_id": 4749, "db_id": "department_store", "gold_sql": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')", "pred_sql": "SELECT s.staff_id FROM staff s JOIN staff_department_assignments sda ON s.staff_id = sda.staff_id WHERE sda.date_assigned_from < (SELECT MIN(sda2.date_assigned_from) FROM staff_department_assignments sda2 JOIN staff s2 ON sda2.staff_id = s2.staff_id WHERE s2.job_title_code = 'Clerical')", "token_usage": {"tokens": 1552, "cost": 0.00032774999999999997}}
{"sample_id": 4735, "db_id": "department_store", "gold_sql": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2", "pred_sql": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY COUNT(dept_store_id) DESC LIMIT 2;", "token_usage": {"tokens": 1477, "cost": 0.000285}}
{"sample_id": 4702, "db_id": "department_store", "gold_sql": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3", "pred_sql": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY SUM(order_item_id) DESC LIMIT 3;", "token_usage": {"tokens": 1489, "cost": 0.0002913}}
{"sample_id": 4714, "db_id": "department_store", "gold_sql": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT order_items.product_id\nFROM order_items\nGROUP BY order_items.product_id\nORDER BY COUNT(order_items.order_item_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1485, "cost": 0.00029025}}
{"sample_id": 4751, "db_id": "department_store", "gold_sql": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "pred_sql": "SELECT customers.customer_name, customers.customer_id FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.address_details LIKE '%TN%';", "token_usage": {"tokens": 1467, "cost": 0.00027945}}
{"sample_id": 4730, "db_id": "department_store", "gold_sql": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)", "pred_sql": "SELECT product_id FROM products WHERE product_id IN (SELECT product_id FROM product_suppliers WHERE supplier_id = '2') AND product_price > (SELECT AVG(product_price) FROM products);", "token_usage": {"tokens": 1502, "cost": 0.00029505}}
{"sample_id": 4766, "db_id": "department_store", "gold_sql": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "pred_sql": "SELECT AVG(total_amount_purchased) AS average_amount_purchased, AVG(total_value_purchased) AS average_value_purchased\nFROM product_suppliers\nWHERE supplier_id = (\n    SELECT supplier_id\n    FROM product_suppliers\n    GROUP BY supplier_id\n    ORDER BY COUNT(product_id) DESC\n    LIMIT 1\n);", "token_usage": {"tokens": 1535, "cost": 0.00031844999999999996}}
{"sample_id": 4748, "db_id": "department_store", "gold_sql": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')", "pred_sql": "SELECT s.staff_id FROM staff s JOIN staff_department_assignments sda ON s.staff_id = sda.staff_id WHERE sda.date_assigned_from < (SELECT MIN(sda2.date_assigned_from) FROM staff_department_assignments sda2 JOIN staff s2 ON sda2.staff_id = s2.staff_id WHERE s2.job_title_code = 'Clerical')", "token_usage": {"tokens": 1531, "cost": 0.0003156}}
{"sample_id": 4741, "db_id": "department_store", "gold_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)", "pred_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING AVG(product_price) > (SELECT AVG(product_price) FROM products);", "token_usage": {"tokens": 1452, "cost": 0.0002673}}
{"sample_id": 6691, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";", "pred_sql": "SELECT COUNT(*) AS cancelled_lessons_count FROM lessons WHERE lesson_status_code = 'cancelled';", "token_usage": {"tokens": 1045, "cost": 0.0002139}}
{"sample_id": 6644, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";", "pred_sql": "SELECT COUNT(*) AS employee_count FROM staff INNER JOIN addresses ON staff.staff_address_id = addresses.address_id WHERE addresses.state_province_county = 'Georgia';", "token_usage": {"tokens": 1068, "cost": 0.00022815}}
{"sample_id": 6621, "db_id": "driving_school", "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Staff;", "pred_sql": "SELECT first_name, middle_name, last_name FROM staff;", "token_usage": {"tokens": 998, "cost": 0.00018345}}
{"sample_id": 6663, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Customers;", "pred_sql": "SELECT COUNT(*) AS total_customers FROM customers;", "token_usage": {"tokens": 1005, "cost": 0.0001908}}
{"sample_id": 6628, "db_id": "driving_school", "gold_sql": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "pred_sql": "SELECT date_left_staff FROM staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';", "token_usage": {"tokens": 1056, "cost": 0.0002178}}
{"sample_id": 6695, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"", "pred_sql": "SELECT COUNT(*) AS lesson_count \nFROM lessons \nJOIN staff ON lessons.staff_id = staff.staff_id \nWHERE staff.first_name LIKE '%a%';", "token_usage": {"tokens": 1084, "cost": 0.00023324999999999998}}
{"sample_id": 6649, "db_id": "driving_school", "gold_sql": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;", "pred_sql": "SELECT a.state_province_county, COUNT(s.staff_id) AS staff_count\nFROM addresses a\nJOIN staff s ON a.address_id = s.staff_address_id\nGROUP BY a.state_province_county\nHAVING staff_count BETWEEN 2 AND 4;", "token_usage": {"tokens": 1095, "cost": 0.00024074999999999997}}
{"sample_id": 6669, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";", "pred_sql": "SELECT COUNT(*) AS completed_lessons_count \nFROM lessons l \nJOIN customers c ON l.customer_id = c.customer_id \nWHERE c.first_name = 'Rylan' AND c.last_name = 'Goodwin' AND l.lesson_status_code = 'completed';", "token_usage": {"tokens": 1120, "cost": 0.00025305}}
{"sample_id": 6629, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";", "pred_sql": "SELECT COUNT(*) AS staff_count FROM staff WHERE first_name = 'Ludie';", "token_usage": {"tokens": 1028, "cost": 0.0002028}}
{"sample_id": 6682, "db_id": "driving_school", "gold_sql": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT city, COUNT(customer_id) AS customer_count FROM addresses JOIN customers ON addresses.address_id = customers.customer_address_id GROUP BY city ORDER BY customer_count DESC LIMIT 1;", "token_usage": {"tokens": 1075, "cost": 0.00023145}}
{"sample_id": 6630, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";", "pred_sql": "SELECT COUNT(*) AS employee_count FROM staff WHERE first_name = 'Ludie';", "token_usage": {"tokens": 1044, "cost": 0.00021194999999999997}}
{"sample_id": 6676, "db_id": "driving_school", "gold_sql": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";", "pred_sql": "SELECT first_name, last_name FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE addresses.city = 'Lockmanfurt';", "token_usage": {"tokens": 1045, "cost": 0.00020984999999999998}}
{"sample_id": 6704, "db_id": "driving_school", "gold_sql": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff", "pred_sql": "SELECT last_name FROM customers UNION SELECT last_name FROM staff;", "token_usage": {"tokens": 983, "cost": 0.00017444999999999998}}
{"sample_id": 6674, "db_id": "driving_school", "gold_sql": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;", "pred_sql": "SELECT first_name, last_name FROM customers WHERE amount_outstanding BETWEEN '1000' AND '3000';", "token_usage": {"tokens": 1052, "cost": 0.00021179999999999997}}
{"sample_id": 6673, "db_id": "driving_school", "gold_sql": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;", "pred_sql": "SELECT first_name, last_name FROM customers WHERE amount_outstanding BETWEEN '1000' AND '3000';", "token_usage": {"tokens": 1054, "cost": 0.00021255}}
{"sample_id": 6700, "db_id": "driving_school", "gold_sql": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "pred_sql": "SELECT AVG(price) AS average_price FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn';", "token_usage": {"tokens": 1067, "cost": 0.00022349999999999996}}
{"sample_id": 6697, "db_id": "driving_school", "gold_sql": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "pred_sql": "SELECT SUM(lesson_time) AS total_lesson_time FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn';", "token_usage": {"tokens": 1097, "cost": 0.00023789999999999998}}
{"sample_id": 6683, "db_id": "driving_school", "gold_sql": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"", "pred_sql": "SELECT SUM(cp.amount_payment) AS total_paid\nFROM customers c\nJOIN customer_payments cp ON c.customer_id = cp.customer_id\nWHERE c.first_name = 'Carole' AND c.last_name = 'Bernhard';", "token_usage": {"tokens": 1066, "cost": 0.0002211}}
{"sample_id": 6678, "db_id": "driving_school", "gold_sql": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"", "pred_sql": "SELECT addresses.country FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE customers.first_name = 'Carole' AND customers.last_name = 'Bernhard';", "token_usage": {"tokens": 1024, "cost": 0.0001986}}
{"sample_id": 6698, "db_id": "driving_school", "gold_sql": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "pred_sql": "SELECT SUM(lesson_time) AS total_time FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Sawayn';", "token_usage": {"tokens": 1089, "cost": 0.00023669999999999998}}
{"sample_id": 2836, "db_id": "customer_deliveries", "gold_sql": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT p.product_name, p.product_price\nFROM products p\nJOIN actual_order_products aop ON p.product_id = aop.product_id\nGROUP BY p.product_id\nORDER BY COUNT(aop.actual_order_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1439, "cost": 0.00029729999999999996}}
{"sample_id": 2850, "db_id": "customer_deliveries", "gold_sql": "SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county", "pred_sql": "SELECT state_province_county, COUNT(customer_id) AS number_of_customers\nFROM customers\nJOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id\nJOIN addresses ON customer_addresses.address_id = addresses.address_id\nGROUP BY state_province_county;", "token_usage": {"tokens": 1453, "cost": 0.0003075}}
{"sample_id": 2841, "db_id": "customer_deliveries", "gold_sql": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'", "pred_sql": "SELECT customer_name FROM customers c JOIN customer_addresses ca ON c.customer_id = ca.customer_id JOIN addresses a ON ca.address_id = a.address_id WHERE a.state_province_county != 'California';", "token_usage": {"tokens": 1428, "cost": 0.00029204999999999997}}
{"sample_id": 2835, "db_id": "customer_deliveries", "gold_sql": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'", "pred_sql": "SELECT actual_order_id FROM actual_orders WHERE order_status_code = 'Success';", "token_usage": {"tokens": 1342, "cost": 0.00024224999999999998}}
{"sample_id": 2141, "db_id": "local_govt_in_alabama", "gold_sql": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT event_id FROM participants_in_events GROUP BY event_id ORDER BY COUNT(participant_id) DESC LIMIT 1;", "token_usage": {"tokens": 546, "cost": 0.00013634999999999998}}
{"sample_id": 2139, "db_id": "local_govt_in_alabama", "gold_sql": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT participant_type_code, COUNT(participant_id) AS participant_count FROM participants GROUP BY participant_type_code ORDER BY participant_count DESC LIMIT 1;", "token_usage": {"tokens": 593, "cost": 0.00016634999999999998}}
{"sample_id": 2145, "db_id": "local_govt_in_alabama", "gold_sql": "SELECT count(DISTINCT participant_id) FROM participants_in_Events", "pred_sql": "SELECT DISTINCT participant_id FROM participants_in_events;", "token_usage": {"tokens": 509, "cost": 0.00011414999999999998}}
{"sample_id": 971, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT count(DISTINCT FDA_approved) FROM medicine", "pred_sql": "SELECT COUNT(DISTINCT fda_approved) AS distinct_fda_approval_statuses FROM medicine;"}
{"sample_id": 935, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name FROM enzyme ORDER BY name DESC", "pred_sql": "SELECT name FROM enzyme ORDER BY name DESC;"}
{"sample_id": 941, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "pred_sql": "SELECT product, chromosome, porphyria FROM enzyme WHERE location = 'Cytosol';"}
{"sample_id": 956, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'", "pred_sql": "SELECT interaction_type FROM medicine_enzyme_interaction mei\nJOIN enzyme e ON mei.enzyme_id = e.id\nJOIN medicine m ON mei.medicine_id = m.id\nWHERE e.name = 'ALA synthase' AND m.name = 'Aripiprazole';"}
{"sample_id": 963, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3", "pred_sql": "SELECT m.id, m.trade_name \nFROM medicine m \nJOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id \nGROUP BY m.id, m.trade_name \nHAVING COUNT(DISTINCT mei.enzyme_id) >= 3;"}
{"sample_id": 974, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"", "pred_sql": "SELECT name FROM enzyme WHERE name LIKE '%ALA%';"}
{"sample_id": 943, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name FROM enzyme WHERE product != 'Heme'", "pred_sql": "SELECT name FROM enzyme WHERE product != 'Heme';"}
{"sample_id": 962, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );", "pred_sql": "SELECT COUNT(*) AS enzyme_count FROM enzyme WHERE id NOT IN (SELECT enzyme_id FROM medicine_enzyme_interaction);"}
{"sample_id": 936, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name FROM enzyme ORDER BY name DESC", "pred_sql": "SELECT name FROM enzyme ORDER BY name DESC;"}
{"sample_id": 938, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name ,  LOCATION FROM enzyme", "pred_sql": "SELECT name, location FROM enzyme;"}
{"sample_id": 1933, "db_id": "cinema", "gold_sql": "SELECT count(*) FROM cinema", "pred_sql": "SELECT COUNT(*) AS number_of_cinemas FROM cinema;"}
{"sample_id": 1934, "db_id": "cinema", "gold_sql": "SELECT name ,  openning_year ,  capacity FROM cinema", "pred_sql": "SELECT name, openning_year, capacity FROM cinema;"}
{"sample_id": 1949, "db_id": "cinema", "gold_sql": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by", "pred_sql": "SELECT directed_by, COUNT(film_id) AS number_of_films FROM film GROUP BY directed_by;"}
{"sample_id": 1953, "db_id": "cinema", "gold_sql": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id", "pred_sql": "SELECT cinema.name, film.title, schedule.date, schedule.price FROM schedule JOIN cinema ON schedule.cinema_id = cinema.cinema_id JOIN film ON schedule.film_id = film.film_id;"}
{"sample_id": 1955, "db_id": "cinema", "gold_sql": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1", "pred_sql": "SELECT f.directed_by, SUM(s.show_times_per_day) AS total_show_times\nFROM film f\nJOIN schedule s ON f.film_id = s.film_id\nGROUP BY f.directed_by\nORDER BY total_show_times DESC\nLIMIT 1;"}
{"sample_id": 1950, "db_id": "cinema", "gold_sql": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id", "pred_sql": "SELECT cinema.name, SUM(schedule.show_times_per_day) AS total_show_times_per_day \nFROM cinema \nJOIN schedule ON cinema.cinema_id = schedule.cinema_id \nGROUP BY cinema.cinema_id;"}
{"sample_id": 3651, "db_id": "baseball_1", "gold_sql": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;", "pred_sql": "SELECT team.name, team.team_id, MAX(salary.salary) AS max_salary\nFROM team\nJOIN salary ON team.team_id = salary.team_id\nGROUP BY team.team_id, team.name;", "token_usage": {"tokens": 6036, "cost": 0.00097875}}
{"sample_id": 3677, "db_id": "baseball_1", "gold_sql": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001", "pred_sql": "SELECT player_id, salary FROM salary WHERE year IN (2010, 2001);", "token_usage": {"tokens": 5995, "cost": 0.0009550499999999999}}
{"sample_id": 3656, "db_id": "baseball_1", "gold_sql": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "pred_sql": "SELECT name_first, name_last FROM player WHERE weight > 220 OR height < 75;", "token_usage": {"tokens": 5989, "cost": 0.0009487499999999999}}
{"sample_id": 3645, "db_id": "baseball_1", "gold_sql": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "pred_sql": "SELECT name_first, name_last FROM player WHERE death_year IS NULL AND death_month IS NULL AND death_day IS NULL;", "token_usage": {"tokens": 6013, "cost": 0.0009653999999999999}}
{"sample_id": 3662, "db_id": "baseball_1", "gold_sql": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT team.name, team.team_id FROM team JOIN postseason ON team.team_id = postseason.team_id_winner WHERE postseason.year = 2008 ORDER BY postseason.wins DESC LIMIT 1;", "token_usage": {"tokens": 6021, "cost": 0.0009692999999999999}}
{"sample_id": 3687, "db_id": "baseball_1", "gold_sql": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;", "pred_sql": "SELECT SUM(games) AS total_games FROM home_game WHERE team_id = (SELECT team_id FROM team WHERE name = 'Boston Red Stockings') AND year BETWEEN 2000 AND 2010;", "token_usage": {"tokens": 6055, "cost": 0.0009888}}
{"sample_id": 3642, "db_id": "baseball_1", "gold_sql": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;", "pred_sql": "SELECT birth_country, COUNT(player_id) AS player_count \nFROM player \nGROUP BY birth_country \nORDER BY player_count ASC \nLIMIT 3;", "token_usage": {"tokens": 6017, "cost": 0.00097005}}
{"sample_id": 3685, "db_id": "baseball_1", "gold_sql": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';", "pred_sql": "SELECT SUM(games) AS total_games FROM home_game WHERE year = 2000 AND team_id IN (SELECT team_id FROM team WHERE park_id IN (SELECT park_id FROM park WHERE city = 'Atlanta'));", "token_usage": {"tokens": 5998, "cost": 0.0009573}}
{"sample_id": 3663, "db_id": "baseball_1", "gold_sql": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT team_id_winner AS team_id, COUNT(*) AS wins\nFROM postseason\nWHERE year = 2008\nGROUP BY team_id_winner\nORDER BY wins DESC\nLIMIT 1;", "token_usage": {"tokens": 6088, "cost": 0.0010095}}
{"sample_id": 3631, "db_id": "baseball_1", "gold_sql": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;", "pred_sql": "SELECT yearid AS year, COUNT(player_id) AS num_players FROM hall_of_fame GROUP BY yearid;", "token_usage": {"tokens": 5993, "cost": 0.0009547499999999999}}
{"sample_id": 3675, "db_id": "baseball_1", "gold_sql": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;", "pred_sql": "SELECT player_id, salary FROM salary WHERE year = 2001 ORDER BY salary DESC LIMIT 3;", "token_usage": {"tokens": 5956, "cost": 0.0009312}}
{"sample_id": 3688, "db_id": "baseball_1", "gold_sql": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;", "pred_sql": "SELECT SUM(salary) AS total_salary\nFROM salary\nJOIN player ON salary.player_id = player.player_id\nWHERE player.name_first = 'Len' AND player.name_last = 'Barker' AND salary.year BETWEEN 1985 AND 1990;", "token_usage": {"tokens": 6049, "cost": 0.00098295}}
{"sample_id": 3664, "db_id": "baseball_1", "gold_sql": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year", "pred_sql": "SELECT p.year, SUM(p.w) AS total_wins\nFROM postseason p\nJOIN team t ON p.team_id_winner = t.team_id\nWHERE t.name = 'Boston Red Stockings'\nGROUP BY p.year;", "token_usage": {"tokens": 6031, "cost": 0.0009734999999999999}}
{"sample_id": 3643, "db_id": "baseball_1", "gold_sql": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;", "pred_sql": "SELECT birth_country, COUNT(player_id) AS player_count FROM player GROUP BY birth_country ORDER BY player_count ASC LIMIT 3;", "token_usage": {"tokens": 6008, "cost": 0.00096465}}
{"sample_id": 3652, "db_id": "baseball_1", "gold_sql": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "pred_sql": "SELECT team.name, team.team_id FROM team JOIN salary ON team.player_id = salary.player_id GROUP BY team.team_id ORDER BY AVG(salary.salary) ASC LIMIT 1;", "token_usage": {"tokens": 6015, "cost": 0.0009674999999999999}}
{"sample_id": 3682, "db_id": "baseball_1", "gold_sql": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';", "pred_sql": "SELECT SUM(games) AS total_games FROM home_game h JOIN park p ON h.park_id = p.park_id WHERE p.park_name = 'Columbia Park' AND h.year = 1907;", "token_usage": {"tokens": 6014, "cost": 0.000966}}
{"sample_id": 3668, "db_id": "baseball_1", "gold_sql": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;", "pred_sql": "SELECT ties FROM postseason WHERE year = 1885 AND ties = 1;", "token_usage": {"tokens": 5993, "cost": 0.00094935}}
{"sample_id": 2768, "db_id": "election", "gold_sql": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id", "pred_sql": "SELECT county.county_name, COUNT(election.delegate) AS number_of_delegates\nFROM county\nLEFT JOIN election ON county.county_id = election.district\nGROUP BY county.county_name;", "token_usage": {"tokens": 715, "cost": 0.00018644999999999998}}
{"sample_id": 2734, "db_id": "election", "gold_sql": "SELECT max(Population) ,  min(Population) FROM county", "pred_sql": "SELECT MAX(population) AS max_population, MIN(population) AS min_population FROM county;", "token_usage": {"tokens": 632, "cost": 0.00014025}}
{"sample_id": 2785, "db_id": "election", "gold_sql": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT party.governor, COUNT(party.governor) AS governor_count \nFROM party \nGROUP BY party.governor \nORDER BY governor_count DESC;", "token_usage": {"tokens": 693, "cost": 0.00017685}}
{"sample_id": 2763, "db_id": "election", "gold_sql": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "pred_sql": "SELECT p.party, p.comptroller FROM party p JOIN election e ON p.party_id = e.party WHERE e.district IN ('district 1', 'district 2');", "token_usage": {"tokens": 676, "cost": 0.00016215}}
{"sample_id": 2751, "db_id": "election", "gold_sql": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "pred_sql": "SELECT election.delegate, county.county_name FROM election JOIN county ON election.district = county.county_id;", "token_usage": {"tokens": 648, "cost": 0.0001494}}
{"sample_id": 2773, "db_id": "election", "gold_sql": "SELECT County_name FROM county ORDER BY County_name DESC", "pred_sql": "SELECT county_name FROM county ORDER BY county_name DESC;", "token_usage": {"tokens": 622, "cost": 0.00013245}}
{"sample_id": 2770, "db_id": "election", "gold_sql": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "pred_sql": "SELECT party.party AS party_name, COUNT(election.delegate) AS number_of_delegates\nFROM party\nJOIN election ON party.party_id = election.party\nGROUP BY party.party;", "token_usage": {"tokens": 675, "cost": 0.00016245000000000002}}
{"sample_id": 2765, "db_id": "election", "gold_sql": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"", "pred_sql": "SELECT DISTINCT committee FROM election WHERE party = (SELECT party_id FROM party WHERE party = 'Democratic')", "token_usage": {"tokens": 641, "cost": 0.00014565}}
{"sample_id": 2756, "db_id": "election", "gold_sql": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000", "pred_sql": "SELECT COUNT(DISTINCT election.delegate) AS distinct_delegates_count\nFROM election\nJOIN county ON election.district = county.county_id\nWHERE county.population > 50000;", "token_usage": {"tokens": 698, "cost": 0.00017715}}
{"sample_id": 2755, "db_id": "election", "gold_sql": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000", "pred_sql": "SELECT COUNT(DISTINCT election.delegate) AS distinct_delegates_count\nFROM election\nJOIN county ON election.district = county.county_id\nWHERE county.population > 50000;", "token_usage": {"tokens": 692, "cost": 0.00017444999999999998}}
{"sample_id": 2749, "db_id": "election", "gold_sql": "SELECT * FROM election", "pred_sql": "SELECT * FROM election;", "token_usage": {"tokens": 602, "cost": 0.00012405}}
{"sample_id": 2745, "db_id": "election", "gold_sql": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "pred_sql": "SELECT lieutenant_governor, comptroller FROM party WHERE party = (SELECT party_id FROM party WHERE party = 'democratic')", "token_usage": {"tokens": 649, "cost": 0.00015000000000000001}}
{"sample_id": 2789, "db_id": "election", "gold_sql": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)", "pred_sql": "SELECT DISTINCT p.party FROM party p LEFT JOIN election e ON p.party_id = e.party WHERE e.delegate IS NULL;", "token_usage": {"tokens": 699, "cost": 0.0001791}}
{"sample_id": 2729, "db_id": "election", "gold_sql": "SELECT County_name ,  Population FROM county", "pred_sql": "SELECT county_name, population FROM county;", "token_usage": {"tokens": 587, "cost": 0.0001137}}
{"sample_id": 2782, "db_id": "election", "gold_sql": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2", "pred_sql": "SELECT party_id, COUNT(*) as record_count FROM party GROUP BY party_id HAVING COUNT(*) >= 2;", "token_usage": {"tokens": 650, "cost": 0.0001524}}
{"sample_id": 5872, "db_id": "tracking_share_transactions", "gold_sql": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "pred_sql": "SELECT investors.investor_id, investors.investor_details \nFROM investors \nJOIN transactions ON investors.investor_id = transactions.investor_id \nGROUP BY investors.investor_id \nORDER BY COUNT(transactions.transaction_id) DESC \nLIMIT 3;", "token_usage": {"tokens": 822, "cost": 0.00019979999999999998}}
{"sample_id": 5837, "db_id": "tracking_share_transactions", "gold_sql": "SELECT count(*) FROM INVESTORS", "pred_sql": "SELECT COUNT(*) AS total_investors FROM investors;", "token_usage": {"tokens": 738, "cost": 0.0001539}}
{"sample_id": 5868, "db_id": "tracking_share_transactions", "gold_sql": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1", "pred_sql": "SELECT transaction_type_code FROM transactions GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1;", "token_usage": {"tokens": 793, "cost": 0.0001851}}
{"sample_id": 5864, "db_id": "tracking_share_transactions", "gold_sql": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id", "pred_sql": "SELECT lots.lot_id, AVG(transactions.amount_of_transaction) AS average_transaction_amount\nFROM transactions\nJOIN transactions_lots ON transactions.transaction_id = transactions_lots.transaction_id\nJOIN lots ON transactions_lots.lot_id = lots.lot_id\nGROUP BY lots.lot_id;", "token_usage": {"tokens": 798, "cost": 0.00018899999999999999}}
{"sample_id": 5847, "db_id": "tracking_share_transactions", "gold_sql": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50", "pred_sql": "SELECT MIN(amount_of_transaction) AS min_transaction_amount FROM transactions WHERE transaction_type_code = 'PUR' AND share_count > 50;", "token_usage": {"tokens": 812, "cost": 0.00019155}}
{"sample_id": 5869, "db_id": "tracking_share_transactions", "gold_sql": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT transaction_type_code, COUNT(*) as frequency FROM transactions GROUP BY transaction_type_code ORDER BY frequency DESC LIMIT 1;", "token_usage": {"tokens": 807, "cost": 0.00019394999999999997}}
{"sample_id": 5853, "db_id": "tracking_share_transactions", "gold_sql": "SELECT lot_details ,  investor_id FROM LOTS", "pred_sql": "SELECT lots.lot_details, lots.investor_id FROM lots;", "token_usage": {"tokens": 728, "cost": 0.0001479}}
{"sample_id": 5867, "db_id": "tracking_share_transactions", "gold_sql": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id", "pred_sql": "SELECT investors.investor_id, COUNT(transactions.transaction_id) AS transaction_count\nFROM investors\nLEFT JOIN transactions ON investors.investor_id = transactions.investor_id\nGROUP BY investors.investor_id;", "token_usage": {"tokens": 812, "cost": 0.00019785}}
{"sample_id": 5848, "db_id": "tracking_share_transactions", "gold_sql": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000", "pred_sql": "SELECT MAX(share_count) AS max_share_count FROM transactions WHERE amount_of_transaction < 10000;", "token_usage": {"tokens": 784, "cost": 0.00017745}}
{"sample_id": 1184, "db_id": "election_representative", "gold_sql": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1", "pred_sql": "SELECT r.party FROM election e JOIN representative r ON e.representative_id = r.representative_id ORDER BY e.votes ASC LIMIT 1;"}
{"sample_id": 1176, "db_id": "election_representative", "gold_sql": "SELECT Date ,  Vote_Percent FROM election", "pred_sql": "SELECT date, vote_percent FROM election;"}
{"sample_id": 1182, "db_id": "election_representative", "gold_sql": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000", "pred_sql": "SELECT r.name FROM representative r JOIN election e ON r.representative_id = e.representative_id WHERE e.votes > '10000';"}
{"sample_id": 1193, "db_id": "election_representative", "gold_sql": "SELECT count(DISTINCT Party) FROM representative", "pred_sql": "SELECT COUNT(DISTINCT party) AS distinct_parties FROM representative;"}
{"sample_id": 7508, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.department_name, d.department_id\nFROM departments d\nJOIN degree_programs dp ON d.department_id = dp.department_id\nGROUP BY d.department_id, d.department_name\nORDER BY COUNT(dp.degree_program_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1478, "cost": 0.0002964}}
{"sample_id": 7502, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT count(*) FROM Courses", "pred_sql": "SELECT COUNT(*) AS total_courses FROM courses;", "token_usage": {"tokens": 1401, "cost": 0.00025334999999999995}}
{"sample_id": 7536, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "pred_sql": "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT DISTINCT semester_id FROM student_enrolment);", "token_usage": {"tokens": 1450, "cost": 0.00028005}}
{"sample_id": 7566, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id ORDER BY COUNT(student_course_id) ASC LIMIT 1)", "token_usage": {"tokens": 1470, "cost": 0.0002898}}
{"sample_id": 7524, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "pred_sql": "SELECT department_description FROM departments WHERE department_name LIKE '%computer%';", "token_usage": {"tokens": 1404, "cost": 0.000252}}
{"sample_id": 7535, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT s.first_name, s.middle_name, s.last_name, s.student_id, COUNT(se.student_enrolment_id) AS number_of_enrollments\nFROM students s\nJOIN student_enrolment se ON s.student_id = se.student_id\nGROUP BY s.student_id\nORDER BY number_of_enrollments DESC\nLIMIT 1;", "token_usage": {"tokens": 1519, "cost": 0.00031334999999999995}}
{"sample_id": 7517, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT section_name ,  section_description FROM Sections", "pred_sql": "SELECT section_name, section_description FROM sections;", "token_usage": {"tokens": 1365, "cost": 0.0002304}}
{"sample_id": 7503, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT count(*) FROM Courses", "pred_sql": "SELECT COUNT(*) AS total_courses FROM courses;", "token_usage": {"tokens": 1391, "cost": 0.00024825}}
{"sample_id": 7511, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "pred_sql": "SELECT COUNT(DISTINCT department_id) AS number_of_departments FROM degree_programs;", "token_usage": {"tokens": 1428, "cost": 0.00026999999999999995}}
{"sample_id": 7509, "db_id": "student_transcripts_tracking", "gold_sql": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "pred_sql": "SELECT d.department_name, d.department_id \nFROM departments d \nJOIN degree_programs dp ON d.department_id = dp.department_id \nGROUP BY d.department_id, d.department_name \nORDER BY COUNT(dp.degree_program_id) DESC \nLIMIT 1;", "token_usage": {"tokens": 1484, "cost": 0.00029955}}
{"sample_id": 7550, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "pred_sql": "SELECT first_name, middle_name, last_name FROM students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;", "token_usage": {"tokens": 1504, "cost": 0.00030974999999999997}}
{"sample_id": 7553, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "pred_sql": "SELECT first_name FROM students WHERE permanent_address_id != current_address_id;", "token_usage": {"tokens": 1446, "cost": 0.00027495}}
{"sample_id": 7504, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "pred_sql": "SELECT course_description FROM courses WHERE course_name = 'Math';", "token_usage": {"tokens": 1398, "cost": 0.000252}}
{"sample_id": 7576, "db_id": "student_transcripts_tracking", "gold_sql": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "pred_sql": "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';", "token_usage": {"tokens": 1508, "cost": 0.00030944999999999996}}
{"sample_id": 7537, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "pred_sql": "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)", "token_usage": {"tokens": 1452, "cost": 0.00028214999999999995}}
{"sample_id": 7514, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "pred_sql": "SELECT COUNT(*) AS degree_count FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Engineering');", "token_usage": {"tokens": 1431, "cost": 0.00027089999999999997}}
{"sample_id": 7542, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "pred_sql": "SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)", "token_usage": {"tokens": 1495, "cost": 0.00030209999999999997}}
{"sample_id": 6530, "db_id": "wine_1", "gold_sql": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"", "pred_sql": "SELECT COUNT(*) FROM wine WHERE winery = 'Robert Biale';", "token_usage": {"tokens": 645, "cost": 0.00013995}}
{"sample_id": 6515, "db_id": "wine_1", "gold_sql": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"", "pred_sql": "SELECT name FROM wine WHERE year = '2008';", "token_usage": {"tokens": 678, "cost": 0.00015884999999999999}}
{"sample_id": 6554, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT Name FROM WINE ORDER BY price", "pred_sql": "SELECT DISTINCT name FROM wine ORDER BY price;", "token_usage": {"tokens": 634, "cost": 0.00013335}}
{"sample_id": 6581, "db_id": "wine_1", "gold_sql": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT winery, COUNT(*) as wine_count FROM wine JOIN grapes ON wine.grape = grapes.grape WHERE grapes.color = 'white' GROUP BY winery ORDER BY wine_count DESC LIMIT 3;", "token_usage": {"tokens": 723, "cost": 0.00018585}}
{"sample_id": 6527, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"", "pred_sql": "SELECT wine.name FROM wine JOIN grapes ON wine.grape = grapes.grape WHERE grapes.color = 'red';", "token_usage": {"tokens": 684, "cost": 0.00016334999999999999}}
{"sample_id": 6564, "db_id": "wine_1", "gold_sql": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"", "pred_sql": "SELECT AVG(price) AS average_price, AVG(cases) AS average_cases FROM wine WHERE year = '2009' AND grape = 'Zinfandel';", "token_usage": {"tokens": 738, "cost": 0.00018944999999999997}}
{"sample_id": 6543, "db_id": "wine_1", "gold_sql": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50", "pred_sql": "SELECT wine.name FROM wine JOIN grapes ON wine.grape = grapes.grape WHERE grapes.color = 'red' AND wine.price > '50';", "token_usage": {"tokens": 709, "cost": 0.00017565000000000001}}
{"sample_id": 6590, "db_id": "wine_1", "gold_sql": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT a.county, COUNT(w.no) AS wine_count \nFROM wine w \nJOIN appellations a ON w.appelation = a.appelation \nWHERE w.score > 90 \nGROUP BY a.county \nORDER BY wine_count DESC \nLIMIT 1;", "token_usage": {"tokens": 750, "cost": 0.00020025000000000002}}
{"sample_id": 6551, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")", "pred_sql": "SELECT DISTINCT name FROM wine WHERE price > (SELECT MAX(price) FROM wine WHERE winery = 'John Anthony')", "token_usage": {"tokens": 674, "cost": 0.00015419999999999998}}
{"sample_id": 6510, "db_id": "wine_1", "gold_sql": "SELECT Name FROM WINE ORDER BY Score LIMIT 1", "pred_sql": "SELECT name FROM wine ORDER BY score DESC LIMIT 1;", "token_usage": {"tokens": 695, "cost": 0.0001704}}
{"sample_id": 6582, "db_id": "wine_1", "gold_sql": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR", "pred_sql": "SELECT wine.grape, wine.winery, wine.year FROM wine WHERE wine.price > 100 ORDER BY wine.year;", "token_usage": {"tokens": 653, "cost": 0.00014025}}
{"sample_id": 6563, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100", "pred_sql": "SELECT DISTINCT winery FROM wine WHERE price BETWEEN '50' AND '100';", "token_usage": {"tokens": 667, "cost": 0.00015089999999999998}}
{"sample_id": 6591, "db_id": "wine_1", "gold_sql": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT a.county, COUNT(w.no) AS wine_count \nFROM wine w \nJOIN appellations a ON w.appelation = a.appelation \nWHERE w.score > '90' \nGROUP BY a.county \nORDER BY wine_count DESC \nLIMIT 1;", "token_usage": {"tokens": 753, "cost": 0.00020294999999999997}}
{"sample_id": 6534, "db_id": "wine_1", "gold_sql": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"", "pred_sql": "SELECT AVG(price) AS average_price FROM wine JOIN appellations ON wine.appelation = appellations.appelation WHERE appellations.county = 'Sonoma';", "token_usage": {"tokens": 684, "cost": 0.00016065}}
{"sample_id": 6532, "db_id": "wine_1", "gold_sql": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"", "pred_sql": "SELECT COUNT(*) FROM appellations WHERE county = 'Napa'", "token_usage": {"tokens": 603, "cost": 0.00011564999999999999}}
{"sample_id": 6528, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"", "pred_sql": "SELECT DISTINCT wine.name FROM wine JOIN appellations ON wine.appelation = appellations.appelation WHERE appellations.area = 'North Coast';", "token_usage": {"tokens": 697, "cost": 0.00016889999999999999}}
{"sample_id": 6525, "db_id": "wine_1", "gold_sql": "SELECT Name FROM WINE WHERE score  >  90", "pred_sql": "SELECT name FROM wine WHERE score > '90';", "token_usage": {"tokens": 647, "cost": 0.00014025}}
{"sample_id": 783, "db_id": "race_track", "gold_sql": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "pred_sql": "SELECT race.name AS race_name, race.date AS race_date, track.name AS track_name FROM race JOIN track ON race.track_id = track.track_id;"}
{"sample_id": 750, "db_id": "race_track", "gold_sql": "SELECT name ,  LOCATION FROM track", "pred_sql": "SELECT name, location FROM track;"}
{"sample_id": 759, "db_id": "race_track", "gold_sql": "SELECT DISTINCT LOCATION FROM track", "pred_sql": "SELECT DISTINCT location FROM track;"}
{"sample_id": 747, "db_id": "race_track", "gold_sql": "SELECT count(*) FROM track", "pred_sql": "SELECT COUNT(*) AS total_tracks FROM track;"}
{"sample_id": 755, "db_id": "race_track", "gold_sql": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track", "pred_sql": "SELECT MIN(seating) AS min_seating, MAX(seating) AS max_seating, AVG(seating) AS avg_seating FROM track;"}
{"sample_id": 760, "db_id": "race_track", "gold_sql": "SELECT DISTINCT LOCATION FROM track", "pred_sql": "SELECT DISTINCT location FROM track;"}
{"sample_id": 767, "db_id": "race_track", "gold_sql": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS", "pred_sql": "SELECT class, COUNT(*) AS number_of_races FROM race GROUP BY class;"}
{"sample_id": 763, "db_id": "race_track", "gold_sql": "SELECT DISTINCT CLASS FROM race", "pred_sql": "SELECT DISTINCT class FROM race;"}
{"sample_id": 765, "db_id": "race_track", "gold_sql": "SELECT name ,  CLASS ,  date FROM race", "pred_sql": "SELECT name, class, date FROM race;"}
{"sample_id": 2044, "db_id": "party_people", "gold_sql": "SELECT count(DISTINCT party_name) FROM party", "pred_sql": "SELECT COUNT(DISTINCT party_id) AS number_of_parties FROM party;", "token_usage": {"tokens": 687, "cost": 0.00015255}}
{"sample_id": 2073, "db_id": "party_people", "gold_sql": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id", "pred_sql": "SELECT member_name FROM member WHERE member_id NOT IN (SELECT member_in_charge_id FROM party_events)", "token_usage": {"tokens": 725, "cost": 0.00017264999999999997}}
{"sample_id": 2039, "db_id": "party_people", "gold_sql": "SELECT count(*) FROM region", "pred_sql": "SELECT COUNT(*) AS total_regions FROM region;", "token_usage": {"tokens": 700, "cost": 0.00016034999999999997}}
{"sample_id": 2067, "db_id": "party_people", "gold_sql": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "pred_sql": "SELECT member_name FROM member WHERE party_id NOT IN (SELECT party_id FROM party WHERE party_name = 'Progress Party');", "token_usage": {"tokens": 735, "cost": 0.00017955}}
{"sample_id": 2064, "db_id": "party_people", "gold_sql": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)", "pred_sql": "SELECT party.party_name FROM party LEFT JOIN member ON party.party_id = member.party_id WHERE member.member_id IS NULL;", "token_usage": {"tokens": 709, "cost": 0.00016395}}
{"sample_id": 2058, "db_id": "party_people", "gold_sql": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "pred_sql": "SELECT party.party_name, COUNT(member.member_id) AS member_count\nFROM party\nLEFT JOIN member ON party.party_id = member.party_id\nGROUP BY party.party_id;", "token_usage": {"tokens": 735, "cost": 0.00018089999999999995}}
{"sample_id": 2075, "db_id": "party_people", "gold_sql": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2", "pred_sql": "SELECT party.party_name\nFROM party\nJOIN party_events ON party.party_id = party_events.party_id\nGROUP BY party.party_id\nHAVING COUNT(party_events.event_id) >= 2;", "token_usage": {"tokens": 751, "cost": 0.00018825}}
{"sample_id": 2047, "db_id": "party_people", "gold_sql": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "pred_sql": "SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959;", "token_usage": {"tokens": 727, "cost": 0.00017249999999999996}}
{"sample_id": 2040, "db_id": "party_people", "gold_sql": "SELECT count(*) FROM region", "pred_sql": "SELECT COUNT(*) AS region_count FROM region;", "token_usage": {"tokens": 676, "cost": 0.00014639999999999998}}
{"sample_id": 2052, "db_id": "party_people", "gold_sql": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "pred_sql": "SELECT p.minister, p.party_name FROM party p ORDER BY p.took_office DESC;", "token_usage": {"tokens": 689, "cost": 0.00014744999999999998}}
{"sample_id": 2298, "db_id": "perpetrator", "gold_sql": "SELECT Injured FROM perpetrator ORDER BY Injured ASC", "pred_sql": "SELECT SUM(injured) AS total_injured FROM perpetrator GROUP BY people_id ORDER BY total_injured ASC;", "token_usage": {"tokens": 552, "cost": 0.00013769999999999999}}
{"sample_id": 2297, "db_id": "perpetrator", "gold_sql": "SELECT Date FROM perpetrator ORDER BY Killed DESC", "pred_sql": "SELECT date FROM perpetrator ORDER BY CAST(killed AS INTEGER) DESC;", "token_usage": {"tokens": 549, "cost": 0.00013455}}
{"sample_id": 2308, "db_id": "perpetrator", "gold_sql": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country", "pred_sql": "SELECT country, COUNT(perpetrator_id) AS number_of_perpetrators FROM perpetrator GROUP BY country;", "token_usage": {"tokens": 550, "cost": 0.0001338}}
{"sample_id": 2309, "db_id": "perpetrator", "gold_sql": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT country, COUNT(perpetrator_id) AS perpetrator_count FROM perpetrator GROUP BY country ORDER BY perpetrator_count DESC LIMIT 1;", "token_usage": {"tokens": 608, "cost": 0.00017219999999999996}}
{"sample_id": 2304, "db_id": "perpetrator", "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1", "pred_sql": "SELECT p.name FROM people p JOIN perpetrator pr ON p.people_id = pr.people_id ORDER BY p.weight DESC LIMIT 1;", "token_usage": {"tokens": 580, "cost": 0.00015404999999999998}}
{"sample_id": 1822, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "pred_sql": "SELECT a.name, (s.balance + c.balance) AS total_balance \nFROM accounts a \nJOIN savings s ON a.custid = s.custid \nJOIN checking c ON a.custid = c.custid \nWHERE s.balance < c.balance;"}
{"sample_id": 1778, "db_id": "small_bank_1", "gold_sql": "SELECT count(*) FROM accounts", "pred_sql": "SELECT COUNT(*) AS total_accounts FROM accounts;"}
{"sample_id": 1782, "db_id": "small_bank_1", "gold_sql": "SELECT avg(balance) FROM checking", "pred_sql": "SELECT AVG(balance) AS average_checking_balance FROM checking;"}
{"sample_id": 1802, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "pred_sql": "SELECT a.name, c.balance FROM accounts a JOIN savings s ON a.custid = s.custid JOIN checking c ON a.custid = c.custid WHERE s.balance = (SELECT MIN(balance) FROM savings)"}
{"sample_id": 1790, "db_id": "small_bank_1", "gold_sql": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "pred_sql": "SELECT a.name, s.balance AS savings_balance, c.balance AS checking_balance \nFROM accounts a \nJOIN savings s ON a.custid = s.custid \nJOIN checking c ON a.custid = c.custid \nWHERE a.name = 'Brown';"}
{"sample_id": 1783, "db_id": "small_bank_1", "gold_sql": "SELECT avg(balance) FROM checking", "pred_sql": "SELECT AVG(balance) AS average_checking_balance FROM checking;"}
{"sample_id": 1804, "db_id": "small_bank_1", "gold_sql": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "pred_sql": "SELECT a.name, COUNT(c.custid) AS checking_account_count\nFROM accounts a\nLEFT JOIN checking c ON a.custid = c.custid\nGROUP BY a.name;"}
{"sample_id": 1792, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)", "pred_sql": "SELECT a.name \nFROM accounts a \nJOIN checking c ON a.custid = c.custid \nJOIN savings s ON a.custid = s.custid \nWHERE c.balance > (SELECT AVG(balance) FROM checking) \nAND s.balance < (SELECT AVG(balance) FROM savings);"}
{"sample_id": 1800, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "pred_sql": "SELECT a.name, COALESCE(s.balance, 0) + COALESCE(c.balance, 0) AS total_balance\nFROM accounts a\nLEFT JOIN savings s ON a.custid = s.custid\nLEFT JOIN checking c ON a.custid = c.custid\nWHERE s.balance > (SELECT AVG(balance) FROM savings)"}
{"sample_id": 1821, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "pred_sql": "SELECT a.name FROM accounts a JOIN checking c ON a.custid = c.custid JOIN savings s ON a.custid = s.custid WHERE c.balance > s.balance;"}
{"sample_id": 2724, "db_id": "storm_record", "gold_sql": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1", "pred_sql": "SELECT region.region_name \nFROM region \nJOIN affected_region ON region.region_id = affected_region.region_id \nJOIN storm ON affected_region.storm_id = storm.storm_id \nWHERE storm.number_deaths = (SELECT MAX(number_deaths) FROM storm);", "token_usage": {"tokens": 660, "cost": 0.00019124999999999996}}
{"sample_id": 2721, "db_id": "storm_record", "gold_sql": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2", "pred_sql": "SELECT r.region_name \nFROM region r \nJOIN affected_region ar ON r.region_id = ar.region_id \nJOIN storm s ON ar.storm_id = s.storm_id \nGROUP BY r.region_name \nHAVING COUNT(s.storm_id) >= 2;", "token_usage": {"tokens": 639, "cost": 0.0001827}}
{"sample_id": 2717, "db_id": "storm_record", "gold_sql": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "pred_sql": "SELECT DISTINCT region.region_name \nFROM region \nJOIN affected_region ON region.region_id = affected_region.region_id \nJOIN storm ON affected_region.storm_id = storm.storm_id \nWHERE storm.number_deaths >= '10';", "token_usage": {"tokens": 613, "cost": 0.00016304999999999998}}
{"sample_id": 2722, "db_id": "storm_record", "gold_sql": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2", "pred_sql": "SELECT r.region_name \nFROM region r \nJOIN affected_region ar ON r.region_id = ar.region_id \nJOIN storm s ON ar.storm_id = s.storm_id \nGROUP BY r.region_id \nHAVING COUNT(s.storm_id) >= 2;", "token_usage": {"tokens": 657, "cost": 0.00019259999999999997}}
{"sample_id": 2714, "db_id": "storm_record", "gold_sql": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10", "pred_sql": "SELECT s.name \nFROM storm s \nJOIN affected_region ar ON s.storm_id = ar.storm_id \nGROUP BY s.storm_id \nHAVING COUNT(DISTINCT ar.region_id) >= 2 AND SUM(ar.number_city_affected) >= 10;", "token_usage": {"tokens": 674, "cost": 0.00019739999999999997}}
{"sample_id": 2703, "db_id": "storm_record", "gold_sql": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)", "pred_sql": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region);", "token_usage": {"tokens": 547, "cost": 0.00012839999999999998}}
{"sample_id": 2702, "db_id": "storm_record", "gold_sql": "SELECT count(DISTINCT region_id) FROM affected_region", "pred_sql": "SELECT COUNT(DISTINCT region_id) AS number_of_affected_regions FROM affected_region;", "token_usage": {"tokens": 554, "cost": 0.00013259999999999997}}
{"sample_id": 2712, "db_id": "storm_record", "gold_sql": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "pred_sql": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region);", "token_usage": {"tokens": 603, "cost": 0.00015975}}
{"sample_id": 2704, "db_id": "storm_record", "gold_sql": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)", "pred_sql": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT DISTINCT region_id FROM affected_region);", "token_usage": {"tokens": 578, "cost": 0.00014565}}
{"sample_id": 2707, "db_id": "storm_record", "gold_sql": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id", "pred_sql": "SELECT storm.name, COUNT(affected_region.region_id) AS number_of_affected_regions\nFROM storm\nLEFT JOIN affected_region ON storm.storm_id = affected_region.storm_id\nGROUP BY storm.storm_id;", "token_usage": {"tokens": 617, "cost": 0.00016724999999999997}}
{"sample_id": 4534, "db_id": "document_management", "gold_sql": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2", "pred_sql": "SELECT document_type_code, COUNT(document_code) AS document_count \nFROM documents \nGROUP BY document_type_code \nHAVING COUNT(document_code) > 2;", "token_usage": {"tokens": 974, "cost": 0.00020819999999999996}}
{"sample_id": 4510, "db_id": "document_management", "gold_sql": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"", "pred_sql": "SELECT ds.section_title \nFROM documents d \nJOIN document_sections ds ON d.document_code = ds.document_code \nWHERE d.document_name = 'David CV';", "token_usage": {"tokens": 995, "cost": 0.00021899999999999996}}
{"sample_id": 4517, "db_id": "document_management", "gold_sql": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\"", "pred_sql": "SELECT AVG(CAST(d.access_count AS INTEGER)) AS average_access_count\nFROM documents d\nJOIN document_functional_areas dfa ON d.document_code = dfa.document_code\nJOIN functional_areas fa ON dfa.functional_area_code = fa.functional_area_code\nWHERE fa.functional_area_description = 'Acknowledgement';", "token_usage": {"tokens": 1066, "cost": 0.00025979999999999997}}
{"sample_id": 4518, "db_id": "document_management", "gold_sql": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id", "pred_sql": "SELECT d.document_name \nFROM documents d \nLEFT JOIN document_sections ds ON d.document_code = ds.document_code \nLEFT JOIN document_sections_images dsi ON ds.section_id = dsi.section_id \nWHERE dsi.image_id IS NULL;", "token_usage": {"tokens": 1007, "cost": 0.00022889999999999998}}
{"sample_id": 4500, "db_id": "document_management", "gold_sql": "SELECT avg(access_count) FROM documents", "pred_sql": "SELECT AVG(access_count) AS average_access_count FROM documents;", "token_usage": {"tokens": 922, "cost": 0.00017789999999999996}}
{"sample_id": 4520, "db_id": "document_management", "gold_sql": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT documents.document_name \nFROM documents \nJOIN document_sections ON documents.document_code = document_sections.document_code \nGROUP BY documents.document_code \nORDER BY COUNT(document_sections.section_id) DESC \nLIMIT 1;", "token_usage": {"tokens": 1018, "cost": 0.00023324999999999998}}
{"sample_id": 4495, "db_id": "document_management", "gold_sql": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1", "pred_sql": "SELECT document_name, access_count FROM documents ORDER BY access_count DESC LIMIT 1;", "token_usage": {"tokens": 975, "cost": 0.00020159999999999997}}
{"sample_id": 4506, "db_id": "document_management", "gold_sql": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT d.document_code, d.document_name \nFROM documents d \nJOIN document_structures ds ON d.document_structure_code = ds.document_structure_code \nWHERE d.document_type_code IN (\n    SELECT document_type_code \n    FROM documents \n    GROUP BY document_type_code \n    ORDER BY SUM(access_count) DESC \n    LIMIT 3\n) \nAND d.document_structure_code IN (\n    SELECT document_structure_code \n    FROM documents \n    GROUP BY document_structure_code \n    ORDER BY SUM(access_count) DESC \n    LIMIT 3\n);", "token_usage": {"tokens": 1067, "cost": 0.00025905}}
{"sample_id": 4519, "db_id": "document_management", "gold_sql": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id", "pred_sql": "SELECT d.document_name \nFROM documents d \nLEFT JOIN document_sections ds ON d.document_code = ds.document_code \nLEFT JOIN document_sections_images dsi ON ds.section_id = dsi.section_id \nWHERE dsi.image_id IS NULL;", "token_usage": {"tokens": 1010, "cost": 0.00022889999999999998}}
{"sample_id": 4516, "db_id": "document_management", "gold_sql": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\"", "pred_sql": "SELECT AVG(d.access_count) AS average_access_count\nFROM documents d\nJOIN document_functional_areas dfa ON d.document_code = dfa.document_code\nJOIN functional_areas fa ON dfa.functional_area_code = fa.functional_area_code\nWHERE fa.functional_area_description = 'Acknowledgement';", "token_usage": {"tokens": 1019, "cost": 0.00023384999999999997}}
{"sample_id": 2800, "db_id": "news_report", "gold_sql": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1", "pred_sql": "SELECT nationality FROM journalist WHERE years_working = (SELECT MAX(years_working) FROM journalist);", "token_usage": {"tokens": 596, "cost": 0.00014925}}
{"sample_id": 2804, "db_id": "news_report", "gold_sql": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC", "pred_sql": "SELECT date, venue, name FROM event ORDER BY event_attendance DESC;", "token_usage": {"tokens": 558, "cost": 0.00012555}}
{"sample_id": 2799, "db_id": "news_report", "gold_sql": "SELECT avg(Years_working) FROM journalist", "pred_sql": "SELECT AVG(years_working) AS average_years_working FROM journalist;", "token_usage": {"tokens": 557, "cost": 0.00012675}}
{"sample_id": 2801, "db_id": "news_report", "gold_sql": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality", "pred_sql": "SELECT nationality, COUNT(journalist_id) AS number_of_journalists FROM journalist GROUP BY nationality;", "token_usage": {"tokens": 552, "cost": 0.0001233}}
{"sample_id": 2802, "db_id": "news_report", "gold_sql": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT nationality, COUNT(*) as count FROM journalist GROUP BY nationality ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 569, "cost": 0.0001362}}
{"sample_id": 7692, "db_id": "voter_1", "gold_sql": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "pred_sql": "SELECT votes.created, votes.state, votes.phone_number \nFROM votes \nJOIN contestants ON votes.contestant_number = contestants.contestant_number \nWHERE contestants.contestant_name = 'Tabatha Gehling';", "token_usage": {"tokens": 568, "cost": 0.00015045}}
{"sample_id": 7688, "db_id": "voter_1", "gold_sql": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT c.contestant_number, c.contestant_name FROM contestants c JOIN votes v ON c.contestant_number = v.contestant_number GROUP BY c.contestant_number, c.contestant_name ORDER BY COUNT(v.vote_id) ASC LIMIT 1;", "token_usage": {"tokens": 619, "cost": 0.00018284999999999997}}
{"sample_id": 7682, "db_id": "voter_1", "gold_sql": "SELECT vote_id ,  phone_number ,  state FROM votes", "pred_sql": "SELECT vote_id, phone_number, state FROM votes;", "token_usage": {"tokens": 475, "cost": 0.00010094999999999999}}
{"sample_id": 1737, "db_id": "gymnast", "gold_sql": "SELECT count(*) FROM gymnast", "pred_sql": "SELECT COUNT(*) AS number_of_gymnasts FROM gymnast;"}
{"sample_id": 1767, "db_id": "gymnast", "gold_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC", "pred_sql": "SELECT p.name FROM people p JOIN gymnast g ON p.people_id = g.gymnast_id ORDER BY p.height ASC;"}
{"sample_id": 1746, "db_id": "gymnast", "gold_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "pred_sql": "SELECT name FROM people WHERE people_id IN (SELECT gymnast_id FROM gymnast);"}
{"sample_id": 1772, "db_id": "gymnast", "gold_sql": "SELECT count(DISTINCT Hometown) FROM people", "pred_sql": "SELECT COUNT(DISTINCT hometown) AS distinct_hometowns FROM people;"}
{"sample_id": 1764, "db_id": "gymnast", "gold_sql": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2", "pred_sql": "SELECT hometown FROM people WHERE people_id IN (SELECT gymnast_id FROM gymnast) GROUP BY hometown HAVING COUNT(gymnast_id) >= 2;"}
{"sample_id": 1750, "db_id": "gymnast", "gold_sql": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1", "pred_sql": "SELECT age FROM people WHERE height = (SELECT MAX(height) FROM people);"}
{"sample_id": 1774, "db_id": "gymnast", "gold_sql": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC", "pred_sql": "SELECT p.age FROM gymnast g JOIN people p ON g.gymnast_id = p.people_id ORDER BY g.total_points DESC;"}
{"sample_id": 1748, "db_id": "gymnast", "gold_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"", "pred_sql": "SELECT p.name FROM people p JOIN gymnast g ON p.people_id = g.gymnast_id WHERE p.hometown != 'Santo Domingo';"}
{"sample_id": 6822, "db_id": "flight_4", "gold_sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "pred_sql": "SELECT name, city, country FROM airports WHERE elevation = (SELECT MIN(elevation) FROM airports);", "token_usage": {"tokens": 722, "cost": 0.00016409999999999998}}
{"sample_id": 6863, "db_id": "flight_4", "gold_sql": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "pred_sql": "SELECT COUNT(*) AS number_of_routes FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy');", "token_usage": {"tokens": 742, "cost": 0.00017834999999999997}}
{"sample_id": 6799, "db_id": "flight_4", "gold_sql": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "pred_sql": "SELECT name, city, country, elevation FROM airports WHERE city = 'New York';", "token_usage": {"tokens": 707, "cost": 0.00015329999999999999}}
{"sample_id": 6796, "db_id": "flight_4", "gold_sql": "SELECT name FROM airports WHERE city  =  'Goroka'", "pred_sql": "SELECT name FROM airports WHERE city = 'Goroka';", "token_usage": {"tokens": 707, "cost": 0.00015689999999999996}}
{"sample_id": 6860, "db_id": "flight_4", "gold_sql": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "pred_sql": "SELECT a.country, r.airline, COUNT(r.rid) AS route_count \nFROM routes r \nJOIN airlines a ON r.alid = a.alid \nGROUP BY a.country, r.airline;", "token_usage": {"tokens": 763, "cost": 0.00019049999999999997}}
{"sample_id": 6866, "db_id": "flight_4", "gold_sql": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "pred_sql": "SELECT COUNT(*) AS route_count FROM routes WHERE dst_ap = 'John F Kennedy International Airport';", "token_usage": {"tokens": 721, "cost": 0.00016484999999999997}}
{"sample_id": 6813, "db_id": "flight_4", "gold_sql": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1", "pred_sql": "SELECT country FROM airports WHERE elevation = (SELECT MAX(elevation) FROM airports);", "token_usage": {"tokens": 757, "cost": 0.00018734999999999997}}
{"sample_id": 6833, "db_id": "flight_4", "gold_sql": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "pred_sql": "SELECT COUNT(DISTINCT dst_apid) AS num_dest_airports FROM routes JOIN airlines ON routes.alid = airlines.alid WHERE airlines.name = 'American Airlines';", "token_usage": {"tokens": 758, "cost": 0.00018659999999999998}}
{"sample_id": 6824, "db_id": "flight_4", "gold_sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "pred_sql": "SELECT name, city, country FROM airports ORDER BY y DESC LIMIT 1;", "token_usage": {"tokens": 722, "cost": 0.00016409999999999998}}
{"sample_id": 6850, "db_id": "flight_4", "gold_sql": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "pred_sql": "SELECT city, COUNT(*) as airport_count\nFROM airports\nGROUP BY city\nHAVING COUNT(*) > 2\nORDER BY airport_count DESC;", "token_usage": {"tokens": 740, "cost": 0.00017489999999999997}}
{"sample_id": 6829, "db_id": "flight_4", "gold_sql": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "pred_sql": "SELECT a.name\nFROM airlines a\nJOIN routes r ON a.alid = r.alid\nGROUP BY a.alid\nORDER BY COUNT(r.rid) DESC\nLIMIT 10;", "token_usage": {"tokens": 748, "cost": 0.00017925}}
{"sample_id": 6817, "db_id": "flight_4", "gold_sql": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'", "pred_sql": "SELECT COUNT(DISTINCT city) AS city_count FROM airports WHERE country = 'Greenland';", "token_usage": {"tokens": 716, "cost": 0.0001623}}
{"sample_id": 6859, "db_id": "flight_4", "gold_sql": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "pred_sql": "SELECT city FROM airports GROUP BY city HAVING COUNT(apid) = 2;", "token_usage": {"tokens": 692, "cost": 0.00014969999999999998}}
{"sample_id": 6804, "db_id": "flight_4", "gold_sql": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'", "pred_sql": "SELECT MAX(elevation) AS max_elevation FROM airports WHERE country = 'Iceland';", "token_usage": {"tokens": 724, "cost": 0.00016664999999999998}}
{"sample_id": 6861, "db_id": "flight_4", "gold_sql": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "pred_sql": "SELECT a.country, r.airline, COUNT(r.rid) AS total_routes\nFROM routes r\nJOIN airlines a ON r.alid = a.alid\nGROUP BY a.country, r.airline;", "token_usage": {"tokens": 745, "cost": 0.00017834999999999997}}
{"sample_id": 6852, "db_id": "flight_4", "gold_sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "pred_sql": "SELECT src_apid, src_ap, COUNT(rid) AS route_count FROM routes GROUP BY src_apid, src_ap;", "token_usage": {"tokens": 725, "cost": 0.00016724999999999997}}
{"sample_id": 6837, "db_id": "flight_4", "gold_sql": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT country, COUNT(*) AS airline_count FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY airline_count DESC;", "token_usage": {"tokens": 757, "cost": 0.00018644999999999998}}
{"sample_id": 1132, "db_id": "climbing", "gold_sql": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1", "pred_sql": "SELECT m.height FROM mountain m JOIN climber c ON m.mountain_id = c.mountain_id WHERE c.points = (SELECT MAX(points) FROM climber);"}
{"sample_id": 1117, "db_id": "climbing", "gold_sql": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"", "pred_sql": "SELECT MAX(points) AS max_points FROM climber WHERE country = 'United Kingdom';"}
{"sample_id": 1115, "db_id": "climbing", "gold_sql": "SELECT Name FROM climber WHERE Country != \"Switzerland\"", "pred_sql": "SELECT name FROM climber WHERE country != 'Switzerland';"}
{"sample_id": 1119, "db_id": "climbing", "gold_sql": "SELECT COUNT(DISTINCT Country) FROM climber", "pred_sql": "SELECT COUNT(DISTINCT country) AS different_countries FROM climber;"}
{"sample_id": 1120, "db_id": "climbing", "gold_sql": "SELECT Name FROM mountain ORDER BY Name ASC", "pred_sql": "SELECT name FROM mountain ORDER BY name ASC;"}
{"sample_id": 1129, "db_id": "climbing", "gold_sql": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "pred_sql": "SELECT climber.name AS climber_name, mountain.name AS mountain_name FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id;"}
{"sample_id": 1114, "db_id": "climbing", "gold_sql": "SELECT Name FROM climber WHERE Country != \"Switzerland\"", "pred_sql": "SELECT name FROM climber WHERE country != 'Switzerland';"}
{"sample_id": 1136, "db_id": "climbing", "gold_sql": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"", "pred_sql": "SELECT time FROM climber INNER JOIN mountain ON climber.mountain_id = mountain.mountain_id WHERE mountain.country = 'Uganda';"}
{"sample_id": 7826, "db_id": "orchestra", "gold_sql": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "pred_sql": "SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final';", "token_usage": {"tokens": 764, "cost": 0.00016815}}
{"sample_id": 7845, "db_id": "orchestra", "gold_sql": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT record_company, COUNT(orchestra_id) AS orchestra_count\nFROM orchestra\nGROUP BY record_company\nORDER BY orchestra_count DESC\nLIMIT 1;", "token_usage": {"tokens": 812, "cost": 0.00019919999999999996}}
{"sample_id": 7821, "db_id": "orchestra", "gold_sql": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "pred_sql": "SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC;", "token_usage": {"tokens": 747, "cost": 0.00015749999999999998}}
{"sample_id": 7815, "db_id": "orchestra", "gold_sql": "SELECT count(*) FROM conductor", "pred_sql": "SELECT COUNT(*) AS conductor_count FROM conductor;", "token_usage": {"tokens": 724, "cost": 0.0001491}}
{"sample_id": 7839, "db_id": "orchestra", "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "pred_sql": "SELECT DISTINCT c.name \nFROM conductor c \nJOIN orchestra o ON c.conductor_id = o.conductor_id \nWHERE o.year_of_founded > 2008;", "token_usage": {"tokens": 775, "cost": 0.00017475}}
{"sample_id": 7838, "db_id": "orchestra", "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1;", "token_usage": {"tokens": 776, "cost": 0.0001767}}
{"sample_id": 7829, "db_id": "orchestra", "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "pred_sql": "SELECT name FROM conductor ORDER BY year_of_work DESC;", "token_usage": {"tokens": 769, "cost": 0.00017339999999999999}}
{"sample_id": 7818, "db_id": "orchestra", "gold_sql": "SELECT Name FROM conductor ORDER BY Age ASC", "pred_sql": "SELECT name FROM conductor ORDER BY age;", "token_usage": {"tokens": 746, "cost": 0.00016005}}
{"sample_id": 6074, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"", "pred_sql": "SELECT customers.customer_name FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Colorado';", "token_usage": {"tokens": 933, "cost": 0.00019169999999999997}}
{"sample_id": 6133, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id", "pred_sql": "SELECT customer_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders)", "token_usage": {"tokens": 976, "cost": 0.00021704999999999996}}
{"sample_id": 6132, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id", "pred_sql": "SELECT customer_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders);", "token_usage": {"tokens": 974, "cost": 0.00021629999999999997}}
{"sample_id": 6058, "db_id": "customers_and_addresses", "gold_sql": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT payment_method, COUNT(customer_id) AS customer_count \nFROM customers \nGROUP BY payment_method \nORDER BY customer_count DESC \nLIMIT 1;", "token_usage": {"tokens": 962, "cost": 0.00020999999999999998}}
{"sample_id": 6102, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1", "pred_sql": "SELECT c.customer_name\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nJOIN order_items oi ON co.order_id = oi.order_id\nGROUP BY c.customer_id\nORDER BY SUM(oi.order_quantity) DESC\nLIMIT 1;", "token_usage": {"tokens": 1019, "cost": 0.00024195}}
{"sample_id": 6059, "db_id": "customers_and_addresses", "gold_sql": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT payment_method, COUNT(payment_method) AS frequency FROM customers GROUP BY payment_method ORDER BY frequency DESC LIMIT 1;", "token_usage": {"tokens": 977, "cost": 0.00021854999999999997}}
{"sample_id": 6098, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "pred_sql": "SELECT c.customer_name, cc.active_from_date \nFROM customers c \nJOIN customer_contact_channels cc ON c.customer_id = cc.customer_id \nWHERE cc.channel_code = 'email' AND cc.active_to_date IS NULL;", "token_usage": {"tokens": 982, "cost": 0.0002184}}
{"sample_id": 6086, "db_id": "customers_and_addresses", "gold_sql": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "pred_sql": "SELECT country FROM addresses GROUP BY country HAVING COUNT(address_id) > 4;", "token_usage": {"tokens": 922, "cost": 0.00018509999999999995}}
{"sample_id": 6103, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1", "pred_sql": "SELECT c.customer_name\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nJOIN order_items oi ON co.order_id = oi.order_id\nGROUP BY c.customer_id\nORDER BY SUM(oi.order_quantity) DESC\nLIMIT 1;", "token_usage": {"tokens": 1018, "cost": 0.0002409}}
{"sample_id": 6067, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "pred_sql": "SELECT customer_name FROM customers WHERE customer_name LIKE '%Alex%';", "token_usage": {"tokens": 919, "cost": 0.00018284999999999997}}
{"sample_id": 6056, "db_id": "customers_and_addresses", "gold_sql": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20", "pred_sql": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN '10' AND '20';", "token_usage": {"tokens": 957, "cost": 0.00020204999999999998}}
{"sample_id": 6075, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"", "pred_sql": "SELECT customers.customer_name FROM customers JOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id JOIN addresses ON customer_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Colorado';", "token_usage": {"tokens": 954, "cost": 0.00020385}}
{"sample_id": 6124, "db_id": "customers_and_addresses", "gold_sql": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "pred_sql": "SELECT products.product_id, SUM(order_items.order_quantity) AS total_quantity\nFROM products\nJOIN order_items ON products.product_id = order_items.product_id\nGROUP BY products.product_id\nORDER BY total_quantity DESC\nLIMIT 1;", "token_usage": {"tokens": 1007, "cost": 0.00023384999999999997}}
{"sample_id": 6090, "db_id": "customers_and_addresses", "gold_sql": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "pred_sql": "SELECT channel_code, contact_number FROM customer_contact_channels cc JOIN customers c ON cc.customer_id = c.customer_id WHERE c.customer_name = 'Tillman Ernser';", "token_usage": {"tokens": 1013, "cost": 0.00023654999999999998}}
{"sample_id": 6070, "db_id": "customers_and_addresses", "gold_sql": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"", "pred_sql": "SELECT a.address_content FROM customers c JOIN customer_addresses ca ON c.customer_id = ca.customer_id JOIN addresses a ON ca.address_id = a.address_id WHERE c.customer_name = 'Maudie Kertzmann';", "token_usage": {"tokens": 986, "cost": 0.00022034999999999996}}
{"sample_id": 6073, "db_id": "customers_and_addresses", "gold_sql": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\"", "pred_sql": "SELECT COUNT(DISTINCT c.customer_id) AS number_of_customers FROM customers c JOIN customer_addresses ca ON c.customer_id = ca.customer_id JOIN addresses a ON ca.address_id = a.address_id WHERE a.city = 'Lake Geovannyton';", "token_usage": {"tokens": 1017, "cost": 0.0002394}}
{"sample_id": 6089, "db_id": "customers_and_addresses", "gold_sql": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5", "pred_sql": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING COUNT(*) < 5;", "token_usage": {"tokens": 914, "cost": 0.00017984999999999998}}
{"sample_id": 6135, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'", "pred_sql": "SELECT DISTINCT c.customer_name \nFROM customers c \nJOIN customer_orders co ON c.customer_id = co.customer_id \nJOIN order_items oi ON co.order_id = oi.order_id \nJOIN products p ON oi.product_id = p.product_id \nWHERE p.product_details IN ('Latte', 'Americano') \nGROUP BY c.customer_id \nHAVING COUNT(DISTINCT p.product_details) = 2;", "token_usage": {"tokens": 1054, "cost": 0.00026205}}
{"sample_id": 6119, "db_id": "customers_and_addresses", "gold_sql": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"", "pred_sql": "SELECT SUM(order_items.order_quantity) AS total_products_purchased\nFROM customer_orders\nJOIN order_items ON customer_orders.order_id = order_items.order_id\nWHERE customer_orders.order_date < '2018-03-17 07:13:53';", "token_usage": {"tokens": 1053, "cost": 0.0002583}}
{"sample_id": 3346, "db_id": "sports_competition", "gold_sql": "SELECT name FROM club ORDER BY name DESC", "pred_sql": "SELECT name FROM club ORDER BY name DESC;", "token_usage": {"tokens": 786, "cost": 0.00015884999999999999}}
{"sample_id": 3376, "db_id": "sports_competition", "gold_sql": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT country, COUNT(*) AS tournament_count \nFROM competition \nWHERE competition_type = 'tournament' \nGROUP BY country \nORDER BY tournament_count DESC \nLIMIT 1;", "token_usage": {"tokens": 890, "cost": 0.00021989999999999998}}
{"sample_id": 3366, "db_id": "sports_competition", "gold_sql": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10", "pred_sql": "SELECT DISTINCT p1.position \nFROM player p1 \nJOIN player p2 ON p1.position = p2.position \nWHERE p1.points > 20 AND p2.points < 10;", "token_usage": {"tokens": 847, "cost": 0.00019049999999999997}}
{"sample_id": 3353, "db_id": "sports_competition", "gold_sql": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\"", "pred_sql": "SELECT AVG(points) AS average_points FROM player WHERE club_id = (SELECT club_id FROM club WHERE name = 'AIB');", "token_usage": {"tokens": 836, "cost": 0.00018524999999999998}}
{"sample_id": 3338, "db_id": "sports_competition", "gold_sql": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"", "pred_sql": "SELECT DISTINCT year FROM competition WHERE competition_type != 'Tournament';", "token_usage": {"tokens": 804, "cost": 0.00016649999999999998}}
{"sample_id": 3370, "db_id": "sports_competition", "gold_sql": "SELECT count(DISTINCT POSITION) FROM player", "pred_sql": "SELECT COUNT(DISTINCT position) AS different_positions FROM player;", "token_usage": {"tokens": 781, "cost": 0.00015674999999999996}}
{"sample_id": 3372, "db_id": "sports_competition", "gold_sql": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)", "pred_sql": "SELECT name FROM player WHERE points > (SELECT AVG(points) FROM player)", "token_usage": {"tokens": 811, "cost": 0.0001716}}
{"sample_id": 3371, "db_id": "sports_competition", "gold_sql": "SELECT count(DISTINCT POSITION) FROM player", "pred_sql": "SELECT COUNT(DISTINCT position) AS different_positions FROM player;", "token_usage": {"tokens": 790, "cost": 0.00016125}}
{"sample_id": 3378, "db_id": "sports_competition", "gold_sql": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'", "pred_sql": "SELECT DISTINCT c.country FROM competition c JOIN competition_result cr ON c.competition_id = cr.competition_id WHERE c.competition_type IN ('Friendly', 'Tournament') GROUP BY c.country HAVING COUNT(DISTINCT c.competition_type) = 2;", "token_usage": {"tokens": 894, "cost": 0.00022229999999999998}}
{"sample_id": 3350, "db_id": "sports_competition", "gold_sql": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"", "pred_sql": "SELECT DISTINCT c.name FROM club c JOIN player p ON c.club_id = p.club_id WHERE p.position = 'Right Wing';", "token_usage": {"tokens": 829, "cost": 0.0001824}}
{"sample_id": 3368, "db_id": "sports_competition", "gold_sql": "SELECT sum(Points) FROM player", "pred_sql": "SELECT SUM(points) AS total_points FROM player;", "token_usage": {"tokens": 782, "cost": 0.00015734999999999998}}
{"sample_id": 4051, "db_id": "student_1", "gold_sql": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "pred_sql": "SELECT list.firstname, list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'Otha' AND teachers.lastname = 'Moyer';", "token_usage": {"tokens": 477, "cost": 0.00013499999999999997}}
{"sample_id": 4078, "db_id": "student_1", "gold_sql": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT classroom, COUNT(*) as student_count FROM list GROUP BY classroom ORDER BY student_count DESC LIMIT 1;", "token_usage": {"tokens": 474, "cost": 0.00013905}}
{"sample_id": 4070, "db_id": "student_1", "gold_sql": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "pred_sql": "SELECT firstname, lastname FROM list WHERE grade = '1st' AND classroom NOT IN (SELECT classroom FROM teachers WHERE firstname = 'Otha' AND lastname = 'Moyer');", "token_usage": {"tokens": 499, "cost": 0.00014685}}
{"sample_id": 4033, "db_id": "student_1", "gold_sql": "SELECT DISTINCT grade FROM list WHERE classroom  =  105", "pred_sql": "SELECT grade FROM list WHERE classroom = '105';", "token_usage": {"tokens": 425, "cost": 0.00010965}}
{"sample_id": 4031, "db_id": "student_1", "gold_sql": "SELECT DISTINCT grade FROM list WHERE classroom  =  103", "pred_sql": "SELECT DISTINCT grade FROM list WHERE classroom = '103';", "token_usage": {"tokens": 441, "cost": 0.00011924999999999998}}
{"sample_id": 4068, "db_id": "student_1", "gold_sql": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\"", "pred_sql": "SELECT COUNT(*) FROM teachers WHERE classroom IN (SELECT classroom FROM list WHERE firstname = 'RAY' AND lastname = 'MADLOCK');", "token_usage": {"tokens": 426, "cost": 0.00010755}}
{"sample_id": 4037, "db_id": "student_1", "gold_sql": "SELECT DISTINCT classroom FROM list WHERE grade  =  5", "pred_sql": "SELECT DISTINCT classroom FROM list WHERE grade = '5';", "token_usage": {"tokens": 415, "cost": 0.00010365}}
{"sample_id": 4053, "db_id": "student_1", "gold_sql": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "pred_sql": "SELECT list.firstname, list.lastname FROM list JOIN teachers ON list.classroom = teachers.classroom WHERE teachers.firstname = 'KIRK' AND teachers.lastname = 'MARROTTE';", "token_usage": {"tokens": 465, "cost": 0.00012869999999999998}}
{"sample_id": 4085, "db_id": "student_1", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT t.firstname, t.lastname FROM teachers t JOIN list l ON t.classroom = l.classroom GROUP BY t.firstname, t.lastname ORDER BY COUNT(l.firstname) DESC LIMIT 1;", "token_usage": {"tokens": 516, "cost": 0.00016199999999999998}}
{"sample_id": 4063, "db_id": "student_1", "gold_sql": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\"", "pred_sql": "SELECT COUNT(*) AS student_count FROM list WHERE classroom IN (SELECT classroom FROM teachers WHERE firstname = 'LEIA' AND lastname = 'TARRING');", "token_usage": {"tokens": 425, "cost": 0.00010784999999999999}}
{"sample_id": 4065, "db_id": "student_1", "gold_sql": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\"", "pred_sql": "SELECT COUNT(*) FROM teachers WHERE classroom IN (SELECT classroom FROM list WHERE firstname = 'CHRISSY' AND lastname = 'NABOZNY');", "token_usage": {"tokens": 431, "cost": 0.00010965}}
{"sample_id": 4064, "db_id": "student_1", "gold_sql": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\"", "pred_sql": "SELECT COUNT(*) FROM list WHERE classroom IN (SELECT classroom FROM teachers WHERE firstname = 'LEIA' AND lastname = 'TARRING');", "token_usage": {"tokens": 419, "cost": 0.00010424999999999999}}
{"sample_id": 4028, "db_id": "student_1", "gold_sql": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107", "pred_sql": "SELECT firstname FROM list WHERE classroom = '107';", "token_usage": {"tokens": 426, "cost": 0.00010845000000000001}}
{"sample_id": 4026, "db_id": "student_1", "gold_sql": "SELECT firstname FROM list WHERE classroom  =  108", "pred_sql": "SELECT firstname FROM list WHERE classroom = '108';", "token_usage": {"tokens": 428, "cost": 0.00011009999999999999}}
{"sample_id": 4023, "db_id": "student_1", "gold_sql": "SELECT lastname FROM list WHERE classroom  =  111", "pred_sql": "SELECT lastname FROM list WHERE classroom = '111';", "token_usage": {"tokens": 439, "cost": 0.00011669999999999999}}
{"sample_id": 1297, "db_id": "soccer_1", "gold_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )", "pred_sql": "SELECT player_name FROM player WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE overall_rating > (SELECT AVG(overall_rating) FROM player_attributes))"}
{"sample_id": 1294, "db_id": "soccer_1", "gold_sql": "SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  \"England\"", "pred_sql": "SELECT COUNT(*) AS league_count FROM league WHERE name = 'England';"}
{"sample_id": 1301, "db_id": "soccer_1", "gold_sql": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot", "pred_sql": "SELECT preferred_foot, AVG(overall_rating) AS average_rating FROM player_attributes GROUP BY preferred_foot;"}
{"sample_id": 1306, "db_id": "soccer_1", "gold_sql": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5", "pred_sql": "SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.potential DESC LIMIT 5;"}
{"sample_id": 7801, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"", "pred_sql": "SELECT name FROM country WHERE continent = 'Europe' AND population = '80000';", "token_usage": {"tokens": 787, "cost": 0.00017475}}
{"sample_id": 7696, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE IndepYear  >  1950", "pred_sql": "SELECT name FROM country WHERE indepyear > '1950';", "token_usage": {"tokens": 793, "cost": 0.0001824}}
{"sample_id": 7741, "db_id": "world_1", "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"", "pred_sql": "SELECT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode WHERE cl1.language = 'English' AND cl1.isofficial = 'T' AND c.code IN (SELECT cl2.countrycode FROM countrylanguage cl2 WHERE cl2.language = 'French' AND cl2.isofficial = 'T');", "token_usage": {"tokens": 864, "cost": 0.00022454999999999998}}
{"sample_id": 7721, "db_id": "world_1", "gold_sql": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"", "pred_sql": "SELECT SUM(population) AS total_population FROM city WHERE district = 'Gelderland';", "token_usage": {"tokens": 767, "cost": 0.00016905}}
{"sample_id": 7711, "db_id": "world_1", "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"", "pred_sql": "SELECT AVG(lifeexpectancy) AS average_life_expectancy FROM country WHERE region = 'Central Africa';", "token_usage": {"tokens": 782, "cost": 0.0001749}}
{"sample_id": 7812, "db_id": "world_1", "gold_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "pred_sql": "SELECT COUNT(DISTINCT country.code) AS country_count \nFROM countrylanguage \nWHERE language = 'Spanish' AND isofficial = 'T'", "token_usage": {"tokens": 842, "cost": 0.0002118}}
{"sample_id": 7714, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "pred_sql": "SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1;", "token_usage": {"tokens": 787, "cost": 0.0001788}}
{"sample_id": 7753, "db_id": "world_1", "gold_sql": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1", "pred_sql": "SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1;", "token_usage": {"tokens": 832, "cost": 0.00020714999999999997}}
{"sample_id": 7800, "db_id": "world_1", "gold_sql": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"", "pred_sql": "SELECT COUNT(*) FROM country WHERE continent = 'Asia';", "token_usage": {"tokens": 734, "cost": 0.00014969999999999998}}
{"sample_id": 7736, "db_id": "world_1", "gold_sql": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT c.continent, COUNT(cl.language) AS language_count\nFROM country c\nJOIN countrylanguage cl ON c.code = cl.countrycode\nGROUP BY c.continent\nORDER BY language_count DESC\nLIMIT 1;", "token_usage": {"tokens": 822, "cost": 0.00020294999999999997}}
{"sample_id": 7757, "db_id": "world_1", "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")", "pred_sql": "SELECT AVG(country.lifeexpectancy) AS average_life_expectancy\nFROM country\nWHERE country.code NOT IN (\n    SELECT countrylanguage.countrycode\n    FROM countrylanguage\n    WHERE countrylanguage.isofficial = 'T' AND countrylanguage.language = 'English'\n);", "token_usage": {"tokens": 832, "cost": 0.0002049}}
{"sample_id": 7701, "db_id": "world_1", "gold_sql": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"", "pred_sql": "SELECT continent FROM country WHERE name = 'Anguilla';", "token_usage": {"tokens": 774, "cost": 0.0001737}}
{"sample_id": 7777, "db_id": "world_1", "gold_sql": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')", "pred_sql": "SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = 'Europe' AND city.countrycode NOT IN (SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T');", "token_usage": {"tokens": 858, "cost": 0.0002214}}
{"sample_id": 7713, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1", "pred_sql": "SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1;", "token_usage": {"tokens": 793, "cost": 0.00018195}}
{"sample_id": 7760, "db_id": "world_1", "gold_sql": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")", "pred_sql": "SELECT SUM(c.population) AS total_population FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English' AND cl.isofficial = 'T';", "token_usage": {"tokens": 818, "cost": 0.0001983}}
{"sample_id": 7775, "db_id": "world_1", "gold_sql": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "pred_sql": "SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND country.governmentform != 'Republic';", "token_usage": {"tokens": 831, "cost": 0.0002025}}
{"sample_id": 7767, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")", "pred_sql": "SELECT country.name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia');", "token_usage": {"tokens": 816, "cost": 0.00019485}}
{"sample_id": 7814, "db_id": "world_1", "gold_sql": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "pred_sql": "SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage > 50;", "token_usage": {"tokens": 842, "cost": 0.0002118}}
{"sample_id": 7807, "db_id": "world_1", "gold_sql": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(DISTINCT countrycode) DESC LIMIT 1;", "token_usage": {"tokens": 792, "cost": 0.00018314999999999998}}
{"sample_id": 7771, "db_id": "world_1", "gold_sql": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "pred_sql": "SELECT country.code FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL;", "token_usage": {"tokens": 825, "cost": 0.00020204999999999998}}
{"sample_id": 7811, "db_id": "world_1", "gold_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "pred_sql": "SELECT COUNT(DISTINCT country.code) AS total_countries FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish');", "token_usage": {"tokens": 807, "cost": 0.00018899999999999999}}
{"sample_id": 7809, "db_id": "world_1", "gold_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode", "pred_sql": "SELECT cl.language, cl.countrycode, MAX(cl.percentage) AS max_percentage\nFROM countrylanguage cl\nGROUP BY cl.countrycode;", "token_usage": {"tokens": 795, "cost": 0.00018314999999999998}}
{"sample_id": 7764, "db_id": "world_1", "gold_sql": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "pred_sql": "SELECT COUNT(DISTINCT cl.language) AS total_official_languages\nFROM country c\nJOIN countrylanguage cl ON c.code = cl.countrycode\nWHERE c.indepyear < '1930' AND cl.isofficial = 'T';", "token_usage": {"tokens": 864, "cost": 0.00022274999999999997}}
{"sample_id": 7781, "db_id": "world_1", "gold_sql": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1", "pred_sql": "SELECT name, indepyear, surfacearea FROM country WHERE population = (SELECT MIN(population) FROM country);", "token_usage": {"tokens": 799, "cost": 0.00018375}}
{"sample_id": 5779, "db_id": "customer_complaints", "gold_sql": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"", "pred_sql": "SELECT product_description FROM products WHERE product_name = 'Chocolate';", "token_usage": {"tokens": 856, "cost": 0.00017295}}
{"sample_id": 5790, "db_id": "customer_complaints", "gold_sql": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3", "pred_sql": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING COUNT(complaint_id) > 3;", "token_usage": {"tokens": 909, "cost": 0.00020475}}
{"sample_id": 5806, "db_id": "customer_complaints", "gold_sql": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT state, COUNT(customer_id) AS customer_count FROM customers GROUP BY state ORDER BY customer_count DESC LIMIT 1;", "token_usage": {"tokens": 900, "cost": 0.00020069999999999997}}
{"sample_id": 5765, "db_id": "customer_complaints", "gold_sql": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT town_city, COUNT(customer_id) AS customer_count \nFROM customers \nWHERE customer_type_code = 'Good Credit Rating' \nGROUP BY town_city \nORDER BY customer_count ASC \nLIMIT 1;", "token_usage": {"tokens": 965, "cost": 0.00023564999999999998}}
{"sample_id": 5778, "db_id": "customer_complaints", "gold_sql": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff", "pred_sql": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff;", "token_usage": {"tokens": 834, "cost": 0.00015929999999999997}}
{"sample_id": 5776, "db_id": "customer_complaints", "gold_sql": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "pred_sql": "SELECT email_address, phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "token_usage": {"tokens": 877, "cost": 0.00018284999999999997}}
{"sample_id": 5792, "db_id": "customer_complaints", "gold_sql": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"", "pred_sql": "SELECT last_name FROM staff WHERE email_address LIKE '%wrau%';", "token_usage": {"tokens": 897, "cost": 0.00019485}}
{"sample_id": 5782, "db_id": "customer_complaints", "gold_sql": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1", "pred_sql": "SELECT product_name, product_category_code FROM products WHERE product_price = (SELECT MAX(product_price) FROM products);", "token_usage": {"tokens": 907, "cost": 0.00020219999999999998}}
{"sample_id": 5762, "db_id": "customer_complaints", "gold_sql": "SELECT count(*) FROM customers", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers;", "token_usage": {"tokens": 831, "cost": 0.00016064999999999997}}
{"sample_id": 5796, "db_id": "customer_complaints", "gold_sql": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1", "pred_sql": "SELECT last_name FROM staff WHERE staff_id = (SELECT staff_id FROM complaints ORDER BY date_complaint_raised ASC LIMIT 1)", "token_usage": {"tokens": 927, "cost": 0.00021285}}
{"sample_id": 6484, "db_id": "scientist_1", "gold_sql": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'", "pred_sql": "SELECT s.name \nFROM scientists s \nJOIN assignedto a1 ON s.ssn = a1.scientist \nJOIN projects p1 ON a1.project = p1.code \nJOIN assignedto a2 ON s.ssn = a2.scientist \nJOIN projects p2 ON a2.project = p2.code \nWHERE p1.name = 'Matter of Time' AND p2.name = 'A Puzzling Parallax';", "token_usage": {"tokens": 587, "cost": 0.00018345}}
{"sample_id": 6474, "db_id": "scientist_1", "gold_sql": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)", "pred_sql": "SELECT name FROM projects WHERE hours > (SELECT AVG(hours) FROM projects);", "token_usage": {"tokens": 524, "cost": 0.00015059999999999997}}
{"sample_id": 6501, "db_id": "scientist_1", "gold_sql": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)", "pred_sql": "SELECT name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM assignedto);", "token_usage": {"tokens": 535, "cost": 0.00015944999999999997}}
{"sample_id": 6487, "db_id": "scientist_1", "gold_sql": "SELECT name FROM scientists ORDER BY name", "pred_sql": "SELECT name FROM scientists ORDER BY name ASC;", "token_usage": {"tokens": 457, "cost": 0.00011355}}
{"sample_id": 6482, "db_id": "scientist_1", "gold_sql": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300", "pred_sql": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300;", "token_usage": {"tokens": 472, "cost": 0.00012029999999999998}}
{"sample_id": 6492, "db_id": "scientist_1", "gold_sql": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name", "pred_sql": "SELECT scientists.name, COUNT(assignedto.project) AS project_count\nFROM scientists\nLEFT JOIN assignedto ON scientists.ssn = assignedto.scientist\nGROUP BY scientists.ssn;", "token_usage": {"tokens": 547, "cost": 0.00016575}}
{"sample_id": 6470, "db_id": "scientist_1", "gold_sql": "SELECT avg(hours) FROM projects", "pred_sql": "SELECT AVG(hours) AS average_hours FROM projects;", "token_usage": {"tokens": 431, "cost": 9.974999999999999e-05}}
{"sample_id": 6508, "db_id": "scientist_1", "gold_sql": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)", "pred_sql": "SELECT p.name AS project_name, s.name AS scientist_name \nFROM projects p \nJOIN assignedto a ON p.code = a.project \nJOIN scientists s ON a.scientist = s.ssn \nWHERE p.hours = (SELECT MIN(hours) FROM projects);", "token_usage": {"tokens": 574, "cost": 0.00017834999999999997}}
{"sample_id": 6467, "db_id": "scientist_1", "gold_sql": "SELECT count(DISTINCT scientist) FROM assignedto", "pred_sql": "SELECT COUNT(DISTINCT scientist) AS unique_scientists_count FROM assignedto;", "token_usage": {"tokens": 459, "cost": 0.00011519999999999998}}
{"sample_id": 6488, "db_id": "scientist_1", "gold_sql": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name", "pred_sql": "SELECT projects.name, COUNT(assignedto.scientist) AS scientist_count\nFROM projects\nLEFT JOIN assignedto ON projects.code = assignedto.project\nGROUP BY projects.name;", "token_usage": {"tokens": 527, "cost": 0.000156}}
{"sample_id": 6481, "db_id": "scientist_1", "gold_sql": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'", "pred_sql": "SELECT SUM(p.hours) AS total_hours\nFROM projects p\nJOIN assignedto a ON p.code = a.project\nJOIN scientists s ON a.scientist = s.ssn\nWHERE s.name IN ('Michael Rogers', 'Carol Smith');", "token_usage": {"tokens": 515, "cost": 0.00014385}}
{"sample_id": 2518, "db_id": "movie_1", "gold_sql": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000", "pred_sql": "SELECT DISTINCT movie.title FROM movie LEFT JOIN rating ON movie.mid = rating.mid LEFT JOIN reviewer ON rating.rid = reviewer.rid WHERE movie.year > '2000' OR reviewer.name = 'Brittany Harris';", "token_usage": {"tokens": 610, "cost": 0.00018915}}
{"sample_id": 2447, "db_id": "movie_1", "gold_sql": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "pred_sql": "SELECT DISTINCT m.director, m.title FROM movie m JOIN rating r ON m.mid = r.mid WHERE r.stars = '5';", "token_usage": {"tokens": 551, "cost": 0.0001524}}
{"sample_id": 2441, "db_id": "movie_1", "gold_sql": "SELECT count(*) FROM Rating WHERE stars  >  3", "pred_sql": "SELECT COUNT(*) AS total_ratings FROM rating WHERE stars > '3';", "token_usage": {"tokens": 502, "cost": 0.0001266}}
{"sample_id": 2499, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director", "pred_sql": "SELECT m.title, MIN(r.stars) AS lowest_rating\nFROM movie m\nJOIN rating r ON m.mid = r.mid\nGROUP BY m.director;", "token_usage": {"tokens": 544, "cost": 0.00014954999999999998}}
{"sample_id": 2440, "db_id": "movie_1", "gold_sql": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"", "pred_sql": "SELECT rid FROM reviewer WHERE name = 'Daniel Lewis';", "token_usage": {"tokens": 473, "cost": 0.00011099999999999999}}
{"sample_id": 2478, "db_id": "movie_1", "gold_sql": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'", "pred_sql": "SELECT title FROM movie WHERE mid NOT IN (SELECT mid FROM rating WHERE rid = (SELECT rid FROM reviewer WHERE name = 'Chris Jackson'));", "token_usage": {"tokens": 548, "cost": 0.00015419999999999998}}
{"sample_id": 2433, "db_id": "movie_1", "gold_sql": "SELECT director FROM Movie WHERE title  = 'Avatar'", "pred_sql": "SELECT director FROM movie WHERE title = 'Avatar';", "token_usage": {"tokens": 480, "cost": 0.00011654999999999999}}
{"sample_id": 2506, "db_id": "movie_1", "gold_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3", "pred_sql": "SELECT DISTINCT reviewer.name FROM reviewer JOIN rating ON reviewer.rid = rating.rid WHERE rating.stars > '3'", "token_usage": {"tokens": 535, "cost": 0.0001446}}
{"sample_id": 2493, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3", "pred_sql": "SELECT m.title, m.year \nFROM movie m \nJOIN rating r ON m.mid = r.mid \nGROUP BY m.mid \nORDER BY AVG(r.stars) DESC \nLIMIT 3;", "token_usage": {"tokens": 560, "cost": 0.0001596}}
{"sample_id": 2432, "db_id": "movie_1", "gold_sql": "SELECT count(*) FROM Movie WHERE YEAR  <  2000", "pred_sql": "SELECT COUNT(*) AS movie_count FROM movie WHERE year < '2000';", "token_usage": {"tokens": 488, "cost": 0.00012044999999999997}}
{"sample_id": 2504, "db_id": "movie_1", "gold_sql": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5", "pred_sql": "SELECT DISTINCT movie.title FROM movie JOIN rating ON movie.mid = rating.mid WHERE rating.stars BETWEEN '3' AND '5';", "token_usage": {"tokens": 558, "cost": 0.0001593}}
{"sample_id": 2517, "db_id": "movie_1", "gold_sql": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000", "pred_sql": "SELECT DISTINCT movie.title FROM movie LEFT JOIN rating ON movie.mid = rating.mid LEFT JOIN reviewer ON rating.rid = reviewer.rid WHERE movie.year > '2000' OR reviewer.name = 'Brittany Harris';", "token_usage": {"tokens": 652, "cost": 0.00021434999999999998}}
{"sample_id": 2514, "db_id": "movie_1", "gold_sql": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4", "pred_sql": "SELECT DISTINCT rid FROM reviewer WHERE rid NOT IN (SELECT rid FROM rating WHERE stars = '4');", "token_usage": {"tokens": 556, "cost": 0.000159}}
{"sample_id": 2456, "db_id": "movie_1", "gold_sql": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)", "pred_sql": "SELECT title, AVG(stars) AS average_rating FROM movie JOIN rating ON movie.mid = rating.mid WHERE year = (SELECT MIN(year) FROM movie) GROUP BY title;", "token_usage": {"tokens": 521, "cost": 0.00013845}}
{"sample_id": 2461, "db_id": "movie_1", "gold_sql": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")", "pred_sql": "SELECT title FROM movie WHERE year > (SELECT MAX(year) FROM movie WHERE director = 'Steven Spielberg')", "token_usage": {"tokens": 547, "cost": 0.00015225}}
{"sample_id": 2471, "db_id": "movie_1", "gold_sql": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'", "pred_sql": "SELECT DISTINCT m.director FROM movie m JOIN rating r ON m.mid = r.mid JOIN reviewer rev ON r.rid = rev.rid WHERE rev.name = 'Sarah Martinez';", "token_usage": {"tokens": 534, "cost": 0.00014624999999999998}}
{"sample_id": 2508, "db_id": "movie_1", "gold_sql": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID", "pred_sql": "SELECT m.title, AVG(r.stars) AS average_rating\nFROM movie m\nLEFT JOIN rating r ON m.mid = r.mid\nWHERE m.mid NOT IN (\n    SELECT r.mid\n    FROM rating r\n    JOIN reviewer rev ON r.rid = rev.rid\n    WHERE rev.name = 'Brittany Harris'\n)\nGROUP BY m.mid;", "token_usage": {"tokens": 609, "cost": 0.0001899}}
{"sample_id": 2464, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "pred_sql": "SELECT m.title, m.director FROM movie m JOIN rating r ON m.mid = r.mid WHERE r.stars > (SELECT AVG(r2.stars) FROM rating r2 JOIN movie m2 ON r2.mid = m2.mid WHERE m2.director = 'James Cameron')", "token_usage": {"tokens": 614, "cost": 0.00019065}}
{"sample_id": 2468, "db_id": "movie_1", "gold_sql": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3", "pred_sql": "SELECT r.name\nFROM reviewer r\nJOIN rating ra ON r.rid = ra.rid\nGROUP BY r.rid\nHAVING COUNT(ra.mid) >= 3;", "token_usage": {"tokens": 533, "cost": 0.00014474999999999997}}
{"sample_id": 2475, "db_id": "movie_1", "gold_sql": "SELECT name FROM Reviewer UNION SELECT title FROM Movie", "pred_sql": "SELECT reviewer.name, movie.title FROM reviewer JOIN rating ON reviewer.rid = rating.rid JOIN movie ON rating.mid = movie.mid;", "token_usage": {"tokens": 575, "cost": 0.0001713}}
{"sample_id": 2438, "db_id": "movie_1", "gold_sql": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"", "pred_sql": "SELECT rid FROM reviewer WHERE name LIKE '%Mike%';", "token_usage": {"tokens": 515, "cost": 0.00013394999999999998}}
{"sample_id": 6205, "db_id": "roller_coaster", "gold_sql": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2", "pred_sql": "SELECT status FROM roller_coaster GROUP BY status HAVING COUNT(*) > 2;", "token_usage": {"tokens": 574, "cost": 0.0001356}}
{"sample_id": 6196, "db_id": "roller_coaster", "gold_sql": "SELECT count(*) FROM roller_coaster", "pred_sql": "SELECT COUNT(*) AS total_roller_coasters FROM roller_coaster;", "token_usage": {"tokens": 560, "cost": 0.00012855}}
{"sample_id": 6208, "db_id": "roller_coaster", "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "pred_sql": "SELECT c.name FROM country c JOIN roller_coaster r ON c.country_id = r.country_id GROUP BY c.country_id HAVING COUNT(r.roller_coaster_id) > 1;", "token_usage": {"tokens": 615, "cost": 0.00015929999999999997}}
{"sample_id": 6202, "db_id": "roller_coaster", "gold_sql": "SELECT avg(Speed) FROM roller_coaster", "pred_sql": "SELECT AVG(speed) AS average_speed FROM roller_coaster;", "token_usage": {"tokens": 550, "cost": 0.00012164999999999999}}
{"sample_id": 3296, "db_id": "college_1", "gold_sql": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.dept_name, d.dept_address \nFROM department d \nJOIN student s ON d.dept_code = s.dept_code \nGROUP BY d.dept_code \nORDER BY COUNT(s.stu_num) DESC \nLIMIT 1;", "token_usage": {"tokens": 1175, "cost": 0.00025184999999999997}}
{"sample_id": 3275, "db_id": "college_1", "gold_sql": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "pred_sql": "SELECT emp_lname, emp_hiredate FROM professor JOIN employee ON professor.emp_num = employee.emp_num WHERE prof_office = 'DRE 102';", "token_usage": {"tokens": 1183, "cost": 0.00025304999999999994}}
{"sample_id": 3248, "db_id": "college_1", "gold_sql": "SELECT dept_name FROM department ORDER BY dept_name", "pred_sql": "SELECT dept_name FROM department ORDER BY dept_name;", "token_usage": {"tokens": 1071, "cost": 0.00019214999999999995}}
{"sample_id": 3267, "db_id": "college_1", "gold_sql": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num", "pred_sql": "SELECT emp_fname FROM professor WHERE emp_num NOT IN (SELECT prof_num FROM class)", "token_usage": {"tokens": 1170, "cost": 0.00025019999999999996}}
{"sample_id": 3179, "db_id": "college_1", "gold_sql": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "pred_sql": "SELECT crs_description, crs_credit FROM course WHERE crs_code = 'CIS-220';", "token_usage": {"tokens": 1138, "cost": 0.0002292}}
{"sample_id": 3253, "db_id": "college_1", "gold_sql": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob", "pred_sql": "SELECT emp_fname FROM employee INNER JOIN professor ON employee.emp_num = professor.emp_num ORDER BY employee.emp_dob;", "token_usage": {"tokens": 1149, "cost": 0.00023579999999999999}}
{"sample_id": 3190, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "pred_sql": "SELECT school_code, COUNT(DISTINCT dept_code) AS num_departments\nFROM department\nGROUP BY school_code\nHAVING COUNT(DISTINCT dept_code) < 5;", "token_usage": {"tokens": 1153, "cost": 0.00023684999999999996}}
{"sample_id": 3278, "db_id": "college_1", "gold_sql": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "pred_sql": "SELECT course.crs_description, course.crs_credit \nFROM course \nJOIN class ON course.crs_code = class.crs_code \nJOIN enroll ON class.class_code = enroll.class_code \nJOIN student ON enroll.stu_num = student.stu_num \nWHERE student.stu_lname = 'Smithson';", "token_usage": {"tokens": 1211, "cost": 0.00027164999999999996}}
{"sample_id": 3249, "db_id": "college_1", "gold_sql": "SELECT dept_name FROM department ORDER BY dept_name", "pred_sql": "SELECT dept_name FROM department ORDER BY dept_name ASC;", "token_usage": {"tokens": 1080, "cost": 0.0001971}}
{"sample_id": 3243, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'", "pred_sql": "SELECT COUNT(*) AS total_professors_with_phd FROM professor WHERE prof_high_degree = 'Ph.D.';", "token_usage": {"tokens": 1130, "cost": 0.00022619999999999997}}
{"sample_id": 3195, "db_id": "college_1", "gold_sql": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code", "pred_sql": "SELECT SUM(crs_credit) AS total_credits FROM course;", "token_usage": {"tokens": 1133, "cost": 0.00023024999999999999}}
{"sample_id": 3200, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code", "pred_sql": "SELECT d.school_code, COUNT(c.class_code) AS number_of_classes\nFROM class c\nJOIN course cr ON c.crs_code = cr.crs_code\nJOIN department d ON cr.dept_code = d.dept_code\nGROUP BY d.school_code;", "token_usage": {"tokens": 1174, "cost": 0.0002544}}
{"sample_id": 3237, "db_id": "college_1", "gold_sql": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'", "pred_sql": "SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num JOIN class ON enroll.class_code = class.class_code WHERE class.crs_code = 'ACCT-211';", "token_usage": {"tokens": 1157, "cost": 0.00024149999999999996}}
{"sample_id": 3265, "db_id": "college_1", "gold_sql": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.dept_name, COUNT(p.emp_num) AS num_professors \nFROM department d \nJOIN professor p ON d.dept_code = p.dept_code \nWHERE p.prof_high_degree = 'Ph.D.' \nGROUP BY d.dept_name \nORDER BY num_professors DESC \nLIMIT 1;", "token_usage": {"tokens": 1184, "cost": 0.0002590499999999999}}
{"sample_id": 3323, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1", "pred_sql": "SELECT emp_fname FROM professor p JOIN class c ON p.emp_num = c.prof_num GROUP BY p.emp_num HAVING COUNT(c.class_code) > 1;", "token_usage": {"tokens": 1172, "cost": 0.00025049999999999996}}
{"sample_id": 3329, "db_id": "college_1", "gold_sql": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'", "pred_sql": "SELECT stu_fname FROM student s JOIN enroll e ON s.stu_num = e.stu_num JOIN class c ON e.class_code = c.class_code WHERE s.stu_lname LIKE 'S%' AND c.crs_code = 'ACCT-211';", "token_usage": {"tokens": 1215, "cost": 0.0002722499999999999}}
{"sample_id": 3324, "db_id": "college_1", "gold_sql": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1", "pred_sql": "SELECT s.stu_fname FROM student s JOIN enroll e ON s.stu_num = e.stu_num GROUP BY s.stu_num HAVING COUNT(e.class_code) = 1;", "token_usage": {"tokens": 1219, "cost": 0.00028004999999999995}}
{"sample_id": 3285, "db_id": "college_1", "gold_sql": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'", "pred_sql": "SELECT employee.emp_fname FROM professor JOIN class ON professor.emp_num = class.prof_num WHERE class.crs_code IN ('CIS-220', 'QM-261');", "token_usage": {"tokens": 1219, "cost": 0.00027689999999999995}}
{"sample_id": 3263, "db_id": "college_1", "gold_sql": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT d.dept_name FROM department d JOIN professor p ON d.dept_code = p.dept_code GROUP BY d.dept_code ORDER BY COUNT(p.emp_num) ASC LIMIT 1;", "token_usage": {"tokens": 1161, "cost": 0.0002448}}
{"sample_id": 3256, "db_id": "college_1", "gold_sql": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1", "pred_sql": "SELECT emp_fname, emp_lname FROM employee ORDER BY emp_dob ASC LIMIT 1;", "token_usage": {"tokens": 1119, "cost": 0.00022004999999999995}}
{"sample_id": 3299, "db_id": "college_1", "gold_sql": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT d.dept_name, d.dept_address, COUNT(s.stu_num) AS num_students\nFROM department d\nJOIN student s ON d.dept_code = s.dept_code\nGROUP BY d.dept_code\nORDER BY num_students DESC\nLIMIT 3;", "token_usage": {"tokens": 1189, "cost": 0.00025754999999999994}}
{"sample_id": 3280, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'", "pred_sql": "SELECT COUNT(*) AS professor_count FROM professor WHERE prof_high_degree IN ('Ph.D.', 'MA');", "token_usage": {"tokens": 1138, "cost": 0.00023055}}
{"sample_id": 3242, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'", "pred_sql": "SELECT COUNT(*) AS num_professors_with_phd FROM professor WHERE prof_high_degree = 'Ph.D.';", "token_usage": {"tokens": 1118, "cost": 0.00021989999999999998}}
{"sample_id": 3264, "db_id": "college_1", "gold_sql": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.dept_name\nFROM department d\nJOIN professor p ON d.dept_code = p.dept_code\nWHERE p.prof_high_degree = 'Ph.D.'\nGROUP BY d.dept_name\nORDER BY COUNT(p.emp_num) DESC\nLIMIT 1;", "token_usage": {"tokens": 1190, "cost": 0.0002590499999999999}}
{"sample_id": 3302, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "pred_sql": "SELECT employee.emp_fname, class.crs_code \nFROM employee \nJOIN professor ON employee.emp_num = professor.emp_num \nJOIN class ON professor.emp_num = class.prof_num;", "token_usage": {"tokens": 1149, "cost": 0.00023579999999999999}}
{"sample_id": 3204, "db_id": "college_1", "gold_sql": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT emp_jobcode, COUNT(emp_num) AS employee_count FROM employee GROUP BY emp_jobcode ORDER BY employee_count DESC LIMIT 1;", "token_usage": {"tokens": 1137, "cost": 0.00023084999999999997}}
{"sample_id": 3310, "db_id": "college_1", "gold_sql": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "pred_sql": "SELECT student.stu_fname, student.stu_lname, course.crs_description \nFROM student \nJOIN enroll ON student.stu_num = enroll.stu_num \nJOIN class ON enroll.class_code = class.class_code \nJOIN course ON class.crs_code = course.crs_code;", "token_usage": {"tokens": 1194, "cost": 0.00026415}}
{"sample_id": 3307, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "pred_sql": "SELECT employee.emp_fname, professor.prof_office \nFROM professor \nJOIN employee ON professor.emp_num = employee.emp_num;", "token_usage": {"tokens": 1145, "cost": 0.00023339999999999998}}
{"sample_id": 3211, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code", "pred_sql": "SELECT d.dept_name, COUNT(s.stu_num) AS student_count\nFROM department d\nLEFT JOIN student s ON d.dept_code = s.dept_code\nGROUP BY d.dept_name;", "token_usage": {"tokens": 1152, "cost": 0.00024165}}
{"sample_id": 3282, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'", "pred_sql": "SELECT COUNT(*) AS professor_count FROM professor p JOIN department d ON p.dept_code = d.dept_code WHERE d.dept_name IN ('Accounting', 'Biology');", "token_usage": {"tokens": 1154, "cost": 0.00024104999999999998}}
{"sample_id": 3222, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT crs_code) FROM CLASS", "pred_sql": "SELECT COUNT(*) AS total_courses FROM course;", "token_usage": {"tokens": 1082, "cost": 0.00020054999999999997}}
{"sample_id": 3186, "db_id": "college_1", "gold_sql": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "pred_sql": "SELECT crs_description, crs_credit FROM course WHERE crs_code = 'QM-261';", "token_usage": {"tokens": 1124, "cost": 0.00022304999999999997}}
{"sample_id": 3308, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "pred_sql": "SELECT employee.emp_fname, professor.prof_office, course.crs_description, department.dept_name \nFROM professor \nJOIN employee ON professor.emp_num = employee.emp_num \nJOIN department ON professor.dept_code = department.dept_code \nJOIN course ON department.dept_code = course.dept_code \nJOIN class ON course.crs_code = class.crs_code \nGROUP BY employee.emp_fname, professor.prof_office, course.crs_description, department.dept_name;", "token_usage": {"tokens": 1278, "cost": 0.0003105}}
{"sample_id": 3203, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code", "pred_sql": "SELECT COUNT(DISTINCT p.emp_num) AS different_professors FROM professor p JOIN department d ON p.dept_code = d.dept_code GROUP BY d.school_code;", "token_usage": {"tokens": 1147, "cost": 0.00023729999999999997}}
{"sample_id": 7494, "db_id": "battle_death", "gold_sql": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "pred_sql": "SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';", "token_usage": {"tokens": 693, "cost": 0.00016874999999999998}}
{"sample_id": 7497, "db_id": "battle_death", "gold_sql": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "pred_sql": "SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name IN ('Lettice', 'HMS Atalanta') AND s.lost_in_battle = 1;", "token_usage": {"tokens": 756, "cost": 0.0002061}}
{"sample_id": 7493, "db_id": "battle_death", "gold_sql": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.caused_by_ship_id, s.name FROM death d JOIN ship s ON d.caused_by_ship_id = s.id GROUP BY d.caused_by_ship_id ORDER BY SUM(d.injured) DESC LIMIT 1;", "token_usage": {"tokens": 737, "cost": 0.00020189999999999997}}
{"sample_id": 7496, "db_id": "battle_death", "gold_sql": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "pred_sql": "SELECT COUNT(*) AS battles_without_lost_ships FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = 225 AND lost_in_battle IS NOT NULL);", "token_usage": {"tokens": 665, "cost": 0.0001578}}
{"sample_id": 1886, "db_id": "school_finance", "gold_sql": "SELECT school_name FROM school ORDER BY school_name", "pred_sql": "SELECT school_name FROM school ORDER BY school_name ASC;"}
{"sample_id": 1905, "db_id": "school_finance", "gold_sql": "SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn'", "pred_sql": "SELECT SUM(budgeted) AS total_budget_amount FROM budget JOIN school ON budget.school_id = school.school_id WHERE school.school_name = 'Glenn';"}
{"sample_id": 1889, "db_id": "school_finance", "gold_sql": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)", "pred_sql": "SELECT mascot FROM school WHERE enrollment > (SELECT AVG(enrollment) FROM school)"}
{"sample_id": 1887, "db_id": "school_finance", "gold_sql": "SELECT school_name ,  LOCATION ,  mascot FROM school", "pred_sql": "SELECT school_name, location, mascot FROM school;"}
{"sample_id": 1899, "db_id": "school_finance", "gold_sql": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1", "pred_sql": "SELECT donator_name, amount FROM endowment ORDER BY amount DESC LIMIT 1;"}
{"sample_id": 1903, "db_id": "school_finance", "gold_sql": "SELECT DISTINCT donator_name FROM endowment", "pred_sql": "SELECT donator_name FROM endowment;"}
{"sample_id": 4461, "db_id": "network_2", "gold_sql": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "pred_sql": "SELECT friend FROM personfriend WHERE name = 'Zach' ORDER BY year DESC LIMIT 1;", "token_usage": {"tokens": 493, "cost": 0.0001347}}
{"sample_id": 4469, "db_id": "network_2", "gold_sql": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend", "pred_sql": "SELECT name FROM person WHERE name NOT IN (SELECT name FROM personfriend)", "token_usage": {"tokens": 466, "cost": 0.00011939999999999997}}
{"sample_id": 4431, "db_id": "network_2", "gold_sql": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age", "pred_sql": "SELECT name, age FROM person WHERE gender = 'male' ORDER BY age;", "token_usage": {"tokens": 469, "cost": 0.00011894999999999999}}
{"sample_id": 4471, "db_id": "network_2", "gold_sql": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "pred_sql": "SELECT p.name FROM person p JOIN personfriend pf ON p.name = pf.name JOIN person pf2 ON pf.friend = pf2.name GROUP BY p.name ORDER BY AVG(CAST(pf2.age AS INTEGER)) DESC LIMIT 1;", "token_usage": {"tokens": 529, "cost": 0.00015675}}
{"sample_id": 4418, "db_id": "network_2", "gold_sql": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job", "pred_sql": "SELECT job, AVG(age) AS average_age FROM person WHERE gender = 'male' GROUP BY job;", "token_usage": {"tokens": 482, "cost": 0.00012764999999999999}}
{"sample_id": 4459, "db_id": "network_2", "gold_sql": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "pred_sql": "SELECT pf.friend, p.age FROM personfriend pf JOIN person p ON pf.friend = p.name WHERE p.age > (SELECT AVG(age) FROM person)", "token_usage": {"tokens": 473, "cost": 0.00011864999999999998}}
{"sample_id": 4448, "db_id": "network_2", "gold_sql": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "pred_sql": "SELECT friend FROM personfriend WHERE name = 'Bob';", "token_usage": {"tokens": 447, "cost": 0.00010709999999999997}}
{"sample_id": 4396, "db_id": "network_2", "gold_sql": "SELECT avg(age) FROM Person", "pred_sql": "SELECT AVG(age) AS average_age FROM person;", "token_usage": {"tokens": 443, "cost": 0.00010424999999999999}}
{"sample_id": 4456, "db_id": "network_2", "gold_sql": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "pred_sql": "SELECT DISTINCT pf.friend FROM personfriend pf JOIN person p ON pf.friend = p.name WHERE p.city = 'New York';", "token_usage": {"tokens": 486, "cost": 0.00012959999999999998}}
{"sample_id": 4407, "db_id": "network_2", "gold_sql": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'", "pred_sql": "SELECT age FROM person WHERE name = 'Zach' AND job = 'doctor';", "token_usage": {"tokens": 467, "cost": 0.00012044999999999999}}
{"sample_id": 4474, "db_id": "network_2", "gold_sql": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')", "pred_sql": "SELECT COUNT(*) FROM person WHERE name NOT IN (SELECT name FROM personfriend) AND city = 'Austin';", "token_usage": {"tokens": 514, "cost": 0.00014549999999999999}}
{"sample_id": 4419, "db_id": "network_2", "gold_sql": "SELECT min(age) ,  job FROM Person GROUP BY job", "pred_sql": "SELECT job, MIN(age) AS minimum_age FROM person GROUP BY job;", "token_usage": {"tokens": 472, "cost": 0.00012299999999999998}}
{"sample_id": 4452, "db_id": "network_2", "gold_sql": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "pred_sql": "SELECT pf.friend FROM personfriend pf JOIN person p ON pf.friend = p.name WHERE pf.name = 'Alice' AND p.gender = 'female';", "token_usage": {"tokens": 492, "cost": 0.0001341}}
{"sample_id": 4398, "db_id": "network_2", "gold_sql": "SELECT count(DISTINCT city) FROM Person", "pred_sql": "SELECT COUNT(DISTINCT city) AS different_cities FROM person;", "token_usage": {"tokens": 430, "cost": 9.779999999999999e-05}}
{"sample_id": 4447, "db_id": "network_2", "gold_sql": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "pred_sql": "SELECT friend FROM personfriend WHERE name = 'Bob';", "token_usage": {"tokens": 438, "cost": 0.00010169999999999998}}
{"sample_id": 4464, "db_id": "network_2", "gold_sql": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "pred_sql": "SELECT p.age FROM person p JOIN personfriend pf ON p.name = pf.friend WHERE pf.name = 'Zach' AND pf.year = (SELECT MAX(year) FROM personfriend WHERE name = 'Zach');", "token_usage": {"tokens": 505, "cost": 0.00013919999999999997}}
{"sample_id": 4453, "db_id": "network_2", "gold_sql": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'", "pred_sql": "SELECT pf.friend FROM personfriend pf JOIN person p ON pf.friend = p.name WHERE pf.name = 'Alice' AND p.gender = 'male' AND p.job = 'doctor';", "token_usage": {"tokens": 497, "cost": 0.00013665}}
{"sample_id": 4472, "db_id": "network_2", "gold_sql": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "pred_sql": "SELECT pf.name, AVG(p.age) AS average_age\nFROM personfriend pf\nJOIN person p ON pf.friend = p.name\nGROUP BY pf.name\nORDER BY average_age DESC\nLIMIT 1;", "token_usage": {"tokens": 546, "cost": 0.00016064999999999997}}
{"sample_id": 10, "db_id": "department_management", "gold_sql": "SELECT count(DISTINCT temporary_acting) FROM management", "pred_sql": "SELECT COUNT(DISTINCT temporary_acting) AS acting_status_count FROM management;"}
{"sample_id": 12, "db_id": "department_management", "gold_sql": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'", "pred_sql": "SELECT DISTINCT h.age FROM head h JOIN management m ON h.head_id = m.head_id WHERE m.temporary_acting = 'yes';"}
{"sample_id": 3, "db_id": "department_management", "gold_sql": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department", "pred_sql": "SELECT MAX(budget_in_billions) AS max_budget, MIN(budget_in_billions) AS min_budget FROM department;"}
{"sample_id": 6, "db_id": "department_management", "gold_sql": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'", "pred_sql": "SELECT DISTINCT strftime('%Y', creation) AS creation_year FROM department d JOIN management m ON d.department_id = m.department_id JOIN head h ON m.head_id = h.head_id WHERE h.born_state = 'Alabama';"}
{"sample_id": 7395, "db_id": "course_teach", "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "pred_sql": "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC;", "token_usage": {"tokens": 535, "cost": 0.00013469999999999997}}
{"sample_id": 7396, "db_id": "course_teach", "gold_sql": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "pred_sql": "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math';", "token_usage": {"tokens": 555, "cost": 0.00015209999999999998}}
{"sample_id": 7399, "db_id": "course_teach", "gold_sql": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "pred_sql": "SELECT teacher.name, COUNT(course_arrange.course_id) AS course_count \nFROM teacher \nLEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id \nGROUP BY teacher.teacher_id;", "token_usage": {"tokens": 559, "cost": 0.0001527}}
{"sample_id": 7392, "db_id": "course_teach", "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "pred_sql": "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id;", "token_usage": {"tokens": 520, "cost": 0.0001302}}
{"sample_id": 7378, "db_id": "course_teach", "gold_sql": "SELECT Age ,  Hometown FROM teacher", "pred_sql": "SELECT age, hometown FROM teacher;", "token_usage": {"tokens": 488, "cost": 0.00011279999999999998}}
{"sample_id": 7391, "db_id": "course_teach", "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "pred_sql": "SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(teacher_id) >= 2;", "token_usage": {"tokens": 513, "cost": 0.00012599999999999997}}
{"sample_id": 2675, "db_id": "party_host", "gold_sql": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50", "pred_sql": "SELECT DISTINCT p.location FROM party p JOIN party_host ph ON p.party_id = ph.party_id JOIN host h ON ph.host_id = h.host_id WHERE h.age > 50;", "token_usage": {"tokens": 607, "cost": 0.00016304999999999998}}
{"sample_id": 2678, "db_id": "party_host", "gold_sql": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20", "pred_sql": "SELECT h.name FROM party p JOIN party_host ph ON p.party_id = ph.party_id JOIN host h ON ph.host_id = h.host_id WHERE p.number_of_hosts > '20';", "token_usage": {"tokens": 599, "cost": 0.00015554999999999999}}
{"sample_id": 2677, "db_id": "party_host", "gold_sql": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20", "pred_sql": "SELECT h.name FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id WHERE p.number_of_hosts > '20';", "token_usage": {"tokens": 624, "cost": 0.0001719}}
{"sample_id": 2681, "db_id": "party_host", "gold_sql": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)", "pred_sql": "SELECT name FROM host WHERE host_id NOT IN (SELECT host_id FROM party_host);", "token_usage": {"tokens": 594, "cost": 0.0001521}}
{"sample_id": 2661, "db_id": "party_host", "gold_sql": "SELECT avg(Number_of_hosts) FROM party", "pred_sql": "SELECT AVG(number_of_hosts) AS average_hosts FROM party;", "token_usage": {"tokens": 532, "cost": 0.00011894999999999999}}
{"sample_id": 2666, "db_id": "party_host", "gold_sql": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "pred_sql": "SELECT nationality, COUNT(*) AS host_count FROM host GROUP BY nationality;", "token_usage": {"tokens": 545, "cost": 0.0001245}}
{"sample_id": 7054, "db_id": "pets_1", "gold_sql": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "pred_sql": "SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IS NULL OR pets.pettype != 'cat';", "token_usage": {"tokens": 654, "cost": 0.0001872}}
{"sample_id": 7077, "db_id": "pets_1", "gold_sql": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "pred_sql": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND pets.pet_age = '3';", "token_usage": {"tokens": 632, "cost": 0.00017219999999999998}}
{"sample_id": 7061, "db_id": "pets_1", "gold_sql": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "pred_sql": "SELECT pettype, weight FROM pets ORDER BY pet_age ASC LIMIT 1;", "token_usage": {"tokens": 630, "cost": 0.00017235}}
{"sample_id": 7062, "db_id": "pets_1", "gold_sql": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pred_sql": "SELECT petid, weight FROM pets WHERE pet_age > '1';", "token_usage": {"tokens": 592, "cost": 0.00014955}}
{"sample_id": 7047, "db_id": "pets_1", "gold_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "pred_sql": "SELECT COUNT(*) AS dog_count FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.sex = 'female';", "token_usage": {"tokens": 695, "cost": 0.00021404999999999997}}
{"sample_id": 7048, "db_id": "pets_1", "gold_sql": "SELECT count(DISTINCT pettype) FROM pets", "pred_sql": "SELECT COUNT(DISTINCT pettype) AS distinct_pet_types FROM pets;", "token_usage": {"tokens": 568, "cost": 0.0001383}}
{"sample_id": 7070, "db_id": "pets_1", "gold_sql": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "pred_sql": "SELECT pets.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith';", "token_usage": {"tokens": 604, "cost": 0.00015675}}
{"sample_id": 7063, "db_id": "pets_1", "gold_sql": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "pred_sql": "SELECT petid, weight FROM pets WHERE pet_age > '1'", "token_usage": {"tokens": 585, "cost": 0.00014534999999999998}}
{"sample_id": 7059, "db_id": "pets_1", "gold_sql": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "pred_sql": "SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');", "token_usage": {"tokens": 661, "cost": 0.0001896}}
{"sample_id": 5021, "db_id": "soccer_2", "gold_sql": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'", "pred_sql": "SELECT DISTINCT c.state FROM college c JOIN tryout t ON c.cname = t.cname WHERE t.ppos IN ('goalie', 'mid');", "token_usage": {"tokens": 561, "cost": 0.00014265}}
{"sample_id": 5005, "db_id": "soccer_2", "gold_sql": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'", "pred_sql": "SELECT AVG(enr) AS average_enrollment FROM college WHERE cname IN (SELECT cname FROM tryout WHERE decision = 'no');", "token_usage": {"tokens": 538, "cost": 0.00013019999999999997}}
{"sample_id": 5016, "db_id": "soccer_2", "gold_sql": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "pred_sql": "SELECT college.state, SUM(CAST(college.enr AS INTEGER)) AS total_enrollment\nFROM college\nJOIN tryout ON college.cname = tryout.cname\nWHERE tryout.decision = 'accepted'\nGROUP BY college.state;", "token_usage": {"tokens": 635, "cost": 0.00018435}}
{"sample_id": 4939, "db_id": "soccer_2", "gold_sql": "SELECT avg(enr) FROM College", "pred_sql": "SELECT AVG(enr) AS average_enrollment FROM college;", "token_usage": {"tokens": 511, "cost": 0.00011714999999999997}}
{"sample_id": 4994, "db_id": "soccer_2", "gold_sql": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName", "pred_sql": "SELECT DISTINCT player.pname FROM player JOIN tryout ON player.pid = tryout.pid ORDER BY player.pname ASC;", "token_usage": {"tokens": 575, "cost": 0.00015239999999999996}}
{"sample_id": 5015, "db_id": "soccer_2", "gold_sql": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "pred_sql": "SELECT college.state, college.enr FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.decision = 'accepted';", "token_usage": {"tokens": 567, "cost": 0.00014399999999999998}}
{"sample_id": 4991, "db_id": "soccer_2", "gold_sql": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "pred_sql": "SELECT player.pname, tryout.cname FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes';", "token_usage": {"tokens": 557, "cost": 0.0001407}}
{"sample_id": 4968, "db_id": "soccer_2", "gold_sql": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "pred_sql": "SELECT cname, enr FROM college WHERE enr > '10000' AND state = 'Louisiana';", "token_usage": {"tokens": 572, "cost": 0.00014655}}
{"sample_id": 4985, "db_id": "soccer_2", "gold_sql": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state", "pred_sql": "SELECT state, cname FROM college WHERE enr = (SELECT MIN(enr) FROM college AS c2 WHERE c2.state = college.state)", "token_usage": {"tokens": 580, "cost": 0.00015495}}
{"sample_id": 4960, "db_id": "soccer_2", "gold_sql": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player", "pred_sql": "SELECT AVG(training_hours) AS average_training_hours, MAX(training_hours) AS max_training_hours, MIN(training_hours) AS min_training_hours FROM training;", "token_usage": {"tokens": 570, "cost": 0.00014805}}
{"sample_id": 5014, "db_id": "soccer_2", "gold_sql": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)", "pred_sql": "SELECT p.pname \nFROM player p \nJOIN tryout t ON p.pid = t.pid \nWHERE t.cname = (SELECT cname \n                 FROM college \n                 ORDER BY CAST(enr AS INTEGER) DESC \n                 LIMIT 1);", "token_usage": {"tokens": 571, "cost": 0.0001491}}
{"sample_id": 4967, "db_id": "soccer_2", "gold_sql": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "pred_sql": "SELECT cname, enr FROM college WHERE enr > '10000' AND state = 'LA';", "token_usage": {"tokens": 568, "cost": 0.00014415}}
{"sample_id": 4974, "db_id": "soccer_2", "gold_sql": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC", "pred_sql": "SELECT pname FROM player ORDER BY ycard DESC;", "token_usage": {"tokens": 551, "cost": 0.00013529999999999998}}
{"sample_id": 5022, "db_id": "soccer_2", "gold_sql": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'", "pred_sql": "SELECT DISTINCT c.state FROM college c JOIN tryout t ON c.cname = t.cname WHERE t.ppos IN ('goalie', 'mid-field');", "token_usage": {"tokens": 567, "cost": 0.00014399999999999998}}
{"sample_id": 4971, "db_id": "soccer_2", "gold_sql": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName", "pred_sql": "SELECT cname FROM college WHERE enr > '18000' ORDER BY cname;", "token_usage": {"tokens": 541, "cost": 0.0001293}}
{"sample_id": 4984, "db_id": "soccer_2", "gold_sql": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3", "pred_sql": "SELECT cname FROM college ORDER BY CAST(enr AS INTEGER) DESC LIMIT 3;", "token_usage": {"tokens": 567, "cost": 0.0001467}}
{"sample_id": 4966, "db_id": "soccer_2", "gold_sql": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "pred_sql": "SELECT pname FROM player WHERE pname LIKE '%a%';", "token_usage": {"tokens": 525, "cost": 0.0001233}}
{"sample_id": 5042, "db_id": "soccer_2", "gold_sql": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)", "pred_sql": "SELECT COUNT(DISTINCT state) FROM college WHERE CAST(enr AS INTEGER) < (SELECT AVG(CAST(enr AS INTEGER)) FROM college);", "token_usage": {"tokens": 537, "cost": 0.00013184999999999998}}
{"sample_id": 4990, "db_id": "soccer_2", "gold_sql": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "pred_sql": "SELECT DISTINCT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.decision = 'success';", "token_usage": {"tokens": 580, "cost": 0.0001563}}
{"sample_id": 4957, "db_id": "soccer_2", "gold_sql": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'", "pred_sql": "SELECT COUNT(*) AS goalie_count FROM player WHERE pname IN (SELECT pid FROM tryout WHERE ppos = 'goalie');", "token_usage": {"tokens": 538, "cost": 0.00013154999999999997}}
{"sample_id": 4995, "db_id": "soccer_2", "gold_sql": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "pred_sql": "SELECT player.pname, tryout.decision FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.decision = 'yes';", "token_usage": {"tokens": 549, "cost": 0.00013634999999999998}}
{"sample_id": 5011, "db_id": "soccer_2", "gold_sql": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "pred_sql": "SELECT DISTINCT college.cname \nFROM college \nJOIN tryout ON college.cname = tryout.cname \nJOIN player ON tryout.pid = player.pid \nWHERE tryout.ppos = 'goalie' AND tryout.decision = 'succeeded';", "token_usage": {"tokens": 607, "cost": 0.00017069999999999998}}
{"sample_id": 1960, "db_id": "products_for_hire", "gold_sql": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500", "pred_sql": "SELECT good_or_bad_customer FROM customers WHERE coupon_id IN (SELECT coupon_id FROM discount_coupons WHERE coupon_amount = '500');", "token_usage": {"tokens": 1196, "cost": 0.00023429999999999998}}
{"sample_id": 1974, "db_id": "products_for_hire", "gold_sql": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )", "pred_sql": "SELECT COUNT(DISTINCT pfh.product_id) AS never_booked_high_amount\nFROM products_for_hire pfh\nWHERE pfh.product_id NOT IN (\n    SELECT pb.product_id\n    FROM products_booked pb\n    JOIN bookings b ON pb.booking_id = b.booking_id\n    WHERE b.amount_payable > 200\n);", "token_usage": {"tokens": 1302, "cost": 0.0002979}}
{"sample_id": 1964, "db_id": "products_for_hire", "gold_sql": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3", "pred_sql": "SELECT product_id FROM products_booked WHERE booked_count = 3;", "token_usage": {"tokens": 1174, "cost": 0.00022019999999999999}}
{"sample_id": 1967, "db_id": "products_for_hire", "gold_sql": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1", "pred_sql": "SELECT product_name FROM products_for_hire WHERE product_id IN (SELECT product_id FROM view_product_availability WHERE available_yn = '1');", "token_usage": {"tokens": 1219, "cost": 0.00024809999999999996}}
{"sample_id": 1977, "db_id": "products_for_hire", "gold_sql": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20", "pred_sql": "SELECT product_name, product_description FROM products_for_hire WHERE product_type_code = 'Cutlery' AND daily_hire_cost < 20;", "token_usage": {"tokens": 1208, "cost": 0.0002352}}
{"sample_id": 8004, "db_id": "singer", "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "pred_sql": "SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1;", "token_usage": {"tokens": 496, "cost": 0.00012209999999999999}}
{"sample_id": 8008, "db_id": "singer", "gold_sql": "select citizenship from singer group by citizenship order by count(*) desc limit 1", "pred_sql": "SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 524, "cost": 0.00014115}}
{"sample_id": 8019, "db_id": "singer", "gold_sql": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "pred_sql": "SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song);", "token_usage": {"tokens": 547, "cost": 0.00015314999999999998}}
{"sample_id": 8022, "db_id": "singer", "gold_sql": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "pred_sql": "SELECT DISTINCT citizenship FROM singer WHERE birth_year < '1945' OR birth_year > '1955';", "token_usage": {"tokens": 500, "cost": 0.00011955}}
{"sample_id": 8007, "db_id": "singer", "gold_sql": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1;", "token_usage": {"tokens": 522, "cost": 0.0001395}}
{"sample_id": 8002, "db_id": "singer", "gold_sql": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "pred_sql": "SELECT name FROM singer WHERE birth_year IN ('1948', '1949');", "token_usage": {"tokens": 540, "cost": 0.00014534999999999998}}
{"sample_id": 794, "db_id": "coffee_shop", "gold_sql": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5", "pred_sql": "SELECT membership_card, COUNT(member_id) AS member_count \nFROM member \nGROUP BY membership_card \nHAVING member_count > 5;"}
{"sample_id": 797, "db_id": "coffee_shop", "gold_sql": "SELECT count(*) FROM member WHERE address != 'Hartford'", "pred_sql": "SELECT COUNT(*) AS num_members_not_in_hartford FROM member WHERE address != 'Hartford';"}
{"sample_id": 792, "db_id": "coffee_shop", "gold_sql": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30", "pred_sql": "SELECT member_id, name FROM member WHERE age < 30 OR membership_card = 'black';"}
{"sample_id": 790, "db_id": "coffee_shop", "gold_sql": "SELECT count(*) ,  address FROM member GROUP BY address", "pred_sql": "SELECT address, COUNT(member_id) AS num_of_members FROM member GROUP BY address;"}
{"sample_id": 803, "db_id": "coffee_shop", "gold_sql": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'", "pred_sql": "SELECT shop.shop_id, shop.address FROM shop JOIN happy_hour ON shop.shop_id = happy_hour.shop_id WHERE happy_hour.month = 'May';"}
{"sample_id": 3769, "db_id": "e_learning", "gold_sql": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "pred_sql": "SELECT login_name, family_name FROM course_authors_and_tutors;", "token_usage": {"tokens": 910, "cost": 0.00016799999999999996}}
{"sample_id": 3779, "db_id": "e_learning", "gold_sql": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"", "pred_sql": "SELECT COUNT(*) AS fail_count FROM student_tests_taken WHERE test_result = 'Fail';", "token_usage": {"tokens": 933, "cost": 0.00018404999999999997}}
{"sample_id": 3825, "db_id": "e_learning", "gold_sql": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "pred_sql": "SELECT sce.date_of_enrolment, sce.date_of_completion \nFROM students s \nJOIN student_course_enrolment sce ON s.student_id = sce.student_id \nWHERE s.personal_name = 'Karson';", "token_usage": {"tokens": 1019, "cost": 0.00023204999999999998}}
{"sample_id": 3771, "db_id": "e_learning", "gold_sql": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "pred_sql": "SELECT date_of_enrolment, date_of_completion FROM student_course_enrolment;", "token_usage": {"tokens": 941, "cost": 0.00018795}}
{"sample_id": 3788, "db_id": "e_learning", "gold_sql": "SELECT subject_name FROM SUBJECTS", "pred_sql": "SELECT subject_name FROM subjects;", "token_usage": {"tokens": 911, "cost": 0.00017084999999999998}}
{"sample_id": 3789, "db_id": "e_learning", "gold_sql": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name", "pred_sql": "SELECT * FROM course_authors_and_tutors ORDER BY personal_name ASC;", "token_usage": {"tokens": 969, "cost": 0.00020204999999999998}}
{"sample_id": 3824, "db_id": "e_learning", "gold_sql": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"", "pred_sql": "SELECT sct.date_of_completion \nFROM student_tests_taken stt \nJOIN student_course_enrolment sce ON stt.registration_id = sce.registration_id \nJOIN students s ON sce.student_id = s.student_id \nWHERE stt.test_result = 'Fail';", "token_usage": {"tokens": 1069, "cost": 0.00026294999999999997}}
{"sample_id": 3804, "db_id": "e_learning", "gold_sql": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"", "pred_sql": "SELECT courses.course_name FROM courses JOIN course_authors_and_tutors ON courses.author_id = course_authors_and_tutors.author_id WHERE course_authors_and_tutors.personal_name = 'Julio';", "token_usage": {"tokens": 1060, "cost": 0.00025529999999999997}}
{"sample_id": 3829, "db_id": "e_learning", "gold_sql": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT student_id, login_name FROM students WHERE student_id = (SELECT student_id FROM student_course_enrolment GROUP BY student_id ORDER BY COUNT(course_id) DESC LIMIT 1)", "token_usage": {"tokens": 1043, "cost": 0.00024644999999999995}}
{"sample_id": 3766, "db_id": "e_learning", "gold_sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"", "pred_sql": "SELECT address_line_1 FROM course_authors_and_tutors WHERE personal_name = 'Cathrine';", "token_usage": {"tokens": 970, "cost": 0.00020264999999999997}}
{"sample_id": 3801, "db_id": "e_learning", "gold_sql": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "pred_sql": "SELECT ca.author_id, ca.address_line_1 \nFROM course_authors_and_tutors ca \nJOIN courses c ON ca.author_id = c.author_id \nGROUP BY ca.author_id, ca.address_line_1 \nHAVING COUNT(c.course_id) >= 2;", "token_usage": {"tokens": 1020, "cost": 0.00023264999999999996}}
{"sample_id": 3768, "db_id": "e_learning", "gold_sql": "SELECT address_line_1 FROM Course_Authors_and_Tutors", "pred_sql": "SELECT address_line_1 FROM course_authors_and_tutors;", "token_usage": {"tokens": 933, "cost": 0.00018314999999999998}}
{"sample_id": 3810, "db_id": "e_learning", "gold_sql": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "pred_sql": "SELECT subjects.subject_id, subjects.subject_name, COUNT(courses.course_id) AS course_count \nFROM subjects \nLEFT JOIN courses ON subjects.subject_id = courses.subject_id \nGROUP BY subjects.subject_id, subjects.subject_name \nORDER BY course_count ASC;", "token_usage": {"tokens": 1017, "cost": 0.00022724999999999997}}
{"sample_id": 3798, "db_id": "e_learning", "gold_sql": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"", "pred_sql": "SELECT ca.address_line_1 FROM course_authors_and_tutors ca JOIN courses c ON ca.author_id = c.author_id JOIN subjects s ON c.subject_id = s.subject_id WHERE s.subject_name IN ('operating system', 'data structure');", "token_usage": {"tokens": 1055, "cost": 0.00025095}}
{"sample_id": 3778, "db_id": "e_learning", "gold_sql": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"", "pred_sql": "SELECT date_test_taken FROM student_tests_taken WHERE test_result = 'Pass';", "token_usage": {"tokens": 974, "cost": 0.00020504999999999997}}
{"sample_id": 3786, "db_id": "e_learning", "gold_sql": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"", "pred_sql": "SELECT COUNT(*) AS number_of_students FROM students WHERE personal_name LIKE '%son%';", "token_usage": {"tokens": 962, "cost": 0.00019784999999999996}}
{"sample_id": 3817, "db_id": "e_learning", "gold_sql": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "pred_sql": "SELECT courses.course_name, courses.course_description FROM courses JOIN student_course_enrolment ON courses.course_id = student_course_enrolment.course_id GROUP BY courses.course_id HAVING COUNT(student_course_enrolment.student_id) > 2;", "token_usage": {"tokens": 1013, "cost": 0.00022799999999999999}}
{"sample_id": 5330, "db_id": "manufactory_1", "gold_sql": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC", "pred_sql": "SELECT name, price FROM products WHERE price >= 180 ORDER BY price DESC, name ASC;", "token_usage": {"tokens": 462, "cost": 0.00011114999999999999}}
{"sample_id": 5338, "db_id": "manufactory_1", "gold_sql": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "pred_sql": "SELECT manufacturers.name, AVG(products.price) AS average_price \nFROM manufacturers \nJOIN products ON manufacturers.code = products.manufacturer \nGROUP BY manufacturers.name \nHAVING AVG(products.price) >= 150;", "token_usage": {"tokens": 535, "cost": 0.00015585}}
{"sample_id": 5294, "db_id": "manufactory_1", "gold_sql": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)", "pred_sql": "SELECT name FROM manufacturers WHERE revenue > (SELECT AVG(revenue) FROM manufacturers);", "token_usage": {"tokens": 458, "cost": 0.00011189999999999998}}
{"sample_id": 5281, "db_id": "manufactory_1", "gold_sql": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'", "pred_sql": "SELECT founder FROM manufacturers WHERE name LIKE 'S%';", "token_usage": {"tokens": 462, "cost": 0.00011475}}
{"sample_id": 5266, "db_id": "manufactory_1", "gold_sql": "SELECT founder FROM manufacturers WHERE name  =  'Sony'", "pred_sql": "SELECT founder FROM manufacturers WHERE name = 'Sony';", "token_usage": {"tokens": 452, "cost": 0.00011279999999999998}}
{"sample_id": 5280, "db_id": "manufactory_1", "gold_sql": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'", "pred_sql": "SELECT COUNT(*) FROM manufacturers WHERE headquarter IN ('Tokyo', 'Beijing');", "token_usage": {"tokens": 433, "cost": 9.915e-05}}
{"sample_id": 5325, "db_id": "manufactory_1", "gold_sql": "SELECT avg(price) FROM products WHERE Manufacturer  =  2", "pred_sql": "SELECT AVG(price) AS average_price FROM products WHERE manufacturer = 2;", "token_usage": {"tokens": 454, "cost": 0.00010994999999999999}}
{"sample_id": 5292, "db_id": "manufactory_1", "gold_sql": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC", "pred_sql": "SELECT name, headquarter, revenue FROM manufacturers ORDER BY revenue DESC;", "token_usage": {"tokens": 440, "cost": 0.00010109999999999999}}
{"sample_id": 5303, "db_id": "manufactory_1", "gold_sql": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name", "pred_sql": "SELECT manufacturers.name, SUM(products.price) AS total_revenue\nFROM manufacturers\nJOIN products ON manufacturers.code = products.manufacturer\nGROUP BY manufacturers.name;", "token_usage": {"tokens": 496, "cost": 0.00013829999999999997}}
{"sample_id": 5277, "db_id": "manufactory_1", "gold_sql": "SELECT DISTINCT headquarter FROM manufacturers", "pred_sql": "SELECT DISTINCT headquarter FROM manufacturers;", "token_usage": {"tokens": 437, "cost": 0.00010334999999999999}}
{"sample_id": 5340, "db_id": "manufactory_1", "gold_sql": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1", "pred_sql": "SELECT name, price FROM products ORDER BY price ASC LIMIT 1;", "token_usage": {"tokens": 439, "cost": 0.00010274999999999999}}
{"sample_id": 5323, "db_id": "manufactory_1", "gold_sql": "SELECT avg(price) FROM products", "pred_sql": "SELECT AVG(price) AS average_price FROM products;", "token_usage": {"tokens": 430, "cost": 9.824999999999999e-05}}
{"sample_id": 5272, "db_id": "manufactory_1", "gold_sql": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers", "pred_sql": "SELECT AVG(revenue) AS average_revenue, MAX(revenue) AS maximum_revenue, SUM(revenue) AS total_revenue FROM manufacturers;", "token_usage": {"tokens": 462, "cost": 0.00011564999999999999}}
{"sample_id": 5336, "db_id": "manufactory_1", "gold_sql": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "pred_sql": "SELECT m.name AS manufacturer_name, AVG(p.price) AS average_price FROM products p JOIN manufacturers m ON p.manufacturer = m.code GROUP BY m.name;", "token_usage": {"tokens": 491, "cost": 0.00013305}}
{"sample_id": 5310, "db_id": "manufactory_1", "gold_sql": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')", "pred_sql": "SELECT COUNT(*) FROM products WHERE manufacturer != (SELECT code FROM manufacturers WHERE name = 'Sony');", "token_usage": {"tokens": 493, "cost": 0.00013604999999999997}}
{"sample_id": 5287, "db_id": "manufactory_1", "gold_sql": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'", "pred_sql": "SELECT p.name FROM products p JOIN manufacturers m ON p.manufacturer = m.code WHERE m.name IN ('Creative Labs', 'Sony') GROUP BY p.name HAVING COUNT(DISTINCT m.name) = 2;", "token_usage": {"tokens": 534, "cost": 0.00015749999999999998}}
{"sample_id": 2122, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";", "pred_sql": "SELECT documents.document_id \nFROM documents \nJOIN ref_document_status ON documents.document_status_code = ref_document_status.document_status_code \nJOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code \nJOIN ref_shipping_agents ON documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code \nWHERE ref_document_status.document_status_description = 'done' \nAND ref_document_types.document_type_description = 'Paper' \nAND ref_shipping_agents.shipping_agent_name = 'USPS';", "token_usage": {"tokens": 1227, "cost": 0.00028034999999999996}}
{"sample_id": 2128, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id", "pred_sql": "SELECT employee_name FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM circulation_history)", "token_usage": {"tokens": 1122, "cost": 0.0002187}}
{"sample_id": 2124, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;", "pred_sql": "SELECT COUNT(*) AS draft_copy_count FROM draft_copies WHERE document_id = '2';", "token_usage": {"tokens": 1096, "cost": 0.00020669999999999998}}
{"sample_id": 2109, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;", "pred_sql": "SELECT roles.role_description, roles.role_code, COUNT(employees.employee_id) AS number_of_employees\nFROM roles\nLEFT JOIN employees ON roles.role_code = employees.role_code\nGROUP BY roles.role_code, roles.role_description;", "token_usage": {"tokens": 1177, "cost": 0.00025304999999999994}}
{"sample_id": 2114, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";", "pred_sql": "SELECT document_id FROM documents WHERE document_status_code = (SELECT document_status_code FROM ref_document_status WHERE document_status_description = 'done') AND document_type_code = (SELECT document_type_code FROM ref_document_types WHERE document_type_description = 'paper');", "token_usage": {"tokens": 1157, "cost": 0.00024104999999999995}}
{"sample_id": 2130, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;", "pred_sql": "SELECT ch.document_id, COUNT(DISTINCT ch.employee_id) AS employee_count\nFROM circulation_history ch\nGROUP BY ch.document_id;", "token_usage": {"tokens": 1179, "cost": 0.00024884999999999995}}
{"sample_id": 2112, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";", "pred_sql": "SELECT COUNT(*) AS document_count FROM documents WHERE document_status_code = 'done';", "token_usage": {"tokens": 1113, "cost": 0.00021869999999999998}}
{"sample_id": 2105, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";", "pred_sql": "SELECT role_description FROM roles WHERE role_code = 'ED';", "token_usage": {"tokens": 1096, "cost": 0.00020849999999999997}}
{"sample_id": 3567, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "pred_sql": "SELECT artist.artist_name, artist.country FROM song JOIN artist ON song.artist_name = artist.artist_name WHERE song.song_name LIKE '%love%';", "token_usage": {"tokens": 806, "cost": 0.00020414999999999997}}
{"sample_id": 3609, "db_id": "music_1", "gold_sql": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)", "pred_sql": "SELECT s1.f_id FROM song s1 WHERE s1.resolution > (SELECT s2.resolution FROM song s2 WHERE s2.rating < '8')", "token_usage": {"tokens": 755, "cost": 0.0001749}}
{"sample_id": 3553, "db_id": "music_1", "gold_sql": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800", "pred_sql": "SELECT AVG(duration) AS average_duration FROM song JOIN files ON song.f_id = files.f_id WHERE files.formats LIKE '%mp3%' AND song.resolution < '800';", "token_usage": {"tokens": 781, "cost": 0.0001914}}
{"sample_id": 3563, "db_id": "music_1", "gold_sql": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")", "pred_sql": "SELECT DISTINCT s.song_name FROM song s WHERE s.resolution > (SELECT MAX(s2.resolution) FROM song s2 WHERE s2.languages LIKE '%English%');", "token_usage": {"tokens": 775, "cost": 0.00019004999999999998}}
{"sample_id": 3524, "db_id": "music_1", "gold_sql": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1", "pred_sql": "SELECT f_id FROM song ORDER BY duration DESC LIMIT 1;", "token_usage": {"tokens": 721, "cost": 0.00016125}}
{"sample_id": 3572, "db_id": "music_1", "gold_sql": "SELECT song_name FROM song ORDER BY resolution", "pred_sql": "SELECT song_name FROM song ORDER BY resolution;", "token_usage": {"tokens": 687, "cost": 0.00013814999999999997}}
{"sample_id": 3574, "db_id": "music_1", "gold_sql": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720", "pred_sql": "SELECT f_id FROM song JOIN files ON song.f_id = files.f_id WHERE formats LIKE '%mp4%' OR resolution > '720';", "token_usage": {"tokens": 757, "cost": 0.00017744999999999998}}
{"sample_id": 3607, "db_id": "music_1", "gold_sql": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')", "pred_sql": "SELECT song_name FROM song WHERE rating < (SELECT MIN(rating) FROM song WHERE languages LIKE '%English%');", "token_usage": {"tokens": 728, "cost": 0.0001605}}
{"sample_id": 3555, "db_id": "music_1", "gold_sql": "SELECT count(*) ,  gender FROM artist GROUP BY gender", "pred_sql": "SELECT gender, COUNT(*) as artist_count FROM artist GROUP BY gender;", "token_usage": {"tokens": 701, "cost": 0.00014834999999999997}}
{"sample_id": 3534, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1", "pred_sql": "SELECT artist_name FROM song ORDER BY duration ASC LIMIT 1;", "token_usage": {"tokens": 710, "cost": 0.00015285}}
{"sample_id": 3570, "db_id": "music_1", "gold_sql": "SELECT g_name ,  rating FROM genre ORDER BY g_name", "pred_sql": "SELECT g_name, rating FROM genre ORDER BY g_name ASC;", "token_usage": {"tokens": 710, "cost": 0.00015194999999999998}}
{"sample_id": 3558, "db_id": "music_1", "gold_sql": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1", "pred_sql": "SELECT artist.gender, artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name JOIN files ON song.f_id = files.f_id WHERE files.resolution = (SELECT MIN(resolution) FROM files);", "token_usage": {"tokens": 784, "cost": 0.0001959}}
{"sample_id": 3590, "db_id": "music_1", "gold_sql": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"", "pred_sql": "SELECT AVG(song.rating) AS average_rating, AVG(song.resolution) AS average_resolution FROM song WHERE song.languages LIKE '%Bangla%';", "token_usage": {"tokens": 762, "cost": 0.00018314999999999998}}
{"sample_id": 3589, "db_id": "music_1", "gold_sql": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"", "pred_sql": "SELECT DISTINCT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'UK' AND song.languages LIKE '%English%';", "token_usage": {"tokens": 804, "cost": 0.00020654999999999998}}
{"sample_id": 3543, "db_id": "music_1", "gold_sql": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"", "pred_sql": "SELECT AVG(song_count) AS average_songs FROM (SELECT COUNT(*) AS song_count FROM song JOIN artist ON song.artist_name = artist.artist_name WHERE artist.gender = 'female' GROUP BY song.artist_name) AS song_counts;", "token_usage": {"tokens": 759, "cost": 0.00018179999999999997}}
{"sample_id": 3538, "db_id": "music_1", "gold_sql": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"", "pred_sql": "SELECT COUNT(*) AS song_count FROM song WHERE duration = '4:00'", "token_usage": {"tokens": 685, "cost": 0.00013964999999999998}}
{"sample_id": 3568, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "pred_sql": "SELECT artist.artist_name, artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE strftime('%m', song.releasedate) = '03';", "token_usage": {"tokens": 788, "cost": 0.00019919999999999996}}
{"sample_id": 3580, "db_id": "music_1", "gold_sql": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT languages, COUNT(languages) as language_count \nFROM song \nWHERE resolution > '500' \nGROUP BY languages \nORDER BY language_count DESC \nLIMIT 1;", "token_usage": {"tokens": 767, "cost": 0.00018524999999999998}}
{"sample_id": 3598, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "pred_sql": "SELECT artist.artist_name, COUNT(song.song_name) AS number_of_works \nFROM artist \nJOIN song ON artist.artist_name = song.artist_name \nWHERE song.languages LIKE '%English%' \nGROUP BY artist.artist_name;", "token_usage": {"tokens": 753, "cost": 0.00017639999999999998}}
{"sample_id": 3550, "db_id": "music_1", "gold_sql": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"", "pred_sql": "SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female' AND song.languages LIKE '%Bangla%';", "token_usage": {"tokens": 771, "cost": 0.00018629999999999997}}
{"sample_id": 7235, "db_id": "flight_2", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "pred_sql": "SELECT airline, COUNT(flightno) AS flight_count FROM flights GROUP BY airline HAVING flight_count >= 10;", "token_usage": {"tokens": 588, "cost": 0.0001494}}
{"sample_id": 7177, "db_id": "flight_2", "gold_sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "pred_sql": "SELECT airline, abbreviation FROM airlines WHERE country = 'USA';", "token_usage": {"tokens": 550, "cost": 0.00012435}}
{"sample_id": 7215, "db_id": "flight_2", "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT airports.city, COUNT(flights.destairport) AS destination_count\nFROM flights\nJOIN airports ON flights.destairport = airports.airportcode\nGROUP BY airports.city\nORDER BY destination_count DESC\nLIMIT 1;", "token_usage": {"tokens": 648, "cost": 0.0001854}}
{"sample_id": 7205, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "pred_sql": "SELECT COUNT(*) AS flight_count FROM flights WHERE sourceairport = (SELECT airportcode FROM airports WHERE airportname = 'Aberdeen') AND destairport = (SELECT airportcode FROM airports WHERE airportname = 'Ashley');", "token_usage": {"tokens": 559, "cost": 0.00013199999999999998}}
{"sample_id": 7187, "db_id": "flight_2", "gold_sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "pred_sql": "SELECT airline FROM airlines WHERE abbreviation = 'UAL';", "token_usage": {"tokens": 573, "cost": 0.00014084999999999998}}
{"sample_id": 7237, "db_id": "flight_2", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "pred_sql": "SELECT airline, COUNT(flightno) AS flight_count FROM flights GROUP BY airline HAVING flight_count < 200;", "token_usage": {"tokens": 575, "cost": 0.00014159999999999997}}
{"sample_id": 7211, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "pred_sql": "SELECT COUNT(*) AS flight_count FROM flights WHERE airline = 'United Airlines' AND sourceairport = 'AHD';", "token_usage": {"tokens": 563, "cost": 0.00013259999999999997}}
{"sample_id": 7183, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM AIRPORTS", "pred_sql": "SELECT COUNT(*) AS number_of_airports FROM airports;", "token_usage": {"tokens": 539, "cost": 0.00012089999999999998}}
{"sample_id": 7226, "db_id": "flight_2", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "pred_sql": "SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'AHD';", "token_usage": {"tokens": 590, "cost": 0.00014790000000000002}}
{"sample_id": 7174, "db_id": "flight_2", "gold_sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "pred_sql": "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways';", "token_usage": {"tokens": 544, "cost": 0.00012164999999999998}}
{"sample_id": 7217, "db_id": "flight_2", "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT city, COUNT(*) as flight_count FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY city ORDER BY flight_count DESC LIMIT 1;", "token_usage": {"tokens": 596, "cost": 0.00015419999999999998}}
{"sample_id": 7230, "db_id": "flight_2", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "pred_sql": "SELECT DISTINCT f1.airline \nFROM flights f1 \nJOIN flights f2 ON f1.airline = f2.airline \nWHERE f1.sourceairport = 'APG' \nAND f2.sourceairport = 'CVO';", "token_usage": {"tokens": 647, "cost": 0.00018074999999999998}}
{"sample_id": 7191, "db_id": "flight_2", "gold_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "pred_sql": "SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton'", "token_usage": {"tokens": 586, "cost": 0.0001473}}
{"sample_id": 7173, "db_id": "flight_2", "gold_sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "pred_sql": "SELECT country FROM airlines WHERE airline = 'Jetblue Airways';", "token_usage": {"tokens": 549, "cost": 0.000126}}
{"sample_id": 7219, "db_id": "flight_2", "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT sourceairport, COUNT(*) as flight_count FROM flights GROUP BY sourceairport ORDER BY flight_count DESC LIMIT 1;", "token_usage": {"tokens": 608, "cost": 0.00015959999999999998}}
{"sample_id": 7194, "db_id": "flight_2", "gold_sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "pred_sql": "SELECT airportname FROM airports WHERE city = (SELECT city FROM airports WHERE airportname = 'Aberdeen');", "token_usage": {"tokens": 566, "cost": 0.00013529999999999998}}
{"sample_id": 7164, "db_id": "car_1", "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "pred_sql": "SELECT model_list.model \nFROM model_list \nJOIN car_makers ON model_list.maker = car_makers.id \nJOIN car_names ON car_names.model = model_list.model \nJOIN cars_data ON cars_data.id = car_names.makeid \nWHERE cars_data.weight < 3500 \nAND car_makers.fullname != 'Ford Motor Company';", "token_usage": {"tokens": 845, "cost": 0.00021674999999999998}}
{"sample_id": 7121, "db_id": "car_1", "gold_sql": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "pred_sql": "SELECT year, AVG(weight) AS average_weight FROM cars_data GROUP BY year;", "token_usage": {"tokens": 746, "cost": 0.00016094999999999998}}
{"sample_id": 7145, "db_id": "car_1", "gold_sql": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "pred_sql": "SELECT DISTINCT model_list.model \nFROM model_list \nJOIN car_makers ON model_list.maker = car_makers.id \nJOIN car_names ON car_names.model = model_list.model \nJOIN cars_data ON cars_data.id = car_names.makeid \nWHERE car_makers.maker = 'General Motors' OR cars_data.weight > 3500;", "token_usage": {"tokens": 856, "cost": 0.00022244999999999999}}
{"sample_id": 7082, "db_id": "car_1", "gold_sql": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "pred_sql": "SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count \nFROM continents c \nLEFT JOIN countries co ON c.contid = co.continent \nGROUP BY c.contid, c.continent;", "token_usage": {"tokens": 818, "cost": 0.00019965}}
{"sample_id": 7132, "db_id": "car_1", "gold_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "pred_sql": "SELECT cylinders, MAX(accelerate) AS max_accelerate FROM cars_data GROUP BY cylinders;", "token_usage": {"tokens": 791, "cost": 0.00018795}}
{"sample_id": 7128, "db_id": "car_1", "gold_sql": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "pred_sql": "SELECT AVG(horsepower) AS average_horsepower FROM cars_data WHERE year < 1980;", "token_usage": {"tokens": 776, "cost": 0.00017805000000000002}}
{"sample_id": 7125, "db_id": "car_1", "gold_sql": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "pred_sql": "SELECT car_names.make, MAX(cars_data.horsepower) AS max_horsepower \nFROM cars_data \nJOIN car_names ON cars_data.id = car_names.makeid \nWHERE cars_data.cylinders = 3 \nGROUP BY car_names.make \nORDER BY max_horsepower DESC \nLIMIT 1;", "token_usage": {"tokens": 879, "cost": 0.00023669999999999998}}
{"sample_id": 7161, "db_id": "car_1", "gold_sql": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "pred_sql": "SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4;", "token_usage": {"tokens": 842, "cost": 0.00021089999999999998}}
{"sample_id": 7162, "db_id": "car_1", "gold_sql": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "pred_sql": "SELECT MAX(mpg) AS max_mpg FROM cars_data WHERE cylinders = 8 OR year < 1980;", "token_usage": {"tokens": 755, "cost": 0.00016185}}
{"sample_id": 7105, "db_id": "car_1", "gold_sql": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "pred_sql": "SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_names.model = 'hornet sportabout' AND car_makers.maker = 'amc';", "token_usage": {"tokens": 852, "cost": 0.00022185}}
{"sample_id": 7131, "db_id": "car_1", "gold_sql": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "pred_sql": "SELECT AVG(cars_data.edispl) AS average_edispl FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname LIKE '%Volvo%';", "token_usage": {"tokens": 821, "cost": 0.00020549999999999998}}
{"sample_id": 7098, "db_id": "car_1", "gold_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "pred_sql": "SELECT c.continent, COUNT(cm.id) AS car_maker_count\nFROM continents c\nJOIN countries co ON c.contid = co.continent\nJOIN car_makers cm ON co.countryid = cm.country\nGROUP BY c.continent;", "token_usage": {"tokens": 812, "cost": 0.00019739999999999997}}
{"sample_id": 7094, "db_id": "car_1", "gold_sql": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "pred_sql": "SELECT make, year FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE year = (SELECT MIN(year) FROM cars_data)", "token_usage": {"tokens": 808, "cost": 0.00019545}}
{"sample_id": 7106, "db_id": "car_1", "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "pred_sql": "SELECT COUNT(*) AS number_of_car_makers FROM car_makers WHERE country = (SELECT countryid FROM countries WHERE countryname = 'France');", "token_usage": {"tokens": 790, "cost": 0.00018825}}
{"sample_id": 7158, "db_id": "car_1", "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "pred_sql": "SELECT model_list.model, MAX(cars_data.horsepower) AS max_horsepower \nFROM cars_data \nJOIN car_names ON cars_data.id = car_names.makeid \nJOIN model_list ON car_names.model = model_list.model \nWHERE cars_data.cylinders = 4 \nGROUP BY model_list.model \nORDER BY max_horsepower DESC \nLIMIT 1;", "token_usage": {"tokens": 880, "cost": 0.00023955}}
{"sample_id": 7156, "db_id": "car_1", "gold_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "pred_sql": "SELECT COUNT(*) AS car_count FROM cars_data WHERE cylinders > 6;", "token_usage": {"tokens": 733, "cost": 0.00015405}}
{"sample_id": 7088, "db_id": "car_1", "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "pred_sql": "SELECT model, horsepower FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY horsepower ASC LIMIT 1;", "token_usage": {"tokens": 792, "cost": 0.00018899999999999999}}
{"sample_id": 7126, "db_id": "car_1", "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "pred_sql": "SELECT model, mpg FROM cars_data ORDER BY mpg DESC LIMIT 1;", "token_usage": {"tokens": 784, "cost": 0.00018015}}
{"sample_id": 7099, "db_id": "car_1", "gold_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "pred_sql": "SELECT c.continent, COUNT(cm.id) AS car_maker_count\nFROM continents c\nLEFT JOIN countries co ON c.contid = co.continent\nLEFT JOIN car_makers cm ON co.countryid = cm.country\nGROUP BY c.continent;", "token_usage": {"tokens": 847, "cost": 0.0002184}}
{"sample_id": 2189, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "pred_sql": "SELECT p.driverid, p.stop \nFROM pitstops p \nWHERE p.duration < (SELECT duration \n                    FROM pitstops \n                    WHERE raceid = 841)", "token_usage": {"tokens": 2001, "cost": 0.00037754999999999993}}
{"sample_id": 2180, "db_id": "formula_1", "gold_sql": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality", "pred_sql": "SELECT nationality, COUNT(constructorid) AS constructor_count FROM constructors GROUP BY nationality;", "token_usage": {"tokens": 1923, "cost": 0.00033794999999999995}}
{"sample_id": 2194, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT name FROM races ORDER BY name DESC", "pred_sql": "SELECT DISTINCT name FROM races ORDER BY name DESC;", "token_usage": {"tokens": 1916, "cost": 0.00033194999999999996}}
{"sample_id": 2178, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20", "pred_sql": "SELECT DISTINCT d.forename \nFROM drivers d \nJOIN driverstandings ds ON d.driverid = ds.driverid \nJOIN results r ON ds.raceid = r.raceid AND ds.driverid = r.driverid \nWHERE ds.position = 1 AND ds.points > 20;", "token_usage": {"tokens": 2025, "cost": 0.00039285}}
{"sample_id": 2205, "db_id": "formula_1", "gold_sql": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT drivers.driverid, drivers.surname\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.year > 2010\nGROUP BY drivers.driverid\nORDER BY COUNT(results.raceid) DESC\nLIMIT 1;", "token_usage": {"tokens": 2010, "cost": 0.00038564999999999997}}
{"sample_id": 2164, "db_id": "formula_1", "gold_sql": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009", "pred_sql": "SELECT COUNT(DISTINCT driverid) AS driver_count \nFROM results r \nJOIN races ra ON r.raceid = ra.raceid \nWHERE ra.name = 'Australian Grand Prix' AND ra.year = 2009;", "token_usage": {"tokens": 1995, "cost": 0.00037889999999999994}}
{"sample_id": 2166, "db_id": "formula_1", "gold_sql": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )", "pred_sql": "SELECT COUNT(DISTINCT d.driverid) AS drivers_not_participated\nFROM drivers d\nWHERE d.driverid NOT IN (\n    SELECT r.driverid\n    FROM results r\n    JOIN races ra ON r.raceid = ra.raceid\n    WHERE ra.year = 2009\n);", "token_usage": {"tokens": 1969, "cost": 0.00036375}}
{"sample_id": 2224, "db_id": "formula_1", "gold_sql": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT driverid, surname FROM results JOIN drivers ON results.driverid = drivers.driverid GROUP BY results.driverid ORDER BY COUNT(results.raceid) DESC LIMIT 1;", "token_usage": {"tokens": 1974, "cost": 0.00036629999999999996}}
{"sample_id": 2221, "db_id": "formula_1", "gold_sql": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2", "pred_sql": "SELECT d.driverid, d.forename, COUNT(r.raceid) AS number_of_races\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nGROUP BY d.driverid, d.forename\nHAVING COUNT(r.raceid) >= 2;", "token_usage": {"tokens": 2031, "cost": 0.00039644999999999996}}
{"sample_id": 2210, "db_id": "formula_1", "gold_sql": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5", "pred_sql": "SELECT DISTINCT constructors.name \nFROM constructors \nJOIN constructorresults ON constructors.constructorid = constructorresults.constructorid \nWHERE constructors.nationality = 'Japanese' \nAND constructorresults.points > 5;", "token_usage": {"tokens": 2021, "cost": 0.00039449999999999994}}
{"sample_id": 2160, "db_id": "formula_1", "gold_sql": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1", "pred_sql": "SELECT drivers.driverid, drivers.surname FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid ORDER BY laptimes.time DESC LIMIT 1;", "token_usage": {"tokens": 1981, "cost": 0.0003696}}
{"sample_id": 2216, "db_id": "formula_1", "gold_sql": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "pred_sql": "SELECT r.name AS race_name, MAX(l.fastestlapspeed) AS max_fastest_lap_speed \nFROM races r \nJOIN laptimes l ON r.raceid = l.raceid \nWHERE r.year > 2004 \nGROUP BY r.name \nORDER BY r.year;", "token_usage": {"tokens": 2047, "cost": 0.00040694999999999994}}
{"sample_id": 2199, "db_id": "formula_1", "gold_sql": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"", "pred_sql": "SELECT name FROM races WHERE time > '12:00:00' OR time < '09:00:00';", "token_usage": {"tokens": 1946, "cost": 0.00034544999999999997}}
{"sample_id": 2146, "db_id": "formula_1", "gold_sql": "SELECT name FROM races ORDER BY date DESC LIMIT 1", "pred_sql": "SELECT name FROM races ORDER BY date DESC LIMIT 1;", "token_usage": {"tokens": 1938, "cost": 0.00034694999999999995}}
{"sample_id": 2220, "db_id": "formula_1", "gold_sql": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2", "pred_sql": "SELECT d.driverid, d.forename, COUNT(r.raceid) AS number_of_races\nFROM drivers d\nJOIN results res ON d.driverid = res.driverid\nJOIN races r ON res.raceid = r.raceid\nGROUP BY d.driverid, d.forename\nHAVING COUNT(r.raceid) >= 2;", "token_usage": {"tokens": 2020, "cost": 0.00039119999999999997}}
{"sample_id": 2168, "db_id": "formula_1", "gold_sql": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "pred_sql": "SELECT races.name, races.year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis';", "token_usage": {"tokens": 1986, "cost": 0.0003717}}
{"sample_id": 1839, "db_id": "browser_web", "gold_sql": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'", "pred_sql": "SELECT b.name \nFROM browser b \nJOIN accelerator_compatible_browser acb1 ON b.id = acb1.browser_id \nJOIN web_client_accelerator wca1 ON acb1.accelerator_id = wca1.id \nWHERE wca1.name = 'CACHEbox' \nINTERSECT \nSELECT b2.name \nFROM browser b2 \nJOIN accelerator_compatible_browser acb2 ON b2.id = acb2.browser_id \nJOIN web_client_accelerator wca2 ON acb2.accelerator_id = wca2.id \nWHERE wca2.name = 'Fasterfox';"}
{"sample_id": 1843, "db_id": "browser_web", "gold_sql": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC", "pred_sql": "SELECT b.name AS browser_name, wca.name AS accelerator_name, acb.compatible_since_year \nFROM accelerator_compatible_browser acb \nJOIN browser b ON acb.browser_id = b.id \nJOIN web_client_accelerator wca ON acb.accelerator_id = wca.id \nORDER BY acb.compatible_since_year DESC;"}
{"sample_id": 1837, "db_id": "browser_web", "gold_sql": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );", "pred_sql": "SELECT COUNT(*) AS incompatible_accelerators_count\nFROM web_client_accelerator\nWHERE id NOT IN (\n    SELECT accelerator_id\n    FROM accelerator_compatible_browser\n)"}
{"sample_id": 1842, "db_id": "browser_web", "gold_sql": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system", "pred_sql": "SELECT operating_system, COUNT(*) AS number_of_accelerators FROM web_client_accelerator GROUP BY operating_system;"}
{"sample_id": 1834, "db_id": "browser_web", "gold_sql": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT b.id, b.name\nFROM browser b\nJOIN accelerator_compatible_browser acb ON b.id = acb.browser_id\nGROUP BY b.id, b.name\nORDER BY COUNT(acb.accelerator_id) DESC\nLIMIT 1;"}
{"sample_id": 4102, "db_id": "company_employee", "gold_sql": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name", "pred_sql": "SELECT company.name, COUNT(employment.people_id) AS number_of_employees\nFROM company\nLEFT JOIN employment ON company.company_id = employment.company_id\nGROUP BY company.name;", "token_usage": {"tokens": 697, "cost": 0.00018915}}
{"sample_id": 4100, "db_id": "company_employee", "gold_sql": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working", "pred_sql": "SELECT company.name AS company_name, people.name AS employee_name, employment.year_working \nFROM employment \nJOIN people ON employment.people_id = people.people_id \nJOIN company ON employment.company_id = company.company_id \nORDER BY employment.year_working DESC;", "token_usage": {"tokens": 669, "cost": 0.0001692}}
{"sample_id": 4093, "db_id": "company_employee", "gold_sql": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company", "pred_sql": "SELECT MAX(market_value_in_billion) AS max_market_value, MIN(market_value_in_billion) AS min_market_value FROM company;", "token_usage": {"tokens": 645, "cost": 0.00015884999999999999}}
{"sample_id": 4092, "db_id": "company_employee", "gold_sql": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\"", "pred_sql": "SELECT name FROM company WHERE industry IN ('banking', 'retailing');", "token_usage": {"tokens": 639, "cost": 0.00015434999999999998}}
{"sample_id": 3743, "db_id": "program_share", "gold_sql": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'", "pred_sql": "SELECT COUNT(DISTINCT b.program_id) AS number_of_programs\nFROM broadcast b\nWHERE b.time_of_day LIKE 'night%';", "token_usage": {"tokens": 677, "cost": 0.00016859999999999998}}
{"sample_id": 3737, "db_id": "program_share", "gold_sql": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'", "pred_sql": "SELECT DISTINCT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day LIKE 'morning%';", "token_usage": {"tokens": 725, "cost": 0.0001974}}
{"sample_id": 3751, "db_id": "program_share", "gold_sql": "SELECT count(DISTINCT OWNER) FROM channel", "pred_sql": "SELECT COUNT(DISTINCT owner) AS number_of_different_channel_owners FROM channel;", "token_usage": {"tokens": 635, "cost": 0.0001452}}
{"sample_id": 3742, "db_id": "program_share", "gold_sql": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day", "pred_sql": "SELECT time_of_day, COUNT(program_id) AS program_count FROM broadcast GROUP BY time_of_day;", "token_usage": {"tokens": 658, "cost": 0.00015675}}
{"sample_id": 3745, "db_id": "program_share", "gold_sql": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\"", "pred_sql": "SELECT p.name FROM program p WHERE p.program_id NOT IN (SELECT b.program_id FROM broadcast b WHERE b.time_of_day = 'morning');", "token_usage": {"tokens": 706, "cost": 0.00018554999999999998}}
{"sample_id": 3759, "db_id": "program_share", "gold_sql": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT program.name\nFROM program\nJOIN broadcast ON program.program_id = broadcast.program_id\nGROUP BY program.program_id\nORDER BY COUNT(broadcast.program_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 669, "cost": 0.00016424999999999998}}
{"sample_id": 3739, "db_id": "program_share", "gold_sql": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'", "pred_sql": "SELECT DISTINCT c1.name \nFROM channel c1 \nJOIN broadcast b1 ON c1.channel_id = b1.channel_id \nWHERE b1.time_of_day = 'morning' \nINTERSECT \nSELECT DISTINCT c2.name \nFROM channel c2 \nJOIN broadcast b2 ON c2.channel_id = b2.channel_id \nWHERE b2.time_of_day = 'night';", "token_usage": {"tokens": 717, "cost": 0.0001917}}
{"sample_id": 3741, "db_id": "program_share", "gold_sql": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day", "pred_sql": "SELECT time_of_day, COUNT(DISTINCT program_id) AS program_count FROM broadcast GROUP BY time_of_day;", "token_usage": {"tokens": 639, "cost": 0.0001458}}
{"sample_id": 6781, "db_id": "activity_1", "gold_sql": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in", "pred_sql": "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM participates_in)", "token_usage": {"tokens": 761, "cost": 0.00017669999999999999}}
{"sample_id": 6722, "db_id": "activity_1", "gold_sql": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"", "pred_sql": "SELECT phone, room, building FROM faculty WHERE fname = 'Jerry' AND lname = 'Prince';", "token_usage": {"tokens": 731, "cost": 0.00015869999999999998}}
{"sample_id": 6734, "db_id": "activity_1", "gold_sql": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank", "pred_sql": "SELECT rank, COUNT(facid) AS faculty_count FROM faculty GROUP BY rank;", "token_usage": {"tokens": 740, "cost": 0.00016409999999999998}}
{"sample_id": 6777, "db_id": "activity_1", "gold_sql": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT f.fname, f.lname\nFROM faculty f\nJOIN faculty_participates_in fpi ON f.facid = fpi.facid\nGROUP BY f.facid\nORDER BY COUNT(fpi.actid) DESC\nLIMIT 1;", "token_usage": {"tokens": 816, "cost": 0.00020789999999999998}}
{"sample_id": 6757, "db_id": "activity_1", "gold_sql": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student", "pred_sql": "SELECT facid FROM faculty WHERE facid NOT IN (SELECT DISTINCT advisor FROM student WHERE advisor IS NOT NULL);", "token_usage": {"tokens": 792, "cost": 0.00019529999999999998}}
{"sample_id": 6730, "db_id": "activity_1", "gold_sql": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT building, COUNT(facid) AS faculty_count FROM faculty GROUP BY building ORDER BY faculty_count DESC LIMIT 1;", "token_usage": {"tokens": 768, "cost": 0.00018449999999999999}}
{"sample_id": 6731, "db_id": "activity_1", "gold_sql": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT building, COUNT(facid) AS faculty_count FROM faculty GROUP BY building ORDER BY faculty_count DESC LIMIT 1;", "token_usage": {"tokens": 766, "cost": 0.00018104999999999998}}
{"sample_id": 6724, "db_id": "activity_1", "gold_sql": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"", "pred_sql": "SELECT COUNT(*) AS professor_count FROM faculty WHERE building = 'NEB' AND rank = 'Professor';", "token_usage": {"tokens": 719, "cost": 0.00015374999999999997}}
{"sample_id": 6738, "db_id": "activity_1", "gold_sql": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT rank, COUNT(facid) AS faculty_count FROM faculty GROUP BY rank ORDER BY faculty_count ASC LIMIT 1;", "token_usage": {"tokens": 752, "cost": 0.00017355}}
{"sample_id": 6768, "db_id": "activity_1", "gold_sql": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"", "pred_sql": "SELECT COUNT(DISTINCT a.actid) AS activity_count \nFROM activity a \nJOIN participates_in p ON a.actid = p.actid \nJOIN student s ON p.stuid = s.stuid \nWHERE s.fname = 'Mark' AND s.lname = 'Giuliano';", "token_usage": {"tokens": 834, "cost": 0.00022274999999999997}}
{"sample_id": 6770, "db_id": "activity_1", "gold_sql": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"", "pred_sql": "SELECT activity.activity_name \nFROM activity \nJOIN participates_in ON activity.actid = participates_in.actid \nJOIN student ON participates_in.stuid = student.stuid \nWHERE student.fname = 'Mark' AND student.lname = 'Giuliano';", "token_usage": {"tokens": 828, "cost": 0.00021779999999999998}}
{"sample_id": 6721, "db_id": "activity_1", "gold_sql": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"", "pred_sql": "SELECT COUNT(*) AS female_professors_count FROM faculty WHERE sex = 'F' AND rank = 'Professor';", "token_usage": {"tokens": 748, "cost": 0.00017114999999999999}}
{"sample_id": 6769, "db_id": "activity_1", "gold_sql": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"", "pred_sql": "SELECT COUNT(DISTINCT a.actid) AS number_of_activities\nFROM activity a\nJOIN participates_in p ON a.actid = p.actid\nJOIN student s ON p.stuid = s.stuid\nWHERE s.fname = 'Mark' AND s.lname = 'Giuliano';", "token_usage": {"tokens": 846, "cost": 0.00022905}}
{"sample_id": 6754, "db_id": "activity_1", "gold_sql": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2", "pred_sql": "SELECT fp.facid\nFROM faculty_participates_in fp\nJOIN participates_in p ON fp.actid = p.actid\nGROUP BY fp.facid\nHAVING COUNT(DISTINCT p.stuid) >= 2;", "token_usage": {"tokens": 808, "cost": 0.00020444999999999998}}
{"sample_id": 6710, "db_id": "activity_1", "gold_sql": "SELECT DISTINCT rank FROM Faculty", "pred_sql": "SELECT DISTINCT rank FROM faculty;", "token_usage": {"tokens": 700, "cost": 0.00014324999999999999}}
{"sample_id": 6794, "db_id": "activity_1", "gold_sql": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'", "pred_sql": "SELECT p.stuid FROM participates_in p JOIN activity a ON p.actid = a.actid WHERE a.activity_name IN ('Canoeing', 'Kayaking');", "token_usage": {"tokens": 782, "cost": 0.0001893}}
{"sample_id": 6712, "db_id": "activity_1", "gold_sql": "SELECT DISTINCT building FROM Faculty", "pred_sql": "SELECT DISTINCT building FROM faculty WHERE room IS NOT NULL;", "token_usage": {"tokens": 731, "cost": 0.00016094999999999998}}
{"sample_id": 6755, "db_id": "activity_1", "gold_sql": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2", "pred_sql": "SELECT f.facid FROM faculty f JOIN student s ON f.facid = s.advisor GROUP BY f.facid HAVING COUNT(s.stuid) >= 2;", "token_usage": {"tokens": 740, "cost": 0.00016409999999999998}}
{"sample_id": 6788, "db_id": "activity_1", "gold_sql": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'", "pred_sql": "SELECT f.fname FROM faculty f JOIN faculty_participates_in fpi ON f.facid = fpi.facid JOIN activity a ON fpi.actid = a.actid WHERE a.activity_name IN ('Canoeing', 'Kayaking');", "token_usage": {"tokens": 824, "cost": 0.0002136}}
{"sample_id": 4607, "db_id": "entertainment_awards", "gold_sql": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT type, COUNT(*) as count FROM artwork GROUP BY type ORDER BY count DESC;", "token_usage": {"tokens": 562, "cost": 0.00013784999999999996}}
{"sample_id": 4595, "db_id": "entertainment_awards", "gold_sql": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC", "pred_sql": "SELECT chair_name FROM festival_detail ORDER BY year ASC;", "token_usage": {"tokens": 533, "cost": 0.00011549999999999999}}
{"sample_id": 4606, "db_id": "entertainment_awards", "gold_sql": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE", "pred_sql": "SELECT type, COUNT(*) AS num_of_artworks FROM artwork GROUP BY type;", "token_usage": {"tokens": 565, "cost": 0.00013604999999999997}}
{"sample_id": 4611, "db_id": "entertainment_awards", "gold_sql": "SELECT sum(Num_of_Audience) FROM festival_detail", "pred_sql": "SELECT SUM(num_of_audience) AS total_audience FROM festival_detail;", "token_usage": {"tokens": 588, "cost": 0.0001503}}
{"sample_id": 4596, "db_id": "entertainment_awards", "gold_sql": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1", "pred_sql": "SELECT location FROM festival_detail ORDER BY num_of_audience DESC LIMIT 1;", "token_usage": {"tokens": 562, "cost": 0.00013515}}
{"sample_id": 6442, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code", "pred_sql": "SELECT dw.budget_type_code, rb.budget_type_description, d.document_id \nFROM documents_with_expenses dw \nJOIN ref_budget_codes rb ON dw.budget_type_code = rb.budget_type_code \nJOIN documents d ON dw.document_id = d.document_id;", "token_usage": {"tokens": 864, "cost": 0.00021644999999999998}}
{"sample_id": 6421, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"", "pred_sql": "SELECT document_type_description FROM ref_document_types WHERE document_type_name = 'Film';", "token_usage": {"tokens": 783, "cost": 0.00016875}}
{"sample_id": 6456, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )", "pred_sql": "SELECT COUNT(*) AS document_count FROM documents d LEFT JOIN documents_with_expenses de ON d.document_id = de.document_id WHERE de.document_id IS NULL;", "token_usage": {"tokens": 842, "cost": 0.00020504999999999997}}
{"sample_id": 6391, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT s.statement_id, s.statement_details\nFROM statements s\nJOIN accounts a ON s.statement_id = a.statement_id\nGROUP BY s.statement_id, s.statement_details\nORDER BY COUNT(a.account_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 843, "cost": 0.0002016}}
{"sample_id": 6403, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'", "pred_sql": "SELECT document_name, document_date FROM documents WHERE project_id IN (SELECT project_id FROM projects WHERE project_details = 'Graph Database project');", "token_usage": {"tokens": 820, "cost": 0.00018644999999999998}}
{"sample_id": 6430, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"", "pred_sql": "SELECT p.project_details FROM projects p JOIN documents d ON p.project_id = d.project_id WHERE d.document_name = 'King Book';", "token_usage": {"tokens": 789, "cost": 0.00017055}}
{"sample_id": 6412, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT document_type_code, COUNT(*) as document_count \nFROM documents \nGROUP BY document_type_code \nORDER BY document_count DESC \nLIMIT 1;", "token_usage": {"tokens": 816, "cost": 0.0001881}}
{"sample_id": 6396, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id ,  document_name FROM Documents", "pred_sql": "SELECT document_id, document_name FROM documents;", "token_usage": {"tokens": 731, "cost": 0.00013844999999999998}}
{"sample_id": 6432, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) FROM Ref_budget_codes", "pred_sql": "SELECT COUNT(DISTINCT budget_type_code) AS budget_type_count FROM ref_budget_codes;", "token_usage": {"tokens": 762, "cost": 0.0001575}}
{"sample_id": 6453, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses", "pred_sql": "SELECT d.document_id \nFROM documents d \nLEFT JOIN documents_with_expenses de ON d.document_id = de.document_id \nWHERE d.document_type_code = 'CV' AND de.document_id IS NULL;", "token_usage": {"tokens": 859, "cost": 0.00021164999999999997}}
{"sample_id": 6440, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'", "pred_sql": "SELECT document_id FROM documents_with_expenses WHERE budget_type_code = 'SF';", "token_usage": {"tokens": 791, "cost": 0.00017219999999999998}}
{"sample_id": 6424, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) FROM Projects", "pred_sql": "SELECT COUNT(*) AS number_of_projects FROM projects;", "token_usage": {"tokens": 744, "cost": 0.00014759999999999998}}
{"sample_id": 6422, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code", "pred_sql": "SELECT ref_document_types.document_type_name, ref_document_types.document_type_description, documents.document_date FROM documents JOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code;", "token_usage": {"tokens": 809, "cost": 0.00018075}}
{"sample_id": 6451, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses", "pred_sql": "SELECT d.document_id FROM documents d LEFT JOIN documents_with_expenses de ON d.document_id = de.document_id WHERE de.document_id IS NULL;", "token_usage": {"tokens": 794, "cost": 0.00017535}}
{"sample_id": 6443, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code", "pred_sql": "SELECT dw.document_id, rb.budget_type_code, rb.budget_type_description \nFROM documents_with_expenses dw \nJOIN ref_budget_codes rb ON dw.budget_type_code = rb.budget_type_code;", "token_usage": {"tokens": 844, "cost": 0.00020265}}
{"sample_id": 6460, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"", "pred_sql": "SELECT account_details FROM accounts WHERE account_details LIKE '%5%' OR account_id = (SELECT MAX(account_id) FROM accounts)", "token_usage": {"tokens": 787, "cost": 0.0001671}}
{"sample_id": 6459, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'", "pred_sql": "SELECT d.document_date \nFROM documents d \nJOIN documents_with_expenses de ON d.document_id = de.document_id \nWHERE de.budget_type_code IN ('GV', 'SF') \nGROUP BY d.document_id \nHAVING COUNT(DISTINCT de.budget_type_code) = 2;", "token_usage": {"tokens": 889, "cost": 0.00022829999999999997}}
{"sample_id": 6397, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id ,  document_name FROM Documents", "pred_sql": "SELECT document_id, document_name FROM documents;", "token_usage": {"tokens": 779, "cost": 0.0001659}}
