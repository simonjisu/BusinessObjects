{"sample_id": 7527, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "pred_sql": "SELECT s.first_name, s.middle_name, s.last_name, s.student_id \nFROM students s \nJOIN student_enrolment se ON s.student_id = se.student_id \nJOIN student_enrolment se2 ON s.student_id = se2.student_id \nWHERE se.degree_program_id != se2.degree_program_id \nAND se.semester_id = se2.semester_id \nGROUP BY s.student_id \nHAVING COUNT(DISTINCT se.degree_program_id) = 2;", "token_usage": {"tokens": 1606, "cost": 0.00036645}}
{"sample_id": 7574, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "pred_sql": "SELECT * FROM sections WHERE section_name = 'h';", "token_usage": {"tokens": 1377, "cost": 0.00024029999999999999}}
{"sample_id": 7544, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "pred_sql": "SELECT transcripts.transcript_id, transcripts.transcript_date\nFROM transcripts\nJOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id\nGROUP BY transcripts.transcript_id\nHAVING COUNT(transcript_contents.student_course_id) >= 2;", "token_usage": {"tokens": 1466, "cost": 0.00028874999999999994}}
{"sample_id": 7572, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "pred_sql": "SELECT * FROM students ORDER BY last_name DESC, first_name DESC, middle_name DESC;", "token_usage": {"tokens": 1418, "cost": 0.00026174999999999994}}
{"sample_id": 7528, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "pred_sql": "SELECT s.first_name, s.middle_name, s.last_name\nFROM students s\nJOIN student_enrolment se ON s.student_id = se.student_id\nJOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id\nWHERE dp.degree_summary_name LIKE '%Bachelor%';", "token_usage": {"tokens": 1483, "cost": 0.00029715}}
{"sample_id": 7568, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "pred_sql": "SELECT DISTINCT s.semester_name\nFROM semesters s\nJOIN student_enrolment se ON s.semester_id = se.semester_id\nJOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id\nWHERE dp.degree_summary_name IN ('Master', 'Bachelor');", "token_usage": {"tokens": 1486, "cost": 0.00030165}}
{"sample_id": 7513, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "pred_sql": "SELECT COUNT(DISTINCT degree_summary_name) AS number_of_degrees FROM degree_programs;", "token_usage": {"tokens": 1406, "cost": 0.00025679999999999995}}
{"sample_id": 7540, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT c.course_name\nFROM courses c\nJOIN student_enrolment_courses sec ON c.course_id = sec.course_id\nJOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id\nGROUP BY c.course_id\nORDER BY COUNT(se.student_enrolment_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1525, "cost": 0.00032549999999999994}}
{"sample_id": 7533, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT dp.degree_program_id, dp.degree_summary_name\nFROM degree_programs dp\nJOIN student_enrolment se ON dp.degree_program_id = se.degree_program_id\nGROUP BY dp.degree_program_id\nORDER BY COUNT(se.student_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1484, "cost": 0.00029864999999999997}}
{"sample_id": 7554, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT a.address_id, a.line_1, a.line_2, a.line_3\nFROM addresses a\nJOIN students s ON a.address_id = s.current_address_id\nGROUP BY a.address_id\nORDER BY COUNT(s.student_id) DESC\nLIMIT 1;", "token_usage": {"tokens": 1482, "cost": 0.00029745}}
{"sample_id": 7534, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments\nFROM students s\nJOIN student_enrolment se ON s.student_id = se.student_id\nGROUP BY s.student_id\nORDER BY number_of_enrollments DESC\nLIMIT 1;", "token_usage": {"tokens": 1526, "cost": 0.00031664999999999997}}
{"sample_id": 7577, "db_id": "student_transcripts_tracking", "gold_sql": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "pred_sql": "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';", "token_usage": {"tokens": 1526, "cost": 0.0003207}}
{"sample_id": 7567, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id = (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id ORDER BY COUNT(student_course_id) ASC LIMIT 1)", "token_usage": {"tokens": 1497, "cost": 0.00030734999999999996}}
{"sample_id": 7552, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "pred_sql": "SELECT first_name FROM students WHERE permanent_address_id != current_address_id;", "token_usage": {"tokens": 1434, "cost": 0.00026775}}
{"sample_id": 7560, "db_id": "student_transcripts_tracking", "gold_sql": "SELECT count(*) FROM Transcripts", "pred_sql": "SELECT COUNT(*) AS total_transcripts FROM transcripts;", "token_usage": {"tokens": 1379, "cost": 0.00024104999999999998}}
{"sample_id": 2021, "db_id": "gas_company", "gold_sql": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'", "pred_sql": "SELECT DISTINCT gas_station.location FROM gas_station LEFT JOIN station_company ON gas_station.station_id = station_company.station_id LEFT JOIN company ON station_company.company_id = company.company_id WHERE company.main_industry != 'banking' OR company.main_industry IS NULL;"}
{"sample_id": 2026, "db_id": "gas_company", "gold_sql": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "pred_sql": "SELECT DISTINCT c.main_industry, c.company FROM company c LEFT JOIN station_company sc ON c.company_id = sc.company_id WHERE sc.station_id IS NULL;"}
{"sample_id": 2008, "db_id": "gas_company", "gold_sql": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry", "pred_sql": "SELECT main_industry, SUM(market_value) AS total_market_value FROM company GROUP BY main_industry;"}
{"sample_id": 2006, "db_id": "gas_company", "gold_sql": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters", "pred_sql": "SELECT headquarters, COUNT(company_id) AS company_count FROM company GROUP BY headquarters;"}
{"sample_id": 2014, "db_id": "gas_company", "gold_sql": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year", "pred_sql": "SELECT station_id, location, manager_name FROM gas_station ORDER BY open_year;"}
{"sample_id": 1995, "db_id": "gas_company", "gold_sql": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC", "pred_sql": "SELECT company, rank FROM company ORDER BY sales_billion DESC;"}
{"sample_id": 2002, "db_id": "gas_company", "gold_sql": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company", "pred_sql": "SELECT MIN(market_value) AS min_market_value, MAX(market_value) AS max_market_value, AVG(market_value) AS avg_market_value FROM company;"}
{"sample_id": 2003, "db_id": "gas_company", "gold_sql": "SELECT DISTINCT main_industry FROM company", "pred_sql": "SELECT DISTINCT main_industry FROM company;"}
{"sample_id": 2023, "db_id": "gas_company", "gold_sql": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id", "pred_sql": "SELECT c.company, COUNT(sc.station_id) AS number_of_gas_stations\nFROM company c\nJOIN station_company sc ON c.company_id = sc.company_id\nGROUP BY c.company;"}
{"sample_id": 2113, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT document_type_code FROM Documents WHERE document_id = 2;", "pred_sql": "SELECT document_type_code FROM documents WHERE document_id = 2;"}
{"sample_id": 2116, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";", "pred_sql": "SELECT COUNT(*) AS total_documents FROM documents WHERE shipping_agent_code = (SELECT shipping_agent_code FROM ref_shipping_agents WHERE shipping_agent_name = 'USPS');"}
{"sample_id": 2120, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;", "pred_sql": "SELECT mailing_date FROM documents_mailed WHERE document_id = '7';"}
{"sample_id": 2098, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT document_status_code FROM Ref_Document_Status;", "pred_sql": "SELECT document_status_code FROM ref_document_status;"}
{"sample_id": 2101, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";", "pred_sql": "SELECT document_type_description FROM ref_document_types WHERE document_type_code = 'Paper';"}
{"sample_id": 2111, "db_id": "cre_Doc_Control_Systems", "gold_sql": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;", "pred_sql": "SELECT ref_document_status.document_status_description FROM documents JOIN ref_document_status ON documents.document_status_code = ref_document_status.document_status_code WHERE documents.document_id = 1;"}
{"sample_id": 1829, "db_id": "browser_web", "gold_sql": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser", "pred_sql": "SELECT MAX(market_share) AS max_market_share, MIN(market_share) AS min_market_share, AVG(market_share) AS avg_market_share FROM browser;"}
{"sample_id": 1838, "db_id": "browser_web", "gold_sql": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;", "pred_sql": "SELECT DISTINCT wca.name \nFROM web_client_accelerator wca \nJOIN accelerator_compatible_browser acb ON wca.id = acb.accelerator_id \nJOIN browser b ON acb.browser_id = b.id \nWHERE b.market_share > 15;"}
{"sample_id": 1831, "db_id": "browser_web", "gold_sql": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'", "pred_sql": "SELECT wca.name, wca.operating_system \nFROM web_client_accelerator wca \nWHERE wca.id NOT IN (\n    SELECT acb.accelerator_id \n    FROM accelerator_compatible_browser acb \n    JOIN web_client_accelerator wca2 ON acb.accelerator_id = wca2.id \n    WHERE wca2.connection = 'Broadband'\n)"}
{"sample_id": 2429, "db_id": "movie_1", "gold_sql": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000", "pred_sql": "SELECT title FROM movie WHERE year > '2000' AND director = 'James Cameron';"}
{"sample_id": 2509, "db_id": "movie_1", "gold_sql": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"", "pred_sql": "SELECT mid FROM movie WHERE mid NOT IN (SELECT mid FROM rating WHERE rid = (SELECT rid FROM reviewer WHERE name = 'Brittany Harris'));"}
{"sample_id": 2490, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1", "pred_sql": "SELECT movie.title, AVG(rating.stars) AS average_rating \nFROM movie \nJOIN rating ON movie.mid = rating.mid \nGROUP BY movie.mid \nORDER BY average_rating DESC;"}
{"sample_id": 2495, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director", "pred_sql": "SELECT m.director, m.title, MAX(r.stars) AS highest_rating\nFROM movie m\nJOIN rating r ON m.mid = r.mid\nWHERE m.director IS NOT NULL\nGROUP BY m.director, m.title\nHAVING r.stars = (SELECT MAX(stars) FROM rating WHERE mid = m.mid)"}
{"sample_id": 2442, "db_id": "movie_1", "gold_sql": "SELECT count(*) FROM Rating WHERE stars  >  3", "pred_sql": "SELECT COUNT(*) AS rating_count FROM rating WHERE stars > '3';"}
{"sample_id": 2472, "db_id": "movie_1", "gold_sql": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'", "pred_sql": "SELECT DISTINCT m.director FROM movie m JOIN rating r ON m.mid = r.mid JOIN reviewer rev ON r.rid = rev.rid WHERE rev.name = 'Sarah Martinez';"}
{"sample_id": 2491, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1", "pred_sql": "SELECT m.title, AVG(r.stars) AS average_rating \nFROM movie m \nJOIN rating r ON m.mid = r.mid \nGROUP BY m.mid \nORDER BY average_rating ASC \nLIMIT 1;"}
{"sample_id": 2520, "db_id": "movie_1", "gold_sql": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980", "pred_sql": "SELECT title FROM movie WHERE year < '1980' OR director = 'James Cameron';"}
{"sample_id": 2462, "db_id": "movie_1", "gold_sql": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")", "pred_sql": "SELECT title FROM movie WHERE year > (SELECT MAX(year) FROM movie WHERE director = 'Steven Spielberg');"}
{"sample_id": 2459, "db_id": "movie_1", "gold_sql": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)", "pred_sql": "SELECT MAX(r.stars) AS max_stars, m.year FROM movie m JOIN rating r ON m.mid = r.mid WHERE m.year = (SELECT MAX(year) FROM movie)"}
{"sample_id": 2480, "db_id": "movie_1", "gold_sql": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title", "pred_sql": "SELECT m.director, m.title FROM movie m WHERE m.director IN (SELECT director FROM movie GROUP BY director HAVING COUNT(mid) > 1)"}
{"sample_id": 2498, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID", "pred_sql": "SELECT r.rid, m.title, ra.stars \nFROM reviewer r \nJOIN rating ra ON r.rid = ra.rid \nJOIN movie m ON ra.mid = m.mid \nWHERE ra.stars = (SELECT MIN(stars) FROM rating WHERE rid = r.rid)"}
{"sample_id": 2503, "db_id": "movie_1", "gold_sql": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5", "pred_sql": "SELECT title FROM movie INNER JOIN rating ON movie.mid = rating.mid WHERE rating.stars BETWEEN '3' AND '5';"}
{"sample_id": 2451, "db_id": "movie_1", "gold_sql": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)", "pred_sql": "SELECT title FROM movie WHERE mid NOT IN (SELECT mid FROM rating);"}
{"sample_id": 2436, "db_id": "movie_1", "gold_sql": "SELECT count(*) FROM Reviewer", "pred_sql": "SELECT COUNT(*) AS reviewer_count FROM reviewer;"}
{"sample_id": 2446, "db_id": "movie_1", "gold_sql": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year", "pred_sql": "SELECT DISTINCT m.year FROM movie m JOIN rating r ON m.mid = r.mid WHERE r.stars IN ('4', '5') ORDER BY m.year ASC;"}
{"sample_id": 2516, "db_id": "movie_1", "gold_sql": "SELECT rID FROM Rating WHERE stars != 4", "pred_sql": "SELECT DISTINCT r.rid FROM reviewer r WHERE r.rid NOT IN (SELECT DISTINCT ra.rid FROM rating ra WHERE ra.stars = '4');"}
{"sample_id": 2428, "db_id": "movie_1", "gold_sql": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'", "pred_sql": "SELECT title FROM movie WHERE director = 'Steven Spielberg';"}
{"sample_id": 2492, "db_id": "movie_1", "gold_sql": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1", "pred_sql": "SELECT title, AVG(stars) AS average_rating FROM movie JOIN rating ON movie.mid = rating.mid GROUP BY movie.mid HAVING AVG(stars) = (SELECT MIN(avg_rating) FROM (SELECT AVG(stars) AS avg_rating FROM rating GROUP BY mid))"}
{"sample_id": 1984, "db_id": "phone_market", "gold_sql": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier", "pred_sql": "SELECT carrier, COUNT(*) AS num_of_phones FROM phone GROUP BY carrier;"}
{"sample_id": 1985, "db_id": "phone_market", "gold_sql": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT carrier, COUNT(*) as frequency FROM phone GROUP BY carrier ORDER BY frequency DESC LIMIT 1;"}
{"sample_id": 1992, "db_id": "phone_market", "gold_sql": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)", "pred_sql": "SELECT name FROM phone WHERE phone_id NOT IN (SELECT phone_id FROM phone_market);"}
{"sample_id": 7241, "db_id": "flight_2", "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "pred_sql": "SELECT flightno FROM flights WHERE sourceairport = 'APG';", "token_usage": {"tokens": 565, "cost": 0.0001347}}
{"sample_id": 7190, "db_id": "flight_2", "gold_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "pred_sql": "SELECT airportname, countryabbrev FROM airports WHERE airportname = 'Alton'", "token_usage": {"tokens": 570, "cost": 0.00013769999999999999}}
{"sample_id": 7250, "db_id": "flight_2", "gold_sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "pred_sql": "SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights);", "token_usage": {"tokens": 580, "cost": 0.00014189999999999998}}
{"sample_id": 7203, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "pred_sql": "SELECT COUNT(*) AS number_of_flights FROM flights WHERE destairport = (SELECT airportcode FROM airports WHERE airportname = 'Aberdeen');", "token_usage": {"tokens": 635, "cost": 0.00017759999999999998}}
{"sample_id": 7178, "db_id": "flight_2", "gold_sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "pred_sql": "SELECT airportcode, airportname FROM airports WHERE city = (SELECT city FROM airports WHERE airportname = 'Anthony')", "token_usage": {"tokens": 589, "cost": 0.00014865}}
{"sample_id": 7242, "db_id": "flight_2", "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "pred_sql": "SELECT flightno FROM flights WHERE destairport = 'APG';", "token_usage": {"tokens": 556, "cost": 0.00012795}}
{"sample_id": 7222, "db_id": "flight_2", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1;", "token_usage": {"tokens": 600, "cost": 0.00015705}}
{"sample_id": 7224, "db_id": "flight_2", "gold_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT a.abbreviation, a.country FROM airlines a JOIN (SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count ASC LIMIT 1) f ON a.airline = f.airline;", "token_usage": {"tokens": 637, "cost": 0.00017564999999999996}}
{"sample_id": 7201, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "pred_sql": "SELECT COUNT(*) AS number_of_flights FROM flights WHERE sourceairport = (SELECT airportcode FROM airports WHERE airportname = 'Aberdeen');", "token_usage": {"tokens": 571, "cost": 0.00013919999999999997}}
{"sample_id": 7225, "db_id": "flight_2", "gold_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "pred_sql": "SELECT a.abbreviation, a.country FROM airlines a JOIN (SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count ASC LIMIT 1) f ON a.airline = f.airline;", "token_usage": {"tokens": 627, "cost": 0.0001674}}
{"sample_id": 7247, "db_id": "flight_2", "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "pred_sql": "SELECT flightno FROM flights WHERE destairport = (SELECT airportcode FROM airports WHERE airportname = 'Aberdeen')", "token_usage": {"tokens": 632, "cost": 0.00017534999999999998}}
{"sample_id": 7223, "db_id": "flight_2", "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1;", "token_usage": {"tokens": 606, "cost": 0.0001611}}
{"sample_id": 7243, "db_id": "flight_2", "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "pred_sql": "SELECT flightno FROM flights WHERE destairport = 'APG';", "token_usage": {"tokens": 558, "cost": 0.00013049999999999997}}
{"sample_id": 7189, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "pred_sql": "SELECT COUNT(*) AS number_of_airlines FROM airlines WHERE country = 'USA';", "token_usage": {"tokens": 562, "cost": 0.0001338}}
{"sample_id": 7193, "db_id": "flight_2", "gold_sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "pred_sql": "SELECT airportname FROM airports WHERE airportcode = 'AKO';", "token_usage": {"tokens": 557, "cost": 0.00012944999999999998}}
{"sample_id": 7207, "db_id": "flight_2", "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "pred_sql": "SELECT COUNT(*) AS number_of_flights FROM flights WHERE airline = 'Jetblue Airways';", "token_usage": {"tokens": 562, "cost": 0.0001338}}
{"sample_id": 7282, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT sum(bonus) FROM evaluation", "pred_sql": "SELECT SUM(bonus) AS total_bonus FROM evaluation;", "token_usage": {"tokens": 617, "cost": 0.00014069999999999998}}
{"sample_id": 7259, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "pred_sql": "SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1;", "token_usage": {"tokens": 658, "cost": 0.00016304999999999998}}
{"sample_id": 7257, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT count(*) ,  city FROM employee GROUP BY city", "pred_sql": "SELECT city, COUNT(employee_id) AS employee_count FROM employee GROUP BY city;", "token_usage": {"tokens": 609, "cost": 0.0001359}}
{"sample_id": 7281, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "pred_sql": "SELECT shop.name, COUNT(hiring.employee_id) AS number_of_employees\nFROM shop\nLEFT JOIN hiring ON shop.shop_id = hiring.shop_id\nGROUP BY shop.shop_id;", "token_usage": {"tokens": 669, "cost": 0.00016785}}
{"sample_id": 7261, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "pred_sql": "SELECT location, COUNT(*) AS shop_count FROM shop GROUP BY location;", "token_usage": {"tokens": 611, "cost": 0.00013709999999999997}}
{"sample_id": 7268, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "pred_sql": "SELECT name FROM shop WHERE number_products > (SELECT AVG(number_products) FROM shop);", "token_usage": {"tokens": 674, "cost": 0.0001713}}
{"sample_id": 7263, "db_id": "employee_hire_evaluation", "gold_sql": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "pred_sql": "SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop);", "token_usage": {"tokens": 671, "cost": 0.00016905}}
{"sample_id": 6325, "db_id": "e_government", "gold_sql": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "pred_sql": "SELECT COUNT(DISTINCT town_city) AS city_count FROM addresses WHERE state_province_county = 'Colorado';"}
{"sample_id": 6338, "db_id": "e_government", "gold_sql": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT organizations.organization_name\nFROM organizations\nJOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id\nGROUP BY organizations.organization_id\nORDER BY COUNT(organization_contact_individuals.individual_id) DESC\nLIMIT 1;"}
{"sample_id": 6333, "db_id": "e_government", "gold_sql": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT p.party_email\nFROM party_services ps\nJOIN parties p ON ps.customer_id = p.party_id\nGROUP BY p.party_id\nORDER BY COUNT(ps.booking_id) DESC\nLIMIT 1;"}
{"sample_id": 6314, "db_id": "e_government", "gold_sql": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1", "pred_sql": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1;"}
{"sample_id": 6328, "db_id": "e_government", "gold_sql": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "pred_sql": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING COUNT(party_id) > 3;"}
{"sample_id": 6309, "db_id": "e_government", "gold_sql": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "pred_sql": "SELECT DISTINCT p.party_email\nFROM party_forms pf\nJOIN parties p ON pf.party_id = p.party_id\nWHERE pf.form_id = (\n    SELECT form_id\n    FROM party_forms\n    GROUP BY form_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)"}
{"sample_id": 6334, "db_id": "e_government", "gold_sql": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT p.party_email\nFROM party_services ps\nJOIN parties p ON ps.customer_id = p.party_id\nGROUP BY p.party_email\nORDER BY COUNT(ps.booking_id) DESC\nLIMIT 1;"}
{"sample_id": 6337, "db_id": "e_government", "gold_sql": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT organizations.organization_name\nFROM organizations\nJOIN organization_contact_individuals ON organizations.organization_id = organization_contact_individuals.organization_id\nGROUP BY organizations.organization_id\nORDER BY COUNT(organization_contact_individuals.individual_id) DESC\nLIMIT 1;"}
{"sample_id": 7321, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "pred_sql": "SELECT version_number, template_type_code FROM templates WHERE version_number > '5';", "token_usage": {"tokens": 672, "cost": 0.0001557}}
{"sample_id": 7317, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "pred_sql": "SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT');", "token_usage": {"tokens": 676, "cost": 0.0001608}}
{"sample_id": 7307, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "pred_sql": "SELECT t.template_id\nFROM templates t\nJOIN documents d ON t.template_id = d.template_id\nGROUP BY t.template_id\nHAVING COUNT(d.document_id) > 1;", "token_usage": {"tokens": 683, "cost": 0.00016365}}
{"sample_id": 7322, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "pred_sql": "SELECT ref_template_types.template_type_code, COUNT(templates.template_id) AS number_of_templates\nFROM ref_template_types\nLEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code\nGROUP BY ref_template_types.template_type_code;", "token_usage": {"tokens": 721, "cost": 0.00018825}}
{"sample_id": 7355, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "select other_details from paragraphs where paragraph_text like 'korea'", "pred_sql": "SELECT p.* FROM paragraphs p WHERE p.paragraph_text LIKE '%Korea %';", "token_usage": {"tokens": 658, "cost": 0.00014865}}
{"sample_id": 7371, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "pred_sql": "SELECT d.document_id \nFROM documents d \nJOIN paragraphs p ON d.document_id = p.document_id \nGROUP BY d.document_id \nHAVING COUNT(p.paragraph_id) BETWEEN 1 AND 2;", "token_usage": {"tokens": 692, "cost": 0.0001704}}
{"sample_id": 7346, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "pred_sql": "SELECT DISTINCT r.template_type_description\nFROM ref_template_types r\nJOIN templates t ON r.template_type_code = t.template_type_code\nJOIN documents d ON t.template_id = d.template_id;", "token_usage": {"tokens": 701, "cost": 0.00017444999999999998}}
{"sample_id": 7363, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "pred_sql": "SELECT d.document_id, d.document_name, COUNT(p.paragraph_id) AS paragraph_count\nFROM documents d\nLEFT JOIN paragraphs p ON d.document_id = p.document_id\nGROUP BY d.document_id, d.document_name;", "token_usage": {"tokens": 713, "cost": 0.00017985}}
{"sample_id": 7359, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "pred_sql": "SELECT p.paragraph_text FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE d.document_name = 'Customer reviews';", "token_usage": {"tokens": 676, "cost": 0.00015945}}
{"sample_id": 7352, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "pred_sql": "SELECT COUNT(*) AS paragraph_count FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE d.document_name = 'Summer Show';", "token_usage": {"tokens": 667, "cost": 0.00015539999999999998}}
{"sample_id": 7373, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "pred_sql": "SELECT DISTINCT d.document_id FROM documents d JOIN paragraphs p ON d.document_id = p.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland');", "token_usage": {"tokens": 675, "cost": 0.00015749999999999998}}
{"sample_id": 7297, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "pred_sql": "SELECT documents.document_id, documents.template_id, documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV';", "token_usage": {"tokens": 663, "cost": 0.00014984999999999998}}
{"sample_id": 7345, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "pred_sql": "SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book';", "token_usage": {"tokens": 659, "cost": 0.00015015}}
{"sample_id": 7299, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT count(DISTINCT template_id) FROM Documents", "pred_sql": "SELECT COUNT(DISTINCT template_id) AS different_template_count FROM templates WHERE template_id IN (SELECT DISTINCT template_id FROM documents);", "token_usage": {"tokens": 663, "cost": 0.00015434999999999998}}
{"sample_id": 7357, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "pred_sql": "SELECT p.paragraph_id, p.paragraph_text \nFROM paragraphs p \nJOIN documents d ON p.document_id = d.document_id \nWHERE d.document_name = 'Welcome to NY';", "token_usage": {"tokens": 697, "cost": 0.00017114999999999999}}
{"sample_id": 7313, "db_id": "cre_Doc_Template_Mgt", "gold_sql": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "pred_sql": "SELECT template_id, version_number, template_type_code FROM templates;", "token_usage": {"tokens": 620, "cost": 0.00012629999999999998}}
{"sample_id": 5830, "db_id": "workshop_paper", "gold_sql": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author", "pred_sql": "SELECT submission.author, COUNT(DISTINCT acceptance.workshop_id) AS workshop_count\nFROM submission\nJOIN acceptance ON submission.submission_id = acceptance.submission_id\nGROUP BY submission.author;"}
{"sample_id": 5808, "db_id": "workshop_paper", "gold_sql": "SELECT count(*) FROM submission", "pred_sql": "SELECT COUNT(*) AS submission_count FROM submission;"}
{"sample_id": 5831, "db_id": "workshop_paper", "gold_sql": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1", "pred_sql": "SELECT s.author\nFROM submission s\nJOIN acceptance a ON s.submission_id = a.submission_id\nGROUP BY s.author\nHAVING COUNT(DISTINCT a.workshop_id) > 1;"}
{"sample_id": 5827, "db_id": "workshop_paper", "gold_sql": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1", "pred_sql": "SELECT * FROM submission WHERE scores = (SELECT MAX(scores) FROM submission);"}
{"sample_id": 5809, "db_id": "workshop_paper", "gold_sql": "SELECT Author FROM submission ORDER BY Scores ASC", "pred_sql": "SELECT author FROM submission ORDER BY scores ASC;"}
{"sample_id": 5834, "db_id": "workshop_paper", "gold_sql": "SELECT Date ,  Venue FROM workshop ORDER BY Venue", "pred_sql": "SELECT date, venue FROM workshop ORDER BY venue ASC;"}
{"sample_id": 1292, "db_id": "game_injury", "gold_sql": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC", "pred_sql": "SELECT g.date, ia.player \nFROM injury_accident ia \nJOIN game g ON ia.game_id = g.id \nORDER BY g.season DESC;"}
{"sample_id": 1287, "db_id": "game_injury", "gold_sql": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010", "pred_sql": "SELECT COUNT(DISTINCT injury) AS distinct_injury_count FROM injury_accident JOIN game ON injury_accident.game_id = game.id WHERE game.season > 2010;"}
{"sample_id": 1275, "db_id": "game_injury", "gold_sql": "SELECT Date FROM game ORDER BY home_team DESC", "pred_sql": "SELECT date FROM game WHERE home_team IN (SELECT id FROM team WHERE name = 'home_team_name') ORDER BY date DESC;"}
{"sample_id": 4557, "db_id": "company_office", "gold_sql": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1", "pred_sql": "SELECT b.name FROM buildings b JOIN office_locations ol ON b.id = ol.building_id GROUP BY b.id HAVING COUNT(ol.company_id) > 1;"}
{"sample_id": 4572, "db_id": "company_office", "gold_sql": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"", "pred_sql": "SELECT COUNT(*) AS company_count FROM companies WHERE industry IN ('Banking', 'Conglomerate');"}
{"sample_id": 4569, "db_id": "company_office", "gold_sql": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)", "pred_sql": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM office_locations);"}
{"sample_id": 4542, "db_id": "company_office", "gold_sql": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "pred_sql": "SELECT name, assets_billion FROM companies ORDER BY name ASC;"}
{"sample_id": 4560, "db_id": "company_office", "gold_sql": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC", "pred_sql": "SELECT name FROM buildings WHERE status = 'on-hold' ORDER BY stories ASC;"}
{"sample_id": 4546, "db_id": "company_office", "gold_sql": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"", "pred_sql": "SELECT MAX(sales_billion) AS max_sales, MIN(sales_billion) AS min_sales FROM companies WHERE industry != 'Banking';"}
{"sample_id": 4541, "db_id": "company_office", "gold_sql": "SELECT name FROM Companies WHERE Headquarters != 'USA'", "pred_sql": "SELECT name FROM companies WHERE headquarters != 'USA';"}
{"sample_id": 4564, "db_id": "company_office", "gold_sql": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC", "pred_sql": "SELECT industry, COUNT(*) as company_count FROM companies GROUP BY industry ORDER BY company_count DESC;"}
{"sample_id": 5526, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"", "pred_sql": "SELECT COUNT(*) AS product_count FROM products WHERE product_category_code = (SELECT product_category_code FROM ref_product_categories WHERE product_category_description = 'Seeds');"}
{"sample_id": 5558, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"", "pred_sql": "SELECT COUNT(pc.characteristic_id) AS characteristic_count\nFROM products p\nJOIN product_characteristics pc ON p.product_id = pc.product_id\nWHERE p.product_name = 'laurel';"}
{"sample_id": 5563, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"", "pred_sql": "SELECT COUNT(DISTINCT p.product_id) AS product_count\nFROM products p\nJOIN product_characteristics pc ON p.product_id = pc.product_id\nJOIN characteristics c ON pc.characteristic_id = c.characteristic_id\nWHERE c.characteristic_name = 'hot';"}
{"sample_id": 5574, "db_id": "products_gen_characteristics", "gold_sql": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"", "pred_sql": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code = 'Spices';"}
{"sample_id": 5528, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000", "pred_sql": "SELECT COUNT(*) AS product_count FROM products WHERE product_category_code = (SELECT product_category_code FROM ref_product_categories WHERE product_category_description = 'Spices') AND typical_selling_price > 1000;"}
{"sample_id": 5575, "db_id": "products_gen_characteristics", "gold_sql": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "pred_sql": "SELECT product_category_description, unit_of_measure FROM ref_product_categories WHERE product_category_description = 'Herbs';"}
{"sample_id": 5513, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM CHARACTERISTICS", "pred_sql": "SELECT COUNT(*) AS total_characteristics FROM characteristics;"}
{"sample_id": 5555, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"", "pred_sql": "SELECT c.characteristic_name, c.characteristic_data_type, pc.product_characteristic_value \nFROM products p \nJOIN product_characteristics pc ON p.product_id = pc.product_id \nJOIN characteristics c ON pc.characteristic_id = c.characteristic_id \nJOIN ref_characteristic_types rct ON c.characteristic_type_code = rct.characteristic_type_code \nWHERE p.product_name = 'sesame' AND rct.characteristic_type_code = 'Grade';"}
{"sample_id": 5534, "db_id": "products_gen_characteristics", "gold_sql": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'", "pred_sql": "SELECT product_name FROM products INNER JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'yellow';"}
{"sample_id": 5542, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "pred_sql": "SELECT p.product_id, c.color_description \nFROM products p \nJOIN ref_colors c ON p.color_code = c.color_code \nJOIN product_characteristics pc ON p.product_id = pc.product_id \nGROUP BY p.product_id, c.color_description \nHAVING COUNT(pc.characteristic_id) >= 2;"}
{"sample_id": 5533, "db_id": "products_gen_characteristics", "gold_sql": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'", "pred_sql": "SELECT products.product_name FROM products JOIN ref_colors ON products.color_code = ref_colors.color_code WHERE ref_colors.color_description = 'yellow';"}
{"sample_id": 5531, "db_id": "products_gen_characteristics", "gold_sql": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"", "pred_sql": "SELECT ref_product_categories.product_category_description \nFROM products \nJOIN ref_product_categories ON products.product_category_code = ref_product_categories.product_category_code \nWHERE products.product_name = 'flax';"}
{"sample_id": 5557, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"", "pred_sql": "SELECT COUNT(pc.characteristic_id) AS characteristic_count\nFROM products p\nJOIN product_characteristics pc ON p.product_id = pc.product_id\nWHERE p.product_name = 'laurel';"}
{"sample_id": 5566, "db_id": "products_gen_characteristics", "gold_sql": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"", "pred_sql": "SELECT DISTINCT p.product_name \nFROM products p \nJOIN product_characteristics pc ON p.product_id = pc.product_id \nJOIN characteristics c ON pc.characteristic_id = c.characteristic_id \nJOIN ref_characteristic_types rct ON c.characteristic_type_code = rct.characteristic_type_code \nWHERE c.characteristic_name = 'warm';"}
{"sample_id": 5588, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT c.characteristic_name\nFROM product_characteristics pc\nJOIN characteristics c ON pc.characteristic_id = c.characteristic_id\nGROUP BY c.characteristic_name\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"sample_id": 5568, "db_id": "products_gen_characteristics", "gold_sql": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\"", "pred_sql": "SELECT COUNT(DISTINCT p.product_id) AS product_count\nFROM products p\nJOIN ref_colors c ON p.color_code = c.color_code\nJOIN product_characteristics pc ON p.product_id = pc.product_id\nJOIN characteristics ch ON pc.characteristic_id = ch.characteristic_id\nWHERE c.color_description = 'red' AND ch.characteristic_name = 'slow';"}
{"sample_id": 5585, "db_id": "products_gen_characteristics", "gold_sql": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT rc.color_description\nFROM ref_colors rc\nJOIN products p ON rc.color_code = p.color_code\nGROUP BY rc.color_code\nORDER BY COUNT(p.product_id) ASC\nLIMIT 1;"}
{"sample_id": 2648, "db_id": "local_govt_mdm", "gold_sql": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines", "pred_sql": "SELECT parking_fines.council_tax_id, parking_fines.cmi_cross_ref_id \nFROM parking_fines;"}
{"sample_id": 2647, "db_id": "local_govt_mdm", "gold_sql": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC", "pred_sql": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC;"}
{"sample_id": 7487, "db_id": "battle_death", "gold_sql": "SELECT max(killed) ,  min(killed) FROM death", "pred_sql": "SELECT MAX(killed) AS max_death_toll, MIN(killed) AS min_death_toll FROM death GROUP BY caused_by_ship_id;", "token_usage": {"tokens": 687, "cost": 0.0001728}}
{"sample_id": 7489, "db_id": "battle_death", "gold_sql": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "pred_sql": "SELECT d.killed, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't';", "token_usage": {"tokens": 695, "cost": 0.00017444999999999998}}
{"sample_id": 7498, "db_id": "battle_death", "gold_sql": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "pred_sql": "SELECT battle.name, battle.result, battle.bulgarian_commander \nFROM battle \nJOIN ship ON battle.id = ship.lost_in_battle \nWHERE ship.lost_in_battle = 0 AND ship.location = 'English Channel';", "token_usage": {"tokens": 717, "cost": 0.00018585}}
{"sample_id": 3392, "db_id": "manufacturer", "gold_sql": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990", "pred_sql": "SELECT AVG(num_of_factories) AS average_factories, MAX(num_of_shops) AS max_shops FROM manufacturer WHERE open_year < '1990';"}
{"sample_id": 3382, "db_id": "manufacturer", "gold_sql": "SELECT sum(num_of_component) FROM furniture", "pred_sql": "SELECT SUM(num_of_component) AS total_components FROM furniture;"}
{"sample_id": 3385, "db_id": "manufacturer", "gold_sql": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10", "pred_sql": "SELECT name, num_of_component FROM furniture WHERE num_of_component > 10;"}
{"sample_id": 975, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name", "pred_sql": "SELECT trade_name, COUNT(*) AS medicine_count FROM medicine GROUP BY trade_name;"}
{"sample_id": 973, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"", "pred_sql": "SELECT name FROM enzyme WHERE name LIKE '%ALA%';"}
{"sample_id": 960, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'", "pred_sql": "SELECT COUNT(*) AS not_approved_count FROM medicine WHERE fda_approved = 'No';"}
{"sample_id": 952, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC", "pred_sql": "SELECT m.id, m.name, m.fda_approved \nFROM medicine m \nJOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id \nGROUP BY m.id, m.name, m.fda_approved \nORDER BY COUNT(mei.enzyme_id) DESC;"}
{"sample_id": 934, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT count(*) FROM enzyme", "pred_sql": "SELECT COUNT(*) AS total_count FROM enzyme;"}
{"sample_id": 976, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name", "pred_sql": "SELECT trade_name, COUNT(*) AS medicine_count FROM medicine GROUP BY trade_name;"}
{"sample_id": 967, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'", "pred_sql": "SELECT m.name, m.trade_name \nFROM medicine m \nJOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id \nWHERE mei.interaction_type IN ('inhibitor', 'activator') \nGROUP BY m.id \nHAVING COUNT(DISTINCT mei.interaction_type) = 2;"}
{"sample_id": 970, "db_id": "medicine_enzyme_interaction", "gold_sql": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'", "pred_sql": "SELECT m.name, m.trade_name FROM medicine m LEFT JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id LEFT JOIN enzyme e ON mei.enzyme_id = e.id WHERE e.product != 'Heme' OR e.product IS NULL;"}
{"sample_id": 2575, "db_id": "inn_1", "gold_sql": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "pred_sql": "SELECT rooms.roomname, reservations.rate, reservations.checkin, reservations.checkout \nFROM rooms \nJOIN reservations ON rooms.roomid = reservations.room \nORDER BY reservations.rate DESC \nLIMIT 1;"}
{"sample_id": 2592, "db_id": "inn_1", "gold_sql": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';", "pred_sql": "SELECT SUM(maxoccupancy) AS total_capacity FROM rooms WHERE decor LIKE '%modern%';"}
{"sample_id": 2627, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "pred_sql": "SELECT roomname FROM rooms WHERE baseprice > (SELECT AVG(baseprice) FROM rooms);"}
{"sample_id": 2604, "db_id": "inn_1", "gold_sql": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "pred_sql": "SELECT bedtype, COUNT(*) AS number_of_rooms FROM rooms GROUP BY bedtype;"}
{"sample_id": 2574, "db_id": "inn_1", "gold_sql": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "pred_sql": "SELECT COUNT(*) AS reservation_count FROM reservations WHERE firstname = 'ROY' AND lastname = 'SWEAZY';"}
{"sample_id": 2597, "db_id": "inn_1", "gold_sql": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "pred_sql": "SELECT r.firstname, r.lastname FROM reservations r JOIN rooms rm ON r.room = rm.roomid WHERE r.rate > rm.baseprice;"}
{"sample_id": 2630, "db_id": "inn_1", "gold_sql": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)", "pred_sql": "SELECT COUNT(*) AS available_rooms FROM rooms WHERE roomid NOT IN (SELECT room FROM reservations);"}
{"sample_id": 2612, "db_id": "inn_1", "gold_sql": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "pred_sql": "SELECT decor, COUNT(*) AS room_count FROM rooms WHERE bedtype = 'king' GROUP BY decor;"}
{"sample_id": 2566, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", "pred_sql": "SELECT roomname FROM rooms WHERE baseprice < '160' AND beds = '2' AND decor LIKE '%modern%';"}
{"sample_id": 2565, "db_id": "inn_1", "gold_sql": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", "pred_sql": "SELECT roomname FROM rooms WHERE decor LIKE '%modern%' AND baseprice < '160' AND beds = '2';"}
{"sample_id": 2623, "db_id": "inn_1", "gold_sql": "SELECT count(DISTINCT bedType) FROM Rooms;", "pred_sql": "SELECT DISTINCT bedtype FROM rooms;"}
{"sample_id": 2573, "db_id": "inn_1", "gold_sql": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "pred_sql": "SELECT COUNT(*) AS reservation_count FROM reservations WHERE firstname = 'ROY' AND lastname = 'SWEAZY';"}
{"sample_id": 2620, "db_id": "inn_1", "gold_sql": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "pred_sql": "SELECT bedtype, AVG(baseprice) AS average_base_price FROM rooms GROUP BY bedtype;"}
{"sample_id": 2581, "db_id": "inn_1", "gold_sql": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';", "pred_sql": "SELECT COUNT(*) FROM rooms WHERE bedtype = 'king';"}
{"sample_id": 779, "db_id": "race_track", "gold_sql": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id", "pred_sql": "SELECT track.name, COUNT(race.race_id) AS number_of_races\nFROM track\nLEFT JOIN race ON track.track_id = race.track_id\nGROUP BY track.track_id;"}
{"sample_id": 777, "db_id": "race_track", "gold_sql": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "pred_sql": "SELECT DISTINCT year_opened FROM track WHERE seating >= 5000 OR seating <= 4000;"}
{"sample_id": 772, "db_id": "race_track", "gold_sql": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2", "pred_sql": "SELECT class FROM race GROUP BY class HAVING COUNT(race_id) >= 2;"}
{"sample_id": 753, "db_id": "race_track", "gold_sql": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1", "pred_sql": "SELECT name, location, seating FROM track WHERE year_opened = (SELECT MAX(year_opened) FROM track);"}
{"sample_id": 754, "db_id": "race_track", "gold_sql": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1", "pred_sql": "SELECT name, location, seating FROM track WHERE year_opened = (SELECT MAX(year_opened) FROM track);"}
{"sample_id": 774, "db_id": "race_track", "gold_sql": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'", "pred_sql": "SELECT track.name FROM track LEFT JOIN race ON track.track_id = race.track_id AND race.class = 'GT' WHERE race.track_id IS NULL;"}
{"sample_id": 748, "db_id": "race_track", "gold_sql": "SELECT count(*) FROM track", "pred_sql": "SELECT COUNT(*) AS track_count FROM track;"}
{"sample_id": 778, "db_id": "race_track", "gold_sql": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "pred_sql": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000;"}
{"sample_id": 3740, "db_id": "program_share", "gold_sql": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'", "pred_sql": "SELECT DISTINCT c.name \nFROM channel c \nJOIN broadcast b1 ON c.channel_id = b1.channel_id \nJOIN broadcast b2 ON c.channel_id = b2.channel_id \nWHERE b1.time_of_day = 'morning' AND b2.time_of_day = 'night';"}
{"sample_id": 3756, "db_id": "program_share", "gold_sql": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'", "pred_sql": "SELECT name FROM channel WHERE owner IN ('CCTV', 'HBS');"}
{"sample_id": 3728, "db_id": "program_share", "gold_sql": "SELECT count(*) FROM program", "pred_sql": "SELECT COUNT(*) AS program_count FROM program;"}
{"sample_id": 3724, "db_id": "program_share", "gold_sql": "SELECT name FROM channel ORDER BY rating_in_percent DESC", "pred_sql": "SELECT name FROM channel ORDER BY rating_in_percent DESC;"}
{"sample_id": 3755, "db_id": "program_share", "gold_sql": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'", "pred_sql": "SELECT name FROM channel WHERE owner IN ('CCTV', 'HBS');"}
{"sample_id": 3730, "db_id": "program_share", "gold_sql": "SELECT name FROM program ORDER BY launch", "pred_sql": "SELECT name FROM program ORDER BY launch;"}
{"sample_id": 3750, "db_id": "program_share", "gold_sql": "SELECT origin FROM program ORDER BY origin", "pred_sql": "SELECT DISTINCT origin FROM program ORDER BY origin ASC;"}
{"sample_id": 3752, "db_id": "program_share", "gold_sql": "SELECT count(DISTINCT OWNER) FROM channel", "pred_sql": "SELECT COUNT(DISTINCT owner) AS distinct_channel_owners FROM channel;"}
{"sample_id": 2907, "db_id": "icfp_1", "gold_sql": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"", "pred_sql": "SELECT fname FROM authors WHERE lname = 'Ueno';"}
{"sample_id": 2909, "db_id": "icfp_1", "gold_sql": "SELECT lname FROM authors WHERE fname  =  \"Amal\"", "pred_sql": "SELECT lname FROM authors WHERE fname = 'Amal';"}
{"sample_id": 2885, "db_id": "icfp_1", "gold_sql": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"", "pred_sql": "SELECT papers.title FROM papers JOIN authorship ON papers.paperid = authorship.paperid JOIN authors ON authorship.authid = authors.authid WHERE authors.fname = 'Stephanie' AND authors.lname = 'Weirich';"}
{"sample_id": 2892, "db_id": "icfp_1", "gold_sql": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT lname FROM authors WHERE authid = (SELECT authid FROM authorship GROUP BY authid ORDER BY COUNT(paperid) DESC LIMIT 1);"}
{"sample_id": 2869, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "pred_sql": "SELECT authors.fname, authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'Google';"}
{"sample_id": 2898, "db_id": "icfp_1", "gold_sql": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "pred_sql": "SELECT title FROM papers WHERE title LIKE '%ML%';"}
{"sample_id": 2867, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "pred_sql": "SELECT authors.fname, authors.lname FROM authors JOIN authorship ON authors.authid = authorship.authid JOIN inst ON authorship.instid = inst.instid WHERE inst.name = 'University of Oxford';"}
{"sample_id": 2856, "db_id": "icfp_1", "gold_sql": "SELECT count(*) FROM papers", "pred_sql": "SELECT COUNT(*) AS total_papers FROM papers;"}
{"sample_id": 2895, "db_id": "icfp_1", "gold_sql": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN papers ON authorship.paperid = papers.paperid GROUP BY inst.name ORDER BY COUNT(papers.paperid) DESC LIMIT 1;"}
{"sample_id": 2880, "db_id": "icfp_1", "gold_sql": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"", "pred_sql": "SELECT COUNT(papers.paperid) AS number_of_papers\nFROM papers\nJOIN authorship ON papers.paperid = authorship.paperid\nJOIN inst ON authorship.instid = inst.instid\nWHERE inst.name = 'Tokohu University';"}
{"sample_id": 2899, "db_id": "icfp_1", "gold_sql": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "pred_sql": "SELECT title FROM papers WHERE title LIKE '%Database%';"}
{"sample_id": 2893, "db_id": "icfp_1", "gold_sql": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT inst.country, COUNT(papers.paperid) AS paper_count \nFROM inst \nJOIN authorship ON inst.instid = authorship.instid \nJOIN papers ON authorship.paperid = papers.paperid \nGROUP BY inst.country \nORDER BY paper_count DESC \nLIMIT 1;"}
{"sample_id": 2863, "db_id": "icfp_1", "gold_sql": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "pred_sql": "SELECT inst.name FROM inst JOIN authorship ON inst.instid = authorship.instid JOIN authors ON authorship.authid = authors.authid WHERE authors.lname = 'Blume' AND authors.fname = 'Matthias';"}
{"sample_id": 2660, "db_id": "party_host", "gold_sql": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "pred_sql": "SELECT first_year, last_year FROM party WHERE party_theme IN ('Spring', 'Teqnology');"}
{"sample_id": 2664, "db_id": "party_host", "gold_sql": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "pred_sql": "SELECT p.location FROM party p JOIN party_host ph ON p.party_id = ph.party_id GROUP BY p.party_id ORDER BY COUNT(ph.host_id) DESC LIMIT 1;"}
{"sample_id": 2656, "db_id": "party_host", "gold_sql": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC", "pred_sql": "SELECT party.party_theme FROM party JOIN party_host ON party.party_id = party_host.party_id GROUP BY party.party_id ORDER BY COUNT(party_host.host_id) ASC;"}
{"sample_id": 2673, "db_id": "party_host", "gold_sql": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "pred_sql": "SELECT party.location, host.name FROM party JOIN party_host ON party.party_id = party_host.party_id JOIN host ON party_host.host_id = host.host_id ORDER BY host.age ASC;"}
{"sample_id": 2662, "db_id": "party_host", "gold_sql": "SELECT avg(Number_of_hosts) FROM party", "pred_sql": "SELECT AVG(number_of_hosts) AS average_hosts FROM party;"}
{"sample_id": 2670, "db_id": "party_host", "gold_sql": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35", "pred_sql": "SELECT DISTINCT h1.nationality FROM host h1 JOIN party_host ph1 ON h1.host_id = ph1.host_id JOIN party p ON ph1.party_id = p.party_id WHERE h1.age > 45 AND h1.host_id IN (SELECT h2.host_id FROM host h2 JOIN party_host ph2 ON h2.host_id = ph2.host_id WHERE h2.age < 35)"}
{"sample_id": 7136, "db_id": "car_1", "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "pred_sql": "SELECT COUNT(*) AS car_count FROM cars_data WHERE cylinders > 4;"}
{"sample_id": 7159, "db_id": "car_1", "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "pred_sql": "SELECT model_list.model, MAX(cars_data.horsepower) AS max_horsepower\nFROM cars_data\nJOIN car_names ON cars_data.id = car_names.makeid\nJOIN model_list ON car_names.model = model_list.model\nWHERE cars_data.cylinders = 4\nGROUP BY model_list.model\nORDER BY max_horsepower DESC\nLIMIT 1;"}
{"sample_id": 7086, "db_id": "car_1", "gold_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "pred_sql": "SELECT cm.fullname, cm.id, COUNT(ml.modelid) AS model_count\nFROM car_makers cm\nJOIN model_list ml ON cm.id = ml.maker\nGROUP BY cm.fullname, cm.id;"}
{"sample_id": 7133, "db_id": "car_1", "gold_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "pred_sql": "SELECT cylinders, MAX(accelerate) AS max_accelerate FROM cars_data GROUP BY cylinders;"}
{"sample_id": 7157, "db_id": "car_1", "gold_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "pred_sql": "SELECT COUNT(*) AS number_of_cars FROM cars_data WHERE cylinders > 6;"}
{"sample_id": 7115, "db_id": "car_1", "gold_sql": "SELECT Maker ,  Model FROM MODEL_LIST;", "pred_sql": "SELECT car_makers.maker, model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker;"}
{"sample_id": 7163, "db_id": "car_1", "gold_sql": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "pred_sql": "SELECT MAX(mpg) AS max_mpg FROM cars_data WHERE cylinders = 8 OR year < 1980;"}
{"sample_id": 7087, "db_id": "car_1", "gold_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "pred_sql": "SELECT cm.fullname, cm.id, COUNT(ml.modelid) AS model_count \nFROM car_makers cm \nLEFT JOIN model_list ml ON cm.id = ml.maker \nGROUP BY cm.id, cm.fullname;"}
{"sample_id": 7114, "db_id": "car_1", "gold_sql": "SELECT Maker ,  Model FROM MODEL_LIST;", "pred_sql": "SELECT car_makers.maker, model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker;"}
{"sample_id": 7160, "db_id": "car_1", "gold_sql": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "pred_sql": "SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3;"}
{"sample_id": 7134, "db_id": "car_1", "gold_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT model, COUNT(make) AS version_count FROM car_names GROUP BY model ORDER BY version_count DESC LIMIT 1;"}
{"sample_id": 7150, "db_id": "car_1", "gold_sql": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "pred_sql": "SELECT cylinders FROM cars_data WHERE id = (SELECT makeid FROM car_names WHERE model = 'volvo') ORDER BY accelerate ASC LIMIT 1;"}
{"sample_id": 7168, "db_id": "car_1", "gold_sql": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;", "pred_sql": "SELECT cm.id, cm.maker \nFROM car_makers cm \nJOIN model_list ml ON cm.id = ml.maker \nGROUP BY cm.id, cm.maker \nHAVING COUNT(ml.modelid) >= 2 \nAND COUNT(DISTINCT cm.id) > 3;"}
{"sample_id": 7142, "db_id": "car_1", "gold_sql": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "pred_sql": "SELECT cm.fullname, cm.id FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.modelid) > 3;"}
{"sample_id": 7135, "db_id": "car_1", "gold_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT model, COUNT(*) as version_count FROM model_list GROUP BY model ORDER BY version_count DESC LIMIT 1;"}
{"sample_id": 7167, "db_id": "car_1", "gold_sql": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "pred_sql": "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)"}
{"sample_id": 7112, "db_id": "car_1", "gold_sql": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "pred_sql": "SELECT MIN(weight) AS smallest_weight FROM cars_data WHERE cylinders = 8 AND year = 1974;"}
{"sample_id": 7096, "db_id": "car_1", "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "pred_sql": "SELECT DISTINCT model FROM model_list INNER JOIN car_names ON model_list.model = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980;"}
{"sample_id": 807, "db_id": "chinook_1", "gold_sql": "SELECT count(*) FROM ALBUM", "pred_sql": "SELECT COUNT(*) AS total_albums FROM album;"}
{"sample_id": 887, "db_id": "chinook_1", "gold_sql": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)", "pred_sql": "SELECT COUNT(*) AS artist_count FROM artist WHERE artistid NOT IN (SELECT DISTINCT artistid FROM album);"}
{"sample_id": 865, "db_id": "chinook_1", "gold_sql": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\"", "pred_sql": "SELECT COUNT(*) AS track_count FROM track WHERE mediatypeid = (SELECT mediatypeid FROM mediatype WHERE name = 'AAC audio file');"}
{"sample_id": 828, "db_id": "chinook_1", "gold_sql": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'", "pred_sql": "SELECT name FROM track WHERE name LIKE '%you%';"}
{"sample_id": 848, "db_id": "chinook_1", "gold_sql": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customer WHERE email LIKE '%gmail.com';"}
{"sample_id": 834, "db_id": "chinook_1", "gold_sql": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID", "pred_sql": "SELECT album.albumid, album.title, COUNT(track.trackid) AS track_count \nFROM album \nLEFT JOIN track ON album.albumid = track.albumid \nGROUP BY album.albumid, album.title;"}
{"sample_id": 824, "db_id": "chinook_1", "gold_sql": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"", "pred_sql": "SELECT artist.name FROM artist JOIN album ON artist.artistid = album.artistid WHERE album.title = 'Balls to the Wall';"}
{"sample_id": 811, "db_id": "chinook_1", "gold_sql": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"", "pred_sql": "SELECT * FROM customer WHERE state = 'NY';"}
{"sample_id": 827, "db_id": "chinook_1", "gold_sql": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'", "pred_sql": "SELECT name FROM track WHERE name LIKE '%you%';"}
{"sample_id": 825, "db_id": "chinook_1", "gold_sql": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT artist.name, COUNT(album.albumid) AS album_count FROM artist JOIN album ON artist.artistid = album.artistid GROUP BY artist.artistid ORDER BY album_count DESC LIMIT 1;"}
{"sample_id": 857, "db_id": "chinook_1", "gold_sql": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20", "pred_sql": "SELECT DISTINCT c.lastname \nFROM customer c \nLEFT JOIN invoice i ON c.customerid = i.customerid \nGROUP BY c.customerid \nHAVING SUM(i.total) <= 20;"}
{"sample_id": 864, "db_id": "chinook_1", "gold_sql": "SELECT Phone FROM EMPLOYEE", "pred_sql": "SELECT phone FROM employee;"}
{"sample_id": 867, "db_id": "chinook_1", "gold_sql": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\"", "pred_sql": "SELECT AVG(milliseconds) AS average_duration FROM track JOIN genre ON track.genreid = genre.genreid WHERE genre.name IN ('Latin', 'Pop');"}
{"sample_id": 856, "db_id": "chinook_1", "gold_sql": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\"", "pred_sql": "SELECT invoice.invoicedate \nFROM invoice \nJOIN customer ON invoice.customerid = customer.customerid \nWHERE customer.firstname = 'Astrid' AND customer.lastname = 'Gruber';"}
{"sample_id": 838, "db_id": "chinook_1", "gold_sql": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1", "pred_sql": "SELECT mt.name\nFROM mediatype mt\nJOIN track t ON mt.mediatypeid = t.mediatypeid\nGROUP BY mt.mediatypeid\nORDER BY COUNT(t.trackid) ASC\nLIMIT 1;"}
{"sample_id": 833, "db_id": "chinook_1", "gold_sql": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID", "pred_sql": "SELECT album.title, album.albumid, COUNT(track.trackid) AS number_of_tracks\nFROM album\nLEFT JOIN track ON album.albumid = track.albumid\nGROUP BY album.albumid, album.title;"}
{"sample_id": 578, "db_id": "store_1", "gold_sql": "SELECT count(*) FROM customers WHERE city = \"Prague\";", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers WHERE city = 'Prague';"}
{"sample_id": 609, "db_id": "store_1", "gold_sql": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";", "pred_sql": "SELECT SUM(i.total) AS total_spent\nFROM invoices i\nJOIN customers c ON i.customer_id = c.id\nWHERE c.first_name = 'Lucas' AND c.last_name = 'Mancini';"}
{"sample_id": 575, "db_id": "store_1", "gold_sql": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "pred_sql": "SELECT email, phone FROM employees WHERE first_name = 'Astrid' AND last_name = 'Gruber';"}
{"sample_id": 593, "db_id": "store_1", "gold_sql": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT e.first_name || ' ' || e.last_name AS full_name\nFROM employees e\nJOIN customers c ON e.id = c.support_rep_id\nGROUP BY e.id\nORDER BY COUNT(c.id) DESC\nLIMIT 1;"}
{"sample_id": 616, "db_id": "store_1", "gold_sql": "SELECT name FROM playlists;", "pred_sql": "SELECT name FROM playlists;"}
{"sample_id": 636, "db_id": "store_1", "gold_sql": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";", "pred_sql": "SELECT tracks.name FROM tracks \nJOIN playlist_tracks ON tracks.id = playlist_tracks.track_id \nJOIN playlists ON playlist_tracks.playlist_id = playlists.id \nWHERE playlists.name = 'Movies';"}
{"sample_id": 589, "db_id": "store_1", "gold_sql": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name FROM employees WHERE reports_to = (SELECT id FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards')"}
{"sample_id": 615, "db_id": "store_1", "gold_sql": "SELECT name FROM playlists;", "pred_sql": "SELECT name FROM playlists;"}
{"sample_id": 561, "db_id": "store_1", "gold_sql": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "pred_sql": "SELECT COUNT(*) AS invoice_count FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL';"}
{"sample_id": 624, "db_id": "store_1", "gold_sql": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";", "pred_sql": "SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.album_id WHERE tracks.name = 'Ball to the Wall';"}
{"sample_id": 605, "db_id": "store_1", "gold_sql": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;", "pred_sql": "SELECT e.first_name, e.last_name, COUNT(e2.id) AS number_of_reports\nFROM employees e\nLEFT JOIN employees e2 ON e.id = e2.reports_to\nGROUP BY e.id\nORDER BY number_of_reports DESC\nLIMIT 1;"}
{"sample_id": 552, "db_id": "store_1", "gold_sql": "SELECT title FROM albums;", "pred_sql": "SELECT title FROM albums;"}
{"sample_id": 588, "db_id": "store_1", "gold_sql": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "pred_sql": "SELECT title, phone, hire_date FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';"}
{"sample_id": 614, "db_id": "store_1", "gold_sql": "SELECT DISTINCT name FROM genres;", "pred_sql": "SELECT DISTINCT name FROM genres;"}
{"sample_id": 564, "db_id": "store_1", "gold_sql": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;", "pred_sql": "SELECT billing_state, COUNT(*) AS invoice_count FROM invoices GROUP BY billing_state;"}
{"sample_id": 607, "db_id": "store_1", "gold_sql": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";", "pred_sql": "SELECT COUNT(*) AS order_count FROM invoices WHERE customer_id = (SELECT id FROM customers WHERE first_name = 'Lucas' AND last_name = 'Mancini');"}
{"sample_id": 545, "db_id": "store_1", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;", "pred_sql": "SELECT c.first_name, c.last_name, COUNT(i.id) AS total_orders\nFROM customers c\nJOIN invoices i ON c.id = i.customer_id\nGROUP BY c.id\nORDER BY total_orders DESC\nLIMIT 10;"}
{"sample_id": 612, "db_id": "store_1", "gold_sql": "SELECT name FROM media_types;", "pred_sql": "SELECT name FROM media_types;"}
{"sample_id": 630, "db_id": "store_1", "gold_sql": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";", "pred_sql": "SELECT tracks.name \nFROM tracks \nJOIN media_types ON tracks.media_type_id = media_types.id \nJOIN genres ON tracks.genre_id = genres.id \nWHERE genres.name = 'Rock' AND media_types.name = 'MPEG audio';"}
{"sample_id": 597, "db_id": "store_1", "gold_sql": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "pred_sql": "SELECT phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';"}
{"sample_id": 639, "db_id": "store_1", "gold_sql": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";", "pred_sql": "SELECT tracks.name \nFROM tracks \nJOIN invoice_lines ON tracks.id = invoice_lines.track_id \nJOIN invoices ON invoice_lines.invoice_id = invoices.id \nJOIN customers ON invoices.customer_id = customers.id \nWHERE customers.first_name = 'Daan' AND customers.last_name = 'Peeters';"}
{"sample_id": 585, "db_id": "store_1", "gold_sql": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers WHERE support_rep_id = (SELECT id FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson');"}
{"sample_id": 4326, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT organisation_types.organisation_type_description\nFROM organisations\nJOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id\nJOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type\nGROUP BY organisations.organisation_id\nORDER BY COUNT(research_staff.staff_id) DESC\nLIMIT 1;"}
{"sample_id": 4319, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'", "pred_sql": "SELECT ps.date_from, ps.date_to \nFROM project_staff ps \nWHERE ps.project_id = (\n    SELECT project_id \n    FROM project_staff \n    GROUP BY project_id \n    ORDER BY COUNT(staff_id) DESC \n    LIMIT 1\n)"}
{"sample_id": 4320, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'", "pred_sql": "SELECT ps.date_from, ps.date_to \nFROM project_staff ps \nJOIN staff_roles sr ON ps.role_code = sr.role_code \nWHERE sr.role_description = 'leader' \nAND ps.project_id = (SELECT ps2.project_id \n                     FROM project_staff ps2 \n                     GROUP BY ps2.project_id \n                     ORDER BY COUNT(ps2.staff_id) DESC \n                     LIMIT 1)"}
{"sample_id": 4349, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT p.project_id, p.project_details, COUNT(po.outcome_code) AS outcome_count\nFROM projects p\nJOIN project_outcomes po ON p.project_id = po.project_id\nGROUP BY p.project_id, p.project_details\nORDER BY outcome_count DESC\nLIMIT 1;"}
{"sample_id": 4363, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'", "pred_sql": "SELECT organisation_types.organisation_type_description \nFROM organisations \nJOIN organisation_types ON organisations.organisation_type = organisation_types.organisation_type \nWHERE organisations.organisation_details = 'quo';"}
{"sample_id": 4334, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2", "pred_sql": "SELECT t.task_id, t.task_details, t.project_id \nFROM tasks t \nJOIN projects p ON t.project_id = p.project_id \nLEFT JOIN project_outcomes po ON p.project_id = po.project_id \nGROUP BY t.task_id, t.task_details, t.project_id \nHAVING p.project_details = 'omnis' OR COUNT(po.outcome_code) >= 3;"}
{"sample_id": 4314, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'", "pred_sql": "SELECT DISTINCT g.grant_amount \nFROM grants g \nJOIN documents d ON g.grant_id = d.grant_id \nWHERE d.sent_date < '1986-08-26 20:49:27' \nAND g.grant_end_date < '1989-03-16 18:27:16';"}
{"sample_id": 4335, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "pred_sql": "SELECT staff_id, date_from, date_to FROM research_staff JOIN project_staff ON research_staff.staff_id = project_staff.staff_id;"}
{"sample_id": 4356, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT ps.staff_id, sr.role_description\nFROM project_staff ps\nJOIN staff_roles sr ON ps.role_code = sr.role_code\nWHERE ps.project_id IN (\n    SELECT project_id\n    FROM project_staff\n    GROUP BY project_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)"}
{"sample_id": 4390, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT role_code, COUNT(*) as role_count FROM project_staff GROUP BY role_code ORDER BY role_count DESC LIMIT 1;"}
{"sample_id": 4343, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "pred_sql": "SELECT project_id, COUNT(staff_id) AS staff_count FROM project_staff GROUP BY project_id ORDER BY project_id ASC;"}
{"sample_id": 4332, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )", "pred_sql": "SELECT p.project_id, p.project_details \nFROM projects p \nLEFT JOIN project_staff ps ON p.project_id = ps.project_id \nWHERE ps.role_code IS NULL OR ps.role_code NOT IN (SELECT role_code FROM staff_roles WHERE role_description LIKE '%research%');"}
{"sample_id": 4337, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT count(DISTINCT role_code) FROM Project_Staff", "pred_sql": "SELECT COUNT(DISTINCT role_code) AS number_of_roles FROM staff_roles;"}
{"sample_id": 4322, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000", "pred_sql": "SELECT organisations.organisation_id, organisations.organisation_details \nFROM organisations \nJOIN grants ON organisations.organisation_id = grants.organisation_id \nWHERE grants.grant_amount > '6000';"}
{"sample_id": 4355, "db_id": "tracking_grants_for_research", "gold_sql": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT ps.staff_id, sr.role_description\nFROM project_staff ps\nJOIN staff_roles sr ON ps.role_code = sr.role_code\nJOIN project_outcomes po ON ps.project_id = po.project_id\nGROUP BY ps.staff_id, sr.role_description\nORDER BY COUNT(po.outcome_code) DESC\nLIMIT 1;"}
{"sample_id": 2803, "db_id": "news_report", "gold_sql": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3", "pred_sql": "SELECT DISTINCT nationality FROM journalist WHERE journalist_id IN (SELECT journalist_id FROM journalist WHERE years_working > 10) AND journalist_id IN (SELECT journalist_id FROM journalist WHERE years_working < 3);"}
{"sample_id": 2806, "db_id": "news_report", "gold_sql": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC", "pred_sql": "SELECT journalist.name AS journalist_name, event.name AS event_name \nFROM journalist \nJOIN news_report ON journalist.journalist_id = news_report.journalist_id \nJOIN event ON news_report.event_id = event.event_id \nORDER BY journalist.name ASC, event.name ASC;"}
{"sample_id": 2798, "db_id": "news_report", "gold_sql": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"", "pred_sql": "SELECT name FROM journalist WHERE nationality IN ('England', 'Wales');"}
{"sample_id": 7403, "db_id": "course_teach", "gold_sql": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "pred_sql": "SELECT teacher.name FROM teacher WHERE teacher.teacher_id NOT IN (SELECT course_arrange.teacher_id FROM course_arrange);", "token_usage": {"tokens": 558, "cost": 0.00015255}}
{"sample_id": 7381, "db_id": "course_teach", "gold_sql": "select name from teacher where hometown != \"little lever urban district\"", "pred_sql": "SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District';", "token_usage": {"tokens": 505, "cost": 0.00011894999999999999}}
{"sample_id": 7375, "db_id": "course_teach", "gold_sql": "SELECT count(*) FROM teacher", "pred_sql": "SELECT COUNT(*) AS total_teachers FROM teacher;", "token_usage": {"tokens": 475, "cost": 0.00010544999999999999}}
{"sample_id": 7385, "db_id": "course_teach", "gold_sql": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "pred_sql": "SELECT hometown FROM teacher WHERE age = (SELECT MIN(age) FROM teacher);", "token_usage": {"tokens": 519, "cost": 0.0001323}}
{"sample_id": 7374, "db_id": "course_teach", "gold_sql": "SELECT count(*) FROM teacher", "pred_sql": "SELECT COUNT(*) AS teacher_count FROM teacher;", "token_usage": {"tokens": 492, "cost": 0.00011654999999999999}}
{"sample_id": 7389, "db_id": "course_teach", "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT hometown, COUNT(hometown) AS hometown_count FROM teacher GROUP BY hometown ORDER BY hometown_count DESC LIMIT 1;", "token_usage": {"tokens": 541, "cost": 0.0001437}}
{"sample_id": 2815, "db_id": "restaurant_1", "gold_sql": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";", "pred_sql": "SELECT rating FROM restaurant WHERE resname = 'Subway';"}
{"sample_id": 2826, "db_id": "restaurant_1", "gold_sql": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;", "pred_sql": "SELECT major, COUNT(*) AS number_of_students \nFROM student \nGROUP BY major \nHAVING COUNT(*) BETWEEN 2 AND 30;"}
{"sample_id": 2827, "db_id": "restaurant_1", "gold_sql": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;", "pred_sql": "SELECT fname, lname FROM student WHERE age > '18' AND major = '600';"}
{"sample_id": 2829, "db_id": "restaurant_1", "gold_sql": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'", "pred_sql": "SELECT COUNT(*) AS sandwich_count FROM restaurant r JOIN type_of_restaurant tr ON r.resid = tr.resid JOIN restaurant_type rt ON tr.restypeid = rt.restypeid WHERE rt.restypename = 'Sandwich';"}
{"sample_id": 6643, "db_id": "driving_school", "gold_sql": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";", "pred_sql": "SELECT COUNT(*) AS staff_count FROM staff JOIN addresses ON staff.staff_address_id = addresses.address_id WHERE addresses.state_province_county = 'Georgia';"}
{"sample_id": 6675, "db_id": "driving_school", "gold_sql": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";", "pred_sql": "SELECT first_name, last_name FROM customers JOIN addresses ON customers.customer_address_id = addresses.address_id WHERE addresses.city = 'Lockmanfurt';"}
{"sample_id": 6637, "db_id": "driving_school", "gold_sql": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "pred_sql": "SELECT a.country, a.state_province_county FROM staff s JOIN addresses a ON s.staff_address_id = a.address_id WHERE s.first_name = 'Janessa' AND s.last_name = 'Sawayn';"}
{"sample_id": 6632, "db_id": "driving_school", "gold_sql": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "pred_sql": "SELECT nickname FROM staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';"}
{"sample_id": 6638, "db_id": "driving_school", "gold_sql": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "pred_sql": "SELECT a.country, a.state_province_county FROM staff s JOIN addresses a ON s.staff_address_id = a.address_id WHERE s.first_name = 'Janessa' AND s.last_name = 'Sawayn';"}
{"sample_id": 6620, "db_id": "driving_school", "gold_sql": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;", "pred_sql": "SELECT * FROM vehicles WHERE vehicle_id = '1';"}
{"sample_id": 6639, "db_id": "driving_school", "gold_sql": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";", "pred_sql": "SELECT SUM(lesson_time) AS total_lesson_time FROM lessons JOIN customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Rylan' AND customers.last_name = 'Goodwin';"}
{"sample_id": 6650, "db_id": "driving_school", "gold_sql": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;", "pred_sql": "SELECT state_province_county FROM staff JOIN addresses ON staff.staff_address_id = addresses.address_id GROUP BY state_province_county HAVING COUNT(staff.staff_id) BETWEEN 2 AND 4;"}
{"sample_id": 6648, "db_id": "driving_school", "gold_sql": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT city, COUNT(*) AS employee_count \nFROM staff \nJOIN addresses ON staff.staff_address_id = addresses.address_id \nGROUP BY city \nORDER BY employee_count DESC \nLIMIT 1;"}
{"sample_id": 6624, "db_id": "driving_school", "gold_sql": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "pred_sql": "SELECT date_of_birth FROM staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';"}
{"sample_id": 6641, "db_id": "driving_school", "gold_sql": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "pred_sql": "SELECT a.zip_postcode FROM staff s JOIN addresses a ON s.staff_address_id = a.address_id WHERE s.first_name = 'Janessa' AND s.last_name = 'Sawayn';"}
{"sample_id": 6690, "db_id": "driving_school", "gold_sql": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;", "pred_sql": "SELECT payment_method_code, COUNT(*) AS payment_count FROM customer_payments GROUP BY payment_method_code;"}
{"sample_id": 6659, "db_id": "driving_school", "gold_sql": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'", "pred_sql": "SELECT date_of_birth FROM customers WHERE customer_status_code = 'Good Customer';"}
{"sample_id": 6677, "db_id": "driving_school", "gold_sql": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"", "pred_sql": "SELECT a.country FROM customers c JOIN addresses a ON c.customer_address_id = a.address_id WHERE c.first_name = 'Carole' AND c.last_name = 'Bernhard';"}
{"sample_id": 6631, "db_id": "driving_school", "gold_sql": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "pred_sql": "SELECT nickname FROM staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';"}
{"sample_id": 6656, "db_id": "driving_school", "gold_sql": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;", "pred_sql": "SELECT phone_number, email_address FROM customers WHERE amount_outstanding > '2000'"}
{"sample_id": 6665, "db_id": "driving_school", "gold_sql": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;", "pred_sql": "SELECT customer_status_code, COUNT(customer_id) AS number_of_customers FROM customers GROUP BY customer_status_code;"}
{"sample_id": 6707, "db_id": "driving_school", "gold_sql": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT v.vehicle_id, v.vehicle_details\nFROM lessons l\nJOIN vehicles v ON l.vehicle_id = v.vehicle_id\nGROUP BY l.vehicle_id\nORDER BY COUNT(l.lesson_id) DESC\nLIMIT 1;"}
{"sample_id": 1976, "db_id": "products_for_hire", "gold_sql": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'", "pred_sql": "SELECT payment_date FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check';"}
{"sample_id": 1969, "db_id": "products_for_hire", "gold_sql": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name", "pred_sql": "SELECT first_name, last_name, gender_mf FROM customers WHERE good_or_bad_customer = 1 ORDER BY last_name;"}
{"sample_id": 1962, "db_id": "products_for_hire", "gold_sql": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1", "pred_sql": "SELECT customer_id, MAX(amount_paid) AS max_amount_paid FROM payments GROUP BY customer_id;"}
{"sample_id": 3156, "db_id": "station_weather", "gold_sql": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT train.name\nFROM train\nJOIN route ON train.id = route.train_id\nGROUP BY train.id\nORDER BY COUNT(route.station_id) DESC\nLIMIT 1;"}
{"sample_id": 3157, "db_id": "station_weather", "gold_sql": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id", "pred_sql": "SELECT s.network_name, s.services, COUNT(r.train_id) AS number_of_trains\nFROM station s\nLEFT JOIN route r ON s.id = r.station_id\nGROUP BY s.id, s.network_name, s.services;"}
{"sample_id": 3150, "db_id": "station_weather", "gold_sql": "SELECT local_authority ,  services FROM station", "pred_sql": "SELECT local_authority, services FROM station;"}
{"sample_id": 5906, "db_id": "cre_Theme_park", "gold_sql": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "pred_sql": "SELECT ref_hotel_star_ratings.star_rating_description \nFROM hotels \nJOIN ref_hotel_star_ratings ON hotels.star_rating_code = ref_hotel_star_ratings.star_rating_code \nWHERE hotels.price_range > '10000';"}
{"sample_id": 5932, "db_id": "cre_Theme_park", "gold_sql": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "pred_sql": "SELECT hotel_id, star_rating_code FROM hotels ORDER BY price_range ASC;"}
{"sample_id": 5891, "db_id": "cre_Theme_park", "gold_sql": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "pred_sql": "SELECT AVG(price_range) AS average_price_range FROM hotels WHERE star_rating_code = '5' AND pets_allowed_yn = 'Yes';"}
{"sample_id": 5908, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "pred_sql": "SELECT museum_id, museum_details FROM museums;"}
{"sample_id": 5939, "db_id": "cre_Theme_park", "gold_sql": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT how_to_get_there, COUNT(*) as usage_count \nFROM tourist_attractions \nGROUP BY how_to_get_there \nORDER BY usage_count DESC \nLIMIT 1;"}
{"sample_id": 5951, "db_id": "cre_Theme_park", "gold_sql": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "pred_sql": "SELECT name FROM tourist_attractions WHERE how_to_get_there LIKE '%walk%' OR location_id IN (SELECT location_id FROM locations WHERE address = '660 Shea Crescent');"}
{"sample_id": 5931, "db_id": "cre_Theme_park", "gold_sql": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "pred_sql": "SELECT pets_allowed_yn, AVG(price_range) AS average_price FROM hotels GROUP BY pets_allowed_yn;"}
{"sample_id": 5901, "db_id": "cre_Theme_park", "gold_sql": "SELECT DISTINCT Visit_Date FROM VISITS", "pred_sql": "SELECT DISTINCT visit_date FROM visits;"}
{"sample_id": 5913, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "pred_sql": "SELECT p.name, p.description \nFROM photos p \nJOIN tourist_attractions ta ON p.tourist_attraction_id = ta.tourist_attraction_id \nWHERE ta.name = 'film festival';"}
{"sample_id": 5928, "db_id": "cre_Theme_park", "gold_sql": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "pred_sql": "SELECT h.star_rating_code, AVG(h.price_range) AS average_price\nFROM hotels h\nGROUP BY h.star_rating_code;"}
{"sample_id": 5878, "db_id": "cre_Theme_park", "gold_sql": "SELECT count(*) FROM HOTELS", "pred_sql": "SELECT COUNT(*) AS total_hotels FROM hotels;"}
{"sample_id": 5879, "db_id": "cre_Theme_park", "gold_sql": "SELECT count(*) FROM HOTELS", "pred_sql": "SELECT COUNT(*) AS total_hotels FROM hotels;"}
{"sample_id": 5960, "db_id": "cre_Theme_park", "gold_sql": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "pred_sql": "SELECT COUNT(*) AS tourists_without_visits FROM visitors WHERE tourist_id NOT IN (SELECT DISTINCT tourist_id FROM visits);"}
{"sample_id": 5916, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "pred_sql": "SELECT shop_id, shop_details FROM shops WHERE shop_id IN (SELECT tourist_attraction_id FROM tourist_attractions WHERE how_to_get_there LIKE '%walk%');"}
{"sample_id": 5897, "db_id": "cre_Theme_park", "gold_sql": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "pred_sql": "SELECT * FROM locations WHERE location_name LIKE '%film%';"}
{"sample_id": 5925, "db_id": "cre_Theme_park", "gold_sql": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "pred_sql": "SELECT ta.name, ta.description, v.visit_date FROM tourist_attractions ta JOIN visits v ON ta.tourist_attraction_id = v.tourist_attraction_id JOIN visitors vi ON v.tourist_id = vi.tourist_id WHERE vi.tourist_details = 'Vincent';"}
{"sample_id": 675, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"", "pred_sql": "SELECT COUNT(*) AS account_count FROM accounts WHERE customer_id = (SELECT customer_id FROM customers WHERE customer_first_name = 'Art' AND customer_last_name = 'Turcotte');"}
{"sample_id": 683, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "pred_sql": "SELECT COUNT(*) AS number_of_customers_without_account FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM accounts)"}
{"sample_id": 693, "db_id": "customers_card_transactions", "gold_sql": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "pred_sql": "SELECT customer_id, customer_first_name, customer_last_name, customer_phone FROM customers;"}
{"sample_id": 726, "db_id": "customers_card_transactions", "gold_sql": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code", "pred_sql": "SELECT card_type_code, COUNT(DISTINCT customer_id) AS customer_count FROM customers_cards GROUP BY card_type_code;"}
{"sample_id": 707, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"", "pred_sql": "SELECT COUNT(*) AS debit_card_count FROM customers_cards WHERE card_type_code = 'debit';"}
{"sample_id": 703, "db_id": "customers_card_transactions", "gold_sql": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "pred_sql": "SELECT customers.customer_first_name, customers.customer_last_name, customers.customer_phone \nFROM customers \nJOIN customers_cards ON customers.customer_id = customers_cards.customer_id \nWHERE customers_cards.card_number = '4560596484842';"}
{"sample_id": 722, "db_id": "customers_card_transactions", "gold_sql": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT card_type_code FROM customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) DESC LIMIT 1;"}
{"sample_id": 727, "db_id": "customers_card_transactions", "gold_sql": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"", "pred_sql": "SELECT c.customer_id, c.customer_first_name \nFROM customers c \nLEFT JOIN customers_cards cc ON c.customer_id = cc.customer_id AND cc.card_type_code = 'credit' \nWHERE cc.card_id IS NULL;"}
{"sample_id": 716, "db_id": "customers_card_transactions", "gold_sql": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "pred_sql": "SELECT c.customer_id, c.customer_first_name || ' ' || c.customer_last_name AS full_name\nFROM customers c\nJOIN customers_cards cc ON c.customer_id = cc.customer_id\nGROUP BY c.customer_id\nHAVING COUNT(cc.card_id) >= 2;"}
{"sample_id": 729, "db_id": "customers_card_transactions", "gold_sql": "SELECT DISTINCT card_type_code FROM Customers_Cards", "pred_sql": "SELECT card_type_code FROM customers_cards;"}
{"sample_id": 692, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(*) FROM Customers", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers;"}
{"sample_id": 702, "db_id": "customers_card_transactions", "gold_sql": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "pred_sql": "SELECT date_valid_from, date_valid_to FROM customers_cards WHERE card_number = '4560596484842';"}
{"sample_id": 731, "db_id": "customers_card_transactions", "gold_sql": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards", "pred_sql": "SELECT COUNT(DISTINCT card_type_code) AS number_of_card_types FROM customers_cards;"}
{"sample_id": 724, "db_id": "customers_card_transactions", "gold_sql": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5", "pred_sql": "SELECT card_type_code FROM customers_cards GROUP BY card_type_code HAVING COUNT(card_id) >= 5;"}
{"sample_id": 674, "db_id": "customers_card_transactions", "gold_sql": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "pred_sql": "SELECT customers.customer_first_name, customers.customer_last_name, customers.customer_phone \nFROM customers \nJOIN accounts ON customers.customer_id = accounts.customer_id \nWHERE accounts.account_name = '162';"}
{"sample_id": 719, "db_id": "customers_card_transactions", "gold_sql": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code", "pred_sql": "SELECT card_type_code, COUNT(card_id) AS number_of_cards FROM customers_cards GROUP BY card_type_code;"}
{"sample_id": 4283, "db_id": "club_1", "gold_sql": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"", "pred_sql": "SELECT clubname FROM club WHERE clublocation = 'AKW';"}
{"sample_id": 4298, "db_id": "club_1", "gold_sql": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"", "pred_sql": "SELECT DISTINCT club.clubname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE student.city_code = 'BAL';"}
{"sample_id": 4278, "db_id": "club_1", "gold_sql": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"", "pred_sql": "SELECT clublocation FROM club WHERE clubname = 'Tennis Club';"}
{"sample_id": 4293, "db_id": "club_1", "gold_sql": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18", "pred_sql": "SELECT COUNT(*) FROM member_of_club moc JOIN club c ON moc.clubid = c.clubid JOIN student s ON moc.stuid = s.stuid WHERE c.clubname = 'Bootup Baltimore' AND s.age > '18';"}
{"sample_id": 4243, "db_id": "club_1", "gold_sql": "SELECT count(*) FROM club", "pred_sql": "SELECT COUNT(*) AS total_clubs FROM club;"}
{"sample_id": 4280, "db_id": "club_1", "gold_sql": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "pred_sql": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming';"}
{"sample_id": 4279, "db_id": "club_1", "gold_sql": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "pred_sql": "SELECT clublocation FROM club WHERE clubname = 'Pen and Paper Gaming';"}
{"sample_id": 4263, "db_id": "club_1", "gold_sql": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "pred_sql": "SELECT student.fname, student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE student.sex = 'female' AND club.clubname = 'Bootup Baltimore';"}
{"sample_id": 4267, "db_id": "club_1", "gold_sql": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "pred_sql": "SELECT student.fname, student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE club.clubname = 'Bootup Baltimore' AND student.major = '600';"}
{"sample_id": 4289, "db_id": "club_1", "gold_sql": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "pred_sql": "SELECT s.fname, s.lname FROM student s JOIN member_of_club m ON s.stuid = m.stuid JOIN club c ON m.clubid = c.clubid WHERE c.clubname = 'Hopkins Student Enterprises' AND m.position = 'CTO';"}
{"sample_id": 4294, "db_id": "club_1", "gold_sql": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18", "pred_sql": "SELECT COUNT(m.stuid) AS member_count \nFROM member_of_club m \nJOIN club c ON m.clubid = c.clubid \nJOIN student s ON m.stuid = s.stuid \nWHERE c.clubname = 'Bootup Baltimore' AND s.age > '18';"}
{"sample_id": 4290, "db_id": "club_1", "gold_sql": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "pred_sql": "SELECT s.fname, s.lname FROM student s JOIN member_of_club m ON s.stuid = m.stuid JOIN club c ON m.clubid = c.clubid WHERE m.position = 'CTO' AND c.clubname = 'Hopkins Student Enterprises';"}
{"sample_id": 4246, "db_id": "club_1", "gold_sql": "SELECT clubname FROM club", "pred_sql": "SELECT clubname FROM club;"}
{"sample_id": 4303, "db_id": "club_1", "gold_sql": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"", "pred_sql": "SELECT club.clubname, club.clubdesc, club.clublocation \nFROM club \nJOIN member_of_club ON club.clubid = member_of_club.clubid \nJOIN student ON member_of_club.stuid = student.stuid \nWHERE student.fname = 'Davis' AND student.lname = 'Steven';"}
{"sample_id": 217, "db_id": "book_2", "gold_sql": "SELECT Title ,  Issues FROM book", "pred_sql": "SELECT title, issues FROM book;"}
{"sample_id": 220, "db_id": "book_2", "gold_sql": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1", "pred_sql": "SELECT publisher FROM publication WHERE price = (SELECT MAX(price) FROM publication)"}
{"sample_id": 232, "db_id": "book_2", "gold_sql": "SELECT COUNT (DISTINCT Publication_Date) FROM publication", "pred_sql": "SELECT COUNT(DISTINCT publication_date) AS distinct_publication_dates FROM publication;"}
{"sample_id": 227, "db_id": "book_2", "gold_sql": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT publication_date, COUNT(publication_date) AS date_count FROM publication GROUP BY publication_date ORDER BY date_count DESC LIMIT 1;"}
{"sample_id": 6346, "db_id": "school_bus", "gold_sql": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT home_city, COUNT(driver_id) AS driver_count \nFROM driver \nGROUP BY home_city \nORDER BY driver_count DESC \nLIMIT 1;"}
{"sample_id": 6351, "db_id": "school_bus", "gold_sql": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2", "pred_sql": "SELECT DISTINCT type FROM school WHERE school_id IN (SELECT school_id FROM school GROUP BY school_id HAVING COUNT(*) = 2)"}
{"sample_id": 6347, "db_id": "school_bus", "gold_sql": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40", "pred_sql": "SELECT DISTINCT party FROM driver WHERE home_city = 'Hartford' AND age > '40';"}
{"sample_id": 6174, "db_id": "music_4", "gold_sql": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category", "pred_sql": "SELECT category, COUNT(*) as count FROM music_festival GROUP BY category;"}
{"sample_id": 6161, "db_id": "music_4", "gold_sql": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"", "pred_sql": "SELECT volume.song FROM volume JOIN music_festival ON volume.volume_id = music_festival.volume WHERE music_festival.result = 'nomination';"}
{"sample_id": 6185, "db_id": "music_4", "gold_sql": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2", "pred_sql": "SELECT DISTINCT a.famous_title \nFROM artist a \nJOIN volume v ON a.artist_id = v.artist_id \nWHERE a.artist_id IN (\n    SELECT artist_id \n    FROM volume \n    GROUP BY artist_id \n    HAVING SUM(CASE WHEN weeks_on_top > 2 THEN 1 ELSE 0 END) > 0 \n    AND SUM(CASE WHEN weeks_on_top < 2 THEN 1 ELSE 0 END) > 0\n)"}
{"sample_id": 6188, "db_id": "music_4", "gold_sql": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1", "pred_sql": "SELECT issue_date FROM volume WHERE weeks_on_top = (SELECT MIN(weeks_on_top) FROM volume);"}
{"sample_id": 6139, "db_id": "music_4", "gold_sql": "SELECT Age FROM artist", "pred_sql": "SELECT age FROM artist;"}
{"sample_id": 6169, "db_id": "music_4", "gold_sql": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2", "pred_sql": "SELECT DISTINCT a.famous_title \nFROM artist a \nJOIN volume v ON a.artist_id = v.artist_id \nWHERE v.weeks_on_top > 2;"}
{"sample_id": 6136, "db_id": "music_4", "gold_sql": "SELECT count(*) FROM artist", "pred_sql": "SELECT COUNT(*) AS artist_count FROM artist;"}
{"sample_id": 6168, "db_id": "music_4", "gold_sql": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2", "pred_sql": "SELECT DISTINCT a.famous_title \nFROM artist a \nJOIN volume v ON a.artist_id = v.artist_id \nWHERE v.weeks_on_top > 2;"}
{"sample_id": 6162, "db_id": "music_4", "gold_sql": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"", "pred_sql": "SELECT v.issue_date FROM volume v JOIN artist a ON v.artist_id = a.artist_id WHERE a.artist = 'Gorgoroth';"}
{"sample_id": 6194, "db_id": "music_4", "gold_sql": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23", "pred_sql": "SELECT v.issue_date FROM volume v JOIN artist a ON v.artist_id = a.artist_id WHERE a.age <= '23';"}
{"sample_id": 6190, "db_id": "music_4", "gold_sql": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "pred_sql": "SELECT COUNT(DISTINCT artist_id) AS distinct_artists_with_volumes FROM volume;"}
{"sample_id": 6186, "db_id": "music_4", "gold_sql": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"", "pred_sql": "SELECT date_of_ceremony FROM music_festival WHERE category = 'Best Song' AND result = 'Awarded';"}
{"sample_id": 4701, "db_id": "college_3", "gold_sql": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)", "pred_sql": "SELECT fname FROM student WHERE stuid NOT IN (SELECT stuid FROM enrolled_in);"}
{"sample_id": 4673, "db_id": "college_3", "gold_sql": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT f.fname || ' ' || f.lname AS full_name\nFROM faculty f\nJOIN course c ON f.facid = c.instructor\nGROUP BY f.facid\nORDER BY COUNT(c.cid) DESC\nLIMIT 3;"}
{"sample_id": 4659, "db_id": "college_3", "gold_sql": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC", "pred_sql": "SELECT lname FROM student WHERE sex = 'female' ORDER BY age DESC;"}
{"sample_id": 4640, "db_id": "college_3", "gold_sql": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"", "pred_sql": "SELECT COUNT(DISTINCT stuid) AS number_of_students_with_B FROM enrolled_in WHERE grade = 'B';"}
{"sample_id": 4700, "db_id": "college_3", "gold_sql": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)", "pred_sql": "SELECT fname FROM student WHERE stuid NOT IN (SELECT stuid FROM enrolled_in);"}
{"sample_id": 4664, "db_id": "college_3", "gold_sql": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.dname\nFROM department d\nJOIN minor_in m ON d.dno = m.dno\nGROUP BY d.dname\nORDER BY COUNT(m.stuid) DESC\nLIMIT 1;"}
{"sample_id": 4674, "db_id": "college_3", "gold_sql": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT f.building\nFROM faculty f\nJOIN course c ON f.facid = c.instructor\nGROUP BY f.facid, f.building\nORDER BY COUNT(c.cid) DESC\nLIMIT 1;"}
{"sample_id": 4656, "db_id": "college_3", "gold_sql": "SELECT Fname FROM STUDENT ORDER BY Age DESC", "pred_sql": "SELECT fname FROM student ORDER BY age DESC;"}
{"sample_id": 4697, "db_id": "college_3", "gold_sql": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4", "pred_sql": "SELECT cname FROM course WHERE credits = 3 OR (credits = 1 AND hours = 4);"}
{"sample_id": 4693, "db_id": "college_3", "gold_sql": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\"", "pred_sql": "SELECT AVG(gc.gradepoint) AS average_gradepoint \nFROM student s \nJOIN enrolled_in ei ON s.stuid = ei.stuid \nJOIN gradeconversion gc ON ei.grade = gc.lettergrade \nWHERE s.lname = 'Smith';"}
{"sample_id": 4657, "db_id": "college_3", "gold_sql": "SELECT Fname FROM STUDENT ORDER BY Age DESC", "pred_sql": "SELECT fname FROM student ORDER BY age DESC;"}
{"sample_id": 4630, "db_id": "college_3", "gold_sql": "SELECT count(*) FROM COURSE WHERE Credits  >  2", "pred_sql": "SELECT COUNT(*) FROM course WHERE credits > 2;"}
{"sample_id": 4643, "db_id": "college_3", "gold_sql": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION", "pred_sql": "SELECT MAX(gradepoint) AS max_grade_point, MIN(gradepoint) AS min_grade_point FROM gradeconversion;"}
{"sample_id": 4698, "db_id": "college_3", "gold_sql": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\"", "pred_sql": "SELECT dname FROM department WHERE (division = 'AS' OR division = 'EN') AND building = 'NEB';"}
{"sample_id": 3557, "db_id": "music_1", "gold_sql": "SELECT avg(rating) ,  languages FROM song GROUP BY languages", "pred_sql": "SELECT languages, AVG(rating) AS average_rating FROM song GROUP BY languages;"}
{"sample_id": 3588, "db_id": "music_1", "gold_sql": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"", "pred_sql": "SELECT DISTINCT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'UK' AND song.languages LIKE '%English%';"}
{"sample_id": 3591, "db_id": "music_1", "gold_sql": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"", "pred_sql": "SELECT AVG(song.rating) AS average_rating, AVG(resolution) AS average_resolution FROM song WHERE genre_is = 'Bangla';"}
{"sample_id": 3526, "db_id": "music_1", "gold_sql": "SELECT song_name FROM song WHERE languages  =  \"english\"", "pred_sql": "SELECT song_name FROM song WHERE languages LIKE '%English%';"}
{"sample_id": 3549, "db_id": "music_1", "gold_sql": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000", "pred_sql": "SELECT f_id FROM files WHERE formats LIKE '%mp4%' AND CAST(resolution AS INTEGER) < 1000;"}
{"sample_id": 3529, "db_id": "music_1", "gold_sql": "SELECT f_id FROM files WHERE formats  =  \"mp3\"", "pred_sql": "SELECT f_id FROM files WHERE formats LIKE '%mp3%';"}
{"sample_id": 3613, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT artist_name, COUNT(song_name) AS song_count \nFROM song \nWHERE languages LIKE '%Bangla%' \nGROUP BY artist_name \nORDER BY song_count DESC \nLIMIT 3;"}
{"sample_id": 3540, "db_id": "music_1", "gold_sql": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"", "pred_sql": "SELECT COUNT(*) FROM artist WHERE country = 'Bangladesh';"}
{"sample_id": 3595, "db_id": "music_1", "gold_sql": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages", "pred_sql": "SELECT languages, MAX(duration) AS max_duration, MAX(resolution) AS max_resolution FROM song GROUP BY languages ORDER BY languages;"}
{"sample_id": 3617, "db_id": "music_1", "gold_sql": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name", "pred_sql": "SELECT song.duration, files.file_size, files.formats FROM song JOIN files ON song.f_id = files.f_id WHERE song.genre_is = 'pop' ORDER BY song.song_name ASC;"}
{"sample_id": 3603, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "pred_sql": "SELECT artist_name, COUNT(song_name) AS song_count \nFROM song \nGROUP BY artist_name \nORDER BY song_count DESC \nLIMIT 3;"}
{"sample_id": 3599, "db_id": "music_1", "gold_sql": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "pred_sql": "SELECT artist.artist_name, COUNT(song.song_name) AS number_of_works \nFROM artist \nJOIN song ON artist.artist_name = song.artist_name \nWHERE song.languages LIKE '%English%' \nGROUP BY artist.artist_name;"}
{"sample_id": 3611, "db_id": "music_1", "gold_sql": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")", "pred_sql": "SELECT s.f_id FROM song s JOIN genre g ON s.genre_is = g.g_name WHERE s.resolution > (SELECT AVG(resolution) FROM song WHERE genre_is = 'modern')"}
{"sample_id": 3545, "db_id": "music_1", "gold_sql": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1", "pred_sql": "SELECT formats, COUNT(*) as file_count FROM files GROUP BY formats ORDER BY file_count DESC LIMIT 1;"}
{"sample_id": 3584, "db_id": "music_1", "gold_sql": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"", "pred_sql": "SELECT song_name FROM song WHERE genre_is = 'modern' OR languages LIKE '%English%';"}
{"sample_id": 3522, "db_id": "music_1", "gold_sql": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1", "pred_sql": "SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1;"}
{"sample_id": 3615, "db_id": "music_1", "gold_sql": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating", "pred_sql": "SELECT song.f_id, song.genre_is, song.artist_name FROM song WHERE song.languages LIKE '%English%' ORDER BY song.rating ASC;"}
{"sample_id": 3532, "db_id": "music_1", "gold_sql": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "pred_sql": "SELECT files.file_size, files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.resolution < '800';"}
{"sample_id": 3565, "db_id": "music_1", "gold_sql": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")", "pred_sql": "SELECT song_name FROM song WHERE rating < (SELECT MIN(rating) FROM song WHERE genre_is = 'blues')"}
{"sample_id": 3542, "db_id": "music_1", "gold_sql": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"", "pred_sql": "SELECT AVG(rating) AS average_rating FROM song WHERE artist_name IN (SELECT artist_name FROM artist WHERE gender = 'female')"}
{"sample_id": 7034, "db_id": "concert_singer", "gold_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "pred_sql": "SELECT DISTINCT s.name, s.location \nFROM stadium s \nJOIN concert c ON s.stadium_id = c.stadium_id \nWHERE c.year IN ('2014', '2015') \nGROUP BY s.stadium_id \nHAVING COUNT(DISTINCT c.year) = 2;"}
{"sample_id": 6998, "db_id": "concert_singer", "gold_sql": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "pred_sql": "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = 'France';"}
{"sample_id": 7012, "db_id": "concert_singer", "gold_sql": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "pred_sql": "SELECT name, capacity FROM stadium ORDER BY average DESC LIMIT 1;"}
{"sample_id": 7006, "db_id": "concert_singer", "gold_sql": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "pred_sql": "SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer);"}
{"sample_id": 7035, "db_id": "concert_singer", "gold_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "pred_sql": "SELECT DISTINCT s.name, s.location \nFROM stadium s \nJOIN concert c ON s.stadium_id = c.stadium_id \nWHERE c.year IN ('2014', '2015') \nGROUP BY s.stadium_id \nHAVING COUNT(DISTINCT c.year) = 2;"}
{"sample_id": 6993, "db_id": "concert_singer", "gold_sql": "SELECT count(*) FROM singer", "pred_sql": "SELECT COUNT(*) AS total_singers FROM singer;"}
{"sample_id": 7031, "db_id": "concert_singer", "gold_sql": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "pred_sql": "SELECT DISTINCT singer.name FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = '2014';"}
{"sample_id": 7010, "db_id": "concert_singer", "gold_sql": "select avg(capacity) ,  max(capacity) from stadium", "pred_sql": "SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium;"}
{"sample_id": 7023, "db_id": "concert_singer", "gold_sql": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "pred_sql": "SELECT DISTINCT country FROM singer WHERE age > 40 UNION SELECT DISTINCT country FROM singer WHERE age < 30;"}
{"sample_id": 4144, "db_id": "film_rank", "gold_sql": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "pred_sql": "SELECT title, studio FROM film WHERE studio LIKE '%Universal%';"}
{"sample_id": 4134, "db_id": "film_rank", "gold_sql": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio", "pred_sql": "SELECT studio, COUNT(*) AS number_of_films FROM film GROUP BY studio;"}
{"sample_id": 4125, "db_id": "film_rank", "gold_sql": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995", "pred_sql": "SELECT DISTINCT f.director FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year = '1995';"}
{"sample_id": 4137, "db_id": "film_rank", "gold_sql": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2", "pred_sql": "SELECT studio FROM film GROUP BY studio HAVING COUNT(film_id) >= 2;"}
{"sample_id": 4124, "db_id": "film_rank", "gold_sql": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "pred_sql": "SELECT film.title, film_market_estimation.type FROM film JOIN film_market_estimation ON film.film_id = film_market_estimation.film_id;"}
{"sample_id": 4151, "db_id": "film_rank", "gold_sql": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "pred_sql": "SELECT title, director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation WHERE market_id IN (SELECT market_id FROM market WHERE country = 'China'));"}
{"sample_id": 4111, "db_id": "film_rank", "gold_sql": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "pred_sql": "SELECT low_estimate, high_estimate FROM film_market_estimation;"}
{"sample_id": 4152, "db_id": "film_rank", "gold_sql": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "pred_sql": "SELECT f.title, f.director \nFROM film f \nWHERE f.film_id NOT IN (\n    SELECT fme.film_id \n    FROM film_market_estimation fme \n    JOIN market m ON fme.market_id = m.market_id \n    WHERE m.country = 'China'\n);"}
{"sample_id": 4129, "db_id": "film_rank", "gold_sql": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "pred_sql": "SELECT DISTINCT market.country, film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id;"}
{"sample_id": 6604, "db_id": "train_station", "gold_sql": "SELECT name ,  service FROM train ORDER BY TIME", "pred_sql": "SELECT name, service FROM train ORDER BY time;"}
{"sample_id": 6592, "db_id": "train_station", "gold_sql": "SELECT count(*) FROM station", "pred_sql": "SELECT COUNT(*) AS total_stations FROM station;"}
{"sample_id": 6614, "db_id": "train_station", "gold_sql": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges", "pred_sql": "SELECT name, location FROM station ORDER BY CAST(annual_entry_exit AS INTEGER) + CAST(annual_interchanges AS INTEGER) DESC;"}
{"sample_id": 6603, "db_id": "train_station", "gold_sql": "SELECT count(*) FROM train", "pred_sql": "SELECT COUNT(*) AS number_of_trains FROM train;"}
{"sample_id": 31, "db_id": "farm", "gold_sql": "SELECT Official_Name FROM city ORDER BY Population DESC", "pred_sql": "SELECT official_name FROM city ORDER BY population DESC;"}
{"sample_id": 25, "db_id": "farm", "gold_sql": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000", "pred_sql": "SELECT AVG(working_horses) AS average_working_horses FROM farm WHERE total_horses > 5000;"}
{"sample_id": 43, "db_id": "farm", "gold_sql": "SELECT Status ,  avg(Population) FROM city GROUP BY Status", "pred_sql": "SELECT status, AVG(population) AS average_population FROM city GROUP BY status;"}
{"sample_id": 42, "db_id": "farm", "gold_sql": "SELECT Status ,  avg(Population) FROM city GROUP BY Status", "pred_sql": "SELECT status, AVG(population) AS average_population FROM city GROUP BY status;"}
{"sample_id": 32, "db_id": "farm", "gold_sql": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1", "pred_sql": "SELECT official_name, status FROM city WHERE population = (SELECT MAX(population) FROM city);"}
{"sample_id": 40, "db_id": "farm", "gold_sql": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000", "pred_sql": "SELECT fc.theme \nFROM farm_competition fc \nJOIN city c ON fc.host_city_id = c.city_id \nWHERE c.population > 1000;"}
{"sample_id": 49, "db_id": "farm", "gold_sql": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)", "pred_sql": "SELECT official_name FROM city WHERE city_id NOT IN (SELECT host_city_id FROM farm_competition)"}
{"sample_id": 44, "db_id": "farm", "gold_sql": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC", "pred_sql": "SELECT status, COUNT(*) as city_count FROM city GROUP BY status ORDER BY city_count DESC;"}
{"sample_id": 4848, "db_id": "local_govt_and_lot", "gold_sql": "SELECT max(date_moved_in) FROM Residents", "pred_sql": "SELECT MAX(date_moved_in) AS last_move_in_date FROM residents;"}
{"sample_id": 4847, "db_id": "local_govt_and_lot", "gold_sql": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations", "pred_sql": "SELECT organization_id FROM organizations WHERE parent_organization_id IS NULL;"}
{"sample_id": 4852, "db_id": "local_govt_and_lot", "gold_sql": "SELECT DISTINCT date_moved_in FROM residents", "pred_sql": "SELECT DISTINCT date_moved_in FROM residents;"}
{"sample_id": 4417, "db_id": "network_2", "gold_sql": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job", "pred_sql": "SELECT job, AVG(age) AS average_age FROM person WHERE gender = 'male' GROUP BY job;"}
{"sample_id": 4429, "db_id": "network_2", "gold_sql": "SELECT name FROM Person ORDER BY age DESC", "pred_sql": "SELECT name FROM person ORDER BY age DESC;"}
{"sample_id": 4433, "db_id": "network_2", "gold_sql": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'", "pred_sql": "SELECT p.name, p.age FROM person p JOIN personfriend pf1 ON p.name = pf1.friend JOIN personfriend pf2 ON p.name = pf2.friend WHERE pf1.name = 'Dan' AND pf2.name = 'Alice';"}
{"sample_id": 4416, "db_id": "network_2", "gold_sql": "SELECT avg(age) ,  job FROM Person GROUP BY job", "pred_sql": "SELECT job, AVG(age) AS average_age FROM person GROUP BY job;"}
{"sample_id": 4412, "db_id": "network_2", "gold_sql": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'", "pred_sql": "SELECT COUNT(*) FROM person WHERE job = 'engineer' AND age > '30';"}
{"sample_id": 4428, "db_id": "network_2", "gold_sql": "SELECT name ,  job FROM Person ORDER BY name", "pred_sql": "SELECT name, job FROM person ORDER BY name ASC;"}
{"sample_id": 4455, "db_id": "network_2", "gold_sql": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "pred_sql": "SELECT DISTINCT pf.name FROM personfriend pf JOIN person p ON pf.friend = p.name WHERE p.city = 'new york city';"}
{"sample_id": 4414, "db_id": "network_2", "gold_sql": "SELECT avg(age) ,  gender FROM Person GROUP BY gender", "pred_sql": "SELECT gender, AVG(age) AS average_age FROM person GROUP BY gender;"}
{"sample_id": 4392, "db_id": "network_2", "gold_sql": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'", "pred_sql": "SELECT COUNT(friend) AS friend_count FROM personfriend WHERE name = 'Dan';"}
{"sample_id": 4406, "db_id": "network_2", "gold_sql": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )", "pred_sql": "SELECT name FROM person WHERE gender = 'male' ORDER BY age ASC LIMIT 1;"}
{"sample_id": 4425, "db_id": "network_2", "gold_sql": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')", "pred_sql": "SELECT COUNT(*) FROM person WHERE age > (SELECT MAX(age) FROM person WHERE job = 'engineer');"}
{"sample_id": 4415, "db_id": "network_2", "gold_sql": "SELECT avg(age) ,  job FROM Person GROUP BY job", "pred_sql": "SELECT job, AVG(age) AS average_age FROM person GROUP BY job;"}
{"sample_id": 4424, "db_id": "network_2", "gold_sql": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age", "pred_sql": "SELECT DISTINCT p.name FROM person p WHERE p.age > (SELECT MIN(p2.age) FROM person p2 WHERE p2.job = 'engineer') ORDER BY p.age;"}
{"sample_id": 4400, "db_id": "network_2", "gold_sql": "SELECT count(DISTINCT job) FROM Person", "pred_sql": "SELECT COUNT(DISTINCT job) AS different_jobs FROM person;"}
{"sample_id": 4393, "db_id": "network_2", "gold_sql": "SELECT count(*) FROM Person WHERE gender  =  'female'", "pred_sql": "SELECT COUNT(*) AS female_count FROM person WHERE gender = 'female';"}
{"sample_id": 4458, "db_id": "network_2", "gold_sql": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)", "pred_sql": "SELECT DISTINCT pf.friend \nFROM personfriend pf \nJOIN person p ON pf.friend = p.name \nWHERE p.age < (SELECT AVG(CAST(age AS INTEGER)) FROM person)"}
{"sample_id": 4439, "db_id": "network_2", "gold_sql": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)", "pred_sql": "SELECT DISTINCT pf.name FROM personfriend pf JOIN person p ON pf.friend = p.name WHERE p.age > '40' AND p.age < '30';"}
{"sample_id": 4763, "db_id": "department_store", "gold_sql": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "pred_sql": "SELECT product_id, product_name FROM products WHERE product_price < 600 OR product_price > 900;"}
{"sample_id": 4775, "db_id": "department_store", "gold_sql": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "pred_sql": "SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code ORDER BY product_type_code;"}
{"sample_id": 4716, "db_id": "department_store", "gold_sql": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT c.customer_name, c.customer_phone, c.customer_email\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nGROUP BY c.customer_id\nORDER BY COUNT(co.order_id) DESC\nLIMIT 1;"}
{"sample_id": 4704, "db_id": "department_store", "gold_sql": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1", "pred_sql": "SELECT product_id, product_type_code FROM products ORDER BY product_price ASC LIMIT 1;"}
{"sample_id": 4726, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id", "pred_sql": "SELECT DISTINCT customer_name FROM customers INNER JOIN customer_orders ON customers.customer_id = customer_orders.customer_id WHERE order_status_code = 'Pending' ORDER BY customer_id;"}
{"sample_id": 4744, "db_id": "department_store", "gold_sql": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "pred_sql": "SELECT product_id, product_name FROM products WHERE product_price BETWEEN '600' AND '700';"}
{"sample_id": 4772, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "pred_sql": "SELECT DISTINCT suppliers.supplier_name, suppliers.supplier_phone \nFROM suppliers \nJOIN product_suppliers ON suppliers.supplier_id = product_suppliers.supplier_id \nJOIN products ON product_suppliers.product_id = products.product_id \nWHERE products.product_name LIKE '%red jeans%';"}
{"sample_id": 4777, "db_id": "department_store", "gold_sql": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date", "pred_sql": "SELECT order_id, customer_id FROM customer_orders WHERE order_status_code = 'Cancelled' ORDER BY order_date;"}
{"sample_id": 4783, "db_id": "department_store", "gold_sql": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"", "pred_sql": "SELECT s.staff_name, s.staff_gender \nFROM staff s \nJOIN staff_department_assignments sda ON s.staff_id = sda.staff_id \nWHERE sda.job_title_code = 'Sales Person' \nAND s.staff_id NOT IN (\n    SELECT sda2.staff_id \n    FROM staff_department_assignments sda2 \n    WHERE sda2.job_title_code = 'Clerical Staff'\n)"}
{"sample_id": 4754, "db_id": "department_store", "gold_sql": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1", "pred_sql": "SELECT staff_name FROM staff WHERE staff_id IN (SELECT staff_id FROM staff_department_assignments GROUP BY staff_id HAVING COUNT(DISTINCT job_title_code) > 1)"}
{"sample_id": 4774, "db_id": "department_store", "gold_sql": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "pred_sql": "SELECT product_type_code, MAX(product_price) AS highest_price, MIN(product_price) AS lowest_price FROM products GROUP BY product_type_code ORDER BY product_type_code ASC;"}
{"sample_id": 4768, "db_id": "department_store", "gold_sql": "SELECT max(customer_code) ,  min(customer_code) FROM Customers", "pred_sql": "SELECT MAX(customer_code) AS largest_customer_code, MIN(customer_code) AS smallest_customer_code FROM customers;"}
{"sample_id": 4759, "db_id": "department_store", "gold_sql": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers", "pred_sql": "SELECT customer_phone AS phone_number FROM customers UNION SELECT supplier_phone AS phone_number FROM suppliers;"}
{"sample_id": 4708, "db_id": "department_store", "gold_sql": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10", "pred_sql": "SELECT a.address_details FROM addresses a JOIN customer_addresses ca ON a.address_id = ca.address_id WHERE ca.customer_id = '10';"}
{"sample_id": 4780, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "pred_sql": "SELECT c.customer_name\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nJOIN order_items oi ON co.order_id = oi.order_id\nGROUP BY c.customer_id\nHAVING COUNT(DISTINCT oi.product_id) >= 3;"}
{"sample_id": 4773, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "pred_sql": "SELECT DISTINCT suppliers.supplier_name, suppliers.supplier_phone \nFROM suppliers \nJOIN product_suppliers ON suppliers.supplier_id = product_suppliers.supplier_id \nJOIN products ON product_suppliers.product_id = products.product_id \nWHERE products.product_name LIKE '%red jeans%';"}
{"sample_id": 4770, "db_id": "department_store", "gold_sql": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"", "pred_sql": "SELECT DISTINCT customers.customer_name \nFROM customers \nJOIN customer_orders ON customers.customer_id = customer_orders.customer_id \nJOIN order_items ON customer_orders.order_id = order_items.order_id \nJOIN products ON order_items.product_id = products.product_id \nWHERE products.product_name = 'keyboard';"}
{"sample_id": 6437, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"", "pred_sql": "SELECT budget_type_description FROM ref_budget_codes WHERE budget_type_code = 'ORG';"}
{"sample_id": 6436, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"", "pred_sql": "SELECT budget_type_description FROM ref_budget_codes WHERE budget_type_code = 'ORG';"}
{"sample_id": 6410, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code", "pred_sql": "SELECT document_type_code, COUNT(document_id) AS document_count FROM documents GROUP BY document_type_code;"}
{"sample_id": 6438, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) FROM Documents_with_expenses", "pred_sql": "SELECT COUNT(*) AS document_count FROM documents_with_expenses;"}
{"sample_id": 6405, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id", "pred_sql": "SELECT project_id, COUNT(document_id) AS document_count FROM documents GROUP BY project_id;"}
{"sample_id": 6441, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'", "pred_sql": "SELECT document_id FROM documents_with_expenses WHERE budget_type_code = 'SF';"}
{"sample_id": 6389, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID", "pred_sql": "SELECT a.statement_id, COUNT(a.account_id) AS account_count\nFROM accounts a\nGROUP BY a.statement_id;"}
{"sample_id": 6395, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "pred_sql": "SELECT ref_document_types.document_type_code, ref_document_types.document_type_name, ref_document_types.document_type_description \nFROM documents \nJOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code \nWHERE documents.document_name IN ('Noel CV', 'King Book');"}
{"sample_id": 6457, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )", "pred_sql": "SELECT COUNT(*) AS document_count FROM documents d LEFT JOIN documents_with_expenses de ON d.document_id = de.document_id WHERE de.document_id IS NULL;"}
{"sample_id": 6431, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"", "pred_sql": "SELECT projects.project_id, projects.project_details, documents.document_name, documents.document_description, documents.document_date, documents.other_details \nFROM projects \nJOIN documents ON projects.project_id = documents.project_id \nWHERE documents.document_name = 'King Book';"}
{"sample_id": 6433, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) FROM Ref_budget_codes", "pred_sql": "SELECT COUNT(*) AS budget_code_count FROM ref_budget_codes;"}
{"sample_id": 6400, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id", "pred_sql": "SELECT project_id, COUNT(document_id) AS document_count FROM documents WHERE document_type_code = 'BK' GROUP BY project_id;"}
{"sample_id": 6399, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"", "pred_sql": "SELECT document_id, document_name FROM documents WHERE document_type_code = 'BK';"}
{"sample_id": 6452, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses", "pred_sql": "SELECT documents.document_id \nFROM documents \nJOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code \nLEFT JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id \nWHERE ref_document_types.document_type_name = 'CV' \nAND documents_with_expenses.budget_type_code IS NULL;"}
{"sample_id": 6420, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"", "pred_sql": "SELECT document_type_description FROM ref_document_types WHERE document_type_name = 'Film';"}
{"sample_id": 6428, "db_id": "cre_Docs_and_Epenses", "gold_sql": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2", "pred_sql": "SELECT p.project_id, p.project_details \nFROM projects p \nJOIN documents d ON p.project_id = d.project_id \nGROUP BY p.project_id, p.project_details \nHAVING COUNT(d.document_id) >= 2;"}
{"sample_id": 6255, "db_id": "ship_1", "gold_sql": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "pred_sql": "SELECT ship.name FROM ship JOIN captain ON ship.ship_id = captain.ship_id ORDER BY captain.age ASC LIMIT 1;"}
{"sample_id": 6219, "db_id": "ship_1", "gold_sql": "SELECT name FROM captain ORDER BY age DESC", "pred_sql": "SELECT name FROM captain ORDER BY age DESC;"}
{"sample_id": 6232, "db_id": "ship_1", "gold_sql": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "pred_sql": "SELECT DISTINCT c.rank FROM captain c JOIN ship s ON c.ship_id = s.ship_id WHERE s.class IN ('Cutter', 'Armed schooner');"}
{"sample_id": 6214, "db_id": "ship_1", "gold_sql": "SELECT count(DISTINCT rank) FROM captain", "pred_sql": "SELECT COUNT(DISTINCT rank) AS different_ranks FROM captain;"}
{"sample_id": 6227, "db_id": "ship_1", "gold_sql": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "pred_sql": "SELECT name FROM captain WHERE rank IN ('Midshipman', 'Lieutenant');"}
{"sample_id": 6257, "db_id": "ship_1", "gold_sql": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "pred_sql": "SELECT ship.name, ship.flag FROM ship LEFT JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.rank IS NULL OR captain.rank != 'Midshipman';"}
{"sample_id": 6241, "db_id": "ship_1", "gold_sql": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "pred_sql": "SELECT flag, COUNT(*) AS number_of_ships FROM ship GROUP BY flag;"}
{"sample_id": 6258, "db_id": "ship_1", "gold_sql": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "pred_sql": "SELECT ship.name, ship.flag FROM ship LEFT JOIN captain ON ship.ship_id = captain.ship_id WHERE captain.rank IS NULL OR captain.rank != 'Midshipman';"}
{"sample_id": 6233, "db_id": "ship_1", "gold_sql": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "pred_sql": "SELECT DISTINCT c.rank FROM captain c LEFT JOIN ship s ON c.ship_id = s.ship_id WHERE s.class = 'Third-rate ship of the line' AND c.captain_id IS NULL;"}
{"sample_id": 4931, "db_id": "store_product", "gold_sql": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "pred_sql": "SELECT product.product \nFROM product \nWHERE product.max_page_size != (SELECT max_page_size \n                                 FROM product \n                                 GROUP BY max_page_size \n                                 ORDER BY COUNT(*) DESC \n                                 LIMIT 1);"}
{"sample_id": 4908, "db_id": "store_product", "gold_sql": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE", "pred_sql": "SELECT type, COUNT(*) AS store_count FROM store GROUP BY type;"}
{"sample_id": 4910, "db_id": "store_product", "gold_sql": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"", "pred_sql": "SELECT store.store_name FROM store JOIN store_district ON store.store_id = store_district.store_id JOIN district ON store_district.district_id = district.district_id WHERE district.district_name = 'Khanewal';"}
{"sample_id": 4906, "db_id": "store_product", "gold_sql": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3", "pred_sql": "SELECT SUM(city_population) AS total_population FROM district WHERE city_area IN (SELECT city_area FROM district ORDER BY city_area DESC LIMIT 3)"}
{"sample_id": 4916, "db_id": "store_product", "gold_sql": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city", "pred_sql": "SELECT d.headquartered_city, COUNT(s.store_id) AS store_count \nFROM store s \nJOIN store_district sd ON s.store_id = sd.store_id \nJOIN district d ON sd.district_id = d.district_id \nGROUP BY d.headquartered_city;"}
{"sample_id": 4934, "db_id": "store_product", "gold_sql": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)", "pred_sql": "SELECT SUM(city_population) AS total_population\nFROM district\nWHERE city_area > (SELECT AVG(city_area) FROM district);"}
{"sample_id": 4897, "db_id": "store_product", "gold_sql": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "pred_sql": "SELECT district_name, city_population FROM district WHERE city_population BETWEEN '200000' AND '2000000';"}
{"sample_id": 4907, "db_id": "store_product", "gold_sql": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE", "pred_sql": "SELECT type, COUNT(*) AS number_of_stores FROM store GROUP BY type;"}
{"sample_id": 3113, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id", "pred_sql": "SELECT a.line_1, AVG(sa.monthly_rental) AS average_monthly_rental\nFROM addresses a\nJOIN student_addresses sa ON a.address_id = sa.address_id\nGROUP BY a.line_1;"}
{"sample_id": 3118, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id", "pred_sql": "SELECT DISTINCT a.line_1\nFROM addresses a\nJOIN students s ON a.address_id = s.address_id\nJOIN teachers t ON a.address_id = t.address_id;"}
{"sample_id": 3081, "db_id": "behavior_monitoring", "gold_sql": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\"", "pred_sql": "SELECT COUNT(*) AS address_count FROM addresses WHERE zip_postcode = '197';"}
{"sample_id": 3103, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT ref_incident_type.incident_type_code, ref_incident_type.incident_type_description\nFROM behavior_incident\nJOIN ref_incident_type ON behavior_incident.incident_type_code = ref_incident_type.incident_type_code\nGROUP BY behavior_incident.incident_type_code\nORDER BY COUNT(behavior_incident.incident_id) DESC\nLIMIT 1;"}
{"sample_id": 3083, "db_id": "behavior_monitoring", "gold_sql": "SELECT DISTINCT detention_type_code FROM Detention", "pred_sql": "SELECT DISTINCT detention_type_code FROM ref_detention_type;"}
{"sample_id": 3110, "db_id": "behavior_monitoring", "gold_sql": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1", "pred_sql": "SELECT s.cell_mobile_number \nFROM students s \nJOIN student_addresses sa ON s.student_id = sa.student_id \nWHERE sa.monthly_rental = (SELECT MIN(monthly_rental) FROM student_addresses);"}
{"sample_id": 3101, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "pred_sql": "SELECT s.student_id, s.first_name\nFROM students s\nJOIN student_addresses sa ON s.student_id = sa.student_id\nGROUP BY s.student_id, s.first_name\nORDER BY AVG(sa.monthly_rental) DESC\nLIMIT 1;"}
{"sample_id": 3105, "db_id": "behavior_monitoring", "gold_sql": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"", "pred_sql": "SELECT an.date_of_notes \nFROM assessment_notes an \nJOIN students s ON an.student_id = s.student_id \nWHERE s.first_name = 'Fanny';"}
{"sample_id": 2409, "db_id": "candidate_poll", "gold_sql": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex", "pred_sql": "SELECT p.name, c.oppose_rate, p.sex \nFROM candidate c \nJOIN people p ON c.people_id = p.people_id \nWHERE (p.sex, c.oppose_rate) IN (\n    SELECT p2.sex, MIN(c2.oppose_rate) \n    FROM candidate c2 \n    JOIN people p2 ON c2.people_id = p2.people_id \n    GROUP BY p2.sex\n)"}
{"sample_id": 2387, "db_id": "candidate_poll", "gold_sql": "SELECT count(*) FROM candidate", "pred_sql": "SELECT COUNT(*) AS candidate_count FROM candidate;"}
{"sample_id": 2390, "db_id": "candidate_poll", "gold_sql": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT poll_source, COUNT(candidate_id) AS candidate_count\nFROM candidate\nGROUP BY poll_source\nORDER BY candidate_count DESC\nLIMIT 1;"}
{"sample_id": 2400, "db_id": "candidate_poll", "gold_sql": "SELECT name FROM people ORDER BY date_of_birth", "pred_sql": "SELECT name FROM people ORDER BY date_of_birth;"}
{"sample_id": 2388, "db_id": "candidate_poll", "gold_sql": "SELECT count(*) FROM candidate", "pred_sql": "SELECT COUNT(*) AS candidate_count FROM candidate;"}
{"sample_id": 2426, "db_id": "candidate_poll", "gold_sql": "SELECT * FROM people", "pred_sql": "SELECT * FROM people;"}
{"sample_id": 2425, "db_id": "candidate_poll", "gold_sql": "SELECT * FROM people", "pred_sql": "SELECT * FROM people;"}
{"sample_id": 2398, "db_id": "candidate_poll", "gold_sql": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1", "pred_sql": "SELECT poll_source FROM candidate WHERE oppose_rate IS NOT NULL;"}
{"sample_id": 5353, "db_id": "tracking_software_problems", "gold_sql": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "pred_sql": "SELECT DISTINCT staff.staff_first_name, staff.staff_last_name \nFROM staff \nJOIN problem_log ON staff.staff_id = problem_log.assigned_to_staff_id \nWHERE problem_log.problem_id = 1;"}
{"sample_id": 5387, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"", "pred_sql": "SELECT p.problem_id \nFROM problems p \nJOIN product pr ON p.product_id = pr.product_id \nWHERE pr.product_name = 'voluptatem' \nAND p.date_problem_reported > '1995-01-01';"}
{"sample_id": 5378, "db_id": "tracking_software_problems", "gold_sql": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"", "pred_sql": "SELECT problem_id FROM problems WHERE reported_by_staff_id IN (SELECT staff_id FROM staff WHERE staff_first_name IN ('Dameon', 'Jolie') AND staff_last_name IN ('Frami', 'Weber'));"}
{"sample_id": 5364, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"", "pred_sql": "SELECT problem_id FROM problems WHERE reported_by_staff_id IN (SELECT staff_id FROM staff WHERE staff_last_name = 'Bosco');"}
{"sample_id": 5357, "db_id": "tracking_software_problems", "gold_sql": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\"", "pred_sql": "SELECT COUNT(*) AS problem_count FROM problems WHERE product_id = (SELECT product_id FROM product WHERE product_name = 'voluptatem');"}
{"sample_id": 5370, "db_id": "tracking_software_problems", "gold_sql": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "pred_sql": "SELECT product.product_id, COUNT(problems.problem_id) AS problem_count\nFROM product\nJOIN problems ON product.product_id = problems.product_id\nGROUP BY product.product_id\nHAVING COUNT(problems.problem_id) > 0;"}
{"sample_id": 5366, "db_id": "tracking_software_problems", "gold_sql": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"", "pred_sql": "SELECT problem_id FROM problems WHERE date_problem_reported > '1978-06-26';"}
{"sample_id": 5348, "db_id": "tracking_software_problems", "gold_sql": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1", "pred_sql": "SELECT problem_log_id, problem_id FROM problem_log ORDER BY log_entry_date ASC LIMIT 1;"}
{"sample_id": 5381, "db_id": "tracking_software_problems", "gold_sql": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )", "pred_sql": "SELECT problem_id FROM problems WHERE date_problem_reported < (SELECT MIN(date_problem_reported) FROM problems WHERE reported_by_staff_id = (SELECT staff_id FROM staff WHERE staff_first_name = 'Lysanne' AND staff_last_name = 'Turcotte'))"}
{"sample_id": 2136, "db_id": "local_govt_in_alabama", "gold_sql": "SELECT service_type_code FROM services ORDER BY service_type_code", "pred_sql": "SELECT DISTINCT service_type_code FROM services ORDER BY service_type_code ASC;"}
{"sample_id": 2132, "db_id": "local_govt_in_alabama", "gold_sql": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1", "pred_sql": "SELECT e.event_id, e.event_details FROM events e JOIN participants_in_events pie ON e.event_id = pie.event_id GROUP BY e.event_id HAVING COUNT(pie.participant_id) > 1;"}
{"sample_id": 2134, "db_id": "local_govt_in_alabama", "gold_sql": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants", "pred_sql": "SELECT participant_id, participant_type_code, participant_details FROM participants;"}
{"sample_id": 4592, "db_id": "entertainment_awards", "gold_sql": "SELECT Name FROM artwork ORDER BY Name ASC", "pred_sql": "SELECT name FROM artwork ORDER BY name ASC;"}
{"sample_id": 4609, "db_id": "entertainment_awards", "gold_sql": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)", "pred_sql": "SELECT name FROM artwork WHERE artwork_id NOT IN (SELECT artwork_id FROM nomination);"}
{"sample_id": 4602, "db_id": "entertainment_awards", "gold_sql": "SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID ORDER BY T3.Year", "pred_sql": "SELECT artwork.name FROM artwork JOIN nomination ON artwork.artwork_id = nomination.artwork_id ORDER BY nomination.festival_id;"}
{"sample_id": 4600, "db_id": "entertainment_awards", "gold_sql": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID", "pred_sql": "SELECT artwork.name, festival_detail.festival_name FROM nomination JOIN artwork ON nomination.artwork_id = artwork.artwork_id JOIN festival_detail ON nomination.festival_id = festival_detail.festival_id;"}
{"sample_id": 5969, "db_id": "game_1", "gold_sql": "SELECT gname ,  gtype FROM Video_games ORDER BY gname", "pred_sql": "SELECT gname, gtype FROM video_games ORDER BY gname ASC;"}
{"sample_id": 6021, "db_id": "game_1", "gold_sql": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"", "pred_sql": "SELECT stuid FROM student WHERE sex = 'male' AND stuid NOT IN (SELECT stuid FROM sportsinfo WHERE sportname = 'football');"}
{"sample_id": 6035, "db_id": "game_1", "gold_sql": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid", "pred_sql": "SELECT student.stuid, SUM(plays_games.hours_played) AS total_hours_played FROM student LEFT JOIN plays_games ON student.stuid = plays_games.stuid GROUP BY student.stuid;"}
{"sample_id": 6025, "db_id": "game_1", "gold_sql": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20", "pred_sql": "SELECT SUM(hoursperweek) AS total_hours_per_week, SUM(gamesplayed) AS total_games_played \nFROM sportsinfo \nJOIN student ON sportsinfo.stuid = student.stuid \nWHERE age < '20';"}
{"sample_id": 6006, "db_id": "game_1", "gold_sql": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID", "pred_sql": "SELECT s.stuid, COUNT(si.sportname) AS number_of_sports, SUM(si.gamesplayed) AS total_games_played\nFROM student s\nLEFT JOIN sportsinfo si ON s.stuid = si.stuid\nGROUP BY s.stuid;"}
{"sample_id": 5963, "db_id": "game_1", "gold_sql": "SELECT count(*) FROM Video_games", "pred_sql": "SELECT COUNT(*) AS total_video_games FROM video_games;"}
{"sample_id": 5983, "db_id": "game_1", "gold_sql": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"", "pred_sql": "SELECT stuid FROM student WHERE city_code = 'CHI';"}
{"sample_id": 6033, "db_id": "game_1", "gold_sql": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid", "pred_sql": "SELECT gameid, SUM(hours_played) AS total_hours_played FROM plays_games GROUP BY gameid;"}
{"sample_id": 5986, "db_id": "game_1", "gold_sql": "SELECT Fname FROM Student WHERE Major  =  600", "pred_sql": "SELECT fname FROM student WHERE major = '600';"}
{"sample_id": 5967, "db_id": "game_1", "gold_sql": "SELECT DISTINCT gtype FROM Video_games", "pred_sql": "SELECT DISTINCT gtype FROM video_games;"}
{"sample_id": 5990, "db_id": "game_1", "gold_sql": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2", "pred_sql": "SELECT advisor FROM student GROUP BY advisor HAVING COUNT(stuid) >= 2;"}
{"sample_id": 5970, "db_id": "game_1", "gold_sql": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"", "pred_sql": "SELECT * FROM video_games WHERE gtype = 'Collectible card game';"}
{"sample_id": 6036, "db_id": "game_1", "gold_sql": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1", "pred_sql": "SELECT g.gname FROM video_games g JOIN plays_games p ON g.gameid = p.gameid GROUP BY g.gname ORDER BY SUM(p.hours_played) DESC LIMIT 1;"}
{"sample_id": 5996, "db_id": "game_1", "gold_sql": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "pred_sql": "SELECT stuid FROM sportsinfo WHERE onscholarship = 'yes';"}
{"sample_id": 5974, "db_id": "game_1", "gold_sql": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"", "pred_sql": "SELECT COUNT(*) FROM video_games WHERE gtype = 'Massively multiplayer online game';"}
{"sample_id": 6001, "db_id": "game_1", "gold_sql": "SELECT sum(gamesplayed) FROM Sportsinfo", "pred_sql": "SELECT SUM(gamesplayed) AS total_games_played FROM sportsinfo;"}
{"sample_id": 6043, "db_id": "game_1", "gold_sql": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "pred_sql": "SELECT fname, lname FROM student WHERE stuid IN (SELECT stuid FROM sportsinfo WHERE sportname IN ('Football', 'Lacrosse'));"}
{"sample_id": 2361, "db_id": "csu_1", "gold_sql": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000", "pred_sql": "SELECT COUNT(degrees) AS total_degrees FROM degrees JOIN campuses ON degrees.campus = campuses.id WHERE campuses.campus = 'San Jose State University' AND degrees.year = '2000';"}
{"sample_id": 2368, "db_id": "csu_1", "gold_sql": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"", "pred_sql": "SELECT faculty FROM faculty JOIN campuses ON faculty.campus = campuses.id WHERE campuses.campus = 'Long Beach State University' AND faculty.year = 2002;"}
{"sample_id": 2381, "db_id": "csu_1", "gold_sql": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000", "pred_sql": "SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Francisco State University' AND csu_fees.year = 2000;"}
{"sample_id": 2364, "db_id": "csu_1", "gold_sql": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001", "pred_sql": "SELECT degrees FROM degrees JOIN campuses ON degrees.campus = campuses.id WHERE campuses.campus = 'San Francisco State University' AND degrees.year = '2001';"}
{"sample_id": 2354, "db_id": "csu_1", "gold_sql": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")", "pred_sql": "SELECT c.campus \nFROM campuses c \nJOIN faculty f ON c.id = f.campus \nWHERE f.year = 2002 \nAND f.faculty > (SELECT MAX(f2.faculty) \n                 FROM faculty f2 \n                 JOIN campuses c2 ON f2.campus = c2.id \n                 WHERE c2.county = 'Orange')"}
{"sample_id": 2379, "db_id": "csu_1", "gold_sql": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"", "pred_sql": "SELECT SUM(graduate) AS total_graduates FROM discipline_enrollments WHERE campus = (SELECT id FROM campuses WHERE campus = 'San Francisco State University') AND year = '2004';"}
{"sample_id": 2337, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950", "pred_sql": "SELECT campus FROM campuses WHERE county = 'Los Angeles' AND year > '1950';"}
{"sample_id": 2385, "db_id": "csu_1", "gold_sql": "SELECT count(*) FROM campuses", "pred_sql": "SELECT COUNT(*) AS campus_count FROM campuses;"}
{"sample_id": 2343, "db_id": "csu_1", "gold_sql": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1", "pred_sql": "SELECT campus, faculty FROM faculty WHERE year = 2003 ORDER BY faculty DESC LIMIT 1;"}
{"sample_id": 2360, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "pred_sql": "SELECT campus FROM campuses WHERE county = 'Los Angeles';"}
{"sample_id": 2321, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE YEAR  =  1958", "pred_sql": "SELECT * FROM campuses WHERE year = '1958';"}
{"sample_id": 2318, "db_id": "csu_1", "gold_sql": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "pred_sql": "SELECT campus FROM campuses WHERE county = 'Los Angeles';"}
{"sample_id": 2365, "db_id": "csu_1", "gold_sql": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002", "pred_sql": "SELECT SUM(faculty) AS total_faculty FROM faculty WHERE year = 2002;"}
{"sample_id": 2329, "db_id": "csu_1", "gold_sql": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996", "pred_sql": "SELECT csu_fees.campusfee FROM csu_fees JOIN campuses ON csu_fees.campus = campuses.id WHERE campuses.campus = 'San Jose State University' AND csu_fees.year = 1996;"}
{"sample_id": 6505, "db_id": "scientist_1", "gold_sql": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)", "pred_sql": "SELECT name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM assignedto WHERE project = (SELECT code FROM projects ORDER BY hours DESC LIMIT 1));"}
{"sample_id": 6479, "db_id": "scientist_1", "gold_sql": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'", "pred_sql": "SELECT projects.name FROM projects JOIN assignedto ON projects.code = assignedto.project JOIN scientists ON assignedto.scientist = scientists.ssn WHERE scientists.name LIKE '%Smith%';"}
{"sample_id": 6502, "db_id": "scientist_1", "gold_sql": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)", "pred_sql": "SELECT COUNT(*) AS num_scientists_not_assigned FROM scientists WHERE ssn NOT IN (SELECT scientist FROM assignedto);"}
{"sample_id": 6486, "db_id": "scientist_1", "gold_sql": "SELECT name FROM scientists ORDER BY name", "pred_sql": "SELECT name FROM scientists ORDER BY name ASC;"}
{"sample_id": 6463, "db_id": "scientist_1", "gold_sql": "SELECT count(*) FROM scientists", "pred_sql": "SELECT COUNT(*) AS scientist_count FROM scientists;"}
{"sample_id": 6497, "db_id": "scientist_1", "gold_sql": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn", "pred_sql": "SELECT DISTINCT scientists.name FROM scientists JOIN assignedto ON scientists.ssn = assignedto.scientist;"}
{"sample_id": 6478, "db_id": "scientist_1", "gold_sql": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'", "pred_sql": "SELECT projects.name FROM projects JOIN assignedto ON projects.code = assignedto.project JOIN scientists ON assignedto.scientist = scientists.ssn WHERE scientists.name LIKE '%Smith%';"}
{"sample_id": 6489, "db_id": "scientist_1", "gold_sql": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name", "pred_sql": "SELECT projects.name, COUNT(assignedto.scientist) AS scientist_count \nFROM projects \nLEFT JOIN assignedto ON projects.code = assignedto.project \nGROUP BY projects.code;"}
{"sample_id": 6509, "db_id": "scientist_1", "gold_sql": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)", "pred_sql": "SELECT p.name AS project_name, s.name AS scientist_name \nFROM projects p \nJOIN assignedto a ON p.code = a.project \nJOIN scientists s ON a.scientist = s.ssn \nWHERE p.hours = (SELECT MIN(hours) FROM projects)"}
{"sample_id": 290, "db_id": "twitter_1", "gold_sql": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1", "pred_sql": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1;"}
{"sample_id": 284, "db_id": "twitter_1", "gold_sql": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000", "pred_sql": "SELECT name, email FROM user_profiles WHERE followers > 1000;"}
{"sample_id": 274, "db_id": "twitter_1", "gold_sql": "SELECT email FROM user_profiles WHERE name  =  'Mary'", "pred_sql": "SELECT email FROM user_profiles WHERE name = 'Mary';"}
{"sample_id": 293, "db_id": "twitter_1", "gold_sql": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5", "pred_sql": "SELECT up.name FROM user_profiles up JOIN follows f ON up.uid = f.f1 GROUP BY up.uid ORDER BY COUNT(f.f2) DESC LIMIT 5;"}
{"sample_id": 298, "db_id": "twitter_1", "gold_sql": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)", "pred_sql": "SELECT AVG(followers) AS average_followers FROM user_profiles WHERE uid NOT IN (SELECT DISTINCT uid FROM tweets);"}
{"sample_id": 7683, "db_id": "voter_1", "gold_sql": "SELECT max(area_code) ,  min(area_code) FROM area_code_state", "pred_sql": "SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM area_code_state;", "token_usage": {"tokens": 522, "cost": 0.00013005}}
{"sample_id": 7686, "db_id": "voter_1", "gold_sql": "SELECT DISTINCT state ,  created FROM votes", "pred_sql": "SELECT DISTINCT state, created FROM votes;", "token_usage": {"tokens": 521, "cost": 0.000129}}
{"sample_id": 7685, "db_id": "voter_1", "gold_sql": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "pred_sql": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway';", "token_usage": {"tokens": 505, "cost": 0.00011714999999999997}}
{"sample_id": 1855, "db_id": "wrestler", "gold_sql": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"", "pred_sql": "SELECT e.elimination_move FROM elimination e JOIN wrestler w ON e.wrestler_id = w.wrestler_id WHERE e.team = (SELECT team FROM wrestler WHERE name = 'Orton')"}
{"sample_id": 1866, "db_id": "wrestler", "gold_sql": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3", "pred_sql": "SELECT team, COUNT(*) as elimination_count FROM elimination GROUP BY team HAVING COUNT(*) > 3;"}
{"sample_id": 1853, "db_id": "wrestler", "gold_sql": "SELECT Name ,  LOCATION FROM wrestler", "pred_sql": "SELECT name, location FROM wrestler;"}
{"sample_id": 1877, "db_id": "wrestler", "gold_sql": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)", "pred_sql": "SELECT name FROM wrestler WHERE wrestler_id NOT IN (SELECT wrestler_id FROM elimination)"}
{"sample_id": 1858, "db_id": "wrestler", "gold_sql": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC", "pred_sql": "SELECT w.name, e.team FROM wrestler w JOIN elimination e ON w.wrestler_id = e.wrestler_id ORDER BY w.days_held DESC;"}
{"sample_id": 1861, "db_id": "wrestler", "gold_sql": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1", "pred_sql": "SELECT e.time FROM elimination e JOIN wrestler w ON e.wrestler_id = w.wrestler_id WHERE w.days_held = (SELECT MAX(days_held) FROM wrestler);"}
{"sample_id": 1881, "db_id": "wrestler", "gold_sql": "SELECT COUNT (DISTINCT team) FROM elimination", "pred_sql": "SELECT COUNT(DISTINCT team) AS different_teams FROM elimination;"}
{"sample_id": 1857, "db_id": "wrestler", "gold_sql": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "pred_sql": "SELECT wrestler.name, elimination.elimination_move FROM wrestler JOIN elimination ON wrestler.wrestler_id = elimination.wrestler_id;"}
{"sample_id": 6211, "db_id": "roller_coaster", "gold_sql": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )", "pred_sql": "SELECT COUNT(DISTINCT c.country_id) AS country_count\nFROM country c\nLEFT JOIN roller_coaster rc ON c.country_id = rc.country_id\nWHERE rc.length IS NULL OR rc.length <= '3000'"}
{"sample_id": 6212, "db_id": "roller_coaster", "gold_sql": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55", "pred_sql": "SELECT c.name, c.area, c.population \nFROM country c \nJOIN roller_coaster r ON c.country_id = r.country_id \nWHERE r.speed > (SELECT AVG(speed) FROM roller_coaster) \nGROUP BY c.country_id;"}
{"sample_id": 6209, "db_id": "roller_coaster", "gold_sql": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1", "pred_sql": "SELECT c.name, c.population \nFROM country c \nJOIN roller_coaster r ON c.country_id = r.country_id \nORDER BY r.height DESC \nLIMIT 1;"}
{"sample_id": 4038, "db_id": "student_1", "gold_sql": "SELECT DISTINCT classroom FROM list WHERE grade  =  5", "pred_sql": "SELECT DISTINCT classroom FROM list WHERE grade = '5';"}
{"sample_id": 4045, "db_id": "student_1", "gold_sql": "SELECT lastname FROM teachers WHERE classroom  =  109", "pred_sql": "SELECT lastname FROM teachers WHERE classroom = '109';"}
{"sample_id": 4057, "db_id": "student_1", "gold_sql": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"", "pred_sql": "SELECT teachers.lastname FROM teachers JOIN list ON teachers.classroom = list.classroom WHERE list.firstname = 'TAMI' AND list.lastname = 'GELL';"}
{"sample_id": 4075, "db_id": "student_1", "gold_sql": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom", "pred_sql": "SELECT classroom, COUNT(DISTINCT grade) AS number_of_grades FROM list GROUP BY classroom;"}
{"sample_id": 4032, "db_id": "student_1", "gold_sql": "SELECT DISTINCT grade FROM list WHERE classroom  =  103", "pred_sql": "SELECT grade FROM list WHERE classroom = '103';"}
{"sample_id": 4046, "db_id": "student_1", "gold_sql": "SELECT lastname FROM teachers WHERE classroom  =  109", "pred_sql": "SELECT lastname FROM teachers WHERE classroom = '109';"}
{"sample_id": 4055, "db_id": "student_1", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "pred_sql": "SELECT teachers.firstname, teachers.lastname FROM teachers JOIN list ON teachers.classroom = list.classroom WHERE list.firstname = 'EVELINA' AND list.lastname = 'BROMLEY';"}
{"sample_id": 4024, "db_id": "student_1", "gold_sql": "SELECT lastname FROM list WHERE classroom  =  111", "pred_sql": "SELECT lastname FROM list WHERE classroom = '111';"}
{"sample_id": 4036, "db_id": "student_1", "gold_sql": "SELECT DISTINCT classroom FROM list WHERE grade  =  4", "pred_sql": "SELECT DISTINCT classroom FROM list WHERE grade = '4';"}
{"sample_id": 4061, "db_id": "student_1", "gold_sql": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\"", "pred_sql": "SELECT COUNT(s.firstname) AS student_count FROM list s JOIN teachers t ON s.classroom = t.classroom WHERE t.firstname = 'KAWA' AND t.lastname = 'GORDON';"}
{"sample_id": 4087, "db_id": "student_1", "gold_sql": "SELECT count(*) ,  classroom FROM list GROUP BY classroom", "pred_sql": "SELECT classroom, COUNT(*) AS student_count FROM list GROUP BY classroom;"}
{"sample_id": 4082, "db_id": "student_1", "gold_sql": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom", "pred_sql": "SELECT classroom, COUNT(*) AS student_count FROM list WHERE grade = '0' GROUP BY classroom;"}
{"sample_id": 4048, "db_id": "student_1", "gold_sql": "SELECT DISTINCT firstname ,  lastname FROM teachers", "pred_sql": "SELECT firstname, lastname FROM teachers;"}
{"sample_id": 15, "db_id": "department_management", "gold_sql": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'", "pred_sql": "SELECT head_id, name FROM head WHERE name LIKE '%Ha%';"}
{"sample_id": 4, "db_id": "department_management", "gold_sql": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15", "pred_sql": "SELECT AVG(num_employees) AS average_employees FROM department WHERE ranking BETWEEN '10' AND '15';"}
{"sample_id": 7, "db_id": "department_management", "gold_sql": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3", "pred_sql": "SELECT born_state FROM head GROUP BY born_state HAVING COUNT(head_id) >= 3;"}
{"sample_id": 4487, "db_id": "decoration_competition", "gold_sql": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\"", "pred_sql": "SELECT DISTINCT c.leader_name FROM college c JOIN member m ON c.college_id = m.college_id WHERE m.country = 'Canada';"}
{"sample_id": 4482, "db_id": "decoration_competition", "gold_sql": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT country, COUNT(*) as count FROM member GROUP BY country ORDER BY count DESC LIMIT 1;"}
{"sample_id": 4486, "db_id": "decoration_competition", "gold_sql": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC", "pred_sql": "SELECT member.name, college.college_location FROM member JOIN college ON member.college_id = college.college_id ORDER BY member.name ASC;"}
{"sample_id": 5065, "db_id": "device", "gold_sql": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT shop.shop_name\nFROM shop\nJOIN stock ON shop.shop_id = stock.shop_id\nGROUP BY shop.shop_id\nORDER BY COUNT(DISTINCT stock.device_id) DESC\nLIMIT 1;"}
{"sample_id": 5069, "db_id": "device", "gold_sql": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform", "pred_sql": "SELECT software_platform, COUNT(device_id) AS device_count FROM device GROUP BY software_platform;"}
{"sample_id": 5075, "db_id": "device", "gold_sql": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)", "pred_sql": "SELECT shop.shop_name FROM shop LEFT JOIN stock ON shop.shop_id = stock.shop_id WHERE stock.device_id IS NULL;"}
{"sample_id": 5059, "db_id": "device", "gold_sql": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1", "pred_sql": "SELECT shop_name FROM shop WHERE open_year = (SELECT MAX(open_year) FROM shop);"}
{"sample_id": 5079, "db_id": "device", "gold_sql": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)", "pred_sql": "SELECT DISTINCT d.carrier FROM device d LEFT JOIN stock s ON d.device_id = s.device_id WHERE s.device_id IS NULL;"}
{"sample_id": 5074, "db_id": "device", "gold_sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT software_platform, COUNT(*) as platform_count FROM device GROUP BY software_platform ORDER BY platform_count DESC LIMIT 1;"}
{"sample_id": 5071, "db_id": "device", "gold_sql": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC", "pred_sql": "SELECT software_platform, COUNT(*) as platform_count FROM device GROUP BY software_platform ORDER BY platform_count DESC;"}
{"sample_id": 5077, "db_id": "device", "gold_sql": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008", "pred_sql": "SELECT DISTINCT s1.location FROM shop s1 JOIN shop s2 ON s1.location = s2.location WHERE s1.open_year > 2012 AND s2.open_year < 2008;"}
{"sample_id": 3899, "db_id": "hospital_1", "gold_sql": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "pred_sql": "SELECT p.name, p.phone FROM patient p JOIN appointment a ON p.ssn = a.patient GROUP BY p.ssn HAVING COUNT(a.appointmentid) > 1;"}
{"sample_id": 3941, "db_id": "hospital_1", "gold_sql": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1", "pred_sql": "SELECT p.name, u.dateundergoes FROM patient p JOIN undergoes u ON p.ssn = u.patient ORDER BY u.dateundergoes DESC LIMIT 1;"}
{"sample_id": 3969, "db_id": "hospital_1", "gold_sql": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "pred_sql": "SELECT AVG(p.cost) AS average_cost\nFROM procedures p\nJOIN trained_in t ON p.code = t.treatment\nJOIN physician ph ON t.physician = ph.employeeid\nWHERE ph.name = 'John Wen';"}
{"sample_id": 3926, "db_id": "hospital_1", "gold_sql": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor", "pred_sql": "SELECT blockfloor, COUNT(roomnumber) AS room_count FROM room GROUP BY blockfloor;"}
{"sample_id": 3960, "db_id": "hospital_1", "gold_sql": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "pred_sql": "SELECT MAX(cost) AS highest_cost, MIN(cost) AS lowest_cost, AVG(cost) AS average_cost FROM procedures;"}
{"sample_id": 3985, "db_id": "hospital_1", "gold_sql": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )", "pred_sql": "SELECT COUNT(DISTINCT p.ssn) AS number_of_patients_not_using_procrastin_x\nFROM patient p\nLEFT JOIN prescribes pr ON p.ssn = pr.patient\nLEFT JOIN medication m ON pr.medication = m.code\nWHERE m.name != 'Procrastin-X' OR m.name IS NULL;"}
{"sample_id": 3978, "db_id": "hospital_1", "gold_sql": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "pred_sql": "SELECT procedures.name, procedures.cost \nFROM procedures \nJOIN trained_in ON procedures.code = trained_in.treatment \nJOIN physician ON trained_in.physician = physician.employeeid \nWHERE procedures.cost < 5000 AND physician.name = 'John Wen';"}
{"sample_id": 3989, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse", "pred_sql": "SELECT nurse.name FROM nurse JOIN on_call ON nurse.employeeid = on_call.nurse;"}
{"sample_id": 3947, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID", "pred_sql": "SELECT DISTINCT nurse.name FROM nurse JOIN undergoes ON nurse.employeeid = undergoes.assistingnurse;"}
{"sample_id": 3965, "db_id": "hospital_1", "gold_sql": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "pred_sql": "SELECT DISTINCT physician.name \nFROM physician \nJOIN trained_in ON physician.employeeid = trained_in.physician \nJOIN procedures ON trained_in.treatment = procedures.code \nWHERE procedures.cost > 5000;"}
{"sample_id": 3975, "db_id": "hospital_1", "gold_sql": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "pred_sql": "SELECT procedures.name \nFROM procedures \nWHERE procedures.cost > 1000 \nAND procedures.code NOT IN (\n    SELECT trained_in.treatment \n    FROM trained_in \n    JOIN physician ON trained_in.physician = physician.employeeid \n    WHERE physician.name = 'John Wen'\n);"}
{"sample_id": 3945, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT name FROM nurse ORDER BY name", "pred_sql": "SELECT DISTINCT name FROM nurse ORDER BY name;"}
{"sample_id": 3923, "db_id": "hospital_1", "gold_sql": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1", "pred_sql": "SELECT p.name\nFROM physician p\nJOIN appointment a ON p.employeeid = a.physician\nGROUP BY p.employeeid\nHAVING COUNT(DISTINCT a.patient) > 1;"}
{"sample_id": 3984, "db_id": "hospital_1", "gold_sql": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'", "pred_sql": "SELECT DISTINCT p.name \nFROM patient p \nLEFT JOIN prescribes pr ON p.ssn = pr.patient \nLEFT JOIN medication m ON pr.medication = m.code \nWHERE m.name != 'Procrastin-X' OR m.name IS NULL;"}
{"sample_id": 3897, "db_id": "hospital_1", "gold_sql": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn", "pred_sql": "SELECT DISTINCT patient.name FROM patient JOIN appointment ON patient.ssn = appointment.patient;"}
{"sample_id": 3896, "db_id": "hospital_1", "gold_sql": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "pred_sql": "SELECT physician.name, physician.position \nFROM physician \nJOIN department ON physician.employeeid = department.head \nWHERE department.departmentid = \n(\n    SELECT affiliated_with.department \n    FROM affiliated_with \n    GROUP BY affiliated_with.department \n    ORDER BY COUNT(affiliated_with.physician) ASC \n    LIMIT 1\n)"}
{"sample_id": 3927, "db_id": "hospital_1", "gold_sql": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode", "pred_sql": "SELECT blockcode, COUNT(roomnumber) AS number_of_rooms FROM room WHERE blockcode = 1 GROUP BY blockcode;"}
{"sample_id": 3924, "db_id": "hospital_1", "gold_sql": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1", "pred_sql": "SELECT p.name FROM physician p JOIN appointment a ON p.employeeid = a.physician GROUP BY p.employeeid HAVING COUNT(a.patient) > 1;"}
{"sample_id": 3977, "db_id": "hospital_1", "gold_sql": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "pred_sql": "SELECT procedures.name \nFROM procedures \nJOIN trained_in ON procedures.code = trained_in.treatment \nJOIN physician ON trained_in.physician = physician.employeeid \nWHERE procedures.cost < 5000 AND physician.name = 'John Wen';"}
{"sample_id": 3949, "db_id": "hospital_1", "gold_sql": "SELECT DISTINCT name FROM medication ORDER BY name", "pred_sql": "SELECT DISTINCT name FROM medication ORDER BY name;"}
{"sample_id": 1188, "db_id": "election_representative", "gold_sql": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT party, COUNT(representative_id) AS representative_count FROM representative GROUP BY party ORDER BY representative_count DESC LIMIT 1;"}
{"sample_id": 1180, "db_id": "election_representative", "gold_sql": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"", "pred_sql": "SELECT lifespan FROM representative WHERE state IN ('New York', 'Indiana');"}
{"sample_id": 1175, "db_id": "election_representative", "gold_sql": "SELECT Votes FROM election ORDER BY Votes DESC", "pred_sql": "SELECT votes FROM election ORDER BY votes DESC;"}
{"sample_id": 1179, "db_id": "election_representative", "gold_sql": "SELECT Name FROM Representative WHERE Party != \"Republican\"", "pred_sql": "SELECT name FROM representative WHERE party != 'Republican';"}
{"sample_id": 7849, "db_id": "orchestra", "gold_sql": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "pred_sql": "SELECT DISTINCT record_company FROM orchestra WHERE year_of_founded < 2003 UNION SELECT DISTINCT record_company FROM orchestra WHERE year_of_founded > 2003;", "token_usage": {"tokens": 825, "cost": 0.00020429999999999998}}
{"sample_id": 7844, "db_id": "orchestra", "gold_sql": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "pred_sql": "SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC;", "token_usage": {"tokens": 769, "cost": 0.0001725}}
{"sample_id": 7820, "db_id": "orchestra", "gold_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "pred_sql": "SELECT name FROM conductor WHERE nationality != 'USA';", "token_usage": {"tokens": 734, "cost": 0.0001515}}
{"sample_id": 7846, "db_id": "orchestra", "gold_sql": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT record_company, COUNT(DISTINCT orchestra_id) AS orchestra_count\nFROM orchestra\nGROUP BY record_company\nORDER BY orchestra_count DESC\nLIMIT 1;", "token_usage": {"tokens": 829, "cost": 0.00020894999999999998}}
{"sample_id": 7832, "db_id": "orchestra", "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "pred_sql": "SELECT name FROM conductor ORDER BY year_of_work ASC LIMIT 1;", "token_usage": {"tokens": 780, "cost": 0.00017865}}
{"sample_id": 7847, "db_id": "orchestra", "gold_sql": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "pred_sql": "SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.performance_id IS NULL;", "token_usage": {"tokens": 804, "cost": 0.00019529999999999998}}
{"sample_id": 7819, "db_id": "orchestra", "gold_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "pred_sql": "SELECT name FROM conductor WHERE nationality != 'USA';", "token_usage": {"tokens": 740, "cost": 0.00015465}}
{"sample_id": 7824, "db_id": "orchestra", "gold_sql": "SELECT avg(Attendance) FROM SHOW", "pred_sql": "SELECT AVG(attendance) AS average_attendance FROM show;", "token_usage": {"tokens": 709, "cost": 0.00013965}}
{"sample_id": 4804, "db_id": "aircraft", "gold_sql": "SELECT Name FROM pilot ORDER BY Name ASC", "pred_sql": "SELECT name FROM pilot ORDER BY name ASC;"}
{"sample_id": 4813, "db_id": "aircraft", "gold_sql": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "pred_sql": "SELECT AVG(a.total_passengers) AS average_passengers\nFROM airport a\nJOIN airport_aircraft aa ON a.airport_id = aa.airport_id\nJOIN aircraft ac ON aa.aircraft_id = ac.aircraft_id\nWHERE ac.aircraft = 'Robinson R-22';"}
{"sample_id": 4818, "db_id": "aircraft", "gold_sql": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "pred_sql": "SELECT match.winning_aircraft, COUNT(*) AS win_count\nFROM match\nGROUP BY match.winning_aircraft;"}
{"sample_id": 4825, "db_id": "aircraft", "gold_sql": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "pred_sql": "SELECT DISTINCT aircraft.aircraft FROM aircraft LEFT JOIN match ON aircraft.aircraft_id = match.winning_aircraft WHERE match.winning_aircraft IS NULL;"}
{"sample_id": 4823, "db_id": "aircraft", "gold_sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "pred_sql": "SELECT winning_aircraft, COUNT(*) as win_count\nFROM match\nGROUP BY winning_aircraft\nHAVING win_count >= 2;"}
{"sample_id": 4832, "db_id": "aircraft", "gold_sql": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "pred_sql": "SELECT name, age FROM pilot WHERE pilot_id = (SELECT winning_pilot FROM match ORDER BY date ASC LIMIT 1)"}
{"sample_id": 4817, "db_id": "aircraft", "gold_sql": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT winning_aircraft, COUNT(*) as award_count FROM match GROUP BY winning_aircraft ORDER BY award_count DESC LIMIT 1;"}
{"sample_id": 4798, "db_id": "aircraft", "gold_sql": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "pred_sql": "SELECT SUM(domestic_passengers) AS total_domestic_passengers FROM airport WHERE airport_name LIKE '%London%';"}
{"sample_id": 4791, "db_id": "aircraft", "gold_sql": "SELECT count(*) FROM aircraft", "pred_sql": "SELECT COUNT(*) AS number_of_aircraft FROM aircraft;"}
{"sample_id": 4514, "db_id": "document_management", "gold_sql": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT user_login, password FROM users WHERE role_code = (SELECT role_code FROM roles WHERE role_code IN (SELECT role_code FROM users GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1))"}
{"sample_id": 4512, "db_id": "document_management", "gold_sql": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)", "pred_sql": "SELECT d.document_name \nFROM documents d \nLEFT JOIN document_sections ds ON d.document_code = ds.document_code \nWHERE ds.section_id IS NULL;"}
{"sample_id": 4525, "db_id": "document_management", "gold_sql": "SELECT count(*) FROM users WHERE user_login  =  1", "pred_sql": "SELECT COUNT(*) AS logged_in_users FROM users;"}
{"sample_id": 4498, "db_id": "document_management", "gold_sql": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT SUM(access_count) AS total_access_count\nFROM documents\nWHERE document_type_code = (\n    SELECT document_type_code\n    FROM documents\n    GROUP BY document_type_code\n    ORDER BY SUM(access_count) DESC\n    LIMIT 1\n);"}
{"sample_id": 4499, "db_id": "document_management", "gold_sql": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT SUM(access_count) AS total_access_count\nFROM documents\nWHERE document_type_code = (\n    SELECT document_type_code\n    FROM documents\n    GROUP BY document_type_code\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);"}
{"sample_id": 4504, "db_id": "document_management", "gold_sql": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"", "pred_sql": "SELECT document_type_code FROM documents WHERE document_name = 'David CV';"}
{"sample_id": 4511, "db_id": "document_management", "gold_sql": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"", "pred_sql": "SELECT ds.section_title \nFROM documents d \nJOIN document_sections ds ON d.document_code = ds.document_code \nWHERE d.document_name = 'David CV';"}
{"sample_id": 4508, "db_id": "document_management", "gold_sql": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000", "pred_sql": "SELECT document_type_code, SUM(access_count) AS total_access_count \nFROM documents \nGROUP BY document_type_code \nHAVING total_access_count > 10000;"}
{"sample_id": 2229, "db_id": "machine_repair", "gold_sql": "SELECT Name FROM technician ORDER BY Age ASC", "pred_sql": "SELECT name FROM technician ORDER BY age ASC;"}
{"sample_id": 2246, "db_id": "machine_repair", "gold_sql": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank", "pred_sql": "SELECT technician.name FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.machine_id = machine.machine_id ORDER BY machine.quality_rank ASC;"}
{"sample_id": 2251, "db_id": "machine_repair", "gold_sql": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name", "pred_sql": "SELECT technician.name, COUNT(repair_assignment.machine_id) AS machine_count\nFROM technician\nLEFT JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id\nGROUP BY technician.name;"}
{"sample_id": 2242, "db_id": "machine_repair", "gold_sql": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2", "pred_sql": "SELECT team FROM technician GROUP BY team HAVING COUNT(technician_id) >= 2;"}
{"sample_id": 2250, "db_id": "machine_repair", "gold_sql": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name", "pred_sql": "SELECT technician.name, COUNT(repair_assignment.machine_id) AS machine_count\nFROM technician\nLEFT JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id\nGROUP BY technician.technician_id;"}
{"sample_id": 2238, "db_id": "machine_repair", "gold_sql": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team", "pred_sql": "SELECT team, COUNT(*) AS technician_count FROM technician GROUP BY team;"}
{"sample_id": 7878, "db_id": "network_1", "gold_sql": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "pred_sql": "SELECT h.name, COUNT(f.friend_id) AS friend_count \nFROM highschooler h \nLEFT JOIN friend f ON h.id = f.student_id \nGROUP BY h.id, h.name;", "token_usage": {"tokens": 568, "cost": 0.000168}}
{"sample_id": 7909, "db_id": "network_1", "gold_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "pred_sql": "SELECT MIN(grade) AS minimum_grade FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)", "token_usage": {"tokens": 501, "cost": 0.00013049999999999997}}
{"sample_id": 7858, "db_id": "network_1", "gold_sql": "SELECT name ,  grade FROM Highschooler", "pred_sql": "SELECT name, grade FROM highschooler;", "token_usage": {"tokens": 445, "cost": 9.644999999999999e-05}}
{"sample_id": 7856, "db_id": "network_1", "gold_sql": "SELECT count(*) FROM Highschooler", "pred_sql": "SELECT COUNT(*) AS total_highschoolers FROM highschooler;", "token_usage": {"tokens": 470, "cost": 0.00011324999999999999}}
{"sample_id": 7867, "db_id": "network_1", "gold_sql": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "pred_sql": "SELECT COUNT(*) AS total_students FROM highschooler WHERE grade IN ('9', '10');", "token_usage": {"tokens": 494, "cost": 0.0001245}}
{"sample_id": 7861, "db_id": "network_1", "gold_sql": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "pred_sql": "SELECT grade FROM highschooler WHERE name = 'Kyle';", "token_usage": {"tokens": 471, "cost": 0.00011475}}
{"sample_id": 7871, "db_id": "network_1", "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT grade, COUNT(*) as student_count FROM highschooler GROUP BY grade ORDER BY student_count DESC LIMIT 1;", "token_usage": {"tokens": 521, "cost": 0.0001434}}
{"sample_id": 7883, "db_id": "network_1", "gold_sql": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "pred_sql": "SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.friend_id WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle');", "token_usage": {"tokens": 569, "cost": 0.00016994999999999998}}
{"sample_id": 7866, "db_id": "network_1", "gold_sql": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "pred_sql": "SELECT id FROM highschooler WHERE name = 'Kyle';", "token_usage": {"tokens": 479, "cost": 0.00011954999999999998}}
{"sample_id": 7901, "db_id": "network_1", "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "pred_sql": "SELECT h.name\nFROM highschooler h\nJOIN likes l ON h.id = l.student_id\nGROUP BY h.id\nHAVING COUNT(l.liked_id) >= 2;", "token_usage": {"tokens": 540, "cost": 0.00015299999999999998}}
{"sample_id": 7864, "db_id": "network_1", "gold_sql": "SELECT name FROM Highschooler WHERE grade  =  10", "pred_sql": "SELECT name FROM highschooler WHERE grade = '10';", "token_usage": {"tokens": 492, "cost": 0.00012375}}
{"sample_id": 2696, "db_id": "storm_record", "gold_sql": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "pred_sql": "SELECT AVG(damage_millions_usd) AS average_damage, MAX(damage_millions_usd) AS maximum_damage FROM storm WHERE max_speed > '1000';"}
{"sample_id": 2690, "db_id": "storm_record", "gold_sql": "SELECT region_name FROM region WHERE region_name != 'Denmark'", "pred_sql": "SELECT region_name FROM region WHERE region_name != 'Denmark';"}
{"sample_id": 2718, "db_id": "storm_record", "gold_sql": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "pred_sql": "SELECT DISTINCT region.region_name \nFROM region \nJOIN affected_region ON region.region_id = affected_region.region_id \nJOIN storm ON affected_region.storm_id = storm.storm_id \nWHERE storm.number_deaths >= '10';"}
{"sample_id": 2719, "db_id": "storm_record", "gold_sql": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "pred_sql": "SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id JOIN region ON affected_region.region_id = region.region_id WHERE region.region_name = 'Denmark';"}
{"sample_id": 2695, "db_id": "storm_record", "gold_sql": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "pred_sql": "SELECT AVG(damage_millions_usd) AS average_damage, MAX(damage_millions_usd) AS maximum_damage FROM storm WHERE max_speed > '1000';"}
{"sample_id": 2720, "db_id": "storm_record", "gold_sql": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "pred_sql": "SELECT storm.name FROM storm JOIN affected_region ON storm.storm_id = affected_region.storm_id JOIN region ON affected_region.region_id = region.region_id WHERE region.region_name = 'Denmark';"}
{"sample_id": 2700, "db_id": "storm_record", "gold_sql": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC", "pred_sql": "SELECT name, damage_millions_usd FROM storm ORDER BY max_speed DESC;"}
{"sample_id": 2694, "db_id": "storm_record", "gold_sql": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "pred_sql": "SELECT name, dates_active, number_deaths FROM storm WHERE number_deaths >= '1';"}
{"sample_id": 1143, "db_id": "climbing", "gold_sql": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)", "pred_sql": "SELECT name FROM mountain WHERE mountain_id NOT IN (SELECT mountain_id FROM climber);"}
{"sample_id": 1122, "db_id": "climbing", "gold_sql": "SELECT Country FROM mountain WHERE Height  >  5000", "pred_sql": "SELECT DISTINCT country FROM mountain WHERE height > 5000;"}
{"sample_id": 1140, "db_id": "climbing", "gold_sql": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1", "pred_sql": "SELECT country FROM mountain GROUP BY country HAVING COUNT(mountain_id) > 1;"}
{"sample_id": 1121, "db_id": "climbing", "gold_sql": "SELECT Name FROM mountain ORDER BY Name ASC", "pred_sql": "SELECT name FROM mountain ORDER BY name ASC;"}
{"sample_id": 1146, "db_id": "climbing", "gold_sql": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT range, COUNT(*) as mountain_count FROM mountain GROUP BY range ORDER BY mountain_count DESC LIMIT 1;"}
{"sample_id": 1123, "db_id": "climbing", "gold_sql": "SELECT Country FROM mountain WHERE Height  >  5000", "pred_sql": "SELECT DISTINCT country FROM mountain WHERE height > 5000;"}
{"sample_id": 1135, "db_id": "climbing", "gold_sql": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"", "pred_sql": "SELECT DISTINCT mountain.name FROM mountain JOIN climber ON mountain.mountain_id = climber.mountain_id WHERE climber.country = 'West Germany';"}
{"sample_id": 1124, "db_id": "climbing", "gold_sql": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1", "pred_sql": "SELECT name FROM mountain ORDER BY height DESC LIMIT 1;"}
{"sample_id": 3337, "db_id": "sports_competition", "gold_sql": "SELECT Competition_type ,  Country FROM competition", "pred_sql": "SELECT DISTINCT competition_type, country FROM competition;"}
{"sample_id": 3330, "db_id": "sports_competition", "gold_sql": "SELECT count(*) FROM club", "pred_sql": "SELECT COUNT(*) AS total_clubs FROM club;"}
{"sample_id": 3367, "db_id": "sports_competition", "gold_sql": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10", "pred_sql": "SELECT position FROM player WHERE points > 20 OR points < 10;"}
{"sample_id": 3373, "db_id": "sports_competition", "gold_sql": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)", "pred_sql": "SELECT name FROM player WHERE points > (SELECT AVG(points) FROM player)"}
{"sample_id": 3348, "db_id": "sports_competition", "gold_sql": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "pred_sql": "SELECT club.name, player.name FROM club JOIN player ON club.club_id = player.club_id;"}
{"sample_id": 3340, "db_id": "sports_competition", "gold_sql": "SELECT max(Silver) ,  min(Silver) FROM club_rank", "pred_sql": "SELECT MAX(silver) AS max_silver, MIN(silver) AS min_silver FROM club_rank;"}
{"sample_id": 3342, "db_id": "sports_competition", "gold_sql": "SELECT count(*) FROM club_rank WHERE Total  <  10", "pred_sql": "SELECT COUNT(*) AS club_count FROM club_rank WHERE total < 10;"}
{"sample_id": 3381, "db_id": "sports_competition", "gold_sql": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'", "pred_sql": "SELECT DISTINCT country FROM competition WHERE competition_type = 'friendly' AND country NOT IN (SELECT DISTINCT country FROM competition WHERE competition_type = 'friendly')"}
{"sample_id": 3380, "db_id": "sports_competition", "gold_sql": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'", "pred_sql": "SELECT DISTINCT c.country FROM competition c WHERE c.competition_type = 'Friendly' AND c.competition_id NOT IN (SELECT cr.competition_id FROM competition_result cr)"}
{"sample_id": 3374, "db_id": "sports_competition", "gold_sql": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION", "pred_sql": "SELECT position, COUNT(*) AS player_count FROM player WHERE points < 30 GROUP BY position;"}
{"sample_id": 1885, "db_id": "school_finance", "gold_sql": "SELECT count(*) FROM school", "pred_sql": "SELECT COUNT(*) AS number_of_schools FROM school;"}
{"sample_id": 1894, "db_id": "school_finance", "gold_sql": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC", "pred_sql": "SELECT donator_name, amount FROM endowment ORDER BY amount DESC;"}
{"sample_id": 1897, "db_id": "school_finance", "gold_sql": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Triton'", "pred_sql": "SELECT DISTINCT e1.donator_name \nFROM endowment e1 \nJOIN school s1 ON e1.school_id = s1.school_id \nWHERE s1.school_name = 'Glenn' \nINTERSECT \nSELECT DISTINCT e2.donator_name \nFROM endowment e2 \nJOIN school s2 ON e2.school_id = s2.school_id \nWHERE s2.school_name = 'Triton';"}
{"sample_id": 1893, "db_id": "school_finance", "gold_sql": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"Glenn\"", "pred_sql": "SELECT COUNT(DISTINCT e.donator_name) AS donor_count \nFROM endowment e \nJOIN school s ON e.school_id = s.school_id \nWHERE s.school_name = 'Glenn';"}
{"sample_id": 1892, "db_id": "school_finance", "gold_sql": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county", "pred_sql": "SELECT county, COUNT(school_id) AS number_of_schools, SUM(CAST(enrollment AS INTEGER)) AS total_enrollment FROM school GROUP BY county;"}
{"sample_id": 5295, "db_id": "manufactory_1", "gold_sql": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "pred_sql": "SELECT name FROM manufacturers WHERE revenue < (SELECT MIN(revenue) FROM manufacturers WHERE headquarter = 'Austin')"}
{"sample_id": 5308, "db_id": "manufactory_1", "gold_sql": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter", "pred_sql": "SELECT m.headquarter, COUNT(DISTINCT p.code) AS product_count FROM manufacturers m JOIN products p ON m.code = p.manufacturer GROUP BY m.headquarter;"}
{"sample_id": 5274, "db_id": "manufactory_1", "gold_sql": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'", "pred_sql": "SELECT COUNT(*) AS number_of_companies FROM manufacturers WHERE founder = 'Andy';"}
{"sample_id": 5339, "db_id": "manufactory_1", "gold_sql": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1", "pred_sql": "SELECT name, price FROM products ORDER BY price ASC LIMIT 1;"}
{"sample_id": 5273, "db_id": "manufactory_1", "gold_sql": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'", "pred_sql": "SELECT COUNT(*) AS company_count FROM manufacturers WHERE founder = 'Andy';"}
{"sample_id": 5279, "db_id": "manufactory_1", "gold_sql": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'", "pred_sql": "SELECT COUNT(*) AS number_of_manufacturers FROM manufacturers WHERE headquarter IN ('Tokyo', 'Beijing');"}
{"sample_id": 5316, "db_id": "manufactory_1", "gold_sql": "SELECT Name FROM Products", "pred_sql": "SELECT name FROM products;"}
{"sample_id": 5283, "db_id": "manufactory_1", "gold_sql": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150", "pred_sql": "SELECT name FROM manufacturers WHERE revenue BETWEEN '100' AND '150';"}
{"sample_id": 5304, "db_id": "manufactory_1", "gold_sql": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name", "pred_sql": "SELECT manufacturers.name, SUM(products.price) AS total_revenue\nFROM manufacturers\nJOIN products ON manufacturers.code = products.manufacturer\nGROUP BY manufacturers.name;"}
{"sample_id": 5332, "db_id": "manufactory_1", "gold_sql": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code", "pred_sql": "SELECT products.*, manufacturers.name AS manufacturer_name, manufacturers.headquarter, manufacturers.founder, manufacturers.revenue FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code;"}
{"sample_id": 5319, "db_id": "manufactory_1", "gold_sql": "SELECT name FROM products WHERE price  <=  200", "pred_sql": "SELECT name FROM products WHERE price <= 200;"}
{"sample_id": 5312, "db_id": "manufactory_1", "gold_sql": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'", "pred_sql": "SELECT name FROM manufacturers WHERE code NOT IN (SELECT manufacturer FROM products WHERE name LIKE '%DVD drive%');"}
{"sample_id": 5327, "db_id": "manufactory_1", "gold_sql": "SELECT count(*) FROM products WHERE price >= 180", "pred_sql": "SELECT COUNT(*) AS product_count FROM products WHERE price >= 180;"}
{"sample_id": 5331, "db_id": "manufactory_1", "gold_sql": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code", "pred_sql": "SELECT products.*, manufacturers.* FROM products JOIN manufacturers ON products.manufacturer = manufacturers.code;"}
{"sample_id": 5285, "db_id": "manufactory_1", "gold_sql": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'", "pred_sql": "SELECT SUM(revenue) AS total_revenue FROM manufacturers WHERE headquarter IN ('Tokyo', 'Taiwan');"}
{"sample_id": 5307, "db_id": "manufactory_1", "gold_sql": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter", "pred_sql": "SELECT headquarter, COUNT(DISTINCT products.code) AS product_count FROM manufacturers JOIN products ON manufacturers.code = products.manufacturer GROUP BY headquarter;"}
{"sample_id": 167, "db_id": "bike_1", "gold_sql": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"", "pred_sql": "SELECT date FROM weather WHERE zip_code = 94107 AND events NOT LIKE '%Fog%' AND events NOT LIKE '%Rain%';"}
{"sample_id": 208, "db_id": "bike_1", "gold_sql": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100", "pred_sql": "SELECT name FROM station WHERE city = 'Palo Alto' AND id NOT IN (SELECT end_station_id FROM trip);"}
{"sample_id": 140, "db_id": "bike_1", "gold_sql": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1", "pred_sql": "SELECT s.lat, s.long, s.city FROM trip t JOIN station s ON t.start_station_id = s.id ORDER BY t.duration ASC LIMIT 1;"}
{"sample_id": 121, "db_id": "bike_1", "gold_sql": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636", "pred_sql": "SELECT COUNT(*) AS total_trips, MAX(duration) AS max_duration FROM trip WHERE bike_id = '636';"}
{"sample_id": 144, "db_id": "bike_1", "gold_sql": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"", "pred_sql": "SELECT s.name, s.id FROM station s JOIN status st ON s.id = st.station_id GROUP BY s.id HAVING AVG(st.bikes_available) > 14 OR s.installation_date LIKE '%-12-%';"}
{"sample_id": 137, "db_id": "bike_1", "gold_sql": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8", "pred_sql": "SELECT COUNT(*) AS days_count FROM weather WHERE mean_humidity > 50 AND mean_visibility > 8;"}
{"sample_id": 151, "db_id": "bike_1", "gold_sql": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)", "pred_sql": "SELECT AVG(long) AS average_longitude FROM station WHERE id NOT IN (SELECT station_id FROM status WHERE bikes_available > 10);"}
{"sample_id": 185, "db_id": "bike_1", "gold_sql": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "pred_sql": "SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5;"}
{"sample_id": 201, "db_id": "bike_1", "gold_sql": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1", "pred_sql": "SELECT date, (max_temperature_f - min_temperature_f) AS temperature_difference FROM weather ORDER BY temperature_difference ASC LIMIT 1;"}
{"sample_id": 112, "db_id": "bike_1", "gold_sql": "SELECT name FROM station WHERE lat  <  37.5", "pred_sql": "SELECT name FROM station WHERE lat < '37.5';"}
{"sample_id": 160, "db_id": "bike_1", "gold_sql": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "pred_sql": "SELECT w.zip_code, w.date, w.min_dew_point_f \nFROM weather w \nWHERE w.min_dew_point_f < (SELECT MIN(w2.min_dew_point_f) \n                             FROM weather w2 \n                             WHERE w2.zip_code = 94107)"}
{"sample_id": 171, "db_id": "bike_1", "gold_sql": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"", "pred_sql": "SELECT s.name FROM station s JOIN status st ON s.id = st.station_id GROUP BY s.id HAVING AVG(st.bikes_available) > 10 AND s.city != 'San Jose';"}
{"sample_id": 159, "db_id": "bike_1", "gold_sql": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "pred_sql": "SELECT w.date, w.zip_code FROM weather w WHERE w.min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = 94107)"}
{"sample_id": 150, "db_id": "bike_1", "gold_sql": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")", "pred_sql": "SELECT AVG(bikes_available) AS average_bike_availability \nFROM status \nJOIN station ON status.station_id = station.id \nWHERE station.city != 'Palo Alto';"}
{"sample_id": 123, "db_id": "bike_1", "gold_sql": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code", "pred_sql": "SELECT zip_code, AVG(mean_temperature_f) AS average_mean_temperature\nFROM weather\nWHERE date BETWEEN '2023-08-01' AND '2023-08-31'\nGROUP BY zip_code;"}
{"sample_id": 117, "db_id": "bike_1", "gold_sql": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"", "pred_sql": "SELECT AVG(lat) AS average_latitude, AVG(long) AS average_longitude FROM station WHERE city = 'San Jose';"}
{"sample_id": 135, "db_id": "bike_1", "gold_sql": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT bike_id, COUNT(*) as trip_count FROM trip WHERE zip_code = '94002' GROUP BY bike_id ORDER BY trip_count DESC LIMIT 1;"}
{"sample_id": 122, "db_id": "bike_1", "gold_sql": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636", "pred_sql": "SELECT SUM(duration) AS total_duration, MAX(duration) AS max_duration FROM trip WHERE bike_id = '636';"}
{"sample_id": 211, "db_id": "bike_1", "gold_sql": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id", "pred_sql": "SELECT AVG(lat) AS average_latitude, AVG(long) AS average_longitude FROM station WHERE id IN (SELECT start_station_id FROM trip);"}
{"sample_id": 109, "db_id": "bike_1", "gold_sql": "SELECT date FROM weather WHERE max_temperature_f  >  85", "pred_sql": "SELECT date FROM weather WHERE max_temperature_f > 85;"}
{"sample_id": 1646, "db_id": "wedding", "gold_sql": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30", "pred_sql": "SELECT DISTINCT church.name FROM church JOIN wedding ON church.church_id = wedding.church_id JOIN people ON wedding.male_id = people.people_id OR wedding.female_id = people.people_id WHERE people.age > '30';"}
{"sample_id": 1634, "db_id": "wedding", "gold_sql": "SELECT open_date ,  count(*) FROM church GROUP BY open_date", "pred_sql": "SELECT open_date, COUNT(church_id) AS number_of_churches FROM church GROUP BY open_date;"}
{"sample_id": 1629, "db_id": "wedding", "gold_sql": "SELECT count(*) FROM Church WHERE Open_Date  <  1850", "pred_sql": "SELECT COUNT(*) FROM church WHERE open_date < 1850;"}
{"sample_id": 1645, "db_id": "wedding", "gold_sql": "SELECT count(*) FROM wedding WHERE YEAR  =  2016", "pred_sql": "SELECT COUNT(*) AS total_weddings FROM wedding WHERE year = '2016';"}
{"sample_id": 984, "db_id": "university_basketball", "gold_sql": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1", "pred_sql": "SELECT founded FROM university WHERE affiliation != 'public' ORDER BY founded DESC LIMIT 1;"}
{"sample_id": 1015, "db_id": "university_basketball", "gold_sql": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation", "pred_sql": "SELECT affiliation, SUM(enrollment) AS total_enrollment\nFROM university\nWHERE founded > 1850\nGROUP BY affiliation;"}
{"sample_id": 978, "db_id": "university_basketball", "gold_sql": "SELECT school ,  nickname FROM university ORDER BY founded", "pred_sql": "SELECT school, nickname FROM university ORDER BY founded;"}
{"sample_id": 988, "db_id": "university_basketball", "gold_sql": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1", "pred_sql": "SELECT MAX(acc_percent) AS highest_acc_percent FROM basketball_match;"}
{"sample_id": 1011, "db_id": "university_basketball", "gold_sql": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)", "pred_sql": "SELECT bm.team_name \nFROM basketball_match bm \nJOIN university u ON bm.school_id = u.school_id \nWHERE u.enrollment < (SELECT AVG(enrollment) FROM university);"}
{"sample_id": 999, "db_id": "university_basketball", "gold_sql": "SELECT sum(enrollment) ,  min(enrollment) FROM university", "pred_sql": "SELECT SUM(enrollment) AS total_enrollment, MIN(enrollment) AS minimum_enrollment FROM university;"}
{"sample_id": 981, "db_id": "university_basketball", "gold_sql": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1", "pred_sql": "SELECT founded FROM university WHERE school_id = (SELECT school_id FROM university ORDER BY enrollment DESC LIMIT 1);"}
{"sample_id": 986, "db_id": "university_basketball", "gold_sql": "SELECT count(DISTINCT school_id) FROM basketball_match", "pred_sql": "SELECT COUNT(DISTINCT school_id) AS number_of_schools FROM basketball_match;"}
{"sample_id": 982, "db_id": "university_basketball", "gold_sql": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1", "pred_sql": "SELECT founded FROM university WHERE enrollment = (SELECT MAX(enrollment) FROM university);"}
{"sample_id": 5612, "db_id": "swimming", "gold_sql": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'", "pred_sql": "SELECT swimmer.name FROM swimmer JOIN record ON swimmer.id = record.swimmer_id WHERE record.result = 'win';"}
{"sample_id": 5600, "db_id": "swimming", "gold_sql": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)", "pred_sql": "SELECT name FROM stadium WHERE capacity < (SELECT AVG(capacity) FROM stadium);"}
{"sample_id": 5622, "db_id": "swimming", "gold_sql": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT stadium.name\nFROM stadium\nJOIN event ON stadium.id = event.stadium_id\nJOIN record ON event.id = record.event_id\nJOIN swimmer ON record.swimmer_id = swimmer.id\nGROUP BY stadium.id\nORDER BY COUNT(swimmer.id) DESC\nLIMIT 1;"}
{"sample_id": 5597, "db_id": "swimming", "gold_sql": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1", "pred_sql": "SELECT name FROM event WHERE year = (SELECT MAX(year) FROM event);"}
{"sample_id": 5610, "db_id": "swimming", "gold_sql": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1", "pred_sql": "SELECT nationality FROM swimmer GROUP BY nationality HAVING COUNT(id) > 1;"}
{"sample_id": 5604, "db_id": "swimming", "gold_sql": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006", "pred_sql": "SELECT COUNT(DISTINCT city) AS city_count FROM stadium WHERE opening_year < 2006;"}
{"sample_id": 5041, "db_id": "soccer_2", "gold_sql": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)", "pred_sql": "SELECT COUNT(DISTINCT state) FROM college WHERE enr < (SELECT AVG(CAST(enr AS INTEGER)) FROM college);"}
{"sample_id": 4999, "db_id": "soccer_2", "gold_sql": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'", "pred_sql": "SELECT player.pname FROM player JOIN tryout ON player.pid = tryout.pid WHERE tryout.ppos = 'striker' AND tryout.decision = 'yes';"}
{"sample_id": 4964, "db_id": "soccer_2", "gold_sql": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "pred_sql": "SELECT pname FROM player WHERE pid IN (SELECT pid FROM tryout WHERE decision = 'train' AND hours BETWEEN 500 AND 1500)"}
{"sample_id": 5027, "db_id": "soccer_2", "gold_sql": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'", "pred_sql": "SELECT DISTINCT c.state FROM college c JOIN tryout t ON c.cname = t.cname WHERE t.ppos = 'mid' AND c.cname NOT IN (SELECT cname FROM tryout WHERE ppos = 'goalie');"}
{"sample_id": 4947, "db_id": "soccer_2", "gold_sql": "SELECT avg(HS) FROM Player", "pred_sql": "SELECT AVG(training_hours) AS average_training_hours FROM player;"}
{"sample_id": 5030, "db_id": "soccer_2", "gold_sql": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "pred_sql": "SELECT COUNT(DISTINCT c.state) AS state_count\nFROM college c\nJOIN tryout t ON c.cname = t.cname\nJOIN player p ON t.pid = p.pid\nWHERE t.ppos = 'mid' AND t.decision != 'goalie';"}
{"sample_id": 5036, "db_id": "soccer_2", "gold_sql": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')", "pred_sql": "SELECT cname FROM college WHERE enr > (SELECT MAX(enr) FROM college WHERE state = 'Florida');"}
{"sample_id": 4956, "db_id": "soccer_2", "gold_sql": "SELECT count(*) FROM tryout WHERE decision  =  'yes'", "pred_sql": "SELECT COUNT(*) AS yes_count FROM tryout WHERE decision = 'yes';"}
{"sample_id": 5018, "db_id": "soccer_2", "gold_sql": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"", "pred_sql": "SELECT cname FROM college WHERE (state = 'LA' AND enr > '15000') OR (state = 'AZ' AND enr < '13000');"}
{"sample_id": 5013, "db_id": "soccer_2", "gold_sql": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)", "pred_sql": "SELECT p.pname FROM player p JOIN tryout t ON p.pid = t.pid JOIN college c ON t.cname = c.cname WHERE c.enr = (SELECT MAX(enr) FROM college);"}
{"sample_id": 5023, "db_id": "soccer_2", "gold_sql": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "pred_sql": "SELECT COUNT(DISTINCT c.cname) AS school_count\nFROM college c\nJOIN tryout t ON c.cname = t.cname\nWHERE t.ppos IN ('goalie', 'mid');"}
{"sample_id": 5010, "db_id": "soccer_2", "gold_sql": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'", "pred_sql": "SELECT DISTINCT college.cname FROM player JOIN tryout ON player.pid = tryout.pid JOIN college ON tryout.cname = college.cname WHERE player.pname LIKE 'D%';"}
{"sample_id": 5002, "db_id": "soccer_2", "gold_sql": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "pred_sql": "SELECT state FROM college WHERE cname = (SELECT cname FROM player WHERE pname = 'Charles');"}
{"sample_id": 4979, "db_id": "soccer_2", "gold_sql": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "pred_sql": "SELECT cname, COUNT(pid) AS student_count FROM tryout GROUP BY cname ORDER BY student_count DESC;"}
{"sample_id": 4955, "db_id": "soccer_2", "gold_sql": "SELECT count(*) FROM tryout WHERE decision  =  'yes'", "pred_sql": "SELECT COUNT(*) AS accepted_students FROM tryout WHERE decision = 'accepted';"}
{"sample_id": 4965, "db_id": "soccer_2", "gold_sql": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "pred_sql": "SELECT * FROM player WHERE pname LIKE '%a%';"}
{"sample_id": 4997, "db_id": "soccer_2", "gold_sql": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'", "pred_sql": "SELECT DISTINCT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'striker';"}
{"sample_id": 5004, "db_id": "soccer_2", "gold_sql": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "pred_sql": "SELECT AVG(practice_hours) AS average_practice_hours, MAX(practice_hours) AS max_practice_hours FROM practice_sessions WHERE team_made = 1;"}
{"sample_id": 4961, "db_id": "soccer_2", "gold_sql": "SELECT avg(enr) FROM College WHERE state  =  'FL'", "pred_sql": "SELECT AVG(enr) AS average_enrollment FROM college WHERE state = 'FL';"}
{"sample_id": 5019, "db_id": "soccer_2", "gold_sql": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'", "pred_sql": "SELECT DISTINCT college.cname FROM college JOIN tryout ON college.cname = tryout.cname JOIN player ON tryout.pid = player.pid WHERE tryout.ppos IN ('goalie', 'mid');"}
{"sample_id": 4946, "db_id": "soccer_2", "gold_sql": "SELECT count(*) FROM College WHERE enr  >  15000", "pred_sql": "SELECT COUNT(*) FROM college WHERE enr > '15000';"}
{"sample_id": 2843, "db_id": "customer_deliveries", "gold_sql": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'", "pred_sql": "SELECT customers.customer_name, customers.customer_phone \nFROM customers \nJOIN customer_addresses ON customers.customer_id = customer_addresses.customer_id \nJOIN addresses ON customer_addresses.address_id = addresses.address_id \nWHERE addresses.state_province_county = 'California';"}
{"sample_id": 2848, "db_id": "customer_deliveries", "gold_sql": "SELECT route_name FROM Delivery_Routes ORDER BY route_name", "pred_sql": "SELECT route_name FROM delivery_routes ORDER BY route_name ASC;"}
{"sample_id": 2838, "db_id": "customer_deliveries", "gold_sql": "SELECT count(DISTINCT payment_method) FROM customers", "pred_sql": "SELECT COUNT(DISTINCT payment_method) AS different_payment_methods FROM customers;"}
{"sample_id": 6376, "db_id": "flight_company", "gold_sql": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2", "pred_sql": "SELECT country FROM airport GROUP BY country HAVING COUNT(id) > 2;"}
{"sample_id": 6359, "db_id": "flight_company", "gold_sql": "SELECT count(*) FROM flight WHERE velocity  >  200", "pred_sql": "SELECT COUNT(*) AS flight_count FROM flight WHERE velocity > 200;"}
{"sample_id": 6370, "db_id": "flight_company", "gold_sql": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT type, COUNT(*) as count FROM operate_company GROUP BY type ORDER BY count DESC LIMIT 1;"}
{"sample_id": 6109, "db_id": "customers_and_addresses", "gold_sql": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"", "pred_sql": "SELECT SUM(order_items.order_quantity) AS total_quantity\nFROM customers\nJOIN customer_orders ON customers.customer_id = customer_orders.customer_id\nJOIN order_items ON customer_orders.order_id = order_items.order_id\nWHERE customers.customer_name = 'Rodrick Heaney';"}
{"sample_id": 6055, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"", "pred_sql": "SELECT customer_name FROM customers WHERE payment_method = 'Cash';"}
{"sample_id": 6087, "db_id": "customers_and_addresses", "gold_sql": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "pred_sql": "SELECT country FROM addresses GROUP BY country HAVING COUNT(DISTINCT address_id) > 4;"}
{"sample_id": 6082, "db_id": "customers_and_addresses", "gold_sql": "SELECT city FROM addresses WHERE zip_postcode  =  255", "pred_sql": "SELECT city FROM addresses WHERE zip_postcode = '255';"}
{"sample_id": 6048, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers", "pred_sql": "SELECT customer_name FROM customers;"}
{"sample_id": 6128, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'", "pred_sql": "SELECT customer_name FROM customers WHERE payment_method != 'Cash';"}
{"sample_id": 6118, "db_id": "customers_and_addresses", "gold_sql": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"", "pred_sql": "SELECT SUM(order_items.order_quantity) AS total_products_ordered\nFROM customer_orders\nJOIN order_items ON customer_orders.order_id = order_items.order_id\nWHERE customer_orders.order_date < '2018-03-17 07:13:53';"}
{"sample_id": 6096, "db_id": "customers_and_addresses", "gold_sql": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "pred_sql": "SELECT channel_code, contact_number FROM customer_contact_channels WHERE active_from_date = (SELECT MIN(active_from_date) FROM customer_contact_channels)"}
{"sample_id": 6115, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "pred_sql": "SELECT customers.customer_name, customer_orders.order_date FROM customer_orders JOIN customers ON customer_orders.customer_id = customers.customer_id WHERE customer_orders.order_status = 'Delivered';"}
{"sample_id": 6099, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "pred_sql": "SELECT customers.customer_name, customer_contact_channels.active_from_date \nFROM customers \nJOIN customer_contact_channels ON customers.customer_id = customer_contact_channels.customer_id \nWHERE customer_contact_channels.channel_code = 'email';"}
{"sample_id": 6093, "db_id": "customers_and_addresses", "gold_sql": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "pred_sql": "SELECT active_to_date FROM customer_contact_channels WHERE customer_id = (SELECT customer_id FROM customers WHERE customer_name = 'Tillman Ernser') ORDER BY active_from_date DESC LIMIT 1;"}
{"sample_id": 6053, "db_id": "customers_and_addresses", "gold_sql": "SELECT avg(order_quantity) FROM order_items", "pred_sql": "SELECT AVG(order_quantity) AS average_order_quantity FROM order_items GROUP BY order_id;"}
{"sample_id": 6111, "db_id": "customers_and_addresses", "gold_sql": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"", "pred_sql": "SELECT COUNT(DISTINCT customer_id) AS number_of_customers\nFROM customer_orders\nWHERE order_status = 'Cancelled';"}
{"sample_id": 6066, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "pred_sql": "SELECT customer_name FROM customers WHERE customer_name LIKE '%Alex%';"}
{"sample_id": 6130, "db_id": "customers_and_addresses", "gold_sql": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'", "pred_sql": "SELECT customer_name FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_orders WHERE order_id IN (SELECT order_id FROM order_items WHERE product_id = (SELECT product_id FROM products WHERE product_details = 'Latte'))))"}
{"sample_id": 6085, "db_id": "customers_and_addresses", "gold_sql": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "pred_sql": "SELECT DISTINCT state_province_county, country FROM addresses WHERE zip_postcode LIKE '4%';"}
{"sample_id": 6120, "db_id": "customers_and_addresses", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1", "pred_sql": "SELECT customer_id FROM customer_orders ORDER BY order_date DESC LIMIT 1;"}
{"sample_id": 1309, "db_id": "performance_attendance", "gold_sql": "SELECT Date ,  LOCATION FROM performance", "pred_sql": "SELECT date, location FROM performance;"}
{"sample_id": 1308, "db_id": "performance_attendance", "gold_sql": "SELECT HOST FROM performance ORDER BY Attendance ASC", "pred_sql": "SELECT host FROM performance ORDER BY attendance ASC;"}
{"sample_id": 1307, "db_id": "performance_attendance", "gold_sql": "SELECT count(*) FROM performance", "pred_sql": "SELECT COUNT(*) AS total_performances FROM performance;"}
{"sample_id": 4018, "db_id": "ship_mission", "gold_sql": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "pred_sql": "SELECT name FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM mission);"}
{"sample_id": 3991, "db_id": "ship_mission", "gold_sql": "SELECT count(*) FROM ship", "pred_sql": "SELECT COUNT(*) AS total_ships FROM ship;"}
{"sample_id": 4001, "db_id": "ship_mission", "gold_sql": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "pred_sql": "SELECT name FROM ship WHERE tonnage = (SELECT MAX(tonnage) FROM ship);"}
{"sample_id": 3999, "db_id": "ship_mission", "gold_sql": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "pred_sql": "SELECT name FROM ship WHERE nationality IN ('United States', 'United Kingdom');"}
{"sample_id": 4014, "db_id": "ship_mission", "gold_sql": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "pred_sql": "SELECT ship.name FROM ship JOIN mission ON ship.ship_id = mission.ship_id WHERE mission.launched_year > '1928';"}
{"sample_id": 4010, "db_id": "ship_mission", "gold_sql": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "pred_sql": "SELECT s.type, AVG(s.tonnage) AS average_tonnage FROM ship s GROUP BY s.type;"}
{"sample_id": 5877, "db_id": "tracking_share_transactions", "gold_sql": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id", "pred_sql": "SELECT * FROM lots WHERE lot_id NOT IN (SELECT lot_id FROM transactions_lots);"}
{"sample_id": 5840, "db_id": "tracking_share_transactions", "gold_sql": "SELECT max(amount_of_transaction) FROM TRANSACTIONS", "pred_sql": "SELECT MAX(amount_of_transaction) AS max_transaction_amount FROM transactions;"}
{"sample_id": 5860, "db_id": "tracking_share_transactions", "gold_sql": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code", "pred_sql": "SELECT rt.transaction_type_description, MAX(t.share_count) AS max_share_count, MIN(t.share_count) AS min_share_count\nFROM transactions t\nJOIN ref_transaction_types rt ON t.transaction_type_code = rt.transaction_type_code\nGROUP BY rt.transaction_type_description;"}
{"sample_id": 5876, "db_id": "tracking_share_transactions", "gold_sql": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases", "pred_sql": "SELECT sales.sales_transaction_id, sales.sales_details, purchases.purchase_transaction_id, purchases.purchase_details \nFROM sales \nLEFT JOIN purchases ON sales.sales_transaction_id = purchases.purchase_transaction_id;"}
{"sample_id": 5838, "db_id": "tracking_share_transactions", "gold_sql": "SELECT Investor_details FROM INVESTORS", "pred_sql": "SELECT * FROM investors;"}
{"sample_id": 5843, "db_id": "tracking_share_transactions", "gold_sql": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'", "pred_sql": "SELECT transaction_id FROM transactions WHERE transaction_type_code = 'PUR';"}
{"sample_id": 5846, "db_id": "tracking_share_transactions", "gold_sql": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\"", "pred_sql": "SELECT transaction_type_description FROM ref_transaction_types WHERE transaction_type_code = 'PUR';"}
{"sample_id": 5857, "db_id": "tracking_share_transactions", "gold_sql": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50", "pred_sql": "SELECT lots.lot_details FROM lots JOIN transactions_lots ON lots.lot_id = transactions_lots.lot_id JOIN transactions ON transactions_lots.transaction_id = transactions.transaction_id WHERE transactions.share_count < 50;"}
{"sample_id": 3290, "db_id": "college_1", "gold_sql": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5", "pred_sql": "SELECT stu_fname, stu_gpa, stu_phone FROM student ORDER BY stu_gpa DESC LIMIT 5;"}
{"sample_id": 3224, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT dept_name) FROM department", "pred_sql": "SELECT COUNT(*) AS department_count FROM department;"}
{"sample_id": 3319, "db_id": "college_1", "gold_sql": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018", "pred_sql": "SELECT student.stu_lname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.class_code = '10018' AND enroll.enroll_grade = 'A';"}
{"sample_id": 3317, "db_id": "college_1", "gold_sql": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "pred_sql": "SELECT employee.emp_fname, professor.prof_high_degree \nFROM professor \nJOIN department ON professor.dept_code = department.dept_code \nJOIN employee ON professor.emp_num = employee.emp_num \nWHERE department.dept_name = 'Computer Information Systems';"}
{"sample_id": 3240, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM employee", "pred_sql": "SELECT COUNT(*) AS total_employees FROM employee;"}
{"sample_id": 3325, "db_id": "college_1", "gold_sql": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1", "pred_sql": "SELECT s.stu_fname FROM student s JOIN enroll e ON s.stu_num = e.stu_num GROUP BY s.stu_num HAVING COUNT(e.class_code) = 1;"}
{"sample_id": 3254, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname", "pred_sql": "SELECT emp_fname, prof_office FROM professor ORDER BY emp_fname ASC;"}
{"sample_id": 3217, "db_id": "college_1", "gold_sql": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "pred_sql": "SELECT d.dept_name, AVG(s.stu_gpa) AS average_gpa\nFROM department d\nJOIN student s ON d.dept_code = s.dept_code\nGROUP BY d.dept_name\nORDER BY average_gpa DESC\nLIMIT 1;"}
{"sample_id": 3198, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code", "pred_sql": "SELECT d.dept_name, COUNT(c.class_code) AS number_of_classes\nFROM department d\nLEFT JOIN class c ON d.dept_code = c.crs_code\nGROUP BY d.dept_name;"}
{"sample_id": 3229, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'", "pred_sql": "SELECT COUNT(DISTINCT class_section) AS number_of_sections FROM class WHERE crs_code = 'ACCT-211';"}
{"sample_id": 3174, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'", "pred_sql": "SELECT COUNT(*) AS class_count FROM class WHERE prof_num IN (SELECT emp_num FROM professor WHERE emp_num IN (SELECT emp_num FROM employee WHERE emp_lname = 'Graztevski'));"}
{"sample_id": 3306, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "pred_sql": "SELECT employee.emp_fname, professor.prof_office, course.crs_description \nFROM professor \nJOIN employee ON professor.emp_num = employee.emp_num \nJOIN class ON professor.emp_num = class.prof_num \nJOIN course ON class.crs_code = course.crs_code;"}
{"sample_id": 3246, "db_id": "college_1", "gold_sql": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT d.dept_name\nFROM department d\nJOIN student s ON d.dept_code = s.dept_code\nGROUP BY d.dept_name\nORDER BY COUNT(s.stu_num) DESC\nLIMIT 1;"}
{"sample_id": 3205, "db_id": "college_1", "gold_sql": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT emp_jobcode, COUNT(emp_num) AS employee_count FROM employee GROUP BY emp_jobcode ORDER BY employee_count DESC LIMIT 1;"}
{"sample_id": 3201, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code", "pred_sql": "SELECT d.school_code, COUNT(c.class_code) AS class_count \nFROM class c \nJOIN course cr ON c.crs_code = cr.crs_code \nJOIN department d ON cr.dept_code = d.dept_code \nGROUP BY d.school_code;"}
{"sample_id": 3226, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"", "pred_sql": "SELECT COUNT(*) AS course_count FROM course WHERE dept_code = (SELECT dept_code FROM department WHERE dept_name = 'Computer Info. Systems');"}
{"sample_id": 3218, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT school_code) FROM department", "pred_sql": "SELECT COUNT(DISTINCT school_code) AS total_schools FROM department;"}
{"sample_id": 3311, "db_id": "college_1", "gold_sql": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "pred_sql": "SELECT student.stu_fname, student.stu_lname, course.crs_description \nFROM student \nJOIN enroll ON student.stu_num = enroll.stu_num \nJOIN class ON enroll.class_code = class.class_code \nJOIN course ON class.crs_code = course.crs_code;"}
{"sample_id": 3300, "db_id": "college_1", "gold_sql": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "pred_sql": "SELECT employee.emp_fname, professor.prof_office \nFROM professor \nJOIN employee ON professor.emp_num = employee.emp_num \nJOIN department ON professor.dept_code = department.dept_code \nWHERE department.dept_name = 'History' AND professor.prof_high_degree = 'Ph.D.';"}
{"sample_id": 3281, "db_id": "college_1", "gold_sql": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'", "pred_sql": "SELECT COUNT(*) AS total_professors FROM professor WHERE prof_high_degree IN ('Ph.D.', 'Masters');"}
{"sample_id": 3212, "db_id": "college_1", "gold_sql": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code", "pred_sql": "SELECT d.dept_name, SUM(s.stu_hrs) AS total_hours FROM department d JOIN student s ON d.dept_code = s.dept_code GROUP BY d.dept_name;"}
{"sample_id": 3295, "db_id": "college_1", "gold_sql": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "pred_sql": "SELECT stu_fname, stu_gpa FROM student WHERE stu_gpa < (SELECT AVG(stu_gpa) FROM student);"}
{"sample_id": 3286, "db_id": "college_1", "gold_sql": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'", "pred_sql": "SELECT DISTINCT student.stu_fname \nFROM student \nJOIN department ON student.dept_code = department.dept_code \nWHERE department.dept_name IN ('Accounting', 'Computer Info. Systems');"}
{"sample_id": 3284, "db_id": "college_1", "gold_sql": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'", "pred_sql": "SELECT e.emp_fname \nFROM professor p \nJOIN employee e ON p.emp_num = e.emp_num \nJOIN class c ON p.emp_num = c.prof_num \nWHERE c.crs_code IN ('CIS-220', 'QM-261') \nGROUP BY e.emp_fname \nHAVING COUNT(DISTINCT c.crs_code) = 2;"}
{"sample_id": 3238, "db_id": "college_1", "gold_sql": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'", "pred_sql": "SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num WHERE enroll.class_code = 'ACCT-211' AND enroll.enroll_grade = 'C';"}
{"sample_id": 3228, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'", "pred_sql": "SELECT COUNT(DISTINCT class_section) AS section_count FROM class WHERE crs_code = 'ACCT-211';"}
{"sample_id": 3305, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "pred_sql": "SELECT employee.emp_fname, course.crs_description \nFROM employee \nJOIN professor ON employee.emp_num = professor.emp_num \nJOIN class ON professor.emp_num = class.prof_num \nJOIN course ON class.crs_code = course.crs_code;"}
{"sample_id": 3236, "db_id": "college_1", "gold_sql": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'", "pred_sql": "SELECT student.stu_fname FROM student JOIN enroll ON student.stu_num = enroll.stu_num JOIN class ON enroll.class_code = class.class_code WHERE class.class_code = 'ACCT-211';"}
{"sample_id": 3210, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code", "pred_sql": "SELECT d.dept_name, COUNT(e.stu_num) AS student_count \nFROM department d \nLEFT JOIN student s ON d.dept_code = s.dept_code \nLEFT JOIN enroll e ON s.stu_num = e.stu_num \nGROUP BY d.dept_name;"}
{"sample_id": 3304, "db_id": "college_1", "gold_sql": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "pred_sql": "SELECT employee.emp_fname, course.crs_description \nFROM professor \nJOIN course ON professor.dept_code = course.dept_code \nJOIN class ON course.crs_code = class.crs_code \nJOIN employee ON professor.emp_num = employee.emp_num;"}
{"sample_id": 3193, "db_id": "college_1", "gold_sql": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code", "pred_sql": "SELECT crs_code, COUNT(class_section) AS section_count FROM class GROUP BY crs_code;"}
{"sample_id": 3184, "db_id": "college_1", "gold_sql": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code", "pred_sql": "SELECT school_code, COUNT(DISTINCT dept_address) AS location_count FROM department GROUP BY school_code;"}
{"sample_id": 106, "db_id": "student_assessment", "gold_sql": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date", "pred_sql": "SELECT sr.student_id FROM student_course_registrations sr JOIN courses c ON sr.course_id = c.course_id WHERE c.course_name = 'statistics' ORDER BY sr.registration_date;"}
{"sample_id": 70, "db_id": "student_assessment", "gold_sql": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"", "pred_sql": "SELECT COUNT(DISTINCT student_course_attendance.student_id) AS number_of_students\nFROM student_course_attendance\nJOIN student_course_registrations ON student_course_attendance.student_id = student_course_registrations.student_id\nJOIN courses ON student_course_registrations.course_id = courses.course_id\nWHERE courses.course_name LIKE '%English%';"}
{"sample_id": 86, "db_id": "student_assessment", "gold_sql": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"", "pred_sql": "SELECT p.cell_mobile_number \nFROM people p \nJOIN candidates c ON p.person_id = c.candidate_id \nJOIN candidate_assessments ca ON c.candidate_id = ca.candidate_id \nWHERE ca.asessment_outcome_code = 'Fail';"}
{"sample_id": 103, "db_id": "student_assessment", "gold_sql": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "pred_sql": "SELECT s.student_id, s.student_details \nFROM students s \nJOIN student_course_registrations scr ON s.student_id = scr.student_id \nLEFT JOIN student_course_attendance sca ON scr.student_id = sca.student_id AND scr.course_id = sca.course_id \nWHERE sca.student_id IS NULL;"}
{"sample_id": 65, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM student_course_attendance", "pred_sql": "SELECT DISTINCT student_id FROM student_course_attendance;"}
{"sample_id": 89, "db_id": "student_assessment", "gold_sql": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1", "pred_sql": "SELECT student_id FROM student_course_registrations WHERE course_id = '301' ORDER BY registration_date DESC LIMIT 1;"}
{"sample_id": 81, "db_id": "student_assessment", "gold_sql": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "pred_sql": "SELECT courses.course_name, COUNT(student_course_registrations.student_id) AS registered_students_count\nFROM courses\nLEFT JOIN student_course_registrations ON courses.course_id = student_course_registrations.course_id\nGROUP BY courses.course_name;"}
{"sample_id": 73, "db_id": "student_assessment", "gold_sql": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\"", "pred_sql": "SELECT candidate_id FROM candidates INNER JOIN people ON candidates.candidate_id = people.person_id WHERE people.email_address = 'stanley.monahan@example.org';"}
{"sample_id": 84, "db_id": "student_assessment", "gold_sql": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"", "pred_sql": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = 'Pass';"}
{"sample_id": 107, "db_id": "student_assessment", "gold_sql": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance", "pred_sql": "SELECT DISTINCT student_course_attendance.student_id\nFROM student_course_attendance\nJOIN student_course_registrations ON student_course_attendance.student_id = student_course_registrations.student_id\nJOIN courses ON student_course_registrations.course_id = courses.course_id\nWHERE courses.course_name = 'Statistics'\nORDER BY student_course_attendance.date_of_attendance;"}
{"sample_id": 1700, "db_id": "epinions_1", "gold_sql": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)", "pred_sql": "SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating > (SELECT AVG(rating) FROM review);"}
{"sample_id": 1705, "db_id": "epinions_1", "gold_sql": "SELECT title FROM item ORDER BY title", "pred_sql": "SELECT title FROM item ORDER BY title ASC;"}
{"sample_id": 1711, "db_id": "epinions_1", "gold_sql": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1", "pred_sql": "SELECT u.name FROM useracct u JOIN review r ON u.u_id = r.u_id WHERE r.rating = (SELECT MAX(rating) FROM review)"}
{"sample_id": 1706, "db_id": "epinions_1", "gold_sql": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT u.name\nFROM useracct u\nJOIN review r ON u.u_id = r.u_id\nGROUP BY u.u_id\nORDER BY COUNT(r.a_id) DESC\nLIMIT 1;"}
{"sample_id": 1713, "db_id": "epinions_1", "gold_sql": "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id", "pred_sql": "SELECT u.name, AVG(t.trust) AS average_trust_score\nFROM useracct u\nJOIN trust t ON u.u_id = t.target_u_id\nGROUP BY u.u_id;"}
{"sample_id": 1708, "db_id": "epinions_1", "gold_sql": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1", "pred_sql": "SELECT item.title, item.i_id FROM item JOIN review ON item.i_id = review.i_id GROUP BY item.i_id ORDER BY AVG(review.rank) DESC LIMIT 1;"}
{"sample_id": 5640, "db_id": "railway", "gold_sql": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1", "pred_sql": "SELECT location FROM railway GROUP BY location HAVING COUNT(railway_id) > 1;"}
{"sample_id": 5629, "db_id": "railway", "gold_sql": "SELECT avg(Age) FROM manager", "pred_sql": "SELECT AVG(age) AS average_age FROM manager;"}
{"sample_id": 5633, "db_id": "railway", "gold_sql": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID", "pred_sql": "SELECT train.name AS train_name, railway.location AS railway_location FROM train JOIN railway ON train.railway_id = railway.railway_id;"}
{"sample_id": 5644, "db_id": "railway", "gold_sql": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC", "pred_sql": "SELECT name, working_year_starts FROM manager ORDER BY level DESC;"}
{"sample_id": 1752, "db_id": "gymnast", "gold_sql": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5", "pred_sql": "SELECT name FROM people ORDER BY age DESC LIMIT 5;"}
{"sample_id": 1738, "db_id": "gymnast", "gold_sql": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC", "pred_sql": "SELECT gymnast_id, total_points FROM gymnast ORDER BY total_points DESC;"}
{"sample_id": 1762, "db_id": "gymnast", "gold_sql": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT hometown, COUNT(*) as count FROM people INNER JOIN gymnast ON people.people_id = gymnast.gymnast_id GROUP BY hometown ORDER BY count DESC LIMIT 1;"}
{"sample_id": 1770, "db_id": "gymnast", "gold_sql": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20", "pred_sql": "SELECT DISTINCT hometown FROM people WHERE age > 23 OR age < 20;"}
{"sample_id": 1757, "db_id": "gymnast", "gold_sql": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "pred_sql": "SELECT AVG(age) AS average_age FROM people WHERE people_id IN (SELECT gymnast_id FROM gymnast);"}
{"sample_id": 1755, "db_id": "gymnast", "gold_sql": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1", "pred_sql": "SELECT total_points FROM gymnast JOIN people ON gymnast.gymnast_id = people.people_id WHERE age = (SELECT MIN(age) FROM people);"}
{"sample_id": 1749, "db_id": "gymnast", "gold_sql": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"", "pred_sql": "SELECT name FROM people WHERE people_id NOT IN (SELECT gymnast_id FROM gymnast WHERE gymnast_id IN (SELECT people_id FROM people WHERE hometown = 'Santo Domingo'));"}
{"sample_id": 1773, "db_id": "gymnast", "gold_sql": "SELECT count(DISTINCT Hometown) FROM people", "pred_sql": "SELECT COUNT(DISTINCT hometown) AS different_hometowns FROM people;"}
{"sample_id": 6513, "db_id": "wine_1", "gold_sql": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1", "pred_sql": "SELECT winery FROM wine WHERE score = (SELECT MAX(score) FROM wine);"}
{"sample_id": 6524, "db_id": "wine_1", "gold_sql": "SELECT Name FROM WINE WHERE score  >  90", "pred_sql": "SELECT DISTINCT name FROM wine WHERE score > '90';"}
{"sample_id": 6571, "db_id": "wine_1", "gold_sql": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation", "pred_sql": "SELECT wine.appelation, AVG(wine.price) AS average_price, AVG(wine.score) AS average_score FROM wine GROUP BY wine.appelation;"}
{"sample_id": 6518, "db_id": "wine_1", "gold_sql": "SELECT Name ,  Score FROM WINE", "pred_sql": "SELECT name, score FROM wine;"}
{"sample_id": 6567, "db_id": "wine_1", "gold_sql": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"", "pred_sql": "SELECT MAX(price) AS max_price, MAX(score) AS max_score FROM wine WHERE appelation = 'St. Helena';"}
{"sample_id": 6533, "db_id": "wine_1", "gold_sql": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"", "pred_sql": "SELECT COUNT(*) FROM appellations WHERE county = 'Napa County';"}
{"sample_id": 6579, "db_id": "wine_1", "gold_sql": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)", "pred_sql": "SELECT name FROM wine WHERE price > (SELECT MAX(price) FROM wine WHERE year = '2006')"}
{"sample_id": 6561, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010", "pred_sql": "SELECT DISTINCT name FROM wine WHERE year < '2000' OR year > '2010';"}
{"sample_id": 6566, "db_id": "wine_1", "gold_sql": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"", "pred_sql": "SELECT MAX(price) AS max_price, MAX(score) AS max_score FROM wine WHERE appelation = 'St. Helena';"}
{"sample_id": 6539, "db_id": "wine_1", "gold_sql": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005", "pred_sql": "SELECT MAX(price) AS max_price FROM wine WHERE appelation IN (SELECT appelation FROM appellations WHERE area = 'Central Coast') AND year < '2005';"}
{"sample_id": 6519, "db_id": "wine_1", "gold_sql": "SELECT Name ,  Score FROM WINE", "pred_sql": "SELECT name, score FROM wine;"}
{"sample_id": 6583, "db_id": "wine_1", "gold_sql": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR", "pred_sql": "SELECT wine.grape, wine.winery, wine.year FROM wine WHERE wine.price > 100 ORDER BY wine.year;"}
{"sample_id": 6540, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90", "pred_sql": "SELECT DISTINCT g.grape FROM grapes g JOIN wine w ON g.grape = w.grape WHERE g.color = 'white' AND w.score > '90';"}
{"sample_id": 6548, "db_id": "wine_1", "gold_sql": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR", "pred_sql": "SELECT year, AVG(price) AS average_price FROM wine GROUP BY year;"}
{"sample_id": 6552, "db_id": "wine_1", "gold_sql": "SELECT DISTINCT Name FROM WINE ORDER BY Name", "pred_sql": "SELECT DISTINCT name FROM wine ORDER BY name ASC;"}
{"sample_id": 6557, "db_id": "wine_1", "gold_sql": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT a.area FROM appellations a JOIN wine w ON a.appelation = w.appelation WHERE w.year < '2010' GROUP BY a.no ORDER BY COUNT(w.no) DESC LIMIT 1;"}
{"sample_id": 5695, "db_id": "dorm_1", "gold_sql": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'", "pred_sql": "SELECT d.dorm_name \nFROM dorm d \nJOIN has_amenity ha1 ON d.dormid = ha1.dormid \nJOIN dorm_amenity da1 ON ha1.amenid = da1.amenid \nJOIN has_amenity ha2 ON d.dormid = ha2.dormid \nJOIN dorm_amenity da2 ON ha2.amenid = da2.amenid \nWHERE da1.amenity_name = 'TV Lounge' \nAND da2.amenity_name = 'Study Room';"}
{"sample_id": 5753, "db_id": "dorm_1", "gold_sql": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'", "pred_sql": "SELECT dorm.dorm_name FROM dorm LEFT JOIN has_amenity ON dorm.dormid = has_amenity.dormid LEFT JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name != 'TV Lounge' OR dorm_amenity.amenity_name IS NULL;"}
{"sample_id": 5711, "db_id": "dorm_1", "gold_sql": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name", "pred_sql": "SELECT da.amenity_name FROM dorm_amenity da JOIN has_amenity ha ON da.amenid = ha.amenid JOIN dorm d ON ha.dormid = d.dormid WHERE d.dorm_name = 'Anonymous Donor Hall' ORDER BY da.amenity_name ASC;"}
{"sample_id": 5709, "db_id": "dorm_1", "gold_sql": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age", "pred_sql": "SELECT fname, lname FROM student WHERE city_code != 'HKG' ORDER BY age;"}
{"sample_id": 5676, "db_id": "dorm_1", "gold_sql": "SELECT sum(student_capacity) FROM dorm", "pred_sql": "SELECT SUM(student_capacity) AS total_capacity FROM dorm;"}
{"sample_id": 5714, "db_id": "dorm_1", "gold_sql": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender", "pred_sql": "SELECT gender, COUNT(dormid) AS total_dorms, SUM(student_capacity) AS total_capacity FROM dorm GROUP BY gender;"}
{"sample_id": 5702, "db_id": "dorm_1", "gold_sql": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1", "pred_sql": "SELECT dorm_name FROM dorm WHERE student_capacity = (SELECT MAX(student_capacity) FROM dorm);"}
{"sample_id": 5662, "db_id": "dorm_1", "gold_sql": "SELECT dorm_name FROM dorm WHERE gender  =  'F'", "pred_sql": "SELECT dorm_name FROM dorm WHERE gender = 'female';"}
{"sample_id": 5730, "db_id": "dorm_1", "gold_sql": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "pred_sql": "SELECT dorm.dorm_name, AVG(CAST(student.age AS INTEGER)) AS average_age FROM dorm JOIN lives_in ON dorm.dormid = lives_in.dormid JOIN student ON lives_in.stuid = student.stuid GROUP BY dorm.dorm_name;"}
{"sample_id": 5724, "db_id": "dorm_1", "gold_sql": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "pred_sql": "SELECT city_code, COUNT(stuid) AS student_count FROM student GROUP BY city_code HAVING COUNT(stuid) > 1;"}
{"sample_id": 5667, "db_id": "dorm_1", "gold_sql": "SELECT fname FROM student WHERE age  >  20", "pred_sql": "SELECT fname FROM student WHERE age > '20';"}
{"sample_id": 5705, "db_id": "dorm_1", "gold_sql": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT city_code, COUNT(*) as student_count FROM student GROUP BY city_code ORDER BY student_count DESC LIMIT 1;"}
{"sample_id": 5681, "db_id": "dorm_1", "gold_sql": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'", "pred_sql": "SELECT AVG(dorm.student_capacity) AS average_capacity, SUM(dorm.student_capacity) AS total_capacity FROM dorm JOIN lives_in ON dorm.dormid = lives_in.dormid JOIN student ON lives_in.stuid = student.stuid WHERE student.sex = 'X';"}
{"sample_id": 5671, "db_id": "dorm_1", "gold_sql": "SELECT count(*) FROM dorm", "pred_sql": "SELECT COUNT(*) AS total_dorms FROM dorm;"}
{"sample_id": 5670, "db_id": "dorm_1", "gold_sql": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25", "pred_sql": "SELECT fname FROM student WHERE age BETWEEN '20' AND '25' AND city_code = 'PHL';"}
{"sample_id": 5708, "db_id": "dorm_1", "gold_sql": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "pred_sql": "SELECT fname, lname FROM student WHERE age < (SELECT AVG(age) FROM student);"}
{"sample_id": 5742, "db_id": "dorm_1", "gold_sql": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'", "pred_sql": "SELECT COUNT(*) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON lives_in.dormid = dorm.dormid WHERE student.sex = 'female' AND dorm.dorm_name = 'Smith Hall';"}
{"sample_id": 5701, "db_id": "dorm_1", "gold_sql": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1", "pred_sql": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1;"}
{"sample_id": 5718, "db_id": "dorm_1", "gold_sql": "SELECT count(*) ,  major FROM student GROUP BY major", "pred_sql": "SELECT major, COUNT(*) AS student_count FROM student GROUP BY major;"}
{"sample_id": 5738, "db_id": "dorm_1", "gold_sql": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)", "pred_sql": "SELECT AVG(age) AS average_age FROM student WHERE stuid IN (SELECT stuid FROM lives_in WHERE dormid = (SELECT dormid FROM dorm ORDER BY student_capacity DESC LIMIT 1));"}
{"sample_id": 1240, "db_id": "apartment_rentals", "gold_sql": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"", "pred_sql": "SELECT SUM(a.room_count) AS total_rooms\nFROM apartments a\nJOIN apartment_facilities af ON a.apt_id = af.apt_id\nWHERE af.facility_code = 'Gym';"}
{"sample_id": 1207, "db_id": "apartment_rentals", "gold_sql": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "pred_sql": "SELECT MIN(bathroom_count) AS min_bathroom_count, MAX(bathroom_count) AS max_bathroom_count FROM apartments;"}
{"sample_id": 1261, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT apt_type_code, COUNT(*) as count FROM apartments GROUP BY apt_type_code ORDER BY count DESC LIMIT 1;"}
{"sample_id": 1211, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_number ,  room_count FROM Apartments", "pred_sql": "SELECT apt_number, room_count FROM apartments;"}
{"sample_id": 1257, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3", "pred_sql": "SELECT apt_type_code, AVG(room_count) AS average_room_count\nFROM apartments\nGROUP BY apt_type_code\nORDER BY average_room_count DESC\nLIMIT 3;"}
{"sample_id": 1233, "db_id": "apartment_rentals", "gold_sql": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "pred_sql": "SELECT guests.guest_first_name, apartment_bookings.booking_start_date, apartment_bookings.booking_end_date FROM apartment_bookings JOIN guests ON apartment_bookings.guest_id = guests.guest_id;"}
{"sample_id": 1209, "db_id": "apartment_rentals", "gold_sql": "SELECT avg(bedroom_count) FROM Apartments", "pred_sql": "SELECT AVG(bedroom_count) AS average_bedrooms FROM apartments;"}
{"sample_id": 1263, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT apt_type_code, COUNT(*) AS count\nFROM apartments\nWHERE bathroom_count > 1\nGROUP BY apt_type_code\nORDER BY count DESC\nLIMIT 1;"}
{"sample_id": 1253, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "pred_sql": "SELECT apt_number FROM apartments ORDER BY bedroom_count DESC LIMIT 1;"}
{"sample_id": 1238, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4", "pred_sql": "SELECT DISTINCT af.facility_code \nFROM apartments a \nJOIN apartment_facilities af ON a.apt_id = af.apt_id \nWHERE a.bedroom_count > 4;"}
{"sample_id": 1262, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT apt_type_code, COUNT(*) as count\nFROM apartments\nWHERE bathroom_count > 1\nGROUP BY apt_type_code\nORDER BY count DESC\nLIMIT 1;"}
{"sample_id": 1273, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "pred_sql": "SELECT a.apt_number FROM apartments a JOIN view_unit_status vs ON a.apt_id = vs.apt_id WHERE vs.available_yn IN ('Yes', 'No') GROUP BY a.apt_number HAVING COUNT(DISTINCT vs.available_yn) = 2;"}
{"sample_id": 1223, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "pred_sql": "SELECT ab.booking_start_date, ab.booking_end_date \nFROM apartments a \nJOIN apartment_bookings ab ON a.apt_id = ab.apt_id \nWHERE a.apt_type_code = 'Duplex';"}
{"sample_id": 1225, "db_id": "apartment_rentals", "gold_sql": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "pred_sql": "SELECT ab.booking_start_date, ab.booking_end_date \nFROM apartments a \nJOIN apartment_bookings ab ON a.apt_id = ab.apt_id \nWHERE a.bedroom_count > 2;"}
{"sample_id": 1255, "db_id": "apartment_rentals", "gold_sql": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "pred_sql": "SELECT apt_type_code, COUNT(*) AS apartment_count FROM apartments GROUP BY apt_type_code ORDER BY apartment_count ASC;"}
{"sample_id": 1212, "db_id": "apartment_rentals", "gold_sql": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"", "pred_sql": "SELECT AVG(room_count) AS average_rooms FROM apartments WHERE apt_type_code = 'Studio';"}
{"sample_id": 3872, "db_id": "insurance_policies", "gold_sql": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT payment_method_code, COUNT(*) AS usage_count FROM payments GROUP BY payment_method_code ORDER BY usage_count DESC LIMIT 1;"}
{"sample_id": 3854, "db_id": "insurance_policies", "gold_sql": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "pred_sql": "SELECT c.date_claim_made, s.date_claim_settled \nFROM claims c \nJOIN settlements s ON c.claim_id = s.claim_id \nWHERE s.amount_claimed > (SELECT AVG(amount_claimed) FROM settlements);"}
{"sample_id": 3848, "db_id": "insurance_policies", "gold_sql": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC", "pred_sql": "SELECT payment_method_code, date_payment_made, amount_payment FROM payments ORDER BY date_payment_made ASC;"}
{"sample_id": 3870, "db_id": "insurance_policies", "gold_sql": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "pred_sql": "SELECT settlements.date_claim_made, settlements.date_claim_settled FROM settlements;"}
{"sample_id": 3845, "db_id": "insurance_policies", "gold_sql": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id", "pred_sql": "SELECT c.customer_id, c.customer_details \nFROM customers c \nJOIN customer_policies cp ON c.customer_id = cp.customer_id \nLEFT JOIN claims cl ON cp.policy_id = cl.policy_id \nGROUP BY c.customer_id \nHAVING COUNT(cp.policy_id) >= 2 AND COUNT(cl.claim_id) = 0;"}
{"sample_id": 3860, "db_id": "insurance_policies", "gold_sql": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT claims.claim_id, claims.date_claim_made, COUNT(settlements.settlement_id) AS settlement_count\nFROM claims\nJOIN settlements ON claims.claim_id = settlements.claim_id\nGROUP BY claims.claim_id, claims.date_claim_made\nORDER BY settlement_count DESC\nLIMIT 1;"}
{"sample_id": 3849, "db_id": "insurance_policies", "gold_sql": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1", "pred_sql": "SELECT settlements.amount_settled, claims.amount_claimed \nFROM claims \nJOIN settlements ON claims.claim_id = settlements.claim_id \nWHERE claims.amount_claimed = (SELECT MAX(amount_claimed) FROM claims);"}
{"sample_id": 3850, "db_id": "insurance_policies", "gold_sql": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1", "pred_sql": "SELECT settlements.amount_settled, claims.amount_claimed \nFROM settlements \nJOIN claims ON settlements.claim_id = claims.claim_id \nWHERE claims.amount_claimed = (SELECT MAX(amount_claimed) FROM claims);"}
{"sample_id": 3866, "db_id": "insurance_policies", "gold_sql": "SELECT sum(Amount_Settled) FROM Settlements", "pred_sql": "SELECT SUM(amount_settled) AS total_settlement FROM settlements;"}
{"sample_id": 6819, "db_id": "flight_4", "gold_sql": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "pred_sql": "SELECT COUNT(*) AS route_count FROM routes WHERE airline = 'American Airlines';"}
{"sample_id": 6855, "db_id": "flight_4", "gold_sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "pred_sql": "SELECT src_ap, COUNT(rid) AS route_count FROM routes GROUP BY src_ap ORDER BY route_count DESC;"}
{"sample_id": 6845, "db_id": "flight_4", "gold_sql": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "pred_sql": "SELECT COUNT(DISTINCT city) AS number_of_cities FROM airports WHERE country = 'United States' GROUP BY city HAVING COUNT(apid) > 3;"}
{"sample_id": 6818, "db_id": "flight_4", "gold_sql": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "pred_sql": "SELECT COUNT(*) AS number_of_routes FROM routes WHERE airline = 'American Airlines';"}
{"sample_id": 6871, "db_id": "flight_4", "gold_sql": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "pred_sql": "SELECT rid FROM routes WHERE src_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'United States');"}
{"sample_id": 6811, "db_id": "flight_4", "gold_sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "pred_sql": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;"}
{"sample_id": 6801, "db_id": "flight_4", "gold_sql": "SELECT count(*) FROM airlines", "pred_sql": "SELECT COUNT(*) AS total_airlines FROM airlines;"}
{"sample_id": 6831, "db_id": "flight_4", "gold_sql": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT airports.name, airports.city \nFROM airports \nJOIN routes ON airports.apid = routes.src_apid \nGROUP BY airports.apid \nORDER BY COUNT(routes.rid) DESC \nLIMIT 1;"}
{"sample_id": 6870, "db_id": "flight_4", "gold_sql": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "pred_sql": "SELECT rid FROM routes WHERE src_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'United States');"}
{"sample_id": 6836, "db_id": "flight_4", "gold_sql": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT country, COUNT(*) AS airline_count FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY airline_count DESC;"}
{"sample_id": 6877, "db_id": "flight_4", "gold_sql": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT dst_ap FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'China' GROUP BY dst_ap ORDER BY COUNT(*) DESC LIMIT 1;"}
{"sample_id": 6823, "db_id": "flight_4", "gold_sql": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "pred_sql": "SELECT name, city, country FROM airports ORDER BY elevation ASC LIMIT 1;"}
{"sample_id": 6828, "db_id": "flight_4", "gold_sql": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "pred_sql": "SELECT airline, COUNT(*) AS route_count FROM routes GROUP BY airline ORDER BY route_count DESC LIMIT 10;"}
{"sample_id": 6827, "db_id": "flight_4", "gold_sql": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT airports.name, airports.city\nFROM airports\nJOIN routes ON airports.apid = routes.dst_apid\nGROUP BY airports.apid, airports.name, airports.city\nORDER BY COUNT(routes.rid) DESC\nLIMIT 1;"}
{"sample_id": 6854, "db_id": "flight_4", "gold_sql": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "pred_sql": "SELECT airports.name AS airport_name, COUNT(routes.rid) AS number_of_routes\nFROM routes\nJOIN airports ON routes.src_apid = airports.apid\nGROUP BY airports.name\nORDER BY number_of_routes DESC;"}
{"sample_id": 6838, "db_id": "flight_4", "gold_sql": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "pred_sql": "SELECT country, COUNT(*) AS number_of_airlines FROM airlines GROUP BY country ORDER BY number_of_airlines DESC;"}
{"sample_id": 2193, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC", "pred_sql": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC;"}
{"sample_id": 2214, "db_id": "formula_1", "gold_sql": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"", "pred_sql": "SELECT MAX(l.fastestlapspeed) AS max_fastest_lap_speed\nFROM races r\nJOIN results res ON r.raceid = res.raceid\nJOIN laptimes l ON res.raceid = l.raceid AND res.driverid = l.driverid\nWHERE r.name = 'Monaco Grand Prix' AND r.year = 2008;"}
{"sample_id": 2208, "db_id": "formula_1", "gold_sql": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "pred_sql": "SELECT circuitid, location FROM circuits WHERE country IN ('France', 'Belgium');"}
{"sample_id": 2218, "db_id": "formula_1", "gold_sql": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "pred_sql": "SELECT r.name AS race_name, AVG(l.fastestlapspeed) AS average_fastest_lap_speed \nFROM races r \nJOIN laptimes l ON r.raceid = l.raceid \nWHERE r.year > 2004 \nGROUP BY r.name \nORDER BY r.year;"}
{"sample_id": 2148, "db_id": "formula_1", "gold_sql": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1", "pred_sql": "SELECT name, date FROM races ORDER BY date DESC LIMIT 1;"}
{"sample_id": 2154, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "pred_sql": "SELECT DISTINCT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid WHERE l.time < 93000;"}
{"sample_id": 2204, "db_id": "formula_1", "gold_sql": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT drivers.driverid, drivers.surname\nFROM results\nJOIN drivers ON results.driverid = drivers.driverid\nJOIN races ON results.raceid = races.raceid\nWHERE races.year > 2010\nGROUP BY drivers.driverid\nORDER BY COUNT(results.raceid) DESC\nLIMIT 1;"}
{"sample_id": 2147, "db_id": "formula_1", "gold_sql": "SELECT name FROM races ORDER BY date DESC LIMIT 1", "pred_sql": "SELECT name FROM races ORDER BY date DESC LIMIT 1;"}
{"sample_id": 2155, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "pred_sql": "SELECT DISTINCT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid WHERE l.time < 93000;"}
{"sample_id": 2159, "db_id": "formula_1", "gold_sql": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1", "pred_sql": "SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid WHERE l.time = (SELECT MIN(time) FROM laptimes)"}
{"sample_id": 2191, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "pred_sql": "SELECT p.driverid, p.duration FROM pitstops p WHERE p.duration > (SELECT duration FROM pitstops WHERE raceid = 841)"}
{"sample_id": 2153, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017", "pred_sql": "SELECT DISTINCT name FROM races WHERE year BETWEEN 2014 AND 2017;"}
{"sample_id": 2211, "db_id": "formula_1", "gold_sql": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5", "pred_sql": "SELECT name FROM constructors WHERE nationality = 'Japanese' AND constructorid IN (SELECT constructorid FROM constructorresults GROUP BY constructorid HAVING SUM(points) > 5);"}
{"sample_id": 2156, "db_id": "formula_1", "gold_sql": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "pred_sql": "SELECT DISTINCT drivers.driverid, drivers.nationality FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE laptimes.time > 100000;"}
{"sample_id": 2171, "db_id": "formula_1", "gold_sql": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "pred_sql": "SELECT forename, surname FROM drivers WHERE nationality = 'German';"}
{"sample_id": 2183, "db_id": "formula_1", "gold_sql": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid", "pred_sql": "SELECT constructorid, COUNT(raceid) AS race_count FROM constructorresults GROUP BY constructorid;"}
{"sample_id": 1100, "db_id": "match_season", "gold_sql": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2", "pred_sql": "SELECT college FROM match_season GROUP BY college HAVING COUNT(player) >= 2;"}
{"sample_id": 1087, "db_id": "match_season", "gold_sql": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "pred_sql": "SELECT COUNT(DISTINCT college) AS different_colleges FROM match_season WHERE team = (SELECT team_id FROM team WHERE name = 'Columbus Crew');"}
{"sample_id": 1078, "db_id": "match_season", "gold_sql": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"", "pred_sql": "SELECT DISTINCT c.official_native_language \nFROM country c \nJOIN match_season ms ON c.country_id = ms.country \nWHERE ms.college IN ('Maryland', 'Duke');"}
{"sample_id": 1081, "db_id": "match_season", "gold_sql": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"", "pred_sql": "SELECT COUNT(DISTINCT c.official_native_language) AS different_languages\nFROM match_season ms\nJOIN country c ON ms.country = c.country_id\nWHERE ms.position = 'Defender';"}
{"sample_id": 1105, "db_id": "match_season", "gold_sql": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)", "pred_sql": "SELECT name FROM team WHERE team_id NOT IN (SELECT DISTINCT team FROM match_season);"}
{"sample_id": 1080, "db_id": "match_season", "gold_sql": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"", "pred_sql": "SELECT COUNT(DISTINCT c.official_native_language) AS distinct_languages\nFROM match_season ms\nJOIN country c ON ms.country = c.country_id\nWHERE ms.position = 'defender';"}
{"sample_id": 1109, "db_id": "match_season", "gold_sql": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"", "pred_sql": "SELECT DISTINCT college FROM match_season WHERE position IN ('Midfielder', 'Defender');"}
{"sample_id": 1093, "db_id": "match_season", "gold_sql": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name", "pred_sql": "SELECT country, COUNT(player) AS player_count FROM match_season GROUP BY country;"}
{"sample_id": 1059, "db_id": "match_season", "gold_sql": "SELECT DISTINCT POSITION FROM match_season", "pred_sql": "SELECT DISTINCT position FROM match_season;"}
{"sample_id": 1058, "db_id": "match_season", "gold_sql": "SELECT DISTINCT POSITION FROM match_season", "pred_sql": "SELECT DISTINCT position FROM match_season;"}
{"sample_id": 1054, "db_id": "match_season", "gold_sql": "SELECT Country_name ,  Capital FROM country", "pred_sql": "SELECT country_name, capital FROM country;"}
{"sample_id": 1810, "db_id": "small_bank_1", "gold_sql": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1", "pred_sql": "SELECT s.balance FROM savings s JOIN checking c ON s.custid = c.custid WHERE c.balance = (SELECT MAX(balance) FROM checking)"}
{"sample_id": 1823, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "pred_sql": "SELECT a.name, (s.balance + c.balance) AS total_balance FROM accounts a JOIN savings s ON a.custid = s.custid JOIN checking c ON a.custid = c.custid WHERE s.balance < c.balance;"}
{"sample_id": 1818, "db_id": "small_bank_1", "gold_sql": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "pred_sql": "SELECT a.name, c.balance AS checking_balance, s.balance AS savings_balance\nFROM accounts a\nJOIN checking c ON a.custid = c.custid\nJOIN savings s ON a.custid = s.custid\nORDER BY (c.balance + s.balance) DESC;"}
{"sample_id": 1789, "db_id": "small_bank_1", "gold_sql": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'", "pred_sql": "SELECT checking.balance FROM checking JOIN accounts ON checking.custid = accounts.custid WHERE accounts.name LIKE '%ee%';"}
{"sample_id": 1805, "db_id": "small_bank_1", "gold_sql": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "pred_sql": "SELECT a.name, COUNT(c.custid) AS checking_account_count \nFROM accounts a \nLEFT JOIN checking c ON a.custid = c.custid \nGROUP BY a.custid;"}
{"sample_id": 1824, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3", "pred_sql": "SELECT accounts.name, savings.balance FROM accounts JOIN savings ON accounts.custid = savings.custid ORDER BY savings.balance DESC LIMIT 3;"}
{"sample_id": 1820, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "pred_sql": "SELECT a.name FROM accounts a JOIN savings s ON a.custid = s.custid JOIN checking c ON a.custid = c.custid WHERE c.balance > s.balance;"}
{"sample_id": 1795, "db_id": "small_bank_1", "gold_sql": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "pred_sql": "SELECT checking.custid, checking.balance FROM checking JOIN savings ON checking.custid = savings.custid WHERE savings.balance > (SELECT AVG(balance) FROM savings);"}
{"sample_id": 1817, "db_id": "small_bank_1", "gold_sql": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "pred_sql": "SELECT accounts.name, checking.balance AS checking_balance, savings.balance AS savings_balance \nFROM accounts \nJOIN checking ON accounts.custid = checking.custid \nJOIN savings ON accounts.custid = savings.custid;"}
{"sample_id": 1799, "db_id": "small_bank_1", "gold_sql": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1", "pred_sql": "SELECT a.name FROM accounts a JOIN savings s ON a.custid = s.custid JOIN checking c ON a.custid = c.custid ORDER BY (s.balance + c.balance) ASC LIMIT 1;"}
{"sample_id": 923, "db_id": "insurance_fnol", "gold_sql": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"", "pred_sql": "SELECT DISTINCT c.customer_name\nFROM customers c\nJOIN first_notification_of_loss fnol1 ON c.customer_id = fnol1.customer_id\nJOIN services s1 ON fnol1.service_id = s1.service_id\nJOIN first_notification_of_loss fnol2 ON c.customer_id = fnol2.customer_id\nJOIN services s2 ON fnol2.service_id = s2.service_id\nWHERE s1.service_name = 'Close a policy' AND s2.service_name = 'New policy application';"}
{"sample_id": 905, "db_id": "insurance_fnol", "gold_sql": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1", "pred_sql": "SELECT c.effective_date\nFROM claims c\nJOIN settlements s ON c.claim_id = s.claim_id\nGROUP BY c.claim_id\nORDER BY SUM(s.settlement_amount) DESC\nLIMIT 1;"}
{"sample_id": 908, "db_id": "insurance_fnol", "gold_sql": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"", "pred_sql": "SELECT COUNT(*) AS total_policies\nFROM customers c\nJOIN customers_policies cp ON c.customer_id = cp.customer_id\nWHERE c.customer_name = 'Dayana Robel';"}
{"sample_id": 926, "db_id": "insurance_fnol", "gold_sql": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"", "pred_sql": "SELECT customer_id FROM customers WHERE customer_name LIKE '%Diana%';"}
{"sample_id": 899, "db_id": "insurance_fnol", "gold_sql": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4", "pred_sql": "SELECT ap.policy_type_code\nFROM available_policies ap\nJOIN customers_policies cp ON ap.policy_id = cp.policy_id\nGROUP BY ap.policy_type_code\nHAVING COUNT(DISTINCT cp.customer_id) > 4;"}
{"sample_id": 893, "db_id": "insurance_fnol", "gold_sql": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"", "pred_sql": "SELECT ap.customer_phone FROM available_policies ap JOIN customers_policies cp ON ap.policy_id = cp.policy_id JOIN services s ON s.service_id = cp.policy_id WHERE s.service_name = 'Life Insurance';"}
{"sample_id": 900, "db_id": "insurance_fnol", "gold_sql": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4", "pred_sql": "SELECT ap.policy_type_code\nFROM available_policies ap\nJOIN customers_policies cp ON ap.policy_id = cp.policy_id\nGROUP BY ap.policy_type_code\nHAVING COUNT(DISTINCT cp.customer_id) > 4;"}
{"sample_id": 894, "db_id": "insurance_fnol", "gold_sql": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"", "pred_sql": "SELECT available_policies.customer_phone \nFROM available_policies \nJOIN customers_policies ON available_policies.policy_id = customers_policies.policy_id \nJOIN services ON services.service_id = available_policies.policy_type_code \nWHERE services.service_name = 'Life Insurance';"}
{"sample_id": 3657, "db_id": "baseball_1", "gold_sql": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "pred_sql": "SELECT name_first, name_last FROM player WHERE weight > 220 OR height < 75;"}
{"sample_id": 3622, "db_id": "baseball_1", "gold_sql": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT c.name_full, c.college_id\nFROM college c\nJOIN player_college pc ON c.college_id = pc.college_id\nGROUP BY c.college_id\nORDER BY COUNT(pc.player_id) DESC\nLIMIT 1;"}
{"sample_id": 3624, "db_id": "baseball_1", "gold_sql": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'", "pred_sql": "SELECT AVG(salary.salary) AS average_salary\nFROM salary\nJOIN team ON salary.team_id = team.team_id\nWHERE team.name = 'Boston Red Stockings';"}
{"sample_id": 3676, "db_id": "baseball_1", "gold_sql": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001", "pred_sql": "SELECT player_id, salary FROM salary WHERE year IN (2010, 2001);"}
{"sample_id": 3694, "db_id": "baseball_1", "gold_sql": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;", "pred_sql": "SELECT team_id, attendance FROM home_game WHERE year = 1980 ORDER BY attendance ASC LIMIT 1;"}
{"sample_id": 3628, "db_id": "baseball_1", "gold_sql": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT p.name_first, p.name_last, p.player_id, COUNT(a.player_id) AS all_star_count\nFROM all_star AS a\nJOIN player AS p ON a.player_id = p.player_id\nGROUP BY a.player_id\nORDER BY all_star_count DESC\nLIMIT 1;"}
{"sample_id": 3661, "db_id": "baseball_1", "gold_sql": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;", "pred_sql": "SELECT COUNT(*) AS losses_count \nFROM postseason \nWHERE year = 2009 AND team_id_loser = (SELECT team_id FROM team WHERE name = 'Boston Red Stockings')"}
{"sample_id": 3670, "db_id": "baseball_1", "gold_sql": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010", "pred_sql": "SELECT SUM(salary) AS total_salary FROM salary WHERE team_id = (SELECT team_id FROM team WHERE name = 'Boston Red Stockings' AND year = 2010) AND year = 2010;"}
{"sample_id": 3647, "db_id": "baseball_1", "gold_sql": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';", "pred_sql": "SELECT COUNT(*) AS player_count FROM player WHERE birth_country = 'USA' AND bats = 'R';"}
{"sample_id": 3629, "db_id": "baseball_1", "gold_sql": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "pred_sql": "SELECT p.name_first, p.name_last, p.player_id, COUNT(a.year) AS all_star_appearances\nFROM all_star AS a\nJOIN player AS p ON a.player_id = p.player_id\nGROUP BY p.player_id\nORDER BY all_star_appearances DESC\nLIMIT 1;"}
{"sample_id": 3671, "db_id": "baseball_1", "gold_sql": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010", "pred_sql": "SELECT SUM(salary) AS total_salary_expenses \nFROM salary \nWHERE team_id = (SELECT team_id FROM team WHERE name = 'Boston Red Stockings' AND year = 2010) \nAND year = 2010;"}
{"sample_id": 3640, "db_id": "baseball_1", "gold_sql": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "pred_sql": "SELECT p.player_id, p.name_first, p.name_last, COUNT(pa.award_id) AS award_count\nFROM player p\nJOIN player_award pa ON p.player_id = pa.player_id\nGROUP BY p.player_id\nORDER BY award_count DESC\nLIMIT 3;"}
{"sample_id": 3689, "db_id": "baseball_1", "gold_sql": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;", "pred_sql": "SELECT SUM(salary.salary) AS total_salary\nFROM salary\nJOIN player ON salary.player_id = player.player_id\nWHERE player.name_first = 'Len' AND player.name_last = 'Barker' AND salary.year BETWEEN 1985 AND 1990;"}
{"sample_id": 3703, "db_id": "baseball_1", "gold_sql": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;", "pred_sql": "SELECT park.park_name, home_game.attendance \nFROM home_game \nJOIN park ON home_game.park_id = park.park_id \nWHERE home_game.year = 2008 \nORDER BY home_game.attendance DESC \nLIMIT 1;"}
{"sample_id": 3692, "db_id": "baseball_1", "gold_sql": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;", "pred_sql": "SELECT SUM(games) AS total_home_games FROM home_game WHERE team_id = (SELECT team_id FROM team WHERE name = 'Boston Red Stockings') AND year BETWEEN 1990 AND 2000;"}
{"sample_id": 3678, "db_id": "baseball_1", "gold_sql": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;", "pred_sql": "SELECT yearid, COUNT(*) as num_inducted FROM hall_of_fame WHERE inducted = 'Y' GROUP BY yearid ORDER BY num_inducted ASC LIMIT 1;"}
{"sample_id": 319, "db_id": "product_catalog", "gold_sql": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1", "pred_sql": "SELECT cs.catalog_level_name \nFROM catalogs c \nJOIN catalog_structure cs ON c.catalog_id = cs.catalog_id \nJOIN catalog_contents cc ON cs.catalog_level_number = cc.catalog_level_number \nORDER BY cc.price_in_dollars ASC \nLIMIT 1;"}
{"sample_id": 312, "db_id": "product_catalog", "gold_sql": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT catalog_publisher, COUNT(catalog_id) AS catalog_count \nFROM catalogs \nGROUP BY catalog_publisher \nORDER BY catalog_count DESC \nLIMIT 1;"}
{"sample_id": 342, "db_id": "product_catalog", "gold_sql": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8", "pred_sql": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > '8';"}
{"sample_id": 301, "db_id": "product_catalog", "gold_sql": "SELECT distinct(catalog_entry_name) FROM catalog_contents", "pred_sql": "SELECT catalog_entry_name FROM catalog_contents;"}
{"sample_id": 317, "db_id": "product_catalog", "gold_sql": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1", "pred_sql": "SELECT cc.catalog_entry_name\nFROM catalog_contents cc\nJOIN catalogs c ON cc.catalog_level_number = c.catalog_id\nWHERE c.catalog_id = (\n    SELECT catalog_id\n    FROM catalogs\n    ORDER BY date_of_publication DESC\n    LIMIT 1\n) \nORDER BY cc.price_in_dollars DESC\nLIMIT 1;"}
{"sample_id": 303, "db_id": "product_catalog", "gold_sql": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3", "pred_sql": "SELECT attribute_data_type FROM attribute_definitions GROUP BY attribute_data_type HAVING COUNT(attribute_id) > 3;"}
{"sample_id": 307, "db_id": "product_catalog", "gold_sql": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "pred_sql": "SELECT catalog_level_name, catalog_level_number FROM catalog_structure WHERE catalog_level_number BETWEEN '5' AND '10';"}
{"sample_id": 308, "db_id": "product_catalog", "gold_sql": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "pred_sql": "SELECT catalog_level_name, catalog_level_number FROM catalog_structure WHERE catalog_level_number BETWEEN '5' AND '10';"}
{"sample_id": 1914, "db_id": "protein_institute", "gold_sql": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)", "pred_sql": "SELECT COUNT(*) AS building_count FROM building WHERE height_feet > (SELECT AVG(height_feet) FROM building) OR floors > (SELECT AVG(floors) FROM building);"}
{"sample_id": 1926, "db_id": "protein_institute", "gold_sql": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'", "pred_sql": "SELECT COUNT(*) FROM protein p JOIN institution i ON p.institution_id = i.institution_id WHERE i.founded > '1880' OR i.type = 'Private';"}
{"sample_id": 1912, "db_id": "protein_institute", "gold_sql": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1", "pred_sql": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1;"}
{"sample_id": 1911, "db_id": "protein_institute", "gold_sql": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors", "pred_sql": "SELECT name, street_address, floors FROM building ORDER BY floors;"}
{"sample_id": 1383, "db_id": "college_2", "gold_sql": "SELECT * FROM instructor ORDER BY salary", "pred_sql": "SELECT * FROM instructor ORDER BY salary ASC;"}
{"sample_id": 1402, "db_id": "college_2", "gold_sql": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR", "pred_sql": "SELECT semester, year, COUNT(course_id) AS number_of_courses FROM section GROUP BY semester, year;"}
{"sample_id": 1439, "db_id": "college_2", "gold_sql": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1", "pred_sql": "SELECT instructor.name \nFROM instructor \nJOIN advisor ON instructor.id = advisor.i_id \nJOIN student ON advisor.s_id = student.id \nWHERE student.tot_cred = (SELECT MAX(tot_cred) FROM student);"}
{"sample_id": 1404, "db_id": "college_2", "gold_sql": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT year, COUNT(course_id) AS course_count FROM section GROUP BY year ORDER BY course_count DESC LIMIT 1;"}
{"sample_id": 1341, "db_id": "college_2", "gold_sql": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'", "pred_sql": "SELECT COUNT(*) AS course_count FROM course WHERE dept_name = 'Physics';"}
{"sample_id": 1444, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')", "pred_sql": "SELECT name FROM instructor WHERE id NOT IN (SELECT DISTINCT teaches.id FROM teaches WHERE semester = 'Spring')"}
{"sample_id": 1354, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'", "pred_sql": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%';"}
{"sample_id": 1377, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM department ORDER BY budget LIMIT 1", "pred_sql": "SELECT dept_name FROM department ORDER BY budget ASC LIMIT 1;"}
{"sample_id": 1390, "db_id": "college_2", "gold_sql": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1", "pred_sql": "SELECT student.name\nFROM student\nJOIN advisor ON student.id = advisor.s_id\nGROUP BY student.id\nHAVING COUNT(advisor.i_id) > 1;"}
{"sample_id": 1491, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')", "pred_sql": "SELECT name FROM instructor WHERE salary > (SELECT MAX(salary) FROM instructor WHERE dept_name = 'Biology');"}
{"sample_id": 1345, "db_id": "college_2", "gold_sql": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", "pred_sql": "SELECT c.title, c.credits, c.dept_name \nFROM course c \nJOIN prereq p ON c.course_id = p.course_id \nGROUP BY c.course_id \nHAVING COUNT(p.prereq_id) > 1;"}
{"sample_id": 1432, "db_id": "college_2", "gold_sql": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "pred_sql": "SELECT instructor.name, instructor.salary \nFROM instructor \nJOIN advisor ON instructor.id = advisor.i_id \nJOIN student ON advisor.s_id = student.id \nWHERE student.dept_name = 'Math';"}
{"sample_id": 1376, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM department ORDER BY budget LIMIT 1", "pred_sql": "SELECT dept_name FROM department ORDER BY budget ASC LIMIT 1;"}
{"sample_id": 1463, "db_id": "college_2", "gold_sql": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title", "pred_sql": "SELECT section.building, section.room_number, section.semester, section.year \nFROM section \nJOIN course ON section.course_id = course.course_id \nWHERE course.dept_name = 'Psychology' \nORDER BY course.title;"}
{"sample_id": 1464, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'", "pred_sql": "SELECT name FROM instructor WHERE dept_name = 'computer science';"}
{"sample_id": 1420, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "pred_sql": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"sample_id": 1425, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')", "pred_sql": "SELECT c.title FROM course c JOIN prereq p ON c.course_id = p.course_id WHERE p.prereq_id = (SELECT course_id FROM course WHERE title = 'Differential Geometry')"}
{"sample_id": 1360, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1", "pred_sql": "SELECT name FROM instructor WHERE dept_name = 'Statistics' ORDER BY salary ASC LIMIT 1;"}
{"sample_id": 1380, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1", "pred_sql": "SELECT name FROM instructor WHERE salary = (SELECT MAX(salary) FROM instructor);"}
{"sample_id": 1434, "db_id": "college_2", "gold_sql": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred", "pred_sql": "SELECT instructor.name \nFROM instructor \nJOIN advisor ON instructor.id = advisor.i_id \nJOIN student ON advisor.s_id = student.id \nWHERE student.dept_name = 'Math' \nORDER BY student.tot_cred;"}
{"sample_id": 1452, "db_id": "college_2", "gold_sql": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')", "pred_sql": "SELECT name FROM student WHERE dept_name != 'Biology' AND id NOT IN (SELECT id FROM takes WHERE course_id IN (SELECT course_id FROM course WHERE dept_name = 'Biology'));"}
{"sample_id": 1447, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1", "pred_sql": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY AVG(salary) DESC LIMIT 1;"}
{"sample_id": 1361, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1", "pred_sql": "SELECT name FROM instructor WHERE dept_name = 'Statistics' ORDER BY salary ASC LIMIT 1;"}
{"sample_id": 1332, "db_id": "college_2", "gold_sql": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1", "pred_sql": "SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1;"}
{"sample_id": 1342, "db_id": "college_2", "gold_sql": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2", "pred_sql": "SELECT c.title \nFROM course c \nJOIN prereq p ON c.course_id = p.course_id \nGROUP BY c.course_id \nHAVING COUNT(p.prereq_id) = 2;"}
{"sample_id": 1488, "db_id": "college_2", "gold_sql": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", "pred_sql": "SELECT name FROM instructor WHERE salary > (SELECT MIN(salary) FROM instructor WHERE dept_name = 'Biology');"}
{"sample_id": 1347, "db_id": "college_2", "gold_sql": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "pred_sql": "SELECT COUNT(*) AS course_count FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"sample_id": 1436, "db_id": "college_2", "gold_sql": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')", "pred_sql": "SELECT c.title FROM course c JOIN prereq p ON c.course_id = p.prereq_id WHERE p.course_id = (SELECT course_id FROM course WHERE title = 'Mobile Computing');"}
{"sample_id": 1357, "db_id": "college_2", "gold_sql": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50", "pred_sql": "SELECT COUNT(*) FROM classroom WHERE building = 'Lamberton' AND capacity < '50';"}
{"sample_id": 1372, "db_id": "college_2", "gold_sql": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1", "pred_sql": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY SUM(credits) DESC LIMIT 1;"}
{"sample_id": 1428, "db_id": "college_2", "gold_sql": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010", "pred_sql": "SELECT title FROM course c JOIN section s ON c.course_id = s.course_id WHERE s.building = 'Chandler' AND s.semester = 'Fall' AND s.year = '2010';"}
{"sample_id": 1375, "db_id": "college_2", "gold_sql": "SELECT title FROM course ORDER BY title ,  credits", "pred_sql": "SELECT title, credits FROM course ORDER BY title, credits;"}
{"sample_id": 1451, "db_id": "college_2", "gold_sql": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "pred_sql": "SELECT c.title, c.credits \nFROM course c \nJOIN section s ON c.course_id = s.course_id \nJOIN classroom cl ON s.building = cl.building AND s.room_number = cl.room_number \nWHERE cl.capacity = (SELECT MAX(capacity) FROM classroom)"}
{"sample_id": 1385, "db_id": "college_2", "gold_sql": "SELECT name ,  dept_name FROM student ORDER BY tot_cred", "pred_sql": "SELECT name, dept_name FROM student ORDER BY tot_cred ASC;"}
{"sample_id": 2965, "db_id": "sakila_1", "gold_sql": "SELECT title FROM film WHERE rating  =  'R'", "pred_sql": "SELECT title FROM film WHERE rating = 'R';"}
{"sample_id": 2940, "db_id": "sakila_1", "gold_sql": "SELECT count(*) FROM customer WHERE active = '1'", "pred_sql": "SELECT COUNT(*) AS active_customer_count FROM customer WHERE active = 1;"}
{"sample_id": 2976, "db_id": "sakila_1", "gold_sql": "SELECT count(DISTINCT rating) FROM film", "pred_sql": "SELECT COUNT(DISTINCT rating) AS different_ratings_count FROM film;"}
{"sample_id": 2981, "db_id": "sakila_1", "gold_sql": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1", "pred_sql": "SELECT MIN(payment_date) AS first_payment_date FROM payment;"}
{"sample_id": 2939, "db_id": "sakila_1", "gold_sql": "SELECT count(*) FROM customer WHERE active = '1'", "pred_sql": "SELECT COUNT(*) AS active_customer_count FROM customer WHERE active = 1;"}
{"sample_id": 2919, "db_id": "sakila_1", "gold_sql": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT first_name, COUNT(*) as name_count FROM actor GROUP BY first_name ORDER BY name_count DESC LIMIT 1;"}
{"sample_id": 2921, "db_id": "sakila_1", "gold_sql": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name, COUNT(*) AS popularity\nFROM film_actor\nJOIN actor ON film_actor.actor_id = actor.actor_id\nGROUP BY full_name\nORDER BY popularity DESC\nLIMIT 1;"}
{"sample_id": 2934, "db_id": "sakila_1", "gold_sql": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'", "pred_sql": "SELECT COUNT(*) AS city_count FROM city WHERE country_id = (SELECT country_id FROM country WHERE country = 'Australia');"}
{"sample_id": 2983, "db_id": "sakila_1", "gold_sql": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "pred_sql": "SELECT address.address, address.city_id, customer.email FROM customer JOIN address ON customer.address_id = address.address_id WHERE customer.first_name = 'Linda';"}
{"sample_id": 2974, "db_id": "sakila_1", "gold_sql": "SELECT count(*) FROM store", "pred_sql": "SELECT COUNT(*) AS store_count FROM store;"}
{"sample_id": 2953, "db_id": "sakila_1", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "pred_sql": "SELECT c.first_name, c.last_name, c.customer_id \nFROM customer c \nJOIN payment p ON c.customer_id = p.customer_id \nGROUP BY c.customer_id \nORDER BY SUM(p.amount) ASC \nLIMIT 1;"}
{"sample_id": 2995, "db_id": "sakila_1", "gold_sql": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'", "pred_sql": "SELECT address.address, address.district, city.city, country.country \nFROM staff \nJOIN address ON staff.address_id = address.address_id \nJOIN city ON address.city_id = city.city_id \nJOIN country ON city.country_id = country.country_id \nWHERE staff.first_name = 'Elsa';"}
{"sample_id": 2930, "db_id": "sakila_1", "gold_sql": "SELECT count(*) FROM address WHERE district  =  'California'", "pred_sql": "SELECT COUNT(*) AS address_count FROM address WHERE district = 'California';"}
{"sample_id": 2996, "db_id": "sakila_1", "gold_sql": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'", "pred_sql": "SELECT address.* FROM staff JOIN address ON staff.address_id = address.address_id WHERE staff.first_name = 'Elsa';"}
{"sample_id": 2960, "db_id": "sakila_1", "gold_sql": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT f.title, f.film_id\nFROM film f\nJOIN inventory i ON f.film_id = i.film_id\nGROUP BY f.film_id\nORDER BY COUNT(i.inventory_id) DESC\nLIMIT 1;"}
{"sample_id": 2942, "db_id": "sakila_1", "gold_sql": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1", "pred_sql": "SELECT title, rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1;"}
{"sample_id": 1559, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM accounts);"}
{"sample_id": 1584, "db_id": "customers_and_invoices", "gold_sql": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions", "pred_sql": "SELECT AVG(transaction_amount) AS average_transaction_amount, MIN(transaction_amount) AS minimum_transaction_amount, MAX(transaction_amount) AS maximum_transaction_amount, SUM(transaction_amount) AS total_transaction_amount FROM financial_transactions;"}
{"sample_id": 1608, "db_id": "customers_and_invoices", "gold_sql": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id", "pred_sql": "SELECT order_id, COUNT(invoice_number) AS invoice_count FROM invoices GROUP BY order_id;"}
{"sample_id": 1578, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) FROM Financial_transactions", "pred_sql": "SELECT COUNT(*) AS transaction_count FROM financial_transactions;"}
{"sample_id": 1619, "db_id": "customers_and_invoices", "gold_sql": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id", "pred_sql": "SELECT order_items.product_id, COUNT(DISTINCT orders.order_id) AS unique_order_count\nFROM order_items\nJOIN orders ON order_items.order_id = orders.order_id\nGROUP BY order_items.product_id;"}
{"sample_id": 1570, "db_id": "customers_and_invoices", "gold_sql": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "pred_sql": "SELECT c.customer_id, c.customer_first_name || ' ' || c.customer_last_name AS full_name, COUNT(a.account_id) AS account_count\nFROM customers c\nLEFT JOIN accounts a ON c.customer_id = a.customer_id\nGROUP BY c.customer_id, full_name;"}
{"sample_id": 1563, "db_id": "customers_and_invoices", "gold_sql": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts", "pred_sql": "SELECT customer_id FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM accounts);"}
{"sample_id": 1564, "db_id": "customers_and_invoices", "gold_sql": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts", "pred_sql": "SELECT customer_id FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM accounts);"}
{"sample_id": 1596, "db_id": "customers_and_invoices", "gold_sql": "SELECT DISTINCT product_size FROM Products", "pred_sql": "SELECT DISTINCT product_size FROM products;"}
{"sample_id": 1581, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\"", "pred_sql": "SELECT COUNT(*) AS transaction_count FROM financial_transactions ft JOIN accounts a ON ft.account_id = a.account_id WHERE a.account_name = '337';"}
{"sample_id": 1588, "db_id": "customers_and_invoices", "gold_sql": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type", "pred_sql": "SELECT transaction_type, SUM(transaction_amount) AS total_amount FROM financial_transactions GROUP BY transaction_type;"}
{"sample_id": 1627, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "pred_sql": "SELECT COUNT(*) AS products_not_in_orders FROM products WHERE product_id NOT IN (SELECT product_id FROM order_items);"}
{"sample_id": 1607, "db_id": "customers_and_invoices", "gold_sql": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id", "pred_sql": "SELECT orders.order_id, COUNT(invoices.invoice_number) AS number_of_invoices\nFROM orders\nLEFT JOIN invoices ON orders.order_id = invoices.order_id\nGROUP BY orders.order_id;"}
{"sample_id": 1613, "db_id": "customers_and_invoices", "gold_sql": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "pred_sql": "SELECT product_name FROM products WHERE product_id NOT IN (SELECT product_id FROM order_items);"}
{"sample_id": 1604, "db_id": "customers_and_invoices", "gold_sql": "SELECT count(*) FROM Invoices", "pred_sql": "SELECT COUNT(*) AS invoice_count FROM invoices;"}
{"sample_id": 1625, "db_id": "customers_and_invoices", "gold_sql": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id", "pred_sql": "SELECT orders.order_id, SUM(order_items.product_quantity) AS total_quantity\nFROM orders\nJOIN order_items ON orders.order_id = order_items.order_id\nGROUP BY orders.order_id;"}
{"sample_id": 2294, "db_id": "entrepreneur", "gold_sql": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1", "pred_sql": "SELECT e.company FROM entrepreneur e JOIN people p ON e.people_id = p.people_id ORDER BY p.height DESC LIMIT 1;"}
{"sample_id": 2262, "db_id": "entrepreneur", "gold_sql": "SELECT avg(Money_Requested) FROM entrepreneur", "pred_sql": "SELECT AVG(money_requested) AS average_money_requested FROM entrepreneur;"}
{"sample_id": 2286, "db_id": "entrepreneur", "gold_sql": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested", "pred_sql": "SELECT p.name, e.company FROM entrepreneur e JOIN people p ON e.people_id = p.people_id ORDER BY e.money_requested DESC;"}
{"sample_id": 2274, "db_id": "entrepreneur", "gold_sql": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85", "pred_sql": "SELECT SUM(money_requested) AS total_money_requested FROM entrepreneur JOIN people ON entrepreneur.people_id = people.people_id WHERE height > 185;"}
{"sample_id": 2291, "db_id": "entrepreneur", "gold_sql": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000", "pred_sql": "SELECT DISTINCT e1.investor \nFROM entrepreneur e1 \nJOIN entrepreneur e2 ON e1.investor = e2.investor \nWHERE e1.money_requested > '140000' \nAND e2.money_requested < '120000';"}
{"sample_id": 2273, "db_id": "entrepreneur", "gold_sql": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1", "pred_sql": "SELECT p.name FROM entrepreneur e JOIN people p ON e.people_id = p.people_id ORDER BY p.weight DESC LIMIT 1;"}
{"sample_id": 2259, "db_id": "entrepreneur", "gold_sql": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC", "pred_sql": "SELECT company FROM entrepreneur ORDER BY money_requested DESC;"}
{"sample_id": 2260, "db_id": "entrepreneur", "gold_sql": "SELECT Company ,  Investor FROM entrepreneur", "pred_sql": "SELECT company, investor FROM entrepreneur;"}
{"sample_id": 4616, "db_id": "customers_campaigns_ecommerce", "gold_sql": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type", "pred_sql": "SELECT premises_type, COUNT(premise_id) AS number_of_premises FROM premises GROUP BY premises_type;"}
{"sample_id": 4627, "db_id": "customers_campaigns_ecommerce", "gold_sql": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid'", "pred_sql": "SELECT DISTINCT customers.customer_name \nFROM customers \nJOIN customer_orders ON customers.customer_id = customer_orders.customer_id \nWHERE customer_orders.shipping_method_code = 'FedEx' \nAND customer_orders.order_status_code = 'Paid';"}
{"sample_id": 4617, "db_id": "customers_campaigns_ecommerce", "gold_sql": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category", "pred_sql": "SELECT DISTINCT product_category, COUNT(mailshot_id) AS mailshot_count \nFROM mailshot_campaigns \nGROUP BY product_category;"}
{"sample_id": 1296, "db_id": "soccer_1", "gold_sql": "SELECT max(weight) ,  min(weight) FROM Player", "pred_sql": "SELECT MAX(height) AS max_height, MIN(height) AS min_height FROM player;"}
{"sample_id": 1295, "db_id": "soccer_1", "gold_sql": "SELECT avg(weight) FROM Player", "pred_sql": "SELECT AVG(weight) AS average_weight FROM player;"}
{"sample_id": 5201, "db_id": "music_2", "gold_sql": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"", "pred_sql": "SELECT COUNT(DISTINCT instruments.songid) AS song_count FROM instruments WHERE instruments.instrument = 'drums';"}
{"sample_id": 5213, "db_id": "music_2", "gold_sql": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT type, COUNT(*) as frequency FROM vocals GROUP BY type ORDER BY frequency DESC LIMIT 1;"}
{"sample_id": 5259, "db_id": "music_2", "gold_sql": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"", "pred_sql": "SELECT songs.title FROM songs JOIN tracklists ON songs.songid = tracklists.songid JOIN albums ON tracklists.albumid = albums.aid WHERE albums.title = 'A Kiss Before You Go: Live in Hamburg';"}
{"sample_id": 5209, "db_id": "music_2", "gold_sql": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "pred_sql": "SELECT DISTINCT instruments.instrument \nFROM instruments \nJOIN band ON instruments.bandmateid = band.id \nWHERE band.lastname = 'Heilo';"}
{"sample_id": 5264, "db_id": "music_2", "gold_sql": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\"", "pred_sql": "SELECT COUNT(DISTINCT songs.songid) AS song_count\nFROM songs\nJOIN tracklists ON songs.songid = tracklists.songid\nJOIN albums ON tracklists.albumid = albums.aid\nWHERE albums.type = 'studio';"}
{"sample_id": 5226, "db_id": "music_2", "gold_sql": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\"", "pred_sql": "SELECT songs.title FROM songs LEFT JOIN vocals ON songs.songid = vocals.songid WHERE vocals.type IS NULL OR vocals.type != 'lead';"}
{"sample_id": 5223, "db_id": "music_2", "gold_sql": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"", "pred_sql": "SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id JOIN songs ON vocals.songid = songs.songid WHERE band.firstname = 'Solveig' AND songs.title = 'A Bar in Amsterdam';"}
{"sample_id": 5232, "db_id": "music_2", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "pred_sql": "SELECT band.firstname, band.lastname FROM performance JOIN songs ON performance.songid = songs.songid JOIN band ON performance.bandmate = band.id WHERE songs.title = 'Le Pop';"}
{"sample_id": 5254, "db_id": "music_2", "gold_sql": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT v.type\nFROM band b\nJOIN vocals v ON b.id = v.bandmate\nWHERE b.firstname = 'Marianne'\nORDER BY v.songid\nLIMIT 1;"}
{"sample_id": 5219, "db_id": "music_2", "gold_sql": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\"", "pred_sql": "SELECT COUNT(DISTINCT type) AS number_of_vocal_types FROM vocals WHERE songid = (SELECT songid FROM songs WHERE title = 'Demon Kitty Rag')"}
{"sample_id": 5180, "db_id": "music_2", "gold_sql": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"", "pred_sql": "SELECT songs.title FROM songs JOIN instruments ON songs.songid = instruments.songid JOIN band ON instruments.bandmateid = band.id WHERE band.firstname = 'Marianne';"}
{"sample_id": 5262, "db_id": "music_2", "gold_sql": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"", "pred_sql": "SELECT songs.title FROM songs JOIN tracklists ON songs.songid = tracklists.songid JOIN albums ON tracklists.albumid = albums.aid WHERE albums.label = 'Universal Music Group';"}
{"sample_id": 5263, "db_id": "music_2", "gold_sql": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\"", "pred_sql": "SELECT COUNT(songs.songid) AS number_of_songs FROM songs JOIN tracklists ON songs.songid = tracklists.songid JOIN albums ON tracklists.albumid = albums.aid WHERE albums.type = 'studio';"}
{"sample_id": 5235, "db_id": "music_2", "gold_sql": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\"", "pred_sql": "SELECT instruments.instrument \nFROM instruments \nJOIN band ON instruments.bandmateid = band.id \nJOIN songs ON instruments.songid = songs.songid \nWHERE band.lastname = 'Heilo' AND songs.title = 'Badlands';"}
{"sample_id": 5224, "db_id": "music_2", "gold_sql": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"", "pred_sql": "SELECT vocals.type FROM vocals JOIN band ON vocals.bandmate = band.id JOIN songs ON vocals.songid = songs.songid WHERE band.firstname = 'Solveig' AND songs.title = 'A Bar in Amsterdam';"}
{"sample_id": 5202, "db_id": "music_2", "gold_sql": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"", "pred_sql": "SELECT COUNT(DISTINCT instruments.songid) AS drum_song_count FROM instruments WHERE instruments.instrument = 'drums';"}
{"sample_id": 5208, "db_id": "music_2", "gold_sql": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "pred_sql": "SELECT COUNT(DISTINCT instruments.instrument) AS different_instruments\nFROM instruments\nJOIN band ON instruments.bandmateid = band.id\nWHERE band.lastname = 'Heilo';"}
{"sample_id": 5261, "db_id": "music_2", "gold_sql": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"", "pred_sql": "SELECT songs.title \nFROM songs \nJOIN tracklists ON songs.songid = tracklists.songid \nJOIN albums ON tracklists.albumid = albums.aid \nWHERE albums.label = 'Universal Music Group';"}
{"sample_id": 5255, "db_id": "music_2", "gold_sql": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "pred_sql": "SELECT b.firstname, b.lastname \nFROM performance p \nJOIN band b ON p.bandmate = b.id \nJOIN songs s ON p.songid = s.songid \nWHERE p.stageposition = 'back' AND s.title = 'Der Kapitan';"}
{"sample_id": 5237, "db_id": "music_2", "gold_sql": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "pred_sql": "SELECT COUNT(DISTINCT instruments.instrument) AS instrument_count \nFROM instruments \nJOIN songs ON instruments.songid = songs.songid \nWHERE songs.title = 'Badlands';"}
{"sample_id": 3709, "db_id": "mountain_photos", "gold_sql": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'", "pred_sql": "SELECT name, height, prominence FROM mountain WHERE range != 'Aberdare Range';"}
{"sample_id": 3714, "db_id": "mountain_photos", "gold_sql": "SELECT count(DISTINCT brand) FROM camera_lens", "pred_sql": "SELECT COUNT(DISTINCT brand) AS different_lens_brands FROM camera_lens;"}
{"sample_id": 3719, "db_id": "mountain_photos", "gold_sql": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"", "pred_sql": "SELECT name FROM camera_lens WHERE name LIKE '%Digital%';"}
{"sample_id": 2760, "db_id": "election", "gold_sql": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "pred_sql": "SELECT e.delegate, p.party FROM election e JOIN party p ON e.party = p.party_id;"}
{"sample_id": 2780, "db_id": "election", "gold_sql": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "pred_sql": "SELECT county_name FROM county WHERE county_id IN (SELECT district FROM election GROUP BY district HAVING COUNT(delegate) >= 2);"}
{"sample_id": 2758, "db_id": "election", "gold_sql": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "pred_sql": "SELECT county.county_name FROM county JOIN election ON county.county_id = election.district WHERE election.committee = 'Appropriations';"}
{"sample_id": 2761, "db_id": "election", "gold_sql": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1", "pred_sql": "SELECT party.governor FROM party JOIN election ON party.party_id = election.party WHERE election.district = '1';"}
{"sample_id": 2766, "db_id": "election", "gold_sql": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"", "pred_sql": "SELECT DISTINCT committee FROM election WHERE party = (SELECT party_id FROM party WHERE party = 'Democratic')"}
{"sample_id": 2730, "db_id": "election", "gold_sql": "SELECT County_name ,  Population FROM county", "pred_sql": "SELECT county_name, population FROM county;"}
{"sample_id": 2777, "db_id": "election", "gold_sql": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3", "pred_sql": "SELECT county_name FROM county ORDER BY population ASC LIMIT 3;"}
{"sample_id": 2793, "db_id": "election", "gold_sql": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\"", "pred_sql": "SELECT DISTINCT e.committee FROM election e JOIN party p1 ON e.party = p1.party_id JOIN party p2 ON e.party = p2.party_id WHERE p1.party = 'democratic' AND p2.party = 'liberal';"}
{"sample_id": 2731, "db_id": "election", "gold_sql": "SELECT avg(Population) FROM county", "pred_sql": "SELECT AVG(population) AS average_population FROM county;"}
{"sample_id": 2786, "db_id": "election", "gold_sql": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT party.governor, COUNT(party.governor) AS frequency FROM party GROUP BY party.governor ORDER BY frequency DESC;"}
{"sample_id": 2727, "db_id": "election", "gold_sql": "SELECT count(*) FROM county", "pred_sql": "SELECT COUNT(*) AS total_counties FROM county;"}
{"sample_id": 2781, "db_id": "election", "gold_sql": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2", "pred_sql": "SELECT party FROM party GROUP BY party HAVING COUNT(*) >= 2;"}
{"sample_id": 2742, "db_id": "election", "gold_sql": "SELECT Delegate ,  Committee FROM election", "pred_sql": "SELECT delegate, committee FROM election;"}
{"sample_id": 3133, "db_id": "assets_maintenance", "gold_sql": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)", "pred_sql": "SELECT me.first_name, me.last_name \nFROM maintenance_engineers me \nLEFT JOIN engineer_visits ev ON me.engineer_id = ev.engineer_id \nWHERE ev.engineer_visit_id IS NULL;"}
{"sample_id": 3137, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT p.part_name\nFROM parts p\nJOIN part_faults pf ON p.part_id = pf.part_id\nGROUP BY p.part_id\nORDER BY COUNT(pf.part_fault_id) ASC\nLIMIT 1;"}
{"sample_id": 3127, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "pred_sql": "SELECT pf.fault_description, s.skill_description \nFROM part_faults pf \nJOIN skills_required_to_fix srf ON pf.part_fault_id = srf.part_fault_id \nJOIN skills s ON s.skill_id = srf.skill_id;"}
{"sample_id": 3120, "db_id": "assets_maintenance", "gold_sql": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id", "pred_sql": "SELECT maintenance_contracts.maintenance_contract_id, COUNT(assets.asset_id) AS asset_count\nFROM maintenance_contracts\nLEFT JOIN assets ON maintenance_contracts.maintenance_contract_id = assets.maintenance_contract_id\nGROUP BY maintenance_contracts.maintenance_contract_id;"}
{"sample_id": 3138, "db_id": "assets_maintenance", "gold_sql": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT engineer_id, first_name, last_name\nFROM maintenance_engineers\nWHERE engineer_id IN (\n    SELECT engineer_id\n    FROM engineer_visits\n    GROUP BY engineer_id\n    ORDER BY COUNT(engineer_visit_id) ASC\n    LIMIT 1\n)"}
{"sample_id": 3121, "db_id": "assets_maintenance", "gold_sql": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id", "pred_sql": "SELECT third_party_companies.company_id, COUNT(assets.asset_id) AS asset_count\nFROM third_party_companies\nLEFT JOIN assets ON third_party_companies.company_id = assets.supplier_company_id\nGROUP BY third_party_companies.company_id;"}
{"sample_id": 7995, "db_id": "singer", "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "pred_sql": "SELECT name FROM singer ORDER BY net_worth_millions ASC;", "token_usage": {"tokens": 535, "cost": 0.00014595}}
{"sample_id": 7998, "db_id": "singer", "gold_sql": "SELECT Birth_Year ,  Citizenship FROM singer", "pred_sql": "SELECT birth_year, citizenship FROM singer;", "token_usage": {"tokens": 493, "cost": 0.00012074999999999998}}
{"sample_id": 8018, "db_id": "singer", "gold_sql": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "pred_sql": "SELECT s.name, SUM(song.sales) AS total_sales\nFROM singer s\nJOIN song ON s.singer_id = song.singer_id\nGROUP BY s.name;", "token_usage": {"tokens": 520, "cost": 0.00013605}}
{"sample_id": 7993, "db_id": "singer", "gold_sql": "SELECT count(*) FROM singer", "pred_sql": "SELECT COUNT(*) AS total_singers FROM singer;", "token_usage": {"tokens": 475, "cost": 0.00011264999999999999}}
{"sample_id": 8015, "db_id": "singer", "gold_sql": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "pred_sql": "SELECT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id GROUP BY s.singer_id HAVING COUNT(so.song_id) > 1;", "token_usage": {"tokens": 537, "cost": 0.00014714999999999997}}
{"sample_id": 8010, "db_id": "singer", "gold_sql": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "pred_sql": "SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship;", "token_usage": {"tokens": 530, "cost": 0.0001434}}
{"sample_id": 5407, "db_id": "shop_membership", "gold_sql": "SELECT count(DISTINCT LEVEL) FROM member", "pred_sql": "SELECT COUNT(DISTINCT level) AS different_levels FROM member;"}
{"sample_id": 5409, "db_id": "shop_membership", "gold_sql": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC", "pred_sql": "SELECT card_number, name, hometown FROM member ORDER BY level DESC;"}
{"sample_id": 5408, "db_id": "shop_membership", "gold_sql": "SELECT count(DISTINCT LEVEL) FROM member", "pred_sql": "SELECT DISTINCT level FROM member;"}
{"sample_id": 5419, "db_id": "shop_membership", "gold_sql": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "pred_sql": "SELECT branch.name, branch.city FROM branch LEFT JOIN membership_register_branch ON branch.branch_id = membership_register_branch.branch_id WHERE membership_register_branch.member_id IS NULL;"}
{"sample_id": 5431, "db_id": "shop_membership", "gold_sql": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6", "pred_sql": "SELECT COUNT(*) AS total_purchases FROM purchase WHERE member_id IN (SELECT member_id FROM member WHERE level = '6');"}
{"sample_id": 5427, "db_id": "shop_membership", "gold_sql": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100", "pred_sql": "SELECT DISTINCT city FROM branch WHERE membership_amount <= 100;"}
{"sample_id": 5397, "db_id": "shop_membership", "gold_sql": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3", "pred_sql": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3;"}
{"sample_id": 5433, "db_id": "shop_membership", "gold_sql": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'", "pred_sql": "SELECT DISTINCT b.name \nFROM branch b \nJOIN membership_register_branch mrb ON b.branch_id = mrb.branch_id \nJOIN member m ON mrb.member_id = m.member_id \nWHERE m.hometown IN ('Louisville, Kentucky', 'Hiram, Georgia') \nGROUP BY b.branch_id \nHAVING COUNT(DISTINCT CASE WHEN m.hometown = 'Louisville, Kentucky' THEN m.member_id END) > 0 \n   AND COUNT(DISTINCT CASE WHEN m.hometown = 'Hiram, Georgia' THEN m.member_id END) > 0;"}
{"sample_id": 1662, "db_id": "theme_gallery", "gold_sql": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "pred_sql": "SELECT name FROM artist WHERE year_join = (SELECT MAX(year_join) FROM artist);"}
{"sample_id": 1650, "db_id": "theme_gallery", "gold_sql": "SELECT count(*) FROM artist", "pred_sql": "SELECT COUNT(*) AS artist_count FROM artist;"}
{"sample_id": 1652, "db_id": "theme_gallery", "gold_sql": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "pred_sql": "SELECT name, age, country FROM artist ORDER BY year_join;"}
{"sample_id": 1666, "db_id": "theme_gallery", "gold_sql": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "pred_sql": "SELECT theme, year FROM exhibition WHERE ticket_price < 15;"}
{"sample_id": 1687, "db_id": "theme_gallery", "gold_sql": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200", "pred_sql": "SELECT a.name FROM artist a JOIN exhibition e ON a.artist_id = e.artist_id JOIN exhibition_record er ON e.exhibition_id = er.exhibition_id GROUP BY a.artist_id HAVING AVG(er.attendance) > 200;"}
{"sample_id": 1678, "db_id": "theme_gallery", "gold_sql": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "pred_sql": "SELECT theme, year FROM exhibition ORDER BY ticket_price DESC;"}
{"sample_id": 1669, "db_id": "theme_gallery", "gold_sql": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT a.name, a.country FROM artist a JOIN exhibition e ON a.artist_id = e.artist_id GROUP BY a.artist_id ORDER BY COUNT(e.exhibition_id) DESC LIMIT 1;"}
{"sample_id": 1659, "db_id": "theme_gallery", "gold_sql": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "pred_sql": "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age FROM artist WHERE country = 'United States';"}
{"sample_id": 4886, "db_id": "school_player", "gold_sql": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)", "pred_sql": "SELECT school.location FROM school LEFT JOIN player ON school.school_id = player.school_id WHERE player.player_id IS NULL;"}
{"sample_id": 4883, "db_id": "school_player", "gold_sql": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1", "pred_sql": "SELECT school_colors FROM school WHERE enrollment = (SELECT MAX(enrollment) FROM school);"}
{"sample_id": 4875, "db_id": "school_player", "gold_sql": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT s.denomination FROM school s JOIN player p ON s.school_id = p.school_id GROUP BY s.denomination ORDER BY COUNT(p.player_id) DESC LIMIT 1;"}
{"sample_id": 4885, "db_id": "school_player", "gold_sql": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)", "pred_sql": "SELECT location FROM school WHERE school_id NOT IN (SELECT DISTINCT school_id FROM player);"}
{"sample_id": 4871, "db_id": "school_player", "gold_sql": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "pred_sql": "SELECT player.team, school.location FROM player JOIN school ON player.school_id = school.school_id;"}
{"sample_id": 4891, "db_id": "school_player", "gold_sql": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1", "pred_sql": "SELECT denomination FROM school GROUP BY denomination HAVING COUNT(school_id) > 1;"}
{"sample_id": 4870, "db_id": "school_player", "gold_sql": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5", "pred_sql": "SELECT team FROM player WHERE player_id IN (SELECT player_id FROM player ORDER BY age ASC LIMIT 5)"}
{"sample_id": 4854, "db_id": "school_player", "gold_sql": "SELECT count(*) FROM school", "pred_sql": "SELECT COUNT(*) AS number_of_schools FROM school;"}
{"sample_id": 241, "db_id": "musical", "gold_sql": "SELECT Name FROM actor WHERE Age != 20", "pred_sql": "SELECT name FROM actor WHERE age != 20;"}
{"sample_id": 234, "db_id": "musical", "gold_sql": "SELECT count(*) FROM actor", "pred_sql": "SELECT COUNT(*) AS actor_count FROM actor;"}
{"sample_id": 242, "db_id": "musical", "gold_sql": "SELECT Character FROM actor ORDER BY age DESC", "pred_sql": "SELECT character FROM actor ORDER BY age DESC;"}
{"sample_id": 263, "db_id": "musical", "gold_sql": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT nominee, COUNT(musical_id) AS nomination_count \nFROM musical \nWHERE result = 'Nominated' \nGROUP BY nominee \nORDER BY nomination_count DESC \nLIMIT 1;"}
{"sample_id": 240, "db_id": "musical", "gold_sql": "SELECT Name FROM actor WHERE Age != 20", "pred_sql": "SELECT name FROM actor WHERE age != 20;"}
{"sample_id": 270, "db_id": "musical", "gold_sql": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"", "pred_sql": "SELECT DISTINCT nominee FROM musical WHERE award IN ('Tony Award', 'Drama Desk Award') GROUP BY nominee HAVING COUNT(DISTINCT award) = 2;"}
{"sample_id": 268, "db_id": "musical", "gold_sql": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)", "pred_sql": "SELECT name FROM musical WHERE musical_id NOT IN (SELECT musical_id FROM actor);"}
{"sample_id": 264, "db_id": "musical", "gold_sql": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT result, COUNT(result) AS count FROM musical GROUP BY result ORDER BY count DESC LIMIT 1;"}
{"sample_id": 355, "db_id": "flight_1", "gold_sql": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "pred_sql": "SELECT aid, name FROM aircraft WHERE distance = (SELECT MAX(distance) FROM aircraft);"}
{"sample_id": 420, "db_id": "flight_1", "gold_sql": "SELECT count(DISTINCT eid) FROM Certificate", "pred_sql": "SELECT COUNT(DISTINCT eid) AS distinct_employee_count FROM certificate;"}
{"sample_id": 425, "db_id": "flight_1", "gold_sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "pred_sql": "SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800';"}
{"sample_id": 392, "db_id": "flight_1", "gold_sql": "SELECT flno FROM Flight WHERE distance  >  2000", "pred_sql": "SELECT flno FROM flight WHERE distance > 2000;"}
{"sample_id": 377, "db_id": "flight_1", "gold_sql": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "pred_sql": "SELECT name FROM employee WHERE salary > (SELECT AVG(salary) FROM employee);"}
{"sample_id": 368, "db_id": "flight_1", "gold_sql": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "pred_sql": "SELECT COUNT(*) AS employee_count FROM employee WHERE salary BETWEEN '100000' AND '200000';"}
{"sample_id": 397, "db_id": "flight_1", "gold_sql": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "pred_sql": "SELECT flno, distance FROM flight WHERE price = (SELECT MAX(price) FROM flight);"}
{"sample_id": 384, "db_id": "flight_1", "gold_sql": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "pred_sql": "SELECT flno, origin, destination FROM flight ORDER BY origin ASC;"}
{"sample_id": 381, "db_id": "flight_1", "gold_sql": "SELECT count(*) FROM Flight", "pred_sql": "SELECT COUNT(*) AS total_flights FROM flight;"}
{"sample_id": 390, "db_id": "flight_1", "gold_sql": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "pred_sql": "SELECT departure_date, arrival_date FROM flight WHERE origin = 'LA' AND destination = 'Honolulu';"}
{"sample_id": 385, "db_id": "flight_1", "gold_sql": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "pred_sql": "SELECT flno FROM flight WHERE origin = 'Los Angeles';"}
{"sample_id": 351, "db_id": "flight_1", "gold_sql": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "pred_sql": "SELECT name, distance FROM aircraft WHERE aid = 12;"}
{"sample_id": 428, "db_id": "flight_1", "gold_sql": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "pred_sql": "SELECT e.name FROM employee e JOIN certificate c1 ON e.eid = c1.eid JOIN aircraft a1 ON c1.aid = a1.aid WHERE a1.name = 'Boeing 737-800' INTERSECT SELECT e.name FROM employee e JOIN certificate c2 ON e.eid = c2.eid JOIN aircraft a2 ON c2.aid = a2.aid WHERE a2.name = 'Airbus A340-300';"}
{"sample_id": 359, "db_id": "flight_1", "gold_sql": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "pred_sql": "SELECT name FROM aircraft WHERE distance > (SELECT AVG(distance) FROM aircraft);"}
{"sample_id": 344, "db_id": "flight_1", "gold_sql": "SELECT count(*) FROM Aircraft", "pred_sql": "SELECT COUNT(*) AS aircraft_count FROM aircraft;"}
{"sample_id": 369, "db_id": "flight_1", "gold_sql": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "pred_sql": "SELECT name, salary FROM employee WHERE eid = '242518965';"}
{"sample_id": 408, "db_id": "flight_1", "gold_sql": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT origin, COUNT(*) AS flight_count FROM flight GROUP BY origin ORDER BY flight_count DESC LIMIT 1;"}
{"sample_id": 365, "db_id": "flight_1", "gold_sql": "SELECT eid FROM Employee WHERE salary  >  100000", "pred_sql": "SELECT eid FROM employee WHERE salary >= '100000';"}
{"sample_id": 389, "db_id": "flight_1", "gold_sql": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "pred_sql": "SELECT departure_date, arrival_date FROM flight WHERE origin = 'Los Angeles' AND destination = 'Honolulu';"}
{"sample_id": 1155, "db_id": "body_builder", "gold_sql": "SELECT Birth_Date FROM People ORDER BY Height ASC", "pred_sql": "SELECT birth_date FROM people ORDER BY height ASC;"}
{"sample_id": 1153, "db_id": "body_builder", "gold_sql": "SELECT avg(Snatch) FROM body_builder", "pred_sql": "SELECT AVG(snatch) AS average_snatch FROM body_builder;"}
{"sample_id": 1168, "db_id": "body_builder", "gold_sql": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id", "pred_sql": "SELECT name, birth_place FROM people WHERE people_id NOT IN (SELECT people_id FROM body_builder);"}
{"sample_id": 1154, "db_id": "body_builder", "gold_sql": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1", "pred_sql": "SELECT clean_jerk FROM body_builder WHERE total = (SELECT MAX(total) FROM body_builder);"}
{"sample_id": 2526, "db_id": "county_public_safety", "gold_sql": "SELECT count(*) FROM county_public_safety", "pred_sql": "SELECT COUNT(DISTINCT county_id) AS number_of_counties FROM county_public_safety;"}
{"sample_id": 2547, "db_id": "county_public_safety", "gold_sql": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)", "pred_sql": "SELECT city.name FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id WHERE county_public_safety.police_officers = (SELECT MAX(police_officers) FROM county_public_safety);"}
{"sample_id": 2562, "db_id": "county_public_safety", "gold_sql": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "pred_sql": "SELECT city.name FROM city JOIN county_public_safety ON city.county_id = county_public_safety.county_id WHERE county_public_safety.crime_rate < 100;"}
{"sample_id": 2556, "db_id": "county_public_safety", "gold_sql": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT location, COUNT(*) as county_count FROM county_public_safety GROUP BY location ORDER BY county_count DESC LIMIT 1;"}
{"sample_id": 2529, "db_id": "county_public_safety", "gold_sql": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"", "pred_sql": "SELECT DISTINCT police_force FROM county_public_safety WHERE location NOT LIKE '%east%';"}
{"sample_id": 2563, "db_id": "county_public_safety", "gold_sql": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC", "pred_sql": "SELECT county_public_safety.name, county_public_safety.case_burden FROM county_public_safety ORDER BY county_public_safety.population DESC;"}
{"sample_id": 2538, "db_id": "county_public_safety", "gold_sql": "SELECT Hispanic FROM city WHERE Black  >  10", "pred_sql": "SELECT city.name, (hispanic * 100.0 / (white + black + amerindian + asian + multiracial + hispanic)) AS hispanic_percentage\nFROM city\nWHERE (black * 100.0 / (white + black + amerindian + asian + multiracial + hispanic)) > 10;"}
{"sample_id": 2546, "db_id": "county_public_safety", "gold_sql": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "pred_sql": "SELECT c.name AS city_name, (c.white * 100.0 / (c.white + c.black + c.amerindian + c.asian + c.multiracial + c.hispanic)) AS white_percentage, cps.crime_rate FROM city c JOIN county_public_safety cps ON c.county_id = cps.county_id;"}
{"sample_id": 2078, "db_id": "party_people", "gold_sql": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT m.member_name\nFROM member m\nJOIN party_events pe ON m.member_id = pe.member_in_charge_id\nGROUP BY m.member_id\nORDER BY COUNT(pe.event_id) DESC\nLIMIT 1;"}
{"sample_id": 2048, "db_id": "party_people", "gold_sql": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "pred_sql": "SELECT DISTINCT minister FROM party WHERE took_office > 1961 OR left_office < 1959;"}
{"sample_id": 2050, "db_id": "party_people", "gold_sql": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "pred_sql": "SELECT DISTINCT m.member_name \nFROM member m \nJOIN party p ON m.party_id = p.party_id \nWHERE p.party_name != 'Progress Party';"}
{"sample_id": 2082, "db_id": "party_people", "gold_sql": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"", "pred_sql": "SELECT COUNT(*) AS annual_meeting_count \nFROM party_events pe \nJOIN party p ON pe.party_id = p.party_id \nJOIN region r ON p.region_id = r.region_id \nWHERE pe.event_name = 'Annual Meeting' AND r.region_name = 'United Kingdom';"}
{"sample_id": 2057, "db_id": "party_people", "gold_sql": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "pred_sql": "SELECT party.party_name, COUNT(member.member_id) AS member_count \nFROM party \nLEFT JOIN member ON party.party_id = member.party_id \nGROUP BY party.party_id;"}
{"sample_id": 2055, "db_id": "party_people", "gold_sql": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "pred_sql": "SELECT member.member_name, party.party_name FROM member JOIN party ON member.party_id = party.party_id;"}
{"sample_id": 2071, "db_id": "party_people", "gold_sql": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "pred_sql": "SELECT party.party_name, COUNT(party_events.event_id) AS event_count\nFROM party\nLEFT JOIN party_events ON party.party_id = party_events.party_id\nGROUP BY party.party_id;"}
{"sample_id": 2043, "db_id": "party_people", "gold_sql": "SELECT count(DISTINCT party_name) FROM party", "pred_sql": "SELECT COUNT(*) AS total_parties FROM party;"}
{"sample_id": 6265, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010", "pred_sql": "SELECT DISTINCT city.city FROM city JOIN hosting_city ON city.city_id = hosting_city.host_city WHERE hosting_city.year > '2010';"}
{"sample_id": 6282, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct", "pred_sql": "SELECT city.city FROM city JOIN temperature ON city.city_id = temperature.city_id WHERE temperature.mar < temperature.jul OR temperature.mar > temperature.oct;"}
{"sample_id": 6273, "db_id": "city_record", "gold_sql": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"", "pred_sql": "SELECT year FROM hosting_city WHERE host_city = (SELECT city_id FROM city WHERE city = 'Taizhou ( Zhejiang )');"}
{"sample_id": 6286, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "pred_sql": "SELECT c.city_id, c.city, t.mar, t.dec \nFROM city c \nJOIN temperature t ON c.city_id = t.city_id \nWHERE t.mar < t.dec \nAND c.city_id NOT IN (SELECT host_city FROM hosting_city)"}
{"sample_id": 6269, "db_id": "city_record", "gold_sql": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"", "pred_sql": "SELECT match.venue FROM match JOIN hosting_city ON match.match_id = hosting_city.match_id JOIN city ON hosting_city.host_city = city.city_id WHERE hosting_city.year = '1994' AND match.competition = (SELECT competition FROM match WHERE competition = '1994 FIFA World Cup qualification') AND city.city = 'Nanjing ( Jiangsu )';"}
{"sample_id": 6277, "db_id": "city_record", "gold_sql": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1", "pred_sql": "SELECT city, gdp FROM city ORDER BY gdp ASC LIMIT 1;"}
{"sample_id": 6283, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "pred_sql": "SELECT c.city_id, c.city, t.mar, t.jul \nFROM city c \nJOIN temperature t ON c.city_id = t.city_id \nJOIN hosting_city h ON c.city_id = h.host_city \nWHERE t.mar < t.jul;"}
{"sample_id": 6279, "db_id": "city_record", "gold_sql": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1", "pred_sql": "SELECT city.city, temperature.feb FROM city JOIN temperature ON city.city_id = temperature.city_id ORDER BY temperature.feb DESC LIMIT 1;"}
{"sample_id": 795, "db_id": "coffee_shop", "gold_sql": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40", "pred_sql": "SELECT m1.address FROM member m1 JOIN member m2 ON m1.address = m2.address WHERE m1.age < 30 AND m2.age > 40 GROUP BY m1.address;"}
{"sample_id": 796, "db_id": "coffee_shop", "gold_sql": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'", "pred_sql": "SELECT DISTINCT m1.membership_card \nFROM member m1 \nJOIN member m2 ON m1.membership_card = m2.membership_card \nWHERE m1.address = 'Hartford' AND m2.address = 'Waterbury';"}
{"sample_id": 789, "db_id": "coffee_shop", "gold_sql": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'", "pred_sql": "SELECT COUNT(*) AS num_members FROM member WHERE membership_card = 'black';"}
{"sample_id": 5775, "db_id": "customer_complaints", "gold_sql": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "pred_sql": "SELECT email_address, phone_number FROM customers WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM complaints)"}
{"sample_id": 5798, "db_id": "customer_complaints", "gold_sql": "SELECT count(DISTINCT complaint_type_code) FROM complaints", "pred_sql": "SELECT COUNT(DISTINCT complaint_type_code) AS different_complaint_types FROM complaints;"}
{"sample_id": 5780, "db_id": "customer_complaints", "gold_sql": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"", "pred_sql": "SELECT product_description FROM products WHERE product_name = 'Chocolate';"}
{"sample_id": 5804, "db_id": "customer_complaints", "gold_sql": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5", "pred_sql": "SELECT first_name FROM staff WHERE staff_id IN (SELECT staff_id FROM complaints GROUP BY staff_id ORDER BY COUNT(complaint_id) DESC LIMIT 5)"}
{"sample_id": 5764, "db_id": "customer_complaints", "gold_sql": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number", "pred_sql": "SELECT email_address, phone_number FROM customers ORDER BY email_address, phone_number;"}
{"sample_id": 5789, "db_id": "customer_complaints", "gold_sql": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3", "pred_sql": "SELECT complaint_status_code, COUNT(*) as record_count \nFROM complaints \nGROUP BY complaint_status_code \nHAVING COUNT(*) > 3;"}
{"sample_id": 5773, "db_id": "customer_complaints", "gold_sql": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1", "pred_sql": "SELECT c.phone_number FROM customers c JOIN complaints co ON c.customer_id = co.customer_id ORDER BY co.date_complaint_raised DESC LIMIT 1;"}
{"sample_id": 5794, "db_id": "customer_complaints", "gold_sql": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT customer_type_code, COUNT(customer_id) AS customer_count\nFROM customers\nGROUP BY customer_type_code\nORDER BY customer_count DESC\nLIMIT 1;"}
{"sample_id": 5783, "db_id": "customer_complaints", "gold_sql": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)", "pred_sql": "SELECT p.product_id, p.product_name, p.product_price \nFROM products p \nLEFT JOIN complaints c ON p.product_id = c.product_id \nWHERE c.complaint_id IS NULL;"}
{"sample_id": 1492, "db_id": "debate", "gold_sql": "SELECT count(*) FROM debate", "pred_sql": "SELECT COUNT(*) AS total_debates FROM debate;"}
{"sample_id": 1495, "db_id": "debate", "gold_sql": "SELECT Date FROM debate WHERE Num_of_Audience  >  150", "pred_sql": "SELECT date FROM debate WHERE num_of_audience > 150;"}
{"sample_id": 1498, "db_id": "debate", "gold_sql": "SELECT Party ,  COUNT(*) FROM people GROUP BY Party", "pred_sql": "SELECT party, COUNT(*) AS number_of_people FROM people GROUP BY party;"}
{"sample_id": 2312, "db_id": "perpetrator", "gold_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)", "pred_sql": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM perpetrator);"}
{"sample_id": 2313, "db_id": "perpetrator", "gold_sql": "SELECT Country FROM perpetrator WHERE Injured  >  50 INTERSECT SELECT Country FROM perpetrator WHERE Injured  <  20", "pred_sql": "SELECT DISTINCT p.country\nFROM perpetrator p\nWHERE p.injured > 50\nAND p.country IN (\n    SELECT country\n    FROM perpetrator\n    WHERE injured < 20\n)"}
{"sample_id": 2300, "db_id": "perpetrator", "gold_sql": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1", "pred_sql": "SELECT location FROM perpetrator ORDER BY CAST(killed AS INTEGER) DESC LIMIT 1;"}
{"sample_id": 2302, "db_id": "perpetrator", "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID", "pred_sql": "SELECT DISTINCT people.name FROM people JOIN perpetrator ON people.people_id = perpetrator.people_id;"}
{"sample_id": 5653, "db_id": "customers_and_products_contacts", "gold_sql": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC", "pred_sql": "SELECT customer_name, customer_phone, payment_method_code FROM customers ORDER BY customer_number DESC;"}
{"sample_id": 5651, "db_id": "customers_and_products_contacts", "gold_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2", "pred_sql": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING COUNT(product_id) >= 2;"}
{"sample_id": 5650, "db_id": "customers_and_products_contacts", "gold_sql": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT customer_name FROM customers WHERE customer_id = (SELECT customer_id FROM customer_orders GROUP BY customer_id ORDER BY COUNT(order_id) DESC LIMIT 1)"}
{"sample_id": 1938, "db_id": "cinema", "gold_sql": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC", "pred_sql": "SELECT name, openning_year FROM cinema ORDER BY openning_year DESC;"}
{"sample_id": 1948, "db_id": "cinema", "gold_sql": "SELECT DISTINCT directed_by FROM film", "pred_sql": "SELECT DISTINCT directed_by FROM film;"}
{"sample_id": 1946, "db_id": "cinema", "gold_sql": "SELECT title ,  directed_by FROM film", "pred_sql": "SELECT title, directed_by FROM film;"}
{"sample_id": 1947, "db_id": "cinema", "gold_sql": "SELECT DISTINCT directed_by FROM film", "pred_sql": "SELECT DISTINCT directed_by FROM film;"}
{"sample_id": 1956, "db_id": "cinema", "gold_sql": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1", "pred_sql": "SELECT location FROM cinema WHERE capacity > 300 GROUP BY location HAVING COUNT(cinema_id) > 1;"}
{"sample_id": 1941, "db_id": "cinema", "gold_sql": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION", "pred_sql": "SELECT location, COUNT(cinema_id) AS number_of_cinemas FROM cinema GROUP BY location;"}
{"sample_id": 7590, "db_id": "tvshow", "gold_sql": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "pred_sql": "SELECT COUNT(DISTINCT series_name) AS different_series_names, COUNT(DISTINCT content) AS different_contents FROM tv_channel;", "token_usage": {"tokens": 755, "cost": 0.00015329999999999999}}
{"sample_id": 7620, "db_id": "tvshow", "gold_sql": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "pred_sql": "SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by;", "token_usage": {"tokens": 785, "cost": 0.00017219999999999998}}
{"sample_id": 7594, "db_id": "tvshow", "gold_sql": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "pred_sql": "SELECT package_option FROM tv_channel WHERE series_name = 'Sky Radio';", "token_usage": {"tokens": 805, "cost": 0.00018284999999999997}}
{"sample_id": 7624, "db_id": "tvshow", "gold_sql": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "pred_sql": "SELECT tv_channel.package_option, tv_channel.series_name FROM tv_channel WHERE tv_channel.hight_definition_tv = 'yes';", "token_usage": {"tokens": 802, "cost": 0.0001806}}
{"sample_id": 7631, "db_id": "tvshow", "gold_sql": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "pred_sql": "SELECT tv_channel.series_name, tv_channel.country \nFROM tv_channel \nJOIN cartoon ON tv_channel.id = cartoon.channel \nWHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang');", "token_usage": {"tokens": 805, "cost": 0.00017835}}
{"sample_id": 7614, "db_id": "tvshow", "gold_sql": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "pred_sql": "SELECT weekly_rank FROM tv_series WHERE episode = 'A Love of a Lifetime';", "token_usage": {"tokens": 822, "cost": 0.0001926}}
{"sample_id": 7593, "db_id": "tvshow", "gold_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "pred_sql": "SELECT content FROM tv_channel WHERE series_name = 'Sky Radio';", "token_usage": {"tokens": 758, "cost": 0.00015735}}
{"sample_id": 7605, "db_id": "tvshow", "gold_sql": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "pred_sql": "SELECT cartoon.title FROM cartoon JOIN tv_channel ON cartoon.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio';", "token_usage": {"tokens": 788, "cost": 0.00016905}}
{"sample_id": 7637, "db_id": "tvshow", "gold_sql": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "pred_sql": "SELECT id FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones');", "token_usage": {"tokens": 822, "cost": 0.0001917}}
{"sample_id": 7592, "db_id": "tvshow", "gold_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "pred_sql": "SELECT content FROM tv_channel WHERE series_name = 'Sky Radio';", "token_usage": {"tokens": 774, "cost": 0.0001647}}
{"sample_id": 7597, "db_id": "tvshow", "gold_sql": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "pred_sql": "SELECT COUNT(*) AS channel_count FROM tv_channel WHERE language = 'English';", "token_usage": {"tokens": 756, "cost": 0.00015659999999999998}}
{"sample_id": 7600, "db_id": "tvshow", "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "pred_sql": "SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language;", "token_usage": {"tokens": 747, "cost": 0.00014984999999999998}}
{"sample_id": 7410, "db_id": "museum_visit", "gold_sql": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "pred_sql": "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum';", "token_usage": {"tokens": 560, "cost": 0.00014205}}
{"sample_id": 7419, "db_id": "museum_visit", "gold_sql": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "pred_sql": "SELECT DISTINCT v.name \nFROM visitor v \nJOIN visit vi1 ON v.id = vi1.visitor_id \nJOIN museum m1 ON vi1.museum_id = m1.museum_id \nJOIN visit vi2 ON v.id = vi2.visitor_id \nJOIN museum m2 ON vi2.museum_id = m2.museum_id \nWHERE m1.open_year < '2009' AND m2.open_year > '2011';", "token_usage": {"tokens": 634, "cost": 0.0001815}}
{"sample_id": 7405, "db_id": "museum_visit", "gold_sql": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "pred_sql": "SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC;", "token_usage": {"tokens": 561, "cost": 0.00013724999999999998}}
{"sample_id": 5473, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "pred_sql": "SELECT DISTINCT major FROM student INNER JOIN voting_record ON student.stuid = voting_record.treasurer_vote;"}
{"sample_id": 5481, "db_id": "voter_2", "gold_sql": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "pred_sql": "SELECT COUNT(*) FROM student s JOIN voting_record v ON s.stuid = v.stuid WHERE s.city_code = 'NYC' AND v.election_cycle = 'spring' AND v.class_senator_vote IS NOT NULL;"}
{"sample_id": 5502, "db_id": "voter_2", "gold_sql": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT major FROM student GROUP BY major ORDER BY COUNT(*) DESC LIMIT 1;"}
{"sample_id": 5447, "db_id": "voter_2", "gold_sql": "SELECT Fname FROM STUDENT WHERE Age  >  22", "pred_sql": "SELECT fname FROM student WHERE age > '22';"}
{"sample_id": 5444, "db_id": "voter_2", "gold_sql": "SELECT max(Age) FROM STUDENT", "pred_sql": "SELECT MAX(age) AS oldest_age FROM student;"}
{"sample_id": 5485, "db_id": "voter_2", "gold_sql": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"", "pred_sql": "SELECT AVG(age) AS average_age FROM student JOIN voting_record ON student.stuid = voting_record.stuid WHERE student.sex = 'F' AND voting_record.secretary_vote IS NOT NULL AND voting_record.election_cycle = 'spring';"}
{"sample_id": 5504, "db_id": "voter_2", "gold_sql": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT major, COUNT(*) as female_count FROM student WHERE sex = 'female' GROUP BY major ORDER BY female_count DESC LIMIT 1;"}
{"sample_id": 5446, "db_id": "voter_2", "gold_sql": "SELECT LName FROM STUDENT WHERE Major  =  50", "pred_sql": "SELECT lname FROM student WHERE major = '50';"}
{"sample_id": 5486, "db_id": "voter_2", "gold_sql": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"", "pred_sql": "SELECT AVG(age) AS average_age FROM student JOIN voting_record ON student.stuid = voting_record.stuid WHERE student.sex = 'female' AND voting_record.election_cycle = 'spring' AND voting_record.secretary_vote IS NOT NULL;"}
{"sample_id": 5492, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"", "pred_sql": "SELECT DISTINCT lname FROM student JOIN voting_record ON student.stuid = voting_record.stuid WHERE voting_record.president_vote IS NOT NULL AND student.advisor = '8741';"}
{"sample_id": 5439, "db_id": "voter_2", "gold_sql": "SELECT count(*) FROM VOTING_RECORD", "pred_sql": "SELECT COUNT(*) AS total_voting_records FROM voting_record;"}
{"sample_id": 5500, "db_id": "voter_2", "gold_sql": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "pred_sql": "SELECT election_cycle, COUNT(*) AS voting_record_count FROM voting_record GROUP BY election_cycle;"}
{"sample_id": 5476, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "pred_sql": "SELECT fname, lname FROM student JOIN voting_record ON student.stuid = voting_record.stuid WHERE student.sex = 'female' AND voting_record.president_vote IS NOT NULL;"}
{"sample_id": 5458, "db_id": "voter_2", "gold_sql": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "pred_sql": "SELECT DISTINCT secretary_vote FROM voting_record WHERE election_cycle = 'fall';"}
{"sample_id": 3797, "db_id": "e_learning", "gold_sql": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"", "pred_sql": "SELECT ca.address_line_1 FROM course_authors_and_tutors ca JOIN courses c ON ca.author_id = c.author_id WHERE c.course_name IN ('operating system', 'data structure');"}
{"sample_id": 3818, "db_id": "e_learning", "gold_sql": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "pred_sql": "SELECT c.course_name, c.course_description \nFROM courses c \nJOIN student_course_enrolment sce ON c.course_id = sce.course_id \nGROUP BY c.course_id \nHAVING COUNT(sce.student_id) > 2;"}
{"sample_id": 3772, "db_id": "e_learning", "gold_sql": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "pred_sql": "SELECT date_of_enrolment, date_of_completion FROM student_course_enrolment;"}
{"sample_id": 3808, "db_id": "e_learning", "gold_sql": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id", "pred_sql": "SELECT subjects.subject_id, subjects.subject_name, COUNT(courses.course_id) AS number_of_courses\nFROM subjects\nLEFT JOIN courses ON subjects.subject_id = courses.subject_id\nGROUP BY subjects.subject_id, subjects.subject_name;"}
{"sample_id": 3835, "db_id": "e_learning", "gold_sql": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id", "pred_sql": "SELECT personal_name FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_enrolment);"}
{"sample_id": 3809, "db_id": "e_learning", "gold_sql": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "pred_sql": "SELECT subjects.subject_id, subjects.subject_name, COUNT(courses.course_id) AS course_count \nFROM subjects \nLEFT JOIN courses ON subjects.subject_id = courses.subject_id \nGROUP BY subjects.subject_id, subjects.subject_name \nORDER BY course_count ASC;"}
{"sample_id": 3827, "db_id": "e_learning", "gold_sql": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "pred_sql": "SELECT sce.date_of_enrolment, sce.date_of_completion \nFROM student_course_enrolment sce \nJOIN students s ON sce.student_id = s.student_id \nWHERE s.family_name = 'Zieme' AND s.personal_name = 'Bernie';"}
{"sample_id": 3773, "db_id": "e_learning", "gold_sql": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment", "pred_sql": "SELECT COUNT(DISTINCT student_id) AS distinct_students FROM student_course_enrolment;"}
{"sample_id": 3811, "db_id": "e_learning", "gold_sql": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"", "pred_sql": "SELECT student_course_enrolment.date_of_enrolment \nFROM student_course_enrolment \nJOIN courses ON student_course_enrolment.course_id = courses.course_id \nWHERE courses.course_name = 'Spanish';"}
{"sample_id": 3775, "db_id": "e_learning", "gold_sql": "SELECT count(course_id) FROM Student_Course_Enrolment", "pred_sql": "SELECT COUNT(DISTINCT course_id) AS distinct_courses_enrolled FROM student_course_enrolment;"}
{"sample_id": 3840, "db_id": "e_learning", "gold_sql": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students", "pred_sql": "SELECT DISTINCT ca.login_name\nFROM course_authors_and_tutors ca\nJOIN students s ON ca.login_name = s.login_name;"}
{"sample_id": 3796, "db_id": "e_learning", "gold_sql": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"", "pred_sql": "SELECT ca.login_name FROM courses c JOIN course_authors_and_tutors ca ON c.author_id = ca.author_id WHERE c.course_name = 'advanced database';"}
{"sample_id": 3764, "db_id": "e_learning", "gold_sql": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"", "pred_sql": "SELECT course_description FROM courses WHERE course_name = 'database';"}
{"sample_id": 3833, "db_id": "e_learning", "gold_sql": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "pred_sql": "SELECT s.student_id, s.middle_name FROM students s JOIN student_course_enrolment e ON s.student_id = e.student_id GROUP BY s.student_id HAVING COUNT(e.registration_id) <= 2;"}
{"sample_id": 3794, "db_id": "e_learning", "gold_sql": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC", "pred_sql": "SELECT test_result, COUNT(DISTINCT student_id) AS number_of_students\nFROM student_tests_taken\nGROUP BY test_result;"}
{"sample_id": 3787, "db_id": "e_learning", "gold_sql": "SELECT subject_name FROM SUBJECTS", "pred_sql": "SELECT subject_name FROM subjects;"}
{"sample_id": 1527, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT cps.claim_status_name, COUNT(*) as claim_count\nFROM claims_processing cp\nJOIN claims_processing_stages cps ON cp.claim_stage_id = cps.claim_stage_id\nGROUP BY cps.claim_status_name\nORDER BY claim_count DESC\nLIMIT 1;"}
{"sample_id": 1543, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing", "pred_sql": "SELECT COUNT(DISTINCT claim_outcome_code) AS distinct_outcome_codes_count FROM claims_processing;"}
{"sample_id": 1522, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)", "pred_sql": "SELECT c.customer_details \nFROM customers c \nJOIN policies p ON c.customer_id = p.customer_id \nJOIN claim_headers ch ON p.policy_id = ch.policy_id \nORDER BY ch.amount_claimed ASC \nLIMIT 1;"}
{"sample_id": 1531, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"", "pred_sql": "SELECT customers.customer_details FROM customers JOIN policies ON customers.customer_id = policies.customer_id WHERE policies.policy_type_code = 'deputy';"}
{"sample_id": 1544, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing", "pred_sql": "SELECT COUNT(DISTINCT claim_outcome_code) AS distinct_outcome_count FROM claims_processing;"}
{"sample_id": 1538, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code", "pred_sql": "SELECT policy_type_code, COUNT(*) AS count FROM policies GROUP BY policy_type_code;"}
{"sample_id": 1510, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"", "pred_sql": "SELECT policies.policy_type_code \nFROM policies \nJOIN customers ON policies.customer_id = customers.customer_id \nWHERE customers.customer_details = 'Dayana Robel';"}
{"sample_id": 1524, "db_id": "insurance_and_eClaims", "gold_sql": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id", "pred_sql": "SELECT customer_details FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM policies)"}
{"sample_id": 483, "db_id": "allergy_1", "gold_sql": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student", "pred_sql": "SELECT MIN(age) AS min_age, AVG(age) AS avg_age, MAX(age) AS max_age FROM student;"}
{"sample_id": 443, "db_id": "allergy_1", "gold_sql": "SELECT DISTINCT allergytype FROM Allergy_type", "pred_sql": "SELECT DISTINCT allergytype FROM allergy_type;"}
{"sample_id": 494, "db_id": "allergy_1", "gold_sql": "SELECT age ,  count(*) FROM Student GROUP BY age", "pred_sql": "SELECT age, COUNT(*) as student_count FROM student GROUP BY age;"}
{"sample_id": 531, "db_id": "allergy_1", "gold_sql": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "pred_sql": "SELECT DISTINCT s.fname, s.city_code \nFROM student s \nJOIN has_allergy ha ON s.stuid = ha.stuid \nJOIN allergy_type a ON ha.allergy = a.allergy \nWHERE a.allergy IN ('milk', 'cat');"}
{"sample_id": 470, "db_id": "allergy_1", "gold_sql": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "pred_sql": "SELECT fname || ' ' || lname AS full_name, age FROM student WHERE sex = 'F';"}
{"sample_id": 536, "db_id": "allergy_1", "gold_sql": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "pred_sql": "SELECT student.fname, student.major \nFROM student \nJOIN has_allergy ON student.stuid = has_allergy.stuid \nJOIN allergy_type ON has_allergy.allergy = allergy_type.allergy \nWHERE allergy_type.allergytype != 'soy'"}
{"sample_id": 457, "db_id": "allergy_1", "gold_sql": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT allergytype FROM allergy_type GROUP BY allergytype ORDER BY COUNT(allergy) ASC LIMIT 1;"}
{"sample_id": 513, "db_id": "allergy_1", "gold_sql": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT allergy, COUNT(stuid) AS student_count FROM has_allergy GROUP BY allergy ORDER BY student_count DESC LIMIT 1;"}
{"sample_id": 490, "db_id": "allergy_1", "gold_sql": "SELECT major ,  count(*) FROM Student GROUP BY major", "pred_sql": "SELECT major, COUNT(*) AS student_count FROM student GROUP BY major;"}
{"sample_id": 534, "db_id": "allergy_1", "gold_sql": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")", "pred_sql": "SELECT COUNT(DISTINCT s.stuid) AS student_count\nFROM student s\nLEFT JOIN has_allergy ha ON s.stuid = ha.stuid\nLEFT JOIN allergy_type at ON ha.allergy = at.allergy\nWHERE s.age > 18 AND (at.allergytype IS NULL OR at.allergytype NOT IN ('food', 'animal'));"}
{"sample_id": 448, "db_id": "allergy_1", "gold_sql": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"", "pred_sql": "SELECT DISTINCT allergy FROM allergy_type WHERE allergytype = 'food';"}
{"sample_id": 461, "db_id": "allergy_1", "gold_sql": "SELECT Fname ,  Lname FROM Student", "pred_sql": "SELECT fname, lname FROM student;"}
{"sample_id": 471, "db_id": "allergy_1", "gold_sql": "SELECT StuID FROM Student WHERE Sex  =  'M'", "pred_sql": "SELECT stuid FROM student WHERE sex = 'male';"}
{"sample_id": 477, "db_id": "allergy_1", "gold_sql": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"", "pred_sql": "SELECT city_code FROM student WHERE lname = 'Kim';"}
{"sample_id": 533, "db_id": "allergy_1", "gold_sql": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")", "pred_sql": "SELECT COUNT(DISTINCT s.stuid) AS num_students\nFROM student s\nLEFT JOIN has_allergy ha ON s.stuid = ha.stuid\nLEFT JOIN allergy_type at ON ha.allergy = at.allergy\nWHERE s.age > 18 AND (at.allergytype IS NULL OR at.allergytype NOT IN ('food', 'animal'));"}
{"sample_id": 521, "db_id": "allergy_1", "gold_sql": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy", "pred_sql": "SELECT a.allergy, a.allergytype FROM allergy_type a JOIN has_allergy ha ON a.allergy = ha.allergy JOIN student s ON ha.stuid = s.stuid WHERE s.fname = 'Lisa' ORDER BY a.allergy;"}
{"sample_id": 517, "db_id": "allergy_1", "gold_sql": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype", "pred_sql": "SELECT at.allergytype, COUNT(ha.stuid) AS number_of_students FROM allergy_type at LEFT JOIN has_allergy ha ON at.allergy = ha.allergy GROUP BY at.allergytype;"}
{"sample_id": 500, "db_id": "allergy_1", "gold_sql": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor", "pred_sql": "SELECT advisor, COUNT(stuid) AS student_count FROM student GROUP BY advisor;"}
{"sample_id": 485, "db_id": "allergy_1", "gold_sql": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)", "pred_sql": "SELECT lname FROM student ORDER BY age ASC LIMIT 1;"}
{"sample_id": 4579, "db_id": "solvency_ii", "gold_sql": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"", "pred_sql": "SELECT product_price FROM products WHERE product_name IN ('Dining', 'Trading Policy');"}
{"sample_id": 4583, "db_id": "solvency_ii", "gold_sql": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT product_type_code, COUNT(*) as count FROM products GROUP BY product_type_code ORDER BY count DESC LIMIT 1;"}
{"sample_id": 4581, "db_id": "solvency_ii", "gold_sql": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1", "pred_sql": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1;"}
{"sample_id": 7708, "db_id": "world_1", "gold_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"", "pred_sql": "SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil';", "token_usage": {"tokens": 756, "cost": 0.00016199999999999998}}
{"sample_id": 7718, "db_id": "world_1", "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"", "pred_sql": "SELECT AVG(lifeexpectancy) AS average_life_expectancy FROM country WHERE continent = 'Africa' AND governmentform LIKE '%Republic%';", "token_usage": {"tokens": 824, "cost": 0.00020099999999999998}}
{"sample_id": 7745, "db_id": "world_1", "gold_sql": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"", "pred_sql": "SELECT DISTINCT region FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'Dutch'));", "token_usage": {"tokens": 749, "cost": 0.0001578}}
{"sample_id": 7773, "db_id": "world_1", "gold_sql": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "pred_sql": "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English';", "token_usage": {"tokens": 793, "cost": 0.00018195}}
{"sample_id": 7796, "db_id": "world_1", "gold_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "pred_sql": "SELECT name FROM country ORDER BY population DESC LIMIT 3;", "token_usage": {"tokens": 755, "cost": 0.00016094999999999998}}
{"sample_id": 7723, "db_id": "world_1", "gold_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "pred_sql": "SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory';", "token_usage": {"tokens": 813, "cost": 0.00019259999999999997}}
{"sample_id": 7762, "db_id": "world_1", "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"", "pred_sql": "SELECT cl.language FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.headofstate = 'Beatrix' AND cl.isofficial = 'T';", "token_usage": {"tokens": 822, "cost": 0.0001971}}
{"sample_id": 7770, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")", "pred_sql": "SELECT c.name FROM country c WHERE c.continent = 'Asia' AND c.population > (SELECT MAX(population) FROM country WHERE continent = 'Africa');", "token_usage": {"tokens": 823, "cost": 0.0001986}}
{"sample_id": 7724, "db_id": "world_1", "gold_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"", "pred_sql": "SELECT AVG(gnp) AS mean_gnp, SUM(population) AS total_population FROM country WHERE name IN ('Puerto Rico', 'Guam', 'American Samoa', 'U.S. Virgin Islands', 'Northern Mariana Islands');", "token_usage": {"tokens": 801, "cost": 0.00018629999999999997}}
{"sample_id": 7787, "db_id": "world_1", "gold_sql": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District", "pred_sql": "SELECT district, COUNT(*) AS number_of_cities\nFROM city\nWHERE population > (SELECT AVG(population) FROM city)\nGROUP BY district;", "token_usage": {"tokens": 783, "cost": 0.00017414999999999998}}
{"sample_id": 7719, "db_id": "world_1", "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"", "pred_sql": "SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent IN ('Asia', 'Europe');", "token_usage": {"tokens": 753, "cost": 0.00015884999999999999}}
{"sample_id": 7698, "db_id": "world_1", "gold_sql": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"", "pred_sql": "SELECT COUNT(*) AS republic_count FROM country WHERE governmentform LIKE '%Republic%';", "token_usage": {"tokens": 741, "cost": 0.00015299999999999998}}
{"sample_id": 7739, "db_id": "world_1", "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"", "pred_sql": "SELECT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode WHERE cl1.language = 'English' AND cl1.isofficial = 'T' AND c.code IN (SELECT cl2.countrycode FROM countrylanguage cl2 WHERE cl2.language = 'French' AND cl2.isofficial = 'T');", "token_usage": {"tokens": 793, "cost": 0.00018329999999999998}}
{"sample_id": 7734, "db_id": "world_1", "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1;", "token_usage": {"tokens": 806, "cost": 0.0001902}}
{"sample_id": 7730, "db_id": "world_1", "gold_sql": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"", "pred_sql": "SELECT COUNT(DISTINCT language) AS number_of_languages FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba');", "token_usage": {"tokens": 766, "cost": 0.00016889999999999999}}
{"sample_id": 7786, "db_id": "world_1", "gold_sql": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2", "pred_sql": "SELECT cl.countrycode, c.name, COUNT(cl.language) AS language_count\nFROM countrylanguage cl\nJOIN country c ON cl.countrycode = c.code\nGROUP BY cl.countrycode\nHAVING COUNT(cl.language) > 2;", "token_usage": {"tokens": 814, "cost": 0.00019095}}
{"sample_id": 7806, "db_id": "world_1", "gold_sql": "select name from city where population between 160000 and 900000", "pred_sql": "SELECT name FROM city WHERE population BETWEEN '160000' AND '900000';", "token_usage": {"tokens": 767, "cost": 0.000165}}
{"sample_id": 7765, "db_id": "world_1", "gold_sql": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")", "pred_sql": "SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe');", "token_usage": {"tokens": 805, "cost": 0.00018915}}
{"sample_id": 7776, "db_id": "world_1", "gold_sql": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "pred_sql": "SELECT country.code FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL AND country.governmentform NOT LIKE '%Republic%';", "token_usage": {"tokens": 858, "cost": 0.00021915}}
{"sample_id": 7733, "db_id": "world_1", "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1", "pred_sql": "SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1;", "token_usage": {"tokens": 817, "cost": 0.00019679999999999999}}
{"sample_id": 7763, "db_id": "world_1", "gold_sql": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"", "pred_sql": "SELECT COUNT(DISTINCT cl.language) AS unique_official_languages\nFROM countrylanguage cl\nJOIN country c ON cl.countrycode = c.code\nWHERE c.indepyear < '1930' AND cl.isofficial = 'T';", "token_usage": {"tokens": 849, "cost": 0.00021285}}
{"sample_id": 7795, "db_id": "world_1", "gold_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3", "pred_sql": "SELECT name FROM country ORDER BY population DESC LIMIT 3;", "token_usage": {"tokens": 755, "cost": 0.00016004999999999996}}
{"sample_id": 7804, "db_id": "world_1", "gold_sql": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "pred_sql": "SELECT SUM(country.population) AS total_population, AVG(country.surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000;", "token_usage": {"tokens": 856, "cost": 0.00021525}}
{"sample_id": 7756, "db_id": "world_1", "gold_sql": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "pred_sql": "SELECT country.name, country.population, country.lifeexpectancy \nFROM country \nWHERE country.continent = 'Asia' \nORDER BY country.surfacearea DESC \nLIMIT 1;", "token_usage": {"tokens": 811, "cost": 0.0001914}}
{"sample_id": 6990, "db_id": "culture_company", "gold_sql": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'", "pred_sql": "SELECT movie.title AS movie_title, book_club.book_title AS book_title \nFROM culture_company \nJOIN movie ON culture_company.movie_id = movie.movie_id \nJOIN book_club ON culture_company.book_club_id = book_club.book_club_id \nWHERE culture_company.company_name IN (SELECT company_name FROM culture_company WHERE incorporated_in = 'China');"}
{"sample_id": 6968, "db_id": "culture_company", "gold_sql": "SELECT category ,  count(*) FROM book_club GROUP BY category", "pred_sql": "SELECT category, COUNT(*) AS book_count FROM book_club GROUP BY category;"}
{"sample_id": 6982, "db_id": "culture_company", "gold_sql": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999", "pred_sql": "SELECT DISTINCT m1.director FROM movie m1 JOIN movie m2 ON m1.director = m2.director WHERE m1.year = 1999 AND m2.year = 2000;"}
{"sample_id": 6973, "db_id": "culture_company", "gold_sql": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989", "pred_sql": "SELECT DISTINCT publisher FROM book_club WHERE year != '1989' OR year IS NULL;"}
{"sample_id": 6974, "db_id": "culture_company", "gold_sql": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989", "pred_sql": "SELECT DISTINCT publisher FROM book_club WHERE year != '1989' OR year IS NULL;"}
{"sample_id": 6992, "db_id": "culture_company", "gold_sql": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999", "pred_sql": "SELECT DISTINCT culture_company.company_name \nFROM culture_company \nJOIN movie ON culture_company.movie_id = movie.movie_id \nWHERE movie.year = 1999;"}
{"sample_id": 6981, "db_id": "culture_company", "gold_sql": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999", "pred_sql": "SELECT DISTINCT m1.director \nFROM movie m1 \nJOIN movie m2 ON m1.director = m2.director \nWHERE m1.year = 1999 AND m2.year = 2000;"}
{"sample_id": 4103, "db_id": "company_employee", "gold_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)", "pred_sql": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM employment)"}
{"sample_id": 4099, "db_id": "company_employee", "gold_sql": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID", "pred_sql": "SELECT company.name AS company_name, people.name AS employee_name FROM company JOIN employment ON company.company_id = employment.company_id JOIN people ON employment.people_id = people.people_id;"}
{"sample_id": 4098, "db_id": "company_employee", "gold_sql": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\"", "pred_sql": "SELECT DISTINCT c.headquarters \nFROM company c \nWHERE c.industry IN ('banking', 'oil and gas') \nGROUP BY c.headquarters \nHAVING COUNT(DISTINCT c.industry) = 2;"}
{"sample_id": 3041, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1", "pred_sql": "SELECT cust_name FROM customer ORDER BY credit_score ASC LIMIT 1;"}
{"sample_id": 3063, "db_id": "loan_1", "gold_sql": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id", "pred_sql": "SELECT DISTINCT b.bname FROM bank b JOIN loan l ON b.branch_id = l.branch_id;"}
{"sample_id": 3021, "db_id": "loan_1", "gold_sql": "SELECT count(DISTINCT state) FROM bank", "pred_sql": "SELECT COUNT(DISTINCT state) AS number_of_states FROM bank;"}
{"sample_id": 3060, "db_id": "loan_1", "gold_sql": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1", "pred_sql": "SELECT b.bname FROM bank b JOIN loan l ON b.branch_id = l.branch_id GROUP BY b.branch_id ORDER BY SUM(l.amount) DESC LIMIT 1;"}
{"sample_id": 3037, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)", "pred_sql": "SELECT cust_name FROM customer WHERE credit_score < (SELECT AVG(credit_score) FROM customer);"}
{"sample_id": 3004, "db_id": "loan_1", "gold_sql": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'", "pred_sql": "SELECT SUM(no_of_customers) AS total_customers FROM bank WHERE city = 'New York City';"}
{"sample_id": 3033, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'", "pred_sql": "SELECT c.cust_name FROM customer c LEFT JOIN loan l ON c.cust_id = l.cust_id AND l.loan_type = 'Mortgages' WHERE l.loan_id IS NULL;"}
{"sample_id": 3050, "db_id": "loan_1", "gold_sql": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type", "pred_sql": "SELECT acc_type, AVG(acc_bal) AS average_balance FROM customer WHERE credit_score < 50 GROUP BY acc_type;"}
{"sample_id": 3040, "db_id": "loan_1", "gold_sql": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1", "pred_sql": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1;"}
{"sample_id": 3031, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'", "pred_sql": "SELECT cust_name FROM customer WHERE acc_type != 'savings';"}
{"sample_id": 3042, "db_id": "loan_1", "gold_sql": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1", "pred_sql": "SELECT cust_name FROM customer ORDER BY credit_score ASC LIMIT 1;"}
{"sample_id": 3006, "db_id": "loan_1", "gold_sql": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'", "pred_sql": "SELECT AVG(no_of_customers) AS average_customers FROM bank WHERE state = 'Utah';"}
{"sample_id": 3001, "db_id": "loan_1", "gold_sql": "SELECT sum(no_of_customers) FROM bank", "pred_sql": "SELECT COUNT(*) AS total_customers FROM customer;"}
{"sample_id": 3054, "db_id": "loan_1", "gold_sql": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname", "pred_sql": "SELECT b.bname, SUM(l.amount) AS total_loan_amount\nFROM bank b\nJOIN loan l ON b.branch_id = l.branch_id\nGROUP BY b.bname;"}
{"sample_id": 3023, "db_id": "loan_1", "gold_sql": "SELECT count(DISTINCT acc_type) FROM customer", "pred_sql": "SELECT COUNT(DISTINCT acc_type) AS distinct_account_types FROM customer;"}
{"sample_id": 3000, "db_id": "loan_1", "gold_sql": "SELECT count(*) FROM bank", "pred_sql": "SELECT COUNT(*) AS branch_count FROM bank;"}
{"sample_id": 7915, "db_id": "dog_kennels", "gold_sql": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "pred_sql": "SELECT p.professional_id, p.last_name, p.cell_number \nFROM professionals p \nLEFT JOIN treatments t ON p.professional_id = t.professional_id \nWHERE p.state = 'Indiana' \nOR p.professional_id IN (\n    SELECT professional_id \n    FROM treatments \n    GROUP BY professional_id \n    HAVING COUNT(treatment_id) > 2\n)", "token_usage": {"tokens": 1325, "cost": 0.00030900000000000003}}
{"sample_id": 7913, "db_id": "dog_kennels", "gold_sql": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "pred_sql": "SELECT AVG(d.age) AS average_age FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id;", "token_usage": {"tokens": 1210, "cost": 0.0002472}}
{"sample_id": 7945, "db_id": "dog_kennels", "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "pred_sql": "SELECT owners.first_name, dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id;", "token_usage": {"tokens": 1174, "cost": 0.00022649999999999998}}
{"sample_id": 7973, "db_id": "dog_kennels", "gold_sql": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "pred_sql": "SELECT COUNT(*) AS owner_count FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs)", "token_usage": {"tokens": 1167, "cost": 0.00022365}}
{"sample_id": 7926, "db_id": "dog_kennels", "gold_sql": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "pred_sql": "SELECT p.professional_id, p.role_code, p.first_name \nFROM professionals p \nJOIN treatments t ON p.professional_id = t.professional_id \nGROUP BY p.professional_id \nHAVING COUNT(t.treatment_id) >= 2;", "token_usage": {"tokens": 1210, "cost": 0.0002445}}
{"sample_id": 7964, "db_id": "dog_kennels", "gold_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "pred_sql": "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%';", "token_usage": {"tokens": 1184, "cost": 0.000228}}
{"sample_id": 7950, "db_id": "dog_kennels", "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "pred_sql": "SELECT owners.first_name, dogs.name \nFROM owners \nJOIN dogs ON owners.owner_id = dogs.owner_id \nWHERE owners.state = 'Virginia';", "token_usage": {"tokens": 1238, "cost": 0.00026309999999999994}}
{"sample_id": 7975, "db_id": "dog_kennels", "gold_sql": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "pred_sql": "SELECT COUNT(*) AS professionals_without_treatments FROM professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM treatments);", "token_usage": {"tokens": 1168, "cost": 0.00022379999999999996}}
{"sample_id": 7943, "db_id": "dog_kennels", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "pred_sql": "SELECT owners.first_name, owners.last_name, sizes.size_description \nFROM owners \nJOIN dogs ON owners.owner_id = dogs.owner_id \nJOIN sizes ON dogs.size_code = sizes.size_code;", "token_usage": {"tokens": 1213, "cost": 0.00024765}}
{"sample_id": 7920, "db_id": "dog_kennels", "gold_sql": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "pred_sql": "SELECT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs);", "token_usage": {"tokens": 1205, "cost": 0.00024239999999999998}}
{"sample_id": 7966, "db_id": "dog_kennels", "gold_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "pred_sql": "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%';", "token_usage": {"tokens": 1175, "cost": 0.00022214999999999998}}
{"sample_id": 7983, "db_id": "dog_kennels", "gold_sql": "SELECT charge_type ,  charge_amount FROM Charges", "pred_sql": "SELECT charge_type, charge_amount FROM charges;", "token_usage": {"tokens": 1162, "cost": 0.0002184}}
{"sample_id": 7980, "db_id": "dog_kennels", "gold_sql": "SELECT avg(age) FROM Dogs", "pred_sql": "SELECT AVG(age) AS average_age FROM dogs;", "token_usage": {"tokens": 1146, "cost": 0.00021149999999999996}}
{"sample_id": 7955, "db_id": "dog_kennels", "gold_sql": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "pred_sql": "SELECT email_address FROM professionals WHERE state IN ('Hawaii', 'Wisconsin');", "token_usage": {"tokens": 1184, "cost": 0.0002298}}
{"sample_id": 7963, "db_id": "dog_kennels", "gold_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "pred_sql": "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%';", "token_usage": {"tokens": 1200, "cost": 0.00023715}}
{"sample_id": 7967, "db_id": "dog_kennels", "gold_sql": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "pred_sql": "SELECT COUNT(*) AS number_of_dogs_below_average_age FROM dogs WHERE age < (SELECT AVG(age) FROM dogs);", "token_usage": {"tokens": 1176, "cost": 0.00022904999999999998}}
{"sample_id": 7046, "db_id": "pets_1", "gold_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "pred_sql": "SELECT COUNT(*) AS number_of_dogs FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype = 'dog' AND student.sex = 'F';"}
{"sample_id": 7072, "db_id": "pets_1", "gold_sql": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "pred_sql": "SELECT student.stuid, COUNT(pets.petid) AS pet_count\nFROM student\nJOIN has_pet ON student.stuid = has_pet.stuid\nJOIN pets ON has_pet.petid = pets.petid\nGROUP BY student.stuid;"}
{"sample_id": 7065, "db_id": "pets_1", "gold_sql": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "pred_sql": "SELECT pets.pettype, AVG(student.age) AS average_age, MAX(student.age) AS maximum_age\nFROM pets\nJOIN has_pet ON pets.petid = has_pet.petid\nJOIN student ON has_pet.stuid = student.stuid\nGROUP BY pets.pettype;"}
{"sample_id": 7068, "db_id": "pets_1", "gold_sql": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "pred_sql": "SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}
{"sample_id": 7039, "db_id": "pets_1", "gold_sql": "SELECT count(*) FROM pets WHERE weight  >  10", "pred_sql": "SELECT COUNT(*) AS pet_count FROM pets WHERE weight > '10';"}
{"sample_id": 7074, "db_id": "pets_1", "gold_sql": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "pred_sql": "SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT(has_pet.petid) > 1;"}
{"sample_id": 7042, "db_id": "pets_1", "gold_sql": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "pred_sql": "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;"}
{"sample_id": 7073, "db_id": "pets_1", "gold_sql": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "pred_sql": "SELECT student.stuid, COUNT(has_pet.petid) AS pet_count \nFROM student \nJOIN has_pet ON student.stuid = has_pet.stuid \nGROUP BY student.stuid;"}
{"sample_id": 6902, "db_id": "tracking_orders", "gold_sql": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"", "pred_sql": "SELECT DISTINCT c.customer_name \nFROM customers c \nJOIN orders o ON c.customer_id = o.customer_id \nWHERE o.order_status IN ('On Road', 'Shipped') \nGROUP BY c.customer_id \nHAVING COUNT(DISTINCT o.order_status) = 2;"}
{"sample_id": 6900, "db_id": "tracking_orders", "gold_sql": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"", "pred_sql": "SELECT DISTINCT oi.product_id FROM orders o JOIN order_items oi ON o.order_id = oi.order_id WHERE o.date_order_placed BETWEEN '1975-01-01' AND '1976-01-01';"}
{"sample_id": 6891, "db_id": "tracking_orders", "gold_sql": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT c.customer_name FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY COUNT(o.order_id) DESC LIMIT 1;"}
{"sample_id": 6894, "db_id": "tracking_orders", "gold_sql": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "pred_sql": "SELECT orders.order_id, orders.order_status FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie';"}
{"sample_id": 6895, "db_id": "tracking_orders", "gold_sql": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "pred_sql": "SELECT orders.order_id, orders.order_status FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie';"}
{"sample_id": 6931, "db_id": "tracking_orders", "gold_sql": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2", "pred_sql": "SELECT c.customer_name, COUNT(o.order_id) AS number_of_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nHAVING COUNT(o.order_id) >= 2;"}
{"sample_id": 6908, "db_id": "tracking_orders", "gold_sql": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "pred_sql": "SELECT o.date_order_placed FROM orders o JOIN shipments s ON o.order_id = s.order_id WHERE s.invoice_number = 10;"}
{"sample_id": 6878, "db_id": "tracking_orders", "gold_sql": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1", "pred_sql": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1;"}
{"sample_id": 6911, "db_id": "tracking_orders", "gold_sql": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "pred_sql": "SELECT products.product_id, COUNT(order_items.order_item_id) AS order_count\nFROM products\nLEFT JOIN order_items ON products.product_id = order_items.product_id\nGROUP BY products.product_id;"}
{"sample_id": 6921, "db_id": "tracking_orders", "gold_sql": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed", "pred_sql": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed;"}
{"sample_id": 6920, "db_id": "tracking_orders", "gold_sql": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed", "pred_sql": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed;"}
{"sample_id": 7447, "db_id": "wta_1", "gold_sql": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1", "pred_sql": "SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;", "token_usage": {"tokens": 1118, "cost": 0.00022845}}
{"sample_id": 7481, "db_id": "wta_1", "gold_sql": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1", "pred_sql": "SELECT p.first_name, p.country_code, p.birth_date\nFROM players p\nJOIN matches m ON p.player_id = m.winner_id\nORDER BY m.winner_rank_points DESC\nLIMIT 1;", "token_usage": {"tokens": 1163, "cost": 0.00025005}}
{"sample_id": 7425, "db_id": "wta_1", "gold_sql": "SELECT count(*) FROM matches", "pred_sql": "SELECT COUNT(*) AS match_count FROM matches;", "token_usage": {"tokens": 1055, "cost": 0.00019379999999999997}}
{"sample_id": 7422, "db_id": "wta_1", "gold_sql": "SELECT count(*) FROM players", "pred_sql": "SELECT COUNT(*) AS total_players FROM players;", "token_usage": {"tokens": 1067, "cost": 0.00020054999999999997}}
{"sample_id": 7427, "db_id": "wta_1", "gold_sql": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "pred_sql": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';", "token_usage": {"tokens": 1116, "cost": 0.00022679999999999998}}
{"sample_id": 7442, "db_id": "wta_1", "gold_sql": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016", "pred_sql": "SELECT COUNT(*) AS total_matches FROM matches WHERE year IN (2013, 2016);", "token_usage": {"tokens": 1109, "cost": 0.00022034999999999996}}
{"sample_id": 7457, "db_id": "wta_1", "gold_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT winner_name, MAX(winner_rank_points) AS rank_points\nFROM matches\nJOIN players ON matches.winner_id = players.player_id\nGROUP BY winner_id\nORDER BY COUNT(*) DESC\nLIMIT 1;", "token_usage": {"tokens": 1185, "cost": 0.00026369999999999996}}
{"sample_id": 7479, "db_id": "wta_1", "gold_sql": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'", "pred_sql": "SELECT COUNT(DISTINCT winner_id) AS left_handed_winners_count \nFROM matches \nJOIN players ON matches.winner_id = players.player_id \nWHERE players.hand = 'left' AND matches.tourney_name = 'WTA Championships';", "token_usage": {"tokens": 1149, "cost": 0.00024615}}
{"sample_id": 7456, "db_id": "wta_1", "gold_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT winner_name, winner_rank_points \nFROM matches \nGROUP BY winner_id \nORDER BY COUNT(winner_id) DESC \nLIMIT 1;", "token_usage": {"tokens": 1134, "cost": 0.00023715}}
{"sample_id": 7453, "db_id": "wta_1", "gold_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1", "pred_sql": "SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1;", "token_usage": {"tokens": 1118, "cost": 0.0002271}}
{"sample_id": 7449, "db_id": "wta_1", "gold_sql": "SELECT first_name ,  last_name FROM players ORDER BY birth_date", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date;", "token_usage": {"tokens": 1066, "cost": 0.00019679999999999999}}
{"sample_id": 7461, "db_id": "wta_1", "gold_sql": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1", "pred_sql": "SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1;", "token_usage": {"tokens": 1088, "cost": 0.0002091}}
{"sample_id": 1721, "db_id": "riding_club", "gold_sql": "SELECT Gender ,  Occupation FROM player", "pred_sql": "SELECT gender, occupation FROM player;"}
{"sample_id": 1724, "db_id": "riding_club", "gold_sql": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1", "pred_sql": "SELECT player_name FROM player ORDER BY votes DESC LIMIT 1;"}
{"sample_id": 1719, "db_id": "riding_club", "gold_sql": "SELECT count(*) FROM player", "pred_sql": "SELECT COUNT(*) AS player_count FROM player;"}
{"sample_id": 5128, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "pred_sql": "SELECT DISTINCT dg.store_name \nFROM drama_workshop_groups dg \nJOIN services s ON dg.workshop_group_id = s.workshop_group_id \nWHERE s.product_name = 'film';"}
{"sample_id": 5155, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"", "pred_sql": "SELECT dg.store_name\nFROM drama_workshop_groups dg\nJOIN bookings b ON dg.workshop_group_id = b.workshop_group_id\nWHERE b.status_code = 'stop';"}
{"sample_id": 5137, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1", "pred_sql": "SELECT DISTINCT b.actual_delivery_date \nFROM customer_orders co \nJOIN order_items oi ON co.order_id = oi.order_id \nJOIN bookings b ON co.order_id = b.booking_id \nWHERE oi.order_quantity = '1';"}
{"sample_id": 5105, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC", "pred_sql": "SELECT product_name FROM products ORDER BY product_price ASC;"}
{"sample_id": 5126, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "pred_sql": "SELECT dg.store_phone, dg.store_email_address \nFROM drama_workshop_groups dg \nJOIN services s ON dg.workshop_group_id = s.workshop_group_id \nWHERE s.service_id IS NOT NULL;"}
{"sample_id": 5152, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID", "pred_sql": "SELECT DISTINCT a.city_town \nFROM addresses a \nJOIN customers c ON a.address_id = c.address_id \nLEFT JOIN performers p ON a.address_id = p.address_id \nWHERE p.performer_id IS NULL;"}
{"sample_id": 5090, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT count(*) FROM CUSTOMERS", "pred_sql": "SELECT COUNT(*) AS customer_count FROM customers;"}
{"sample_id": 5122, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code", "pred_sql": "SELECT ref_service_types.service_type_description, ref_service_types.service_type_code, COUNT(services.service_id) AS number_of_services\nFROM ref_service_types\nLEFT JOIN services ON ref_service_types.service_type_code = services.service_type_code\nGROUP BY ref_service_types.service_type_code, ref_service_types.service_type_description;"}
{"sample_id": 5139, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000", "pred_sql": "SELECT co.order_date \nFROM customer_orders co \nJOIN order_items oi ON co.order_id = oi.order_id \nJOIN products p ON oi.product_id = p.product_id \nWHERE p.product_price > 1000;"}
{"sample_id": 5144, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"", "pred_sql": "SELECT store_name FROM drama_workshop_groups JOIN addresses ON drama_workshop_groups.address_id = addresses.address_id WHERE city_town = 'Feliciaberg';"}
{"sample_id": 5085, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Order_Date FROM BOOKINGS", "pred_sql": "SELECT order_date FROM bookings;"}
{"sample_id": 5150, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT marketing_region_code FROM drama_workshop_groups GROUP BY marketing_region_code ORDER BY COUNT(workshop_group_id) DESC LIMIT 1;"}
{"sample_id": 5119, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100", "pred_sql": "SELECT ref_service_types.service_type_description \nFROM ref_service_types \nJOIN services ON ref_service_types.service_type_code = services.service_type_code \nWHERE services.product_price > 100;"}
{"sample_id": 5097, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT DISTINCT payment_method_code FROM INVOICES", "pred_sql": "SELECT DISTINCT payment_method_code FROM invoices;"}
{"sample_id": 5134, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\"", "pred_sql": "SELECT SUM(order_items.order_quantity) AS total_order_quantity\nFROM order_items\nJOIN products ON order_items.product_id = products.product_id\nWHERE products.product_name = 'photo';"}
{"sample_id": 5114, "db_id": "cre_Drama_Workshop_Groups", "gold_sql": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"", "pred_sql": "SELECT addresses.city_town \nFROM stores \nJOIN addresses ON stores.address_id = addresses.address_id \nWHERE stores.store_name = 'FJA Filming';"}
{"sample_id": 1045, "db_id": "phone_1", "gold_sql": "SELECT * FROM chip_model", "pred_sql": "SELECT * FROM chip_model;"}
{"sample_id": 1042, "db_id": "phone_1", "gold_sql": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type", "pred_sql": "SELECT accreditation_type, COUNT(*) AS number_of_phones FROM phone GROUP BY accreditation_type;"}
{"sample_id": 1046, "db_id": "phone_1", "gold_sql": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'", "pred_sql": "SELECT COUNT(*) AS model_count FROM chip_model WHERE wifi IS NULL OR wifi = 'No';"}
{"sample_id": 1043, "db_id": "phone_1", "gold_sql": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type", "pred_sql": "SELECT accreditation_type, COUNT(*) AS phone_count FROM phone GROUP BY accreditation_type;"}
{"sample_id": 1025, "db_id": "phone_1", "gold_sql": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";", "pred_sql": "SELECT chip_model.model_name, screen_mode.graphics_mode FROM phone JOIN chip_model ON phone.chip_model = chip_model.model_name JOIN screen_mode ON phone.screen_mode = screen_mode.graphics_mode WHERE phone.hardware_model_name = 'LG-P760';"}
{"sample_id": 6708, "db_id": "activity_1", "gold_sql": "SELECT count(*) FROM Faculty", "pred_sql": "SELECT COUNT(*) AS faculty_count FROM faculty;"}
{"sample_id": 6771, "db_id": "activity_1", "gold_sql": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"", "pred_sql": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid JOIN faculty ON faculty_participates_in.facid = faculty.facid WHERE faculty.fname = 'Mark' AND faculty.lname = 'Giuliano';"}
{"sample_id": 6756, "db_id": "activity_1", "gold_sql": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student", "pred_sql": "SELECT facid FROM faculty WHERE facid NOT IN (SELECT advisor FROM student WHERE advisor IS NOT NULL);"}
{"sample_id": 6759, "db_id": "activity_1", "gold_sql": "SELECT activity_name FROM Activity", "pred_sql": "SELECT * FROM activity;"}
{"sample_id": 6737, "db_id": "activity_1", "gold_sql": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex", "pred_sql": "SELECT rank, sex, COUNT(facid) AS faculty_count FROM faculty GROUP BY rank, sex;"}
{"sample_id": 6766, "db_id": "activity_1", "gold_sql": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student", "pred_sql": "SELECT DISTINCT f.facid FROM faculty f JOIN faculty_participates_in fpi ON f.facid = fpi.facid JOIN student s ON f.advisor = s.advisor;"}
{"sample_id": 6739, "db_id": "activity_1", "gold_sql": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1", "pred_sql": "SELECT rank, COUNT(facid) AS member_count FROM faculty GROUP BY rank ORDER BY member_count ASC LIMIT 1;"}
{"sample_id": 6747, "db_id": "activity_1", "gold_sql": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"", "pred_sql": "SELECT s.fname, s.lname FROM student s JOIN faculty f ON s.advisor = f.facid WHERE f.fname = 'Michael' AND f.lname = 'Goodrich';"}
{"sample_id": 6783, "db_id": "activity_1", "gold_sql": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20", "pred_sql": "SELECT DISTINCT p.stuid FROM participates_in p JOIN student s ON p.stuid = s.stuid WHERE s.age < 20;"}
{"sample_id": 6741, "db_id": "activity_1", "gold_sql": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex", "pred_sql": "SELECT sex, COUNT(*) AS count FROM faculty WHERE rank = 'assistant professor' GROUP BY sex;"}
{"sample_id": 6748, "db_id": "activity_1", "gold_sql": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID", "pred_sql": "SELECT faculty.facid, COUNT(student.advisor) AS num_students_advised \nFROM faculty \nLEFT JOIN student ON faculty.facid = student.advisor \nGROUP BY faculty.facid;"}
{"sample_id": 6720, "db_id": "activity_1", "gold_sql": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"", "pred_sql": "SELECT COUNT(*) AS female_professors_count FROM faculty WHERE sex = 'F' AND rank = 'Professor';"}
{"sample_id": 6790, "db_id": "activity_1", "gold_sql": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'", "pred_sql": "SELECT DISTINCT f.fname FROM faculty f WHERE f.facid NOT IN (SELECT fp.facid FROM faculty_participates_in fp JOIN activity a ON fp.actid = a.actid WHERE a.activity_name IN ('Canoeing', 'Kayaking'));"}
{"sample_id": 6789, "db_id": "activity_1", "gold_sql": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'", "pred_sql": "SELECT f.fname FROM faculty f JOIN faculty_participates_in fpi ON f.facid = fpi.facid JOIN activity a ON fpi.actid = a.actid WHERE a.activity_name IN ('Canoeing', 'Kayaking');"}
{"sample_id": 6791, "db_id": "activity_1", "gold_sql": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'", "pred_sql": "SELECT DISTINCT f.fname \nFROM faculty f \nWHERE f.facid NOT IN (\n    SELECT fp.facid \n    FROM faculty_participates_in fp \n    JOIN activity a ON fp.actid = a.actid \n    WHERE a.activity_name IN ('Canoeing', 'Kayaking')\n);"}
{"sample_id": 6715, "db_id": "activity_1", "gold_sql": "SELECT rank ,  Fname ,  Lname FROM Faculty", "pred_sql": "SELECT rank, fname, lname FROM faculty;"}
{"sample_id": 6743, "db_id": "activity_1", "gold_sql": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"", "pred_sql": "SELECT advisor FROM student WHERE fname = 'Linda' AND lname = 'Smith';"}
{"sample_id": 663, "db_id": "journal_committee", "gold_sql": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2", "pred_sql": "SELECT e.name\nFROM editor e\nJOIN journal_committee jc ON e.editor_id = jc.editor_id\nGROUP BY e.editor_id\nHAVING COUNT(jc.journal_id) >= 2;"}
{"sample_id": 660, "db_id": "journal_committee", "gold_sql": "SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC", "pred_sql": "SELECT editor.name, editor.age, journal.theme \nFROM editor \nJOIN journal_committee ON editor.editor_id = journal_committee.editor_id \nJOIN journal ON journal_committee.journal_id = journal.journal_id \nORDER BY journal.theme ASC;"}
{"sample_id": 658, "db_id": "journal_committee", "gold_sql": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "pred_sql": "SELECT editor.name, journal.theme FROM editor JOIN journal_committee ON editor.editor_id = journal_committee.editor_id JOIN journal ON journal_committee.journal_id = journal.journal_id;"}
{"sample_id": 2089, "db_id": "pilot_record", "gold_sql": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality", "pred_sql": "SELECT nationality, COUNT(*) AS number_of_pilots FROM pilot GROUP BY nationality;"}
{"sample_id": 2083, "db_id": "pilot_record", "gold_sql": "SELECT count(*) FROM pilot", "pred_sql": "SELECT COUNT(*) AS total_pilots FROM pilot;"}
{"sample_id": 2084, "db_id": "pilot_record", "gold_sql": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC", "pred_sql": "SELECT pilot_name FROM pilot ORDER BY rank ASC;"}
{"sample_id": 7651, "db_id": "poker_player", "gold_sql": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "pred_sql": "SELECT MAX(final_table_made) AS max_final_tables FROM poker_player WHERE earnings < 200000;", "token_usage": {"tokens": 552, "cost": 0.0001422}}
{"sample_id": 7643, "db_id": "poker_player", "gold_sql": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "pred_sql": "SELECT earnings FROM poker_player ORDER BY earnings DESC;", "token_usage": {"tokens": 483, "cost": 0.00010305}}
{"sample_id": 7676, "db_id": "poker_player", "gold_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "pred_sql": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player);", "token_usage": {"tokens": 548, "cost": 0.00014294999999999998}}
{"sample_id": 7650, "db_id": "poker_player", "gold_sql": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "pred_sql": "SELECT MAX(final_table_made) AS max_final_tables FROM poker_player WHERE earnings < 200000;", "token_usage": {"tokens": 556, "cost": 0.0001437}}
{"sample_id": 7640, "db_id": "poker_player", "gold_sql": "SELECT count(*) FROM poker_player", "pred_sql": "SELECT COUNT(*) AS total_players FROM poker_player;", "token_usage": {"tokens": 500, "cost": 0.00011594999999999997}}
{"sample_id": 7663, "db_id": "poker_player", "gold_sql": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "pred_sql": "SELECT AVG(CAST(p.earnings AS REAL)) AS average_earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 200;", "token_usage": {"tokens": 579, "cost": 0.00016064999999999997}}
{"sample_id": 7653, "db_id": "poker_player", "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "pred_sql": "SELECT name FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id;", "token_usage": {"tokens": 550, "cost": 0.00014504999999999997}}
{"sample_id": 7652, "db_id": "poker_player", "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "pred_sql": "SELECT name FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id;", "token_usage": {"tokens": 543, "cost": 0.0001413}}
{"sample_id": 6941, "db_id": "architecture", "gold_sql": "SELECT avg(length_feet) FROM bridge", "pred_sql": "SELECT AVG(length_feet) AS average_length_feet FROM bridge;"}
{"sample_id": 6939, "db_id": "architecture", "gold_sql": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name", "pred_sql": "SELECT name, nationality, id FROM architect WHERE gender = 'male' ORDER BY name;"}
{"sample_id": 6953, "db_id": "architecture", "gold_sql": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );", "pred_sql": "SELECT COUNT(DISTINCT a.id) AS architects_without_mills_before_1850\nFROM architect a\nLEFT JOIN mill m ON a.id = m.architect_id AND m.built_year < '1850'\nWHERE m.id IS NULL;"}
{"sample_id": 4155, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "pred_sql": "SELECT calendar_date, day_number FROM ref_calendar;"}
{"sample_id": 4153, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT count(*) FROM Ref_calendar", "pred_sql": "SELECT COUNT(*) AS total_calendar_items FROM ref_calendar;"}
{"sample_id": 4189, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT count(*) FROM Employees", "pred_sql": "SELECT COUNT(*) AS employee_count FROM employees;"}
{"sample_id": 4187, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"", "pred_sql": "SELECT role_description FROM roles WHERE role_name = 'Proof Reader';"}
{"sample_id": 4222, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1", "pred_sql": "SELECT location_code FROM document_locations GROUP BY location_code ORDER BY COUNT(document_id) DESC LIMIT 1;"}
{"sample_id": 4210, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"", "pred_sql": "SELECT employee_id FROM employees INNER JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name IN ('Human Resource', 'Manager');"}
{"sample_id": 4224, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3", "pred_sql": "SELECT location_code\nFROM document_locations\nGROUP BY location_code\nHAVING COUNT(document_id) >= 3;"}
{"sample_id": 4179, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"", "pred_sql": "SELECT location_code FROM ref_locations WHERE location_name = 'Canada';"}
{"sample_id": 4209, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"", "pred_sql": "SELECT employee_id FROM employees INNER JOIN roles ON employees.role_code = roles.role_code WHERE roles.role_name IN ('Human Resource', 'Manager');"}
{"sample_id": 4218, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "pred_sql": "SELECT dl.date_in_location_from, dl.date_in_locaton_to \nFROM all_documents ad \nJOIN document_locations dl ON ad.document_id = dl.document_id \nWHERE ad.document_name = 'Robin CV';"}
{"sample_id": 4180, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"", "pred_sql": "SELECT location_code FROM ref_locations WHERE location_name = 'Canada';"}
{"sample_id": 4198, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code", "pred_sql": "SELECT roles.role_code, COUNT(employees.employee_id) AS number_of_employees\nFROM roles\nLEFT JOIN employees ON roles.role_code = employees.role_code\nGROUP BY roles.role_code;"}
{"sample_id": 4233, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "pred_sql": "SELECT employee_id FROM employees WHERE employee_id NOT IN (SELECT destruction_authorised_by_employee_id FROM documents_to_be_destroyed)"}
{"sample_id": 4242, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "pred_sql": "SELECT DISTINCT e.employee_id \nFROM employees e \nJOIN documents_to_be_destroyed d ON e.employee_id = d.destroyed_by_employee_id OR e.employee_id = d.destruction_authorised_by_employee_id;"}
{"sample_id": 4160, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "pred_sql": "SELECT document_type_code, document_type_name FROM ref_document_types;"}
{"sample_id": 4167, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"", "pred_sql": "SELECT date_stored FROM all_documents WHERE document_name = 'Marry CV';"}
{"sample_id": 4175, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT location_code ,  location_name FROM Ref_locations", "pred_sql": "SELECT location_code, location_name FROM ref_locations;"}
{"sample_id": 4156, "db_id": "cre_Doc_Tracking_DB", "gold_sql": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "pred_sql": "SELECT calendar_date, day_number FROM ref_calendar;"}
{"sample_id": 3464, "db_id": "hr_1", "gold_sql": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id", "pred_sql": "SELECT d.department_name, MIN(e.salary) AS smallest_salary\nFROM departments d\nJOIN employees e ON d.department_id = e.department_id\nGROUP BY d.department_name;"}
{"sample_id": 3429, "db_id": "hr_1", "gold_sql": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'", "pred_sql": "SELECT * FROM employees WHERE hire_date < '2002-06-21';"}
{"sample_id": 3457, "db_id": "hr_1", "gold_sql": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name", "pred_sql": "SELECT d.department_name, COUNT(e.employee_id) AS employee_count\nFROM departments d\nLEFT JOIN employees e ON d.department_id = e.department_id\nGROUP BY d.department_name;"}
{"sample_id": 3427, "db_id": "hr_1", "gold_sql": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "pred_sql": "SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL;"}
{"sample_id": 3450, "db_id": "hr_1", "gold_sql": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2", "pred_sql": "SELECT j.job_id\nFROM job_history jh\nJOIN jobs j ON jh.job_id = j.job_id\nGROUP BY jh.job_id\nHAVING COUNT(DISTINCT jh.employee_id) >= 2 AND (j.end_date - j.start_date) > 300;"}
{"sample_id": 3514, "db_id": "hr_1", "gold_sql": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "pred_sql": "SELECT departments.department_name, locations.city, locations.state_province \nFROM departments \nJOIN locations ON departments.location_id = locations.location_id;"}
{"sample_id": 3493, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "pred_sql": "SELECT e.first_name || ' ' || e.last_name AS full_name, e.hire_date \nFROM employees e \nJOIN employees c ON e.department_id = c.department_id \nWHERE c.first_name = 'Clara';"}
{"sample_id": 3433, "db_id": "hr_1", "gold_sql": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'", "pred_sql": "SELECT * FROM employees WHERE hire_date > '1987-09-07';"}
{"sample_id": 3415, "db_id": "hr_1", "gold_sql": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000", "pred_sql": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000;"}
{"sample_id": 3451, "db_id": "hr_1", "gold_sql": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2", "pred_sql": "SELECT job_id FROM job_history GROUP BY job_id HAVING COUNT(*) > 1 AND SUM(julianday(end_date) - julianday(start_date)) > 300;"}
{"sample_id": 3418, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name, salary FROM employees WHERE commission_pct IS NULL"}
{"sample_id": 3512, "db_id": "hr_1", "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "pred_sql": "SELECT e.first_name, e.last_name, l.city \nFROM employees e \nJOIN departments d ON e.department_id = d.department_id \nJOIN locations l ON d.location_id = l.location_id \nWHERE e.first_name LIKE '%z%';"}
{"sample_id": 3505, "db_id": "hr_1", "gold_sql": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "pred_sql": "SELECT d.department_id, SUM(e.salary) AS total_salaries\nFROM departments d\nJOIN employees e ON d.department_id = e.department_id\nGROUP BY d.department_id\nHAVING COUNT(e.employee_id) > 2;"}
{"sample_id": 3421, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "pred_sql": "SELECT first_name || ' ' || last_name AS full_name, salary FROM employees WHERE first_name LIKE '%m';"}
{"sample_id": 3420, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "pred_sql": "SELECT first_name, last_name, salary FROM employees WHERE first_name LIKE '%m';"}
{"sample_id": 3422, "db_id": "hr_1", "gold_sql": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "pred_sql": "SELECT job_id, hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05';"}
{"sample_id": 3446, "db_id": "hr_1", "gold_sql": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id", "pred_sql": "SELECT d.department_name, AVG(e.salary) AS average_salary\nFROM employees e\nJOIN departments d ON e.department_id = d.department_id\nWHERE e.commission_pct IS NOT NULL\nGROUP BY d.department_name;"}
{"sample_id": 3459, "db_id": "hr_1", "gold_sql": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000", "pred_sql": "SELECT jh.employee_id, jh.start_date, jh.end_date, jh.job_id, jh.department_id \nFROM job_history jh \nJOIN employees e ON jh.employee_id = e.employee_id \nWHERE e.salary >= 12000;"}
{"sample_id": 3482, "db_id": "hr_1", "gold_sql": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000", "pred_sql": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000;"}
{"sample_id": 3487, "db_id": "hr_1", "gold_sql": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "pred_sql": "SELECT employees.first_name, employees.job_id \nFROM employees \nJOIN departments ON employees.department_id = departments.department_id \nWHERE departments.department_name = 'Finance';"}
{"sample_id": 3476, "db_id": "hr_1", "gold_sql": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "pred_sql": "SELECT * FROM departments WHERE department_name = 'Marketing';"}
{"sample_id": 3442, "db_id": "hr_1", "gold_sql": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10", "pred_sql": "SELECT d.department_id, d.department_name \nFROM departments d \nJOIN employees e ON d.department_id = e.department_id \nWHERE e.commission_pct IS NOT NULL \nGROUP BY d.department_id, d.department_name \nHAVING COUNT(e.employee_id) > 10;"}
{"sample_id": 3452, "db_id": "hr_1", "gold_sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "pred_sql": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(DISTINCT job_id) >= 2;"}
{"sample_id": 3462, "db_id": "hr_1", "gold_sql": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "pred_sql": "SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = '163');"}
