[
    {
        "instance_id": "b1",
        "name": "PRICING_SUMMARY",
        "ref_id": "q1",
        "business_abstraction": "The Pricing Summary Report provides a summary pricing report for all lineitems shipped. The report lists totals for extended price, discounted extended price, discounted extended price plus tax, average quantity, average extended price, and average discount. These aggregates are grouped by RETURNFLAG and LINESTATUS, and listed in ascending order of RETURNFLAG and LINESTATUS. A count of the number of lineitems in each group is included.",
        "virtual_table": "bo/b1.tpl"
    },
    {
        "instance_id": "b1.1",
        "requires": "b1",
        "name": "PRICING_SUMMARY_BY_PERIOD",
        "ref_id": "q1",
        "business_abstraction": "The PRICING_SUMMARY_BY_PERIOD provides a summary pricing report for all lineitems shipped as of a given date. The date is within a period (args:period) of the greatest ship date contained in the database. The query lists totals for extended price, discounted extended price, discounted extended price plus tax, average quantity, average extended price, and average discount. These aggregates are grouped by RETURNFLAG and LINESTATUS, and listed in ascending order of RETURNFLAG and LINESTATUS. A count of the number of lineitems in each group is included.",
        "virtual_table": "bo/b1.1.tpl"
    },
    {
        "instance_id": "b2",
        "name": "MINIMUM_COST_SUPPLYCOST",
        "ref_id": "q2",
        "business_abstraction": "The MINIMUM_COST_SUPPLYCOST finds the supplier who can be used to place an order for each part key, in a region(r_name). The supplier should supply the part at minimum cost.",
        "virtual_table": "bo/b2.tpl"
    },
    {
        "instance_id": "b2.1",
        "requires": "b2",
        "name": "MINIMUM_COST_SUPPLIER_TOP100",
        "ref_id": "q2",
        "business_abstraction": "The MINIMUM_COST_SUPPLIER_TOP100 finds which supplier should be selected to place an order for a given part in a given region. It finds, in a given region(args:r_name), for each part of a certain type(args:p_type) and size(args:p_size), the supplier who can supply it at minimum cost. If several suppliers in that region offer the desired part type and size at the same (minimum) cost, the query lists the parts from suppliers with the 100 highest account balances. For each supplier, the query lists the supplier's account balance, name and nation; the part's number and manufacturer; the supplier's address, phone number and comment information.",
        "virtual_table": "bo/b2.1.tpl"
    },
    {
        "instance_id": "b3",
        "name": "UNSHIPPED_ORDERS_HIGHEST_VALUE",
        "ref_id": "q3",
        "business_abstraction": "The UNSHIPPED_ORDERS_HIGHEST_VALUE retrieves unshipped orders with the revenue. It retrieves the potential revenue, defined as the sum of l_extendedprice * (1-l_discount), of the orders having the largest revenue among those that had not been shipped as of a given date(args:date) and customer market segment(args:c_mktsegment). Orders are listed in decreasing order of revenue.",
        "virtual_table": "bo/b3.tpl"
    },
    {
        "instance_id": "b3.1",
        "requires": "b3",
        "name": "UNSHIPPED_ORDERS_10_HIGHEST_VALUE",
        "ref_id": "q3",
        "business_abstraction": "The UNSHIPPED_ORDERS_10_HIGHEST_VALUE retrieves the 10 unshipped orders with the highest value. It retrieves the shipping priority and potential revenue, defined as the sum of l_extendedprice * (1-l_discount), of the orders having the largest revenue among those that had not been shipped as of a given date(args:date) and customer market segment(args:c_mktsegment). Orders are listed in decreasing order of revenue. If more than 10 unshipped orders exist, only the 10 orders with the largest revenue are listed.",
        "virtual_table": "bo/b3.1.tpl"
    },
    {
        "instance_id": "b4",
        "name": "LATE_DELIVERY_ORDERS",
        "ref_id": "q4",
        "business_abstraction": "The LATE_DELIVERY_ORDERS counts the number of orders ordered in a given quarter of a given date(args:date) in which at least one lineitem was received by the customer later than its committed date.",
        "virtual_table": "bo/b4.tpl"
    },
    {
        "instance_id": "b4.1",
        "requires": "b4",
        "name": "ORDER_PRIORITY_CHECKING_3MONTHS",
        "ref_id": "q4",
        "business_abstraction": "This ORDER_PRIORITY_CHECKING_3MONTHS determines how well the order priority system is working and gives an assessment of customer satisfaction. It counts the number of orders ordered in a given quarter of a given date(args:date) in which at least one lineitem was received by the customer later than its committed date. The query lists the count of such orders for each order priority sorted in ascending priority order.",
        "virtual_table": "bo/b4.1.tpl"
    },
    {
        "instance_id": "b5",
        "name": "LOCAL_SUPPLIER_VOLUME",
        "ref_id": "q5",
        "business_abstraction": "The LOCAL_SUPPLIER_VOLUME lists the revenue volume done through local suppliers. It lists for each nation in a region(args:r_name) the revenue volume that resulted from lineitem transactions in which the customer ordering parts and the supplier filling them were both within that nation. The query lists the nations and revenue volume in descending order by revenue. Revenue volume for all qualifying lineitems in a particular nation is defined as sum(l_extendedprice * (1 - l_discount)).",
        "virtual_table": "bo/b5.tpl"
    },
    {
        "instance_id": "b5.1",
        "requires": "b5",
        "name": "LOCAL_SUPPLIER_VOLUME_1YEAR",
        "ref_id": "q5",
        "business_abstraction": "The LOCAL_SUPPLIER_VOLUME_1YEAR lists the revenue volume done through local suppliers. It lists for each nation in a region(args:r_name) the revenue volume that resulted from lineitem transactions in which the customer ordering parts and the supplier filling them were both within that nation. The query is run in order to determine whether to institute local distribution centers in a given region. The query considers only parts ordered in a given year(args:date). The query displays the nations and revenue volume in descending order by revenue. Revenue volume for all qualifying lineitems in a particular nation is defined as sum(l_extendedprice * (1 - l_discount)).",
        "virtual_table": "bo/b5.1.tpl"
    },
    {
        "instance_id": "b6",
        "name": "FORECASTING_REVENUE_CHANGE",
        "ref_id": "q6",
        "business_abstraction": "The FORECASTING_REVENUE_CHANGE considers all the lineitems shipped with discount is between discounts(args:discount). The query lists the amount by which the total revenue would have increased if these discounts had been eliminated for lineitems with l_quantity less than quantity(args:quantity). Note that the potential revenue increase is equal to the sum of [l_extendedprice * l_discount] for all lineitems with discounts and quantities in the qualifying range.",
        "virtual_table": "bo/b6.tpl"
    },
    {
        "instance_id": "b6.1",
        "requires": "b6",
        "name": "FORECASTING_REVENUE_CHANGE_1YEAR",
        "ref_id": "q6",
        "business_abstraction": "The FORECASTING_REVENUE_CHANGE_1YEAR quantifies the amount of revenue increase that would have resulted from eliminating certain companywide discounts in a given percentage range in a given year. Asking this type of \"what if\" query can be used to look for ways to increase revenues. It considers all the lineitems shipped in a given year(args:date) with discount between discounts(args:discount). The query lists the amount by which the total revenue would have increased if these discounts had been eliminated for lineitems with l_quantity less than quantity(args:quantity). Note that the potential revenue increase is equal to the sum of [l_extendedprice * l_discount] for all lineitems with discounts and quantities in the qualifying range.",
        "virtual_table": "bo/b6.1.tpl"
    },
    {
        "instance_id": "b7",
        "name": "SUPP_CUST_VOLUME_SHIPPING",
        "ref_id": "q7",
        "business_abstraction": "The SUPP_CUST_VOLUME_SHIPPING finds the volumes, which are defined as gross discounted revenues derived from lineitems for two given nations(args:n_name1, args:n_name2), in which parts were shipped from a supplier in either nation to a customer in the other nation between two dates(args:year1 and args:year2). The volume revenues are defined as l_extendedprice * (1 - l_discount).",
        "virtual_table": "bo/b7.tpl"
    },
    {
        "instance_id": "b7.1",
        "requires": "b7",
        "name": "SUPP_CUST_VOLUME_SHIPPING_BY_YEAR",
        "ref_id": "q7",
        "business_abstraction": "The SUPP_CUST_VOLUME_SHIPPING_BY_YEAR aggregated by year determines the value of goods shipped between certain nations to help in the re-negotiation of shipping contracts. It finds, for two given nations(args:n_name1, args:n_name2), the gross discounted revenues derived from lineitems in which parts were shipped from a supplier in either nation to a customer in the other nation between two dates(args:year1 and args:year2). The query lists the supplier nation, the customer nation, the year, and the revenue from shipments that took place in that year. The query orders the answer by Supplier nation, Customer nation, and year (all ascending)",
        "virtual_table": "bo/b7.1.tpl"
    },
    {
        "instance_id": "b8",
        "name": "ORDERDATE_NATION_VOLUME",
        "ref_id": "q8",
        "business_abstraction": "The ORDERDATE_NATION_VOLUME by order date finds volume (which is also called discounted price, defined as l_extendedprice * (1 - l_discount)) between two dates(args:date1 and args:date2), given a region name(args:r_name), part type(args:p_type) for each nation and year.",
        "virtual_table": "bo/b8.tpl"
    },
    {
        "instance_id": "b8.1",
        "requires": "b8",
        "name": "NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION",
        "ref_id": "q8",
        "business_abstraction": "The NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION determines how the market share of all nation a given region(args:r_name) has changed over years(args:date1 and args:date2) for a given part type(args:p_type). The market share for each nation within a given region(args:r_name) is defined as the fraction of the revenue, the sum of the volume(l_extendedprice * (1-l_discount)), from the products of a specified type in that region that was supplied by suppliers. The query determines this for the years 1995 and 1996 presented in this order.",
        "virtual_table": "bo/b8.1.tpl"
    },
    {
        "instance_id": "b9",
        "name": "PRODUCT_TYPE_PROFIT_AMOUNT_BY_ORDERDATE",
        "ref_id": "q9",
        "business_abstraction": "The PRODUCT_TYPE_PROFIT_AMOUNT_BY_ORDERDATE gets the profit values of each nation by orderdate given a line of part that contains a specified substring in their names(args:p_name). The profit is defined as the sum of (l_extendedprice*(1-l_discount)) - (ps_supplycost * l_quantity)",
        "virtual_table": "bo/b9.tpl"
    },
    {
        "instance_id": "b9.1",
        "requires": "b9",
        "name": "PRODUCT_TYPE_PROFIT_MEASURE_BY_YEAR",
        "ref_id": "q9",
        "business_abstraction": "The PRODUCT_TYPE_PROFIT_MEASURE_BY_YEAR determines how much profit is made on a given line of parts, broken out by supplier nation and year. It finds, for each nation and each year, the profit for all parts ordered in that year that contain a specified substring in their names(args:p_name) and that were filled by a supplier in that nation. The profit is defined as the sum of (l_extendedprice*(1-l_discount)) - (ps_supplycost * l_quantity) for all lineitems describing parts in the specified line. The query lists the nations in ascending alphabetical order and, for each nation, the year and profit in descending order by year (most recent first).",
        "virtual_table": "bo/b9.1.tpl"
    },
    {
        "instance_id": "b10",
        "name": "RETURNED_ITEM_CUSTOMERS",
        "ref_id": "q10",
        "business_abstraction": "The RETURNED_ITEM_CUSTOMERS identifies customers who might be having problems with the parts that are shipped to them. It finds the customers, in terms of their effect on lost revenue who have returned parts. The query lists the customer's name, address, nation, phone number, account balance, comment information and revenue lost. The customers are listed in descending order of lost revenue. Revenue lost is defined as sum(l_extendedprice*(1-l_discount)) for all qualifying lineitems.",
        "virtual_table": "bo/b10.tpl"
    },
    {
        "instance_id": "b10.1",
        "requires": "b10",
        "name": "RETURNED_ITEM_REPORT_3MONTH",
        "ref_id": "q10",
        "business_abstraction": "The RETURNED_ITEM_REPORT_3MONTH identifies customers who might be having problems with the parts that are shipped to them. It finds the top 20 customers, in terms of their effect on lost revenue for a given quarter(args:date), who have returned parts. The query considers only parts that were ordered in the specified quarter. The query lists the customer's name, address, nation, phone number, account balance, comment information and revenue lost. The customers are listed in descending order of lost revenue. Revenue lost is defined as sum(l_extendedprice*(1-l_discount)) for all qualifying lineitems.",
        "virtual_table": "bo/b10.1.tpl"
    },
    {
        "instance_id": "b11",
        "name": "AVAIL_SUPPLY_COST",
        "ref_id": "q11",
        "business_abstraction": "The AVAIL_SUPPLY_COST returns the avaliable total supply cost for a given nation(args:n_name), which is defined as sum(ps_supplycost * ps_availqty). If 0.0 < fraction(args:fraction) < 1.0, it returns the fraction of cost.",
        "virtual_table": "bo/b11.tpl"
    },
    {
        "instance_id": "b11.1",
        "requires": "b11",
        "name": "IMPORTANT_STOCK_IDENTIFICATION",
        "ref_id": "q11",
        "business_abstraction": "The IMPORTANT_STOCK_IDENTIFICATION finds the most important subset of suppliers' stock in a given nation(args:n_name). It finds, from scanning the available stock of suppliers in a given nation, all the parts that represent a significant percentage(args:fraction) of the total value of all available parts. The query displays the part number and the value of those parts in descending order of value.",
        "virtual_table": "bo/b11.1.tpl"
    },
    {
        "instance_id": "b12",
        "name": "SHIPPING_MODES_LATE_ITEMS",
        "ref_id": "q12",
        "business_abstraction": "The SHIPPING_MODES_LATE_ITEMS counts, by ship mode, for lineitems actually received by customers in a given year(args:date), the number of lineitems belonging to orders for which the l_receiptdate exceeds the l_commitdate for different specified ship modes(args:l_shipmodes). Only lineitems that were actually shipped before the l_commitdate are considered.",
        "virtual_table": "bo/b12.tpl"
    },
    {
        "instance_id": "b12.1",
        "requires": "b12",
        "name": "SHIPPING_MODES_ORDER_PRIORITY",
        "ref_id": "q12",
        "business_abstraction": "The SHIPPING_MODES_ORDER_PRIORITY determines whether selecting less expensive modes of shipping is negatively affecting the critical-priority orders by causing more parts to be received by customers after the committed date. It counts, by ship mode, for lineitems actually received by customers in a given year(args:date), the number of lineitems belonging to orders for which the l_receiptdate exceeds the l_commitdate for different specified ship modes(args:l_shipmodes). Only lineitems that were actually shipped before the l_commitdate are considered. The late lineitems are partitioned into two groups, those with priority URGENT or HIGH, and those with a priority other than URGENT or HIGH.",
        "virtual_table": "bo/b12.1.tpl"
    },
    {
        "instance_id": "b13",
        "name": "SPECIAL_CATEGORY_CUSTOMERS_ORDERS",
        "ref_id": "q13",
        "business_abstraction": "The SPECIAL_CATEGORY_CUSTOMERS_ORDERS returns the count of order by customer key. The customer are filtered by the special categories which are identified in the order comment column by looking for a particular pattern.",
        "virtual_table": "bo/b13.tpl"
    },
    {
        "instance_id": "b13.1",
        "requires": "b13",
        "name": "CUSTOMER_ORDERS_DISTRIBUTION",
        "ref_id": "q13",
        "business_abstraction": "The CUSTOMER_ORDERS_DISTRIBUTION seeks relationships between customers and the size of their orders. It determines the distribution of customers by the number of orders they have made, including customers who have no record of orders, past or present. It counts and reports how many customers have no orders, how many have 1, 2, 3, etc. A check is made to ensure that the orders counted do not fall into one of several special categories of orders. Special categories are identified in the order comment column by looking for a particular pattern.",
        "virtual_table": "bo/b13.1.tpl"
    },
    {
        "instance_id": "b14",
        "name": "PROMOTION_EFFECT",
        "ref_id": "q14",
        "business_abstraction": "The PROMOTION_EFFECT determines what percentage of the revenue was derived from promotional parts. Revenue is defined as (l_extendedprice * (1-l_discount)).",
        "virtual_table": "bo/b14.tpl"
    },
    {
        "instance_id": "b14.1",
        "requires": "b14",
        "name": "PROMOTION_EFFECT_1MONTH",
        "ref_id": "q14",
        "business_abstraction": "The PROMOTION_EFFECT_1MONTH monitors the market response to a promotion such as TV advertisements or a special campaign. It determines what percentage of the revenue in a given year and month was derived from promotional parts. The query considers only parts actually shipped in that month and gives the percentage. Revenue is defined as (l_extendedprice * (1-l_discount)).",
        "virtual_table": "bo/b14.1.tpl"
    },
    {
        "instance_id": "b15",
        "name": "SUPPLIER_TOTAL_REVENUE",
        "ref_id": "q15",
        "business_abstraction": "The SUPPLIER_TOTAL_REVENUE returns the 3 months total revenue of each supplier given a date.",
        "virtual_table": "bo/b15.tpl"
    },
    {
        "instance_id": "b15.1",
        "requires": "b15",
        "name": "TOP_REVENUE_SUPPLIER",
        "ref_id": "q15",
        "business_abstraction": "The TOP_REVENUE_SUPPLIER determines the top supplier so it can be rewarded, given more business, or identified for special recognition. It finds the supplier who contributed the most to the overall revenue for parts shipped during a given quarter of a given year(args:date). In case of a tie, the query lists all suppliers whose contribution was equal to the maximum, presented in supplier number order.",
        "virtual_table": "bo/b15.1.tpl"
    },
    {
        "instance_id": "b16",
        "name": "PARTS_SUPPLIER",
        "ref_id": "q16",
        "business_abstraction": "The PARTS_SUPPLIER finds out how many suppliers can supply parts with given attributes. It counts the number of suppliers who can supply parts that satisfy a particular customer's requirements. The customer is interested in parts of different sizes(args:p_sizes) as long as they are not of a given type(args:p_type), not of a given brand(args:p_brand). Results must be presented in descending count and ascending brand, type, and size.",
        "virtual_table": "bo/b16.tpl"
    },
    {
        "instance_id": "b16.1",
        "name": "PARTS_SUPPLIER_RELATIONSHIP",
        "ref_id": "q16",
        "business_abstraction": "The PARTS_SUPPLIER_RELATIONSHIP finds out how many suppliers can supply parts with given attributes. It might be used, for example, to determine whether there is a sufficient number of suppliers for heavily ordered parts. It counts the number of suppliers who can supply parts that satisfy a particular customer's requirements. The customer is interested in parts of different sizes(args:p_sizes) as long as they are not of a given type(args:p_type), not of a given brand(args:p_brand), and not from a supplier who has had complaints registered at the Better Business Bureau. Results must be presented in descending count and ascending brand, type, and size.",
        "virtual_table": "bo/b16.1.tpl"
    },
    {
        "instance_id": "b17",
        "name": "PARTIAL_AVERAGE_QUANTITY",
        "ref_id": "q17",
        "business_abstraction": "The PARTIAL_AVERAGE_QUANTITY returns the fraction(args:fraction) of average quantity by each part key. ",
        "virtual_table": "bo/b17.tpl"
    },
    {
        "instance_id": "b17.1",
        "requires": "b17",
        "name": "SMALL_QUANTITY_ORDER",
        "ref_id": "q17",
        "business_abstraction": "The SMALL_QUANTITY_ORDER determines how much average yearly revenue would be lost if orders were no longer filled for small quantities of certain parts. This may reduce overhead expenses by concentrating sales on larger shipments. It considers parts of a given brand(args:p_brand) and with a given container type(args:p_container) and determines the average lineitem quantity of such parts ordered for all orders (past and pending) in the total years of orders in the database. What would be the average yearly gross (undiscounted) loss in revenue if orders for these parts with a quantity of less than args:ratio of this average were no longer taken?",
        "virtual_table": "bo/b17.1.tpl"
    },
    {
        "instance_id": "b18",
        "name": "LARGE_VOLUME_CUSTOMER",
        "ref_id": "q18",
        "business_abstraction": "The LARGE_VOLUME_CUSTOMER ranks customers based on their having placed a large quantity order. Large quantity orders are defined as those orders whose total quantity is above a certain level(args:level_of_quantity). It finds a list of the top 100 customers who have ever placed large quantity orders. The query lists the customer name, customer key, the order key, date and total price and the quantity for the order.",
        "virtual_table": "bo/b18.tpl"
    },
    {
        "instance_id": "b19",
        "name": "DISCOUNTED_REVENUE",
        "ref_id": "q19",
        "business_abstraction": "The DISCOUNTED_REVENUE reports the gross discounted revenue attributed to the sale of selected parts handled in a particular manner. This query is an example of code such as might be produced programmatically by a data mining tool. It finds the gross discounted revenue for all orders for different types of parts that were shipped by some modes, ship instructs, and the range of 10 quantities(args:l_quantity). Parts are selected based on the combination of specific brand(args:p_brand), a container name(args:p_container), and a range of sizes(args:p_size).",
        "virtual_table": "bo/b19.tpl"
    },
    {
        "instance_id": "b20",
        "name": "PART_SUPP_FRACTION_AVG_QUANTITY",
        "ref_id": "q20",
        "business_abstraction": "The PART_SUPP_FRACTION_AVG_QUANTITY returns the fraction(args:level_of_fraction) of average quantity by each part and supplier within a year(args:date).",
        "virtual_table": "bo/b20.tpl"
    },
    {
        "instance_id": "b20.1",
        "requires": "b20",
        "name": "PART_EXCESS_SUPPLIER",
        "ref_id": "q20",
        "business_abstraction": "The PART_EXCESS_SUPPLIER returns the supplier key, which has more than 50% of the parts like the given part(args:p_name) that the supplier shipped in a given year(args:date).",
        "virtual_table": "bo/b20.1.tpl"
    },
    {
        "instance_id": "b20.2",
        "requires": "b20.1",
        "name": "POTENTIAL_PART_PROMOTION",
        "ref_id": "q20",
        "business_abstraction": "The POTENTIAL_PART_PROMOTION identifies suppliers in a particular nation having selected parts that may be candidates for a promotional offer. It identifies suppliers who have an excess of a given part available; an excess is defined to be more than 50% of the parts like the given part(args:p_name) that the supplier shipped in a given year(args:date) for a given nation(args:n_name). Only parts whose names share a certain naming convention are considered.",
        "virtual_table": "bo/b20.2.tpl"
    },
    {
        "instance_id": "b21",
        "name": "SUPPLIER_ORDERS_WAITING",
        "ref_id": "q21",
        "business_abstraction": "The SUPPLIER_ORDERS_WAITING identifies certain suppliers who were not able to ship required parts in a timely manner. It identifies suppliers, for a given nation(args:n_name), whose product was part of a multi-supplier order (with current status of 'F') where they were the only supplier who failed to meet the committed delivery date.",
        "virtual_table": "bo/b21.tpl"
    },
    {
        "instance_id": "b22",
        "name": "POSITIVE_ACCOUNT_BALANCE_COUNTRYNAME",
        "ref_id": "q22",
        "business_abstraction": "The POSITIVE_ACCOUNT_BALANCE_COUNTRYNAME returns the customer who has positive account balance by country name.",
        "virtual_table": "bo/b22.tpl"
    },
    {
        "instance_id": "b22.1",
        "requires": "b22",
        "name": "GLOBAL_SALES_OPPORTUNITY",
        "ref_id": "q22",
        "business_abstraction": "The GLOBAL_SALES_OPPORTUNITY identifies geographies where there are customers who may be likely to make a purchase. It counts how many customers within a specific list of country names have not placed orders but who have a greater than average “positive” account balance. It also reflects the magnitude of that balance.",
        "virtual_table": "bo/b22.1.tpl"
    }
]