[
    {
        "sample_id": "q11",
        "db_id": "tpch",
        "gold_sql": "select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= date((select max(l_shipdate) from lineitem), '-60 days') group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus;",
        "pred_sql": "SELECT     l_returnflag,     l_linestatus,     SUM(l_quantity) AS sum_qty,     SUM(l_extendedprice) AS sum_base_price,     SUM(l_extendedprice * (1 - l_discount)) AS sum_disc_price,     SUM(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,     AVG(l_quantity) AS avg_qty,     AVG(l_extendedprice) AS avg_price,     AVG(l_discount) AS avg_disc,     COUNT(*) AS count_order FROM     lineitem WHERE     l_shipdate <= (SELECT DATE(MAX(l_shipdate), '-60 days') FROM lineitem) GROUP BY     l_returnflag,     l_linestatus ORDER BY     l_returnflag,     l_linestatus;",
        "score": 1
    },
    {
        "sample_id": "q12",
        "db_id": "tpch",
        "gold_sql": "select l_returnflag, l_linestatus, sum(l_extendedprice) as sum_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, count(*) as count_order from lineitem where l_shipdate <= date((select max(l_shipdate) from lineitem), '-3 months') group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus;",
        "pred_sql": "SELECT     L_RETURNFLAG,     L_LINESTATUS,     SUM(L_EXTENDEDPRICE) AS TOTAL_EXTENDED_PRICE,     SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS TOTAL_DISCOUNTED_EXTENDED_PRICE,     SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT) * (1 + L_TAX)) AS TOTAL_DISCOUNTED_EXTENDED_PRICE_PLUS_TAX FROM     LINEITEM WHERE     L_SHIPDATE < DATE((SELECT MAX(L_SHIPDATE) FROM LINEITEM), '-3 months') GROUP BY     L_RETURNFLAG,     L_LINESTATUS ORDER BY     L_RETURNFLAG,     L_LINESTATUS;",
        "score": 0
    },
    {
        "sample_id": "q13",
        "db_id": "tpch",
        "gold_sql": "select l_returnflag, l_linestatus, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= date((select max(l_shipdate) from lineitem), '-3 months') group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus;",
        "pred_sql": "SELECT L_RETURNFLAG, L_LINESTATUS, AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE, AVG(L_DISCOUNT) AS AVG_DISC FROM LINEITEM WHERE L_SHIPDATE < (SELECT DATE(MAX(L_SHIPDATE), '-3 months') FROM LINEITEM) GROUP BY L_RETURNFLAG, L_LINESTATUS ORDER BY L_RETURNFLAG, L_LINESTATUS;",
        "score": 0
    },
    {
        "sample_id": "q21",
        "db_id": "tpch",
        "gold_sql": "select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 42 and p_type like '%COPPER%' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and ps_supplycost = (  select  min(ps_supplycost)  from  partsupp,  supplier,  nation,  region  where  p_partkey = ps_partkey  and s_suppkey = ps_suppkey  and s_nationkey = n_nationkey  and n_regionkey = r_regionkey  and r_name = 'EUROPE' ) order by s_acctbal desc, n_name, s_name, p_partkey LIMIT 100; ",
        "pred_sql": "WITH MINIMUM_COST_SUPPLYCOST AS ( SELECT ps_partkey, MIN(ps_supplycost) AS min_ps_supplycost FROM partsupp ps JOIN supplier s ON ps.ps_suppkey = s.s_suppkey JOIN nation n ON s.s_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey WHERE r.r_name = 'EUROPE' GROUP BY ps.ps_partkey ) SELECT s.s_acctbal, s.s_name, n.n_name, p.p_partkey, p.p_mfgr, s.s_address, s.s_phone, s.s_comment FROM part p JOIN partsupp ps ON p.p_partkey = ps.ps_partkey JOIN supplier s ON ps.ps_suppkey = s.s_suppkey JOIN nation n ON s.s_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey JOIN MINIMUM_COST_SUPPLYCOST mcs ON ps.ps_partkey = mcs.ps_partkey AND ps.ps_supplycost = mcs.min_ps_supplycost WHERE p.p_size = 42 AND p.p_type LIKE '%COPPER%' AND r.r_name = 'EUROPE' ORDER BY s.s_acctbal DESC LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q22",
        "db_id": "tpch",
        "gold_sql": "select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 20 and p_type like '%BRASS%' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' and ps_supplycost = (  select  min(ps_supplycost)  from  partsupp,  supplier,  nation,  region  where  p_partkey = ps_partkey  and s_suppkey = ps_suppkey  and s_nationkey = n_nationkey  and n_regionkey = r_regionkey  and r_name = 'AMERICA' ) order by s_acctbal desc, n_name, s_name, p_partkey LIMIT 100; ",
        "pred_sql": "WITH MINIMUM_COST_SUPPLYCOST AS (     SELECT         ps_partkey, MIN(ps_supplycost) AS min_ps_supplycost     FROM         partsupp AS T1         JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey         JOIN nation AS T3 ON T2.s_nationkey = T3.n_nationkey         JOIN region AS T4 ON T3.n_regionkey = T4.r_regionkey     WHERE         T4.r_name = 'AMERICA'     GROUP BY         ps_partkey ) SELECT     T3.s_acctbal, T3.s_name, T4.n_name, T1.p_partkey, T1.p_mfgr, T3.s_address, T3.s_phone, T3.s_comment FROM     part AS T1     JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey     JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey     JOIN nation AS T4 ON T3.s_nationkey = T4.n_nationkey     JOIN region AS T5 ON T4.n_regionkey = T5.r_regionkey     JOIN MINIMUM_COST_SUPPLYCOST AS T6 ON T1.p_partkey = T6.ps_partkey AND T2.ps_supplycost = T6.min_ps_supplycost WHERE     T1.p_size = 20     AND T1.p_type LIKE '%BRASS%'     AND T5.r_name = 'AMERICA' ORDER BY     T3.s_acctbal DESC LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q23",
        "db_id": "tpch",
        "gold_sql": "select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 15 and p_type like '%TIN%' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and ps_supplycost = (  select  min(ps_supplycost)  from  partsupp,  supplier,  nation,  region  where  p_partkey = ps_partkey  and s_suppkey = ps_suppkey  and s_nationkey = n_nationkey  and n_regionkey = r_regionkey  and r_name = 'ASIA' ) order by s_acctbal desc, n_name, s_name, p_partkey LIMIT 100; ",
        "pred_sql": "SELECT s.s_acctbal, s.s_name, n.n_name, p.p_partkey, p.p_mfgr, s.s_address, s.s_phone, s.s_comment FROM PART p JOIN PARTSUPP ps ON p.p_partkey = ps.ps_partkey JOIN SUPPLIER s ON ps.ps_suppkey = s.s_suppkey JOIN NATION n ON s.s_nationkey = n.n_nationkey JOIN REGION r ON n.n_regionkey = r.r_regionkey WHERE p.p_name LIKE '%TIN%'   AND p.p_size = 15   AND r.r_name = 'ASIA'   AND ps.ps_supplycost = (     SELECT MIN(ps2.ps_supplycost)     FROM PARTSUPP ps2     JOIN SUPPLIER s2 ON ps2.ps_suppkey = s2.s_suppkey     JOIN NATION n2 ON s2.s_nationkey = n2.n_nationkey     JOIN REGION r2 ON n2.n_regionkey = r2.r_regionkey     JOIN PART p2 ON ps2.ps_partkey = p2.p_partkey     WHERE ps2.ps_partkey = p.p_partkey       AND r2.r_name = 'ASIA'       AND p2.p_name LIKE '%TIN%'       AND p2.p_size = 15   ) ORDER BY s.s_acctbal DESC LIMIT 100;",
        "score": 0
    },
    {
        "sample_id": "q31",
        "db_id": "tpch",
        "gold_sql": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'HOUSEHOLD' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < '1995-03-20' and l_shipdate > '1995-03-20' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate LIMIT 10;",
        "pred_sql": "SELECT     l_orderkey,     SUM(l_extendedprice * (1 - l_discount)) AS revenue,     o_orderdate,     o_shippriority FROM     CUSTOMER AS T1     JOIN ORDERS AS T2 ON T1.c_custkey = T2.o_custkey     JOIN LINEITEM AS T3 ON T2.o_orderkey = T3.l_orderkey WHERE     T1.c_mktsegment = 'HOUSEHOLD'     AND T2.o_orderdate < '1995-03-20'     AND T3.l_shipdate > '1995-03-20' GROUP BY     l_orderkey,     o_orderdate,     o_shippriority ORDER BY     revenue DESC,     o_orderdate LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q32",
        "db_id": "tpch",
        "gold_sql": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'AUTOMOBILE' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < '1995-03-30' and l_shipdate > '1995-03-30' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate LIMIT 10;",
        "pred_sql": "SELECT     L.L_ORDERKEY,     SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS REVENUE,     O.O_ORDERDATE,     O.O_SHIPPRIORITY FROM     CUSTOMER C     JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY     JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY WHERE     C.C_MKTSEGMENT = 'AUTOMOBILE'     AND O.O_ORDERDATE < '1995-03-30'     AND L.L_SHIPDATE > '1995-03-30' GROUP BY     L.L_ORDERKEY,     O.O_ORDERDATE,     O.O_SHIPPRIORITY ORDER BY     REVENUE DESC,     O.O_ORDERDATE LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q33",
        "db_id": "tpch",
        "gold_sql": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'BUILDING' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < '1995-03-01' and l_shipdate > '1995-03-01' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate LIMIT 10;",
        "pred_sql": "SELECT     l_orderkey,     SUM(l_extendedprice * (1 - l_discount)) AS revenue,     o_orderdate,     o_shippriority FROM     CUSTOMER AS T1     JOIN ORDERS AS T2 ON T1.c_custkey = T2.o_custkey     JOIN LINEITEM AS T3 ON T2.o_orderkey = T3.l_orderkey WHERE     T2.o_orderdate < '1995-03-01'     AND T3.l_shipdate > '1995-03-01'     AND T1.c_mktsegment = 'BUILDING' GROUP BY     l_orderkey,     o_orderdate,     o_shippriority ORDER BY     revenue DESC,     o_orderdate LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q41",
        "db_id": "tpch",
        "gold_sql": "select o_orderpriority, count(*) as order_count from orders where o_orderdate >= '1993-01-01' and o_orderdate < date('1993-01-01', '+3 months') and exists (  select  *  from  lineitem  where  l_orderkey = o_orderkey  and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority;",
        "pred_sql": "SELECT O.O_ORDERPRIORITY, COUNT(*) AS ORDER_COUNT FROM ORDERS O WHERE O.O_ORDERDATE >= '1993-01-01' AND O.O_ORDERDATE <= '1993-03-31' AND EXISTS (     SELECT 1     FROM LINEITEM L     WHERE L.L_ORDERKEY = O.O_ORDERKEY     AND L.L_COMMITDATE < L.L_RECEIPTDATE ) GROUP BY O.O_ORDERPRIORITY ORDER BY O.O_ORDERPRIORITY;",
        "score": 1
    },
    {
        "sample_id": "q42",
        "db_id": "tpch",
        "gold_sql": "select o_orderpriority, count(*) as order_count from orders where o_orderdate >= '1993-07-01' and o_orderdate < date('1993-07-01', '+3 months') and exists (  select  *  from  lineitem  where  l_orderkey = o_orderkey  and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority;",
        "pred_sql": "SELECT O.O_ORDERPRIORITY, COUNT(*) AS ORDER_COUNT FROM ORDERS O WHERE O.O_ORDERDATE >= '1993-07-01' AND O.O_ORDERDATE < '1993-10-01' AND EXISTS (     SELECT 1     FROM LINEITEM L     WHERE L.L_ORDERKEY = O.O_ORDERKEY     AND L.L_COMMITDATE < L.L_RECEIPTDATE ) GROUP BY O.O_ORDERPRIORITY ORDER BY O.O_ORDERPRIORITY;",
        "score": 1
    },
    {
        "sample_id": "q43",
        "db_id": "tpch",
        "gold_sql": "select o_orderpriority, count(*) as order_count from orders where o_orderdate >= '1993-04-01' and o_orderdate < date('1993-04-01', '+3 months') and exists (  select  *  from  lineitem  where  l_orderkey = o_orderkey  and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority;",
        "pred_sql": "SELECT O.O_ORDERPRIORITY, COUNT(*) AS ORDER_COUNT FROM ORDERS O WHERE O.O_ORDERDATE >= '1993-04-01' AND O.O_ORDERDATE <= '1993-06-30' AND EXISTS (     SELECT 1     FROM LINEITEM L     WHERE L.L_ORDERKEY = O.O_ORDERKEY     AND L.L_COMMITDATE < L.L_RECEIPTDATE ) GROUP BY O.O_ORDERPRIORITY ORDER BY O.O_ORDERPRIORITY;",
        "score": 0
    },
    {
        "sample_id": "q51",
        "db_id": "tpch",
        "gold_sql": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and o_orderdate >= '1993-01-01' and o_orderdate < '1994-01-01' group by n_name order by revenue desc;",
        "pred_sql": "SELECT n.n_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM customer c JOIN orders o ON c.c_custkey = o.o_custkey JOIN lineitem l ON o.o_orderkey = l.l_orderkey JOIN supplier s ON l.l_suppkey = s.s_suppkey JOIN nation n ON c.c_nationkey = n.n_nationkey AND s.s_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey WHERE r.r_name = 'EUROPE' AND o.o_orderdate >= '1993-01-01' AND o.o_orderdate < '1994-01-01' GROUP BY n.n_name ORDER BY revenue DESC;",
        "score": 1
    },
    {
        "sample_id": "q52",
        "db_id": "tpch",
        "gold_sql": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= '1995-01-01' and o_orderdate < '1996-01-01' group by n_name order by revenue desc;",
        "pred_sql": "SELECT n.n_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM CUSTOMER c JOIN ORDERS o ON c.c_custkey = o.o_custkey JOIN LINEITEM l ON o.o_orderkey = l.l_orderkey JOIN SUPPLIER s ON l.l_suppkey = s.s_suppkey JOIN NATION n ON c.c_nationkey = n.n_nationkey AND s.s_nationkey = n.n_nationkey JOIN REGION r ON n.n_regionkey = r.r_regionkey WHERE r.r_name = 'ASIA' AND o.o_orderdate >= '1995-01-01' AND o.o_orderdate < '1996-01-01' GROUP BY n.n_name ORDER BY revenue DESC;",
        "score": 1
    },
    {
        "sample_id": "q53",
        "db_id": "tpch",
        "gold_sql": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' and o_orderdate >= '1997-01-01' and o_orderdate < '1998-01-01' group by n_name order by revenue desc;",
        "pred_sql": "SELECT n.N_NAME, SUM(l.L_EXTENDEDPRICE * (1 - l.L_DISCOUNT)) AS revenue FROM CUSTOMER c JOIN ORDERS o ON c.C_CUSTKEY = o.O_CUSTKEY JOIN LINEITEM l ON o.O_ORDERKEY = l.L_ORDERKEY JOIN SUPPLIER s ON l.L_SUPPKEY = s.S_SUPPKEY JOIN NATION n ON c.C_NATIONKEY = s.S_NATIONKEY AND s.S_NATIONKEY = n.N_NATIONKEY JOIN REGION r ON n.N_REGIONKEY = r.R_REGIONKEY WHERE r.R_NAME = 'AMERICA' AND o.O_ORDERDATE >= '1997-01-01' AND o.O_ORDERDATE < '1998-01-01' GROUP BY n.N_NAME ORDER BY revenue DESC;",
        "score": 1
    },
    {
        "sample_id": "q54",
        "db_id": "tpch",
        "gold_sql": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and o_orderdate >= '1993-01-01' and o_orderdate < '1994-01-01' group by n_name order by revenue desc;",
        "pred_sql": "SELECT n.n_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM CUSTOMER c JOIN ORDERS o ON c.c_custkey = o.o_custkey JOIN LINEITEM l ON o.o_orderkey = l.l_orderkey JOIN SUPPLIER s ON l.l_suppkey = s.s_suppkey JOIN NATION n ON c.c_nationkey = s.s_nationkey AND s.s_nationkey = n.n_nationkey JOIN REGION r ON n.n_regionkey = r.r_regionkey WHERE r.r_name = 'EUROPE' AND o.o_orderdate >= '1993-01-01' AND o.o_orderdate < '1994-01-01' GROUP BY n.n_name ORDER BY revenue DESC;",
        "score": 1
    },
    {
        "sample_id": "q55",
        "db_id": "tpch",
        "gold_sql": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= '1995-01-01' and o_orderdate < '1996-01-01' group by n_name order by revenue desc;",
        "pred_sql": "SELECT n.n_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM customer c JOIN orders o ON c.c_custkey = o.o_custkey JOIN lineitem l ON o.o_orderkey = l.l_orderkey JOIN supplier s ON l.l_suppkey = s.s_suppkey JOIN nation n ON c.c_nationkey = s.s_nationkey AND s.s_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey WHERE r.r_name = 'ASIA' AND o.o_orderdate >= '1995-01-01' AND o.o_orderdate < '1996-01-01' GROUP BY n.n_name ORDER BY revenue DESC;",
        "score": 1
    },
    {
        "sample_id": "q56",
        "db_id": "tpch",
        "gold_sql": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' and o_orderdate >= '1997-01-01' and o_orderdate < '1998-01-01' group by n_name order by revenue desc;",
        "pred_sql": "SELECT n.n_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM customer c JOIN orders o ON c.c_custkey = o.o_custkey JOIN lineitem l ON o.o_orderkey = l.l_orderkey JOIN supplier s ON l.l_suppkey = s.s_suppkey JOIN nation n ON c.c_nationkey = s.s_nationkey AND s.s_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey WHERE r.r_name = 'AMERICA' AND o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1998-01-01' GROUP BY n.n_name ORDER BY revenue DESC LIMIT 1;",
        "score": 0
    },
    {
        "sample_id": "q61",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= '1993-01-01' and l_shipdate < '1994-01-01' and l_discount between 0.01 and 0.03 and l_quantity < 24;",
        "pred_sql": "SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE FROM LINEITEM WHERE L_SHIPDATE >= '1993-01-01' AND L_SHIPDATE < '1994-01-01' AND L_DISCOUNT BETWEEN 0.01 AND 0.03 AND L_QUANTITY < 24;",
        "score": 1
    },
    {
        "sample_id": "q62",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= '1995-01-01' and l_shipdate < '1996-01-01' and l_discount between 0.05 and 0.07 and l_quantity < 25;",
        "pred_sql": "SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE FROM LINEITEM WHERE L_SHIPDATE >= '1995-01-01' AND L_SHIPDATE < '1996-01-01' AND L_DISCOUNT BETWEEN 0.05 AND 0.07 AND L_QUANTITY < 25;",
        "score": 1
    },
    {
        "sample_id": "q63",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= '1997-01-01' and l_shipdate < '1998-01-01' and l_discount between 0.08 and 0.10 and l_quantity < 24;",
        "pred_sql": "SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE FROM LINEITEM WHERE L_SHIPDATE >= '1997-01-01' AND L_SHIPDATE < '1998-01-01' AND L_DISCOUNT BETWEEN 0.08 AND 0.10 AND L_QUANTITY < 24;",
        "score": 1
    },
    {
        "sample_id": "q71",
        "db_id": "tpch",
        "gold_sql": "select supp_nation, cust_nation, l_year, sum(volume) as revenue from (  select  n1.n_name as supp_nation,  n2.n_name as cust_nation,  strftime('%Y', l_shipdate) as l_year,  l_extendedprice * (1 - l_discount) as volume  from  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2  where  s_suppkey = l_suppkey  and o_orderkey = l_orderkey  and c_custkey = o_custkey  and s_nationkey = n1.n_nationkey  and c_nationkey = n2.n_nationkey  and (   (n1.n_name = 'ALGERIA' and n2.n_name = 'GERMANY')   or (n1.n_name = 'GERMANY' and n2.n_name = 'ALGERIA')  )  and l_shipdate between '1995-01-01' and '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year;",
        "pred_sql": "SELECT n1.N_NAME AS supp_nation, n2.N_NAME AS cust_nation, strftime('%Y', L_SHIPDATE) AS l_year, SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS revenue FROM SUPPLIER S JOIN NATION n1 ON S.S_NATIONKEY = n1.N_NATIONKEY JOIN LINEITEM L ON S.S_SUPPKEY = L.L_SUPPKEY JOIN ORDERS O ON L.L_ORDERKEY = O.O_ORDERKEY JOIN CUSTOMER C ON O.O_CUSTKEY = C.C_CUSTKEY JOIN NATION n2 ON C.C_NATIONKEY = n2.N_NATIONKEY WHERE ((n1.N_NAME = 'ALGERIA' AND n2.N_NAME = 'GERMANY') OR (n1.N_NAME = 'GERMANY' AND n2.N_NAME = 'ALGERIA')) AND L_SHIPDATE BETWEEN '1995-01-01' AND '1996-12-31' GROUP BY supp_nation, cust_nation, l_year ORDER BY supp_nation, cust_nation, l_year;",
        "score": 1
    },
    {
        "sample_id": "q72",
        "db_id": "tpch",
        "gold_sql": "select supp_nation, cust_nation, l_year, sum(volume) as revenue from (  select  n1.n_name as supp_nation,  n2.n_name as cust_nation,  strftime('%Y', l_shipdate) as l_year,  l_extendedprice * (1 - l_discount) as volume  from  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2  where  s_suppkey = l_suppkey  and o_orderkey = l_orderkey  and c_custkey = o_custkey  and s_nationkey = n1.n_nationkey  and c_nationkey = n2.n_nationkey  and (   (n1.n_name = 'CANADA' and n2.n_name = 'UNITED STATES')   or (n1.n_name = 'UNITED STATES' and n2.n_name = 'CANADA')  )  and l_shipdate between '1995-01-01' and '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year;",
        "pred_sql": "SELECT n1.n_name AS supp_nation, n2.n_name AS cust_nation, strftime('%Y', l.l_shipdate) AS l_year, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM supplier s JOIN lineitem l ON s.s_suppkey = l.l_suppkey JOIN orders o ON l.l_orderkey = o.o_orderkey JOIN customer c ON o.o_custkey = c.c_custkey JOIN nation n1 ON s.s_nationkey = n1.n_nationkey JOIN nation n2 ON c.c_nationkey = n2.n_nationkey WHERE ((n1.n_name = 'CANADA' AND n2.n_name = 'UNITED STATES') OR (n1.n_name = 'UNITED STATES' AND n2.n_name = 'CANADA')) AND l.l_shipdate BETWEEN '1995-01-01' AND '1996-12-31' GROUP BY supp_nation, cust_nation, l_year ORDER BY supp_nation, cust_nation, l_year;",
        "score": 1
    },
    {
        "sample_id": "q73",
        "db_id": "tpch",
        "gold_sql": "select supp_nation, cust_nation, l_year, sum(volume) as revenue from (  select  n1.n_name as supp_nation,  n2.n_name as cust_nation,  strftime('%Y', l_shipdate) as l_year,  l_extendedprice * (1 - l_discount) as volume  from  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2  where  s_suppkey = l_suppkey  and o_orderkey = l_orderkey  and c_custkey = o_custkey  and s_nationkey = n1.n_nationkey  and c_nationkey = n2.n_nationkey  and (   (n1.n_name = 'FRANCE' and n2.n_name = 'INDONESIA')   or (n1.n_name = 'INDONESIA' and n2.n_name = 'FRANCE')  )  and l_shipdate between '1995-01-01' and '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year;",
        "pred_sql": "SELECT     n1.n_name AS supp_nation,     n2.n_name AS cust_nation,     strftime('%Y', l.l_shipdate) AS l_year,     SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM     supplier s     JOIN lineitem l ON s.s_suppkey = l.l_suppkey     JOIN orders o ON l.l_orderkey = o.o_orderkey     JOIN customer c ON o.o_custkey = c.c_custkey     JOIN nation n1 ON s.s_nationkey = n1.n_nationkey     JOIN nation n2 ON c.c_nationkey = n2.n_nationkey WHERE     ((n1.n_name = 'FRANCE' AND n2.n_name = 'INDONESIA') OR (n1.n_name = 'INDONESIA' AND n2.n_name = 'FRANCE'))     AND l.l_shipdate BETWEEN '1995-01-01' AND '1996-12-31' GROUP BY     supp_nation,     cust_nation,     l_year ORDER BY     supp_nation,     cust_nation,     l_year;",
        "score": 1
    },
    {
        "sample_id": "q81",
        "db_id": "tpch",
        "gold_sql": "select o_year, sum(case  when nation = 'INDONESIA' then volume  else 0 end) / sum(volume) as mkt_share from (  select  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) as volume,  n2.n_name as nation  from  part,  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2,  region  where  p_partkey = l_partkey  and s_suppkey = l_suppkey  and l_orderkey = o_orderkey  and o_custkey = c_custkey  and c_nationkey = n1.n_nationkey  and n1.n_regionkey = r_regionkey  and r_name = 'ASIA'  and s_nationkey = n2.n_nationkey  and o_orderdate between '1995-01-01' and '1996-12-31'  and p_type = 'ECONOMY ANODIZED STEEL' ) as all_nations group by o_year order by o_year;",
        "pred_sql": "WITH ORDERDATE_NATION_VOLUME AS (     SELECT         strftime('%Y', O.O_ORDERDATE) AS O_YEAR,         N2.N_NAME AS NATION,         L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT) AS VOLUME     FROM         PART P         JOIN LINEITEM L ON P.P_PARTKEY = L.L_PARTKEY         JOIN ORDERS O ON L.L_ORDERKEY = O.O_ORDERKEY         JOIN CUSTOMER C ON O.O_CUSTKEY = C.C_CUSTKEY         JOIN NATION N1 ON C.C_NATIONKEY = N1.N_NATIONKEY         JOIN REGION R ON N1.N_REGIONKEY = R.R_REGIONKEY         JOIN SUPPLIER S ON L.L_SUPPKEY = S.S_SUPPKEY         JOIN NATION N2 ON S.S_NATIONKEY = N2.N_NATIONKEY     WHERE         R.R_NAME = 'ASIA'         AND P.P_TYPE = 'ECONOMY ANODIZED STEEL'         AND O.O_ORDERDATE BETWEEN '1995-01-01' AND '1996-12-31' ), NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION AS (     SELECT         O_YEAR,         NATION,         SUM(VOLUME) AS REVENUE,         SUM(VOLUME) / SUM(SUM(VOLUME)) OVER (PARTITION BY O_YEAR) AS MKT_SHARE     FROM         ORDERDATE_NATION_VOLUME     GROUP BY         O_YEAR, NATION ) SELECT     O_YEAR,     MKT_SHARE FROM     NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION WHERE     NATION = 'INDONESIA' ORDER BY     O_YEAR;",
        "score": 1
    },
    {
        "sample_id": "q82",
        "db_id": "tpch",
        "gold_sql": "select o_year, sum(case  when nation = 'BRAZIL' then volume  else 0 end) / sum(volume) as mkt_share from (  select  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) as volume,  n2.n_name as nation  from  part,  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2,  region  where  p_partkey = l_partkey  and s_suppkey = l_suppkey  and l_orderkey = o_orderkey  and o_custkey = c_custkey  and c_nationkey = n1.n_nationkey  and n1.n_regionkey = r_regionkey  and r_name = 'AMERICA'  and s_nationkey = n2.n_nationkey  and o_orderdate between '1995-01-01' and '1996-12-31'  and p_type = 'LARGE POLISHED COPPER' ) as all_nations group by o_year order by o_year;",
        "pred_sql": "WITH ORDERDATE_NATION_VOLUME AS (     SELECT         strftime('%Y', o_orderdate) AS o_year,         n2.n_name AS nation,         l_extendedprice * (1 - l_discount) AS volume     FROM         part AS p         JOIN lineitem AS l ON p.p_partkey = l.l_partkey         JOIN supplier AS s ON l.l_suppkey = s.s_suppkey         JOIN orders AS o ON l.l_orderkey = o.o_orderkey         JOIN customer AS c ON o.o_custkey = c.c_custkey         JOIN nation AS n1 ON c.c_nationkey = n1.n_nationkey         JOIN nation AS n2 ON s.s_nationkey = n2.n_nationkey         JOIN region AS r ON n1.n_regionkey = r.r_regionkey     WHERE         r.r_name = 'AMERICA'         AND p.p_type = 'LARGE POLISHED COPPER'         AND o.o_orderdate BETWEEN '1995-01-01' AND '1996-12-31' ), NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION AS (     SELECT         o_year,         nation,         SUM(volume) AS revenue,         SUM(volume) / SUM(SUM(volume)) OVER (PARTITION BY o_year) AS mkt_share     FROM         ORDERDATE_NATION_VOLUME     GROUP BY         o_year, nation ) SELECT     o_year,     mkt_share FROM     NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION WHERE     nation = 'BRAZIL' ORDER BY     o_year;",
        "score": 1
    },
    {
        "sample_id": "q83",
        "db_id": "tpch",
        "gold_sql": "select o_year, sum(case  when nation = 'FRANCE' then volume  else 0 end) / sum(volume) as mkt_share from (  select  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) as volume,  n2.n_name as nation  from  part,  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2,  region  where  p_partkey = l_partkey  and s_suppkey = l_suppkey  and l_orderkey = o_orderkey  and o_custkey = c_custkey  and c_nationkey = n1.n_nationkey  and n1.n_regionkey = r_regionkey  and r_name = 'EUROPE'  and s_nationkey = n2.n_nationkey  and o_orderdate between '1995-01-01' and '1996-12-31'  and p_type = 'STANDARD PLATED TIN' ) as all_nations group by o_year order by o_year;",
        "pred_sql": "WITH ORDERDATE_NATION_VOLUME AS (     SELECT         o.o_orderdate,         n2.n_name AS nation,         l.l_extendedprice * (1 - l.l_discount) AS volume     FROM         part p         JOIN lineitem l ON p.p_partkey = l.l_partkey         JOIN supplier s ON s.s_suppkey = l.l_suppkey         JOIN orders o ON o.o_orderkey = l.l_orderkey         JOIN customer c ON c.c_custkey = o.o_custkey         JOIN nation n1 ON c.c_nationkey = n1.n_nationkey         JOIN nation n2 ON s.s_nationkey = n2.n_nationkey         JOIN region r ON n1.n_regionkey = r.r_regionkey     WHERE         r.r_name = 'EUROPE'         AND p.p_type = 'STANDARD PLATED TIN'         AND o.o_orderdate BETWEEN '1995-01-01' AND '1996-12-31' ), NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION AS (     SELECT         strftime('%Y', o_orderdate) AS o_year,         nation,         SUM(volume) AS revenue,         SUM(volume) / SUM(SUM(volume)) OVER (PARTITION BY strftime('%Y', o_orderdate)) AS mkt_share     FROM         ORDERDATE_NATION_VOLUME     GROUP BY         o_year, nation     ORDER BY         o_year ) SELECT     o_year,     mkt_share FROM     NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION WHERE     nation = 'FRANCE';",
        "score": 1
    },
    {
        "sample_id": "q84",
        "db_id": "tpch",
        "gold_sql": "select o_year, sum(case  when nation = 'INDONESIA' then volume  else 0 end) / sum(volume) as mkt_share from (  select  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) as volume,  n2.n_name as nation  from  part,  supplier,  lineitem,  orders,  customer,  nation n1,  nation n2,  region  where  p_partkey = l_partkey  and s_suppkey = l_suppkey  and l_orderkey = o_orderkey  and o_custkey = c_custkey  and c_nationkey = n1.n_nationkey  and n1.n_regionkey = r_regionkey  and r_name = 'ASIA'  and s_nationkey = n2.n_nationkey  and o_orderdate between '1995-01-01' and '1996-12-31'  and p_type = 'ECONOMY ANODIZED STEEL' ) as all_nations group by o_year order by o_year;",
        "pred_sql": "WITH ORDERDATE_NATION_VOLUME AS (     SELECT         strftime('%Y', o_orderdate) AS o_year,         n2.n_name AS nation,         l_extendedprice * (1 - l_discount) AS volume     FROM         part AS p         JOIN lineitem AS l ON p.p_partkey = l.l_partkey         JOIN supplier AS s ON l.l_suppkey = s.s_suppkey         JOIN orders AS o ON l.l_orderkey = o.o_orderkey         JOIN customer AS c ON o.o_custkey = c.c_custkey         JOIN nation AS n1 ON c.c_nationkey = n1.n_nationkey         JOIN nation AS n2 ON s.s_nationkey = n2.n_nationkey         JOIN region AS r ON n1.n_regionkey = r.r_regionkey     WHERE         r.r_name = 'ASIA'         AND p.p_type = 'ECONOMY ANODIZED STEEL'         AND o.o_orderdate BETWEEN '1995-01-01' AND '1996-12-31' ), NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION AS (     SELECT         o_year,         nation,         SUM(volume) AS revenue,         SUM(volume) / SUM(SUM(volume)) OVER (PARTITION BY o_year) AS mkt_share     FROM         ORDERDATE_NATION_VOLUME     GROUP BY         o_year, nation ) SELECT     o_year,     mkt_share FROM     NATION_MKTSHARE_BY_ORDERYEAR_FOR_REGION WHERE     nation = 'INDONESIA' ORDER BY     o_year;",
        "score": 1
    },
    {
        "sample_id": "q91",
        "db_id": "tpch",
        "gold_sql": "select nation, o_year, sum(amount) as sum_profit from (  select  n_name as nation,  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount  from  part,  supplier,  lineitem,  partsupp,  orders,  nation  where  s_suppkey = l_suppkey  and ps_suppkey = l_suppkey  and ps_partkey = l_partkey  and p_partkey = l_partkey  and o_orderkey = l_orderkey  and s_nationkey = n_nationkey  and p_name like '%antique%' ) as profit group by nation, o_year order by nation, o_year desc;",
        "pred_sql": "SELECT     n.N_NAME AS nation,     strftime('%Y', o.O_ORDERDATE) AS o_year,     SUM(l.L_EXTENDEDPRICE * (1 - l.L_DISCOUNT) - ps.PS_SUPPLYCOST * l.L_QUANTITY) AS sum_profit FROM     PART p     JOIN PARTSUPP ps ON p.P_PARTKEY = ps.PS_PARTKEY     JOIN SUPPLIER s ON ps.PS_SUPPKEY = s.S_SUPPKEY     JOIN NATION n ON s.S_NATIONKEY = n.N_NATIONKEY     JOIN LINEITEM l ON ps.PS_PARTKEY = l.L_PARTKEY AND ps.PS_SUPPKEY = l.L_SUPPKEY     JOIN ORDERS o ON l.L_ORDERKEY = o.O_ORDERKEY WHERE     p.P_NAME LIKE '%antique%' GROUP BY     nation,     o_year ORDER BY     nation ASC,     o_year DESC;",
        "score": 1
    },
    {
        "sample_id": "q92",
        "db_id": "tpch",
        "gold_sql": "select nation, o_year, sum(amount) as sum_profit from (  select  n_name as nation,  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount  from  part,  supplier,  lineitem,  partsupp,  orders,  nation  where  s_suppkey = l_suppkey  and ps_suppkey = l_suppkey  and ps_partkey = l_partkey  and p_partkey = l_partkey  and o_orderkey = l_orderkey  and s_nationkey = n_nationkey  and p_name like '%green%' ) as profit group by nation, o_year order by nation, o_year desc;",
        "pred_sql": "SELECT     N.N_NAME AS nation,     strftime('%Y', O.O_ORDERDATE) AS o_year,     SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT) - PS.PS_SUPPLYCOST * L.L_QUANTITY) AS sum_profit FROM     PART P     JOIN LINEITEM L ON P.P_PARTKEY = L.L_PARTKEY     JOIN PARTSUPP PS ON L.L_PARTKEY = PS.PS_PARTKEY AND L.L_SUPPKEY = PS.PS_SUPPKEY     JOIN SUPPLIER S ON L.L_SUPPKEY = S.S_SUPPKEY     JOIN ORDERS O ON L.L_ORDERKEY = O.O_ORDERKEY     JOIN NATION N ON S.S_NATIONKEY = N.N_NATIONKEY WHERE     P.P_NAME LIKE '%green%' GROUP BY     nation,     o_year ORDER BY     nation ASC,     o_year DESC;",
        "score": 1
    },
    {
        "sample_id": "q93",
        "db_id": "tpch",
        "gold_sql": "select nation, o_year, sum(amount) as sum_profit from (  select  n_name as nation,  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount  from  part,  supplier,  lineitem,  partsupp,  orders,  nation  where  s_suppkey = l_suppkey  and ps_suppkey = l_suppkey  and ps_partkey = l_partkey  and p_partkey = l_partkey  and o_orderkey = l_orderkey  and s_nationkey = n_nationkey  and p_name like '%turquoise%' ) as profit group by nation, o_year order by nation, o_year desc;",
        "pred_sql": "SELECT     n.N_NAME AS nation,     strftime('%Y', o.O_ORDERDATE) AS o_year,     SUM(l.L_EXTENDEDPRICE * (1 - l.L_DISCOUNT) - ps.PS_SUPPLYCOST * l.L_QUANTITY) AS sum_profit FROM     PART p     JOIN PARTSUPP ps ON p.P_PARTKEY = ps.PS_PARTKEY     JOIN SUPPLIER s ON ps.PS_SUPPKEY = s.S_SUPPKEY     JOIN NATION n ON s.S_NATIONKEY = n.N_NATIONKEY     JOIN LINEITEM l ON ps.PS_PARTKEY = l.L_PARTKEY AND ps.PS_SUPPKEY = l.L_SUPPKEY     JOIN ORDERS o ON l.L_ORDERKEY = o.O_ORDERKEY WHERE     p.P_NAME LIKE '%turquoise%' GROUP BY     nation,     o_year ORDER BY     nation ASC,     o_year DESC;",
        "score": 1
    },
    {
        "sample_id": "q94",
        "db_id": "tpch",
        "gold_sql": "select nation, o_year, sum(amount) as sum_profit from (  select  n_name as nation,  strftime('%Y', o_orderdate) as o_year,  l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount  from  part,  supplier,  lineitem,  partsupp,  orders,  nation  where  s_suppkey = l_suppkey  and ps_suppkey = l_suppkey  and ps_partkey = l_partkey  and p_partkey = l_partkey  and o_orderkey = l_orderkey  and s_nationkey = n_nationkey  and p_name like '%green%' ) as profit group by nation, o_year order by nation, o_year desc;",
        "pred_sql": "SELECT     T6.N_NAME AS nation,     strftime('%Y', T5.O_ORDERDATE) AS o_year,     SUM(T3.L_EXTENDEDPRICE * (1 - T3.L_DISCOUNT) - T4.PS_SUPPLYCOST * T3.L_QUANTITY) AS sum_profit FROM     PART T1     JOIN PARTSUPP T4 ON T1.P_PARTKEY = T4.P_PARTKEY     JOIN LINEITEM T3 ON T4.P_PARTKEY = T3.L_PARTKEY AND T4.PS_SUPPKEY = T3.L_SUPPKEY     JOIN ORDERS T5 ON T3.L_ORDERKEY = T5.O_ORDERKEY     JOIN SUPPLIER T2 ON T3.L_SUPPKEY = T2.S_SUPPKEY     JOIN NATION T6 ON T2.S_NATIONKEY = T6.N_NATIONKEY WHERE     T1.P_NAME LIKE '%green%' GROUP BY     nation,     o_year ORDER BY     nation ASC,     o_year DESC;",
        "score": 0
    },
    {
        "sample_id": "q101",
        "db_id": "tpch",
        "gold_sql": "select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= '1993-07-01' and o_orderdate < date('1993-07-01', '+3 months') and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc LIMIT 20;",
        "pred_sql": "SELECT     C.C_NAME,     C.C_ADDRESS,     N.N_NAME,     C.C_PHONE,     C.C_ACCTBAL,     C.C_COMMENT,     SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS REVENUE_LOST FROM     CUSTOMER C     JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY     JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY     JOIN NATION N ON C.C_NATIONKEY = N.N_NATIONKEY WHERE     O.O_ORDERDATE >= '1993-07-01'     AND O.O_ORDERDATE < DATE('1993-07-01', '+3 months')     AND L.L_RETURNFLAG = 'R' GROUP BY     C.C_CUSTKEY,     C.C_NAME,     C.C_ADDRESS,     N.N_NAME,     C.C_PHONE,     C.C_ACCTBAL,     C.C_COMMENT ORDER BY     REVENUE_LOST DESC LIMIT 20;",
        "score": 0
    },
    {
        "sample_id": "q102",
        "db_id": "tpch",
        "gold_sql": "select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= '1993-10-01' and o_orderdate < date('1993-10-01', '+3 months') and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc LIMIT 20;",
        "pred_sql": "SELECT     C.C_CUSTKEY,     C.C_NAME,     SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS REVENUE,     C.C_ACCTBAL,     N.N_NAME,     C.C_ADDRESS,     C.C_PHONE,     C.C_COMMENT FROM     CUSTOMER C     JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY     JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY     JOIN NATION N ON C.C_NATIONKEY = N.N_NATIONKEY WHERE     O.O_ORDERDATE >= '1993-10-01'     AND O.O_ORDERDATE < DATE('1993-10-01', '+3 months')     AND L.L_RETURNFLAG = 'R' GROUP BY     C.C_CUSTKEY,     C.C_NAME,     C.C_ACCTBAL,     N.N_NAME,     C.C_ADDRESS,     C.C_PHONE,     C.C_COMMENT ORDER BY     REVENUE DESC LIMIT 20;",
        "score": 1
    },
    {
        "sample_id": "q103",
        "db_id": "tpch",
        "gold_sql": "select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= '1995-01-01' and o_orderdate < date('1995-01-01', '+3 months') and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc LIMIT 20;",
        "pred_sql": "SELECT     C.C_NAME,     C.C_ADDRESS,     N.N_NAME AS NATION,     C.C_PHONE,     C.C_ACCTBAL,     C.C_COMMENT,     SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS REVENUE_LOST FROM     CUSTOMER C     JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY     JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY     JOIN NATION N ON C.C_NATIONKEY = N.N_NATIONKEY WHERE     O.O_ORDERDATE >= '1995-01-01'     AND O.O_ORDERDATE < '1995-04-01'     AND L.L_RETURNFLAG = 'R' GROUP BY     C.C_CUSTKEY,     C.C_NAME,     C.C_ADDRESS,     N.N_NAME,     C.C_PHONE,     C.C_ACCTBAL,     C.C_COMMENT ORDER BY     REVENUE_LOST DESC LIMIT 20;",
        "score": 0
    },
    {
        "sample_id": "q111",
        "db_id": "tpch",
        "gold_sql": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'VIETNAM' group by ps_partkey having  sum(ps_supplycost * ps_availqty) > (  select   sum(ps_supplycost * ps_availqty) * 0.0001  from   partsupp,   supplier,   nation  where   ps_suppkey = s_suppkey   and s_nationkey = n_nationkey   and n_name = 'VIETNAM'  ) order by value desc LIMIT 10;",
        "pred_sql": "WITH TotalStockValue AS ( SELECT SUM(ps_supplycost * ps_availqty) * 0.0001 AS threshold FROM partsupp AS ps JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey JOIN nation AS n ON s.s_nationkey = n.n_nationkey WHERE n.n_name = 'VIETNAM' ) SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS value FROM partsupp AS ps JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey JOIN nation AS n ON s.s_nationkey = n.n_nationkey WHERE n.n_name = 'VIETNAM' GROUP BY ps.ps_partkey HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT threshold FROM TotalStockValue) ORDER BY value DESC LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q112",
        "db_id": "tpch",
        "gold_sql": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'EGYPT' group by ps_partkey having  sum(ps_supplycost * ps_availqty) > (  select   sum(ps_supplycost * ps_availqty) * 0.0001  from   partsupp,   supplier,   nation  where   ps_suppkey = s_suppkey   and s_nationkey = n_nationkey   and n_name = 'EGYPT'  ) order by value desc LIMIT 10;",
        "pred_sql": "WITH TotalStockValue AS ( SELECT SUM(ps_supplycost * ps_availqty) * 0.0001 AS threshold FROM partsupp AS ps JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey JOIN nation AS n ON s.s_nationkey = n.n_nationkey WHERE n.n_name = 'EGYPT' ), ImportantParts AS ( SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS value FROM partsupp AS ps JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey JOIN nation AS n ON s.s_nationkey = n.n_nationkey WHERE n.n_name = 'EGYPT' GROUP BY ps.ps_partkey HAVING value > (SELECT threshold FROM TotalStockValue) ) SELECT ps_partkey, value FROM ImportantParts ORDER BY value DESC LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q113",
        "db_id": "tpch",
        "gold_sql": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'PERU' group by ps_partkey having  sum(ps_supplycost * ps_availqty) > (  select   sum(ps_supplycost * ps_availqty) * 0.0001  from   partsupp,   supplier,   nation  where   ps_suppkey = s_suppkey   and s_nationkey = n_nationkey   and n_name = 'PERU'  ) order by value desc LIMIT 10;",
        "pred_sql": "WITH AVAIL_SUPPLY_COST AS (     SELECT SUM(ps_supplycost * ps_availqty) * 0.0001 AS threshold     FROM partsupp AS ps     JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey     JOIN nation AS n ON s.s_nationkey = n.n_nationkey     WHERE n.n_name = 'PERU' ), IMPORTANT_STOCK_IDENTIFICATION AS (     SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS value     FROM partsupp AS ps     JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey     JOIN nation AS n ON s.s_nationkey = n.n_nationkey     WHERE n.n_name = 'PERU'     GROUP BY ps.ps_partkey     HAVING value > (SELECT threshold FROM AVAIL_SUPPLY_COST) ) SELECT ps_partkey, value FROM IMPORTANT_STOCK_IDENTIFICATION ORDER BY value DESC LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q114",
        "db_id": "tpch",
        "gold_sql": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'BRAZIL' group by ps_partkey having  sum(ps_supplycost * ps_availqty) > (  select   sum(ps_supplycost * ps_availqty) * 0.0001  from   partsupp,   supplier,   nation  where   ps_suppkey = s_suppkey   and s_nationkey = n_nationkey   and n_name = 'BRAZIL'  ) order by value desc LIMIT 10;",
        "pred_sql": "WITH TotalSupplyCost AS (     SELECT SUM(ps_supplycost * ps_availqty) * 0.0001 AS threshold     FROM partsupp AS ps     JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey     JOIN nation AS n ON s.s_nationkey = n.n_nationkey     WHERE n.n_name = 'BRAZIL' ), ImportantStock AS (     SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS value     FROM partsupp AS ps     JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey     JOIN nation AS n ON s.s_nationkey = n.n_nationkey     WHERE n.n_name = 'BRAZIL'     GROUP BY ps.ps_partkey     HAVING value > (SELECT threshold FROM TotalSupplyCost) ) SELECT ps_partkey, value FROM ImportantStock ORDER BY value DESC LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q115",
        "db_id": "tpch",
        "gold_sql": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' group by ps_partkey having  sum(ps_supplycost * ps_availqty) > (  select   sum(ps_supplycost * ps_availqty) * 0.0001  from   partsupp,   supplier,   nation  where   ps_suppkey = s_suppkey   and s_nationkey = n_nationkey   and n_name = 'GERMANY'  ) order by value desc LIMIT 10;",
        "pred_sql": "WITH TotalSupplyCost AS ( SELECT SUM(ps_supplycost * ps_availqty) * 0.0001 AS threshold FROM partsupp AS ps JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey JOIN nation AS n ON s.s_nationkey = n.n_nationkey WHERE n.n_name = 'GERMANY' ), ImportantStock AS ( SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS value FROM partsupp AS ps JOIN supplier AS s ON ps.ps_suppkey = s.s_suppkey JOIN nation AS n ON s.s_nationkey = n.n_nationkey WHERE n.n_name = 'GERMANY' GROUP BY ps.ps_partkey HAVING value > (SELECT threshold FROM TotalSupplyCost) ) SELECT ps_partkey, value FROM ImportantStock ORDER BY value DESC LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q121",
        "db_id": "tpch",
        "gold_sql": "select l_shipmode, sum(case  when o_orderpriority = '1-URGENT'  or o_orderpriority = '2-HIGH'  then 1  else 0 end) as high_line_count, sum(case  when o_orderpriority <> '1-URGENT'  and o_orderpriority <> '2-HIGH'  then 1  else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'REG AIR') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= '1993-01-01' and l_receiptdate < '1994-01-01' group by l_shipmode order by l_shipmode;",
        "pred_sql": "SELECT     L.l_shipmode,     SUM(CASE WHEN O.o_orderpriority IN ('1-URGENT', '2-HIGH') THEN 1 ELSE 0 END) AS high_line_count,     SUM(CASE WHEN O.o_orderpriority NOT IN ('1-URGENT', '2-HIGH') THEN 1 ELSE 0 END) AS low_line_count FROM     ORDERS O JOIN     LINEITEM L ON O.o_orderkey = L.l_orderkey WHERE     L.l_commitdate < L.l_receiptdate     AND L.l_shipdate < L.l_commitdate     AND L.l_shipmode IN ('MAIL', 'REG AIR')     AND L.l_receiptdate >= '1993-01-01'     AND L.l_receiptdate < '1994-01-01' GROUP BY     L.l_shipmode ORDER BY     L.l_shipmode;",
        "score": 1
    },
    {
        "sample_id": "q122",
        "db_id": "tpch",
        "gold_sql": "select l_shipmode, sum(case  when o_orderpriority = '1-URGENT'  or o_orderpriority = '2-HIGH'  then 1  else 0 end) as high_line_count, sum(case  when o_orderpriority <> '1-URGENT'  and o_orderpriority <> '2-HIGH'  then 1  else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('AIR', 'TRUCK') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= '1995-01-01' and l_receiptdate < '1996-01-01' group by l_shipmode order by l_shipmode;",
        "pred_sql": "SELECT     L.l_shipmode,     SUM(CASE WHEN O.o_orderpriority IN ('1-URGENT', '2-HIGH') THEN 1 ELSE 0 END) AS high_line_count,     SUM(CASE WHEN O.o_orderpriority NOT IN ('1-URGENT', '2-HIGH') THEN 1 ELSE 0 END) AS low_line_count FROM     ORDERS O JOIN     LINEITEM L ON O.o_orderkey = L.l_orderkey WHERE     L.l_commitdate < L.l_receiptdate     AND L.l_shipdate < L.l_commitdate     AND L.l_shipmode IN ('AIR', 'TRUCK')     AND L.l_receiptdate >= '1995-01-01'     AND L.l_receiptdate < '1996-01-01' GROUP BY     L.l_shipmode ORDER BY     L.l_shipmode;",
        "score": 1
    },
    {
        "sample_id": "q123",
        "db_id": "tpch",
        "gold_sql": "select l_shipmode, sum(case  when o_orderpriority = '1-URGENT'  or o_orderpriority = '2-HIGH'  then 1  else 0 end) as high_line_count, sum(case  when o_orderpriority <> '1-URGENT'  and o_orderpriority <> '2-HIGH'  then 1  else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('SHIP', 'FOB') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= '1997-01-01' and l_receiptdate < '1998-01-01' group by l_shipmode order by l_shipmode;",
        "pred_sql": "SELECT     L.l_shipmode,     SUM(CASE WHEN O.o_orderpriority = '1-URGENT' OR O.o_orderpriority = '2-HIGH' THEN 1 ELSE 0 END) AS high_line_count,     SUM(CASE WHEN O.o_orderpriority <> '1-URGENT' AND O.o_orderpriority <> '2-HIGH' THEN 1 ELSE 0 END) AS low_line_count FROM     ORDERS O JOIN     LINEITEM L ON O.o_orderkey = L.l_orderkey WHERE     L.l_commitdate < L.l_receiptdate     AND L.l_shipdate < L.l_commitdate     AND L.l_shipmode IN ('SHIP', 'FOB')     AND L.l_receiptdate >= '1997-01-01'     AND L.l_receiptdate < '1998-01-01' GROUP BY     L.l_shipmode ORDER BY     L.l_shipmode;",
        "score": 1
    },
    {
        "sample_id": "q124",
        "db_id": "tpch",
        "gold_sql": "select l_shipmode, sum(case  when o_orderpriority = '1-URGENT'  or o_orderpriority = '2-HIGH'  then 1  else 0 end) as high_line_count, sum(case  when o_orderpriority <> '1-URGENT'  and o_orderpriority <> '2-HIGH'  then 1  else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'TRUCK') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= '1995-01-01' and l_receiptdate < '1996-01-01' group by l_shipmode order by l_shipmode;",
        "pred_sql": "SELECT     L.l_shipmode,     SUM(CASE WHEN O.o_orderpriority IN ('1-URGENT', '2-HIGH') THEN 1 ELSE 0 END) AS high_line_count,     SUM(CASE WHEN O.o_orderpriority NOT IN ('1-URGENT', '2-HIGH') THEN 1 ELSE 0 END) AS low_line_count FROM     ORDERS O JOIN     LINEITEM L ON O.o_orderkey = L.l_orderkey WHERE     L.l_commitdate < L.l_receiptdate     AND L.l_shipdate < L.l_commitdate     AND L.l_shipmode IN ('MAIL', 'TRUCK')     AND L.l_receiptdate >= '1995-01-01'     AND L.l_receiptdate < '1996-01-01' GROUP BY     L.l_shipmode ORDER BY     L.l_shipmode;",
        "score": 0
    },
    {
        "sample_id": "q131",
        "db_id": "tpch",
        "gold_sql": "select c_count, count(*) as custdist from (  select  c_custkey,  count(o_orderkey) as c_count  from  customer left outer join orders on   c_custkey = o_custkey   and o_comment not like '%special%packages%'  group by  c_custkey ) as c_orders group by c_count order by custdist desc, c_count desc;",
        "pred_sql": "WITH CustomerOrderCounts AS (     SELECT          C.C_CUSTKEY,          COUNT(O.O_ORDERKEY) AS OrderCount     FROM          CUSTOMER C     LEFT JOIN          ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY          AND O.O_COMMENT NOT LIKE '%special%'          AND O.O_COMMENT NOT LIKE '%packages%'     GROUP BY          C.C_CUSTKEY ) SELECT      OrderCount AS c_count,      COUNT(*) AS custdist FROM      CustomerOrderCounts GROUP BY      OrderCount ORDER BY      c_count,      custdist DESC;",
        "score": 0
    },
    {
        "sample_id": "q132",
        "db_id": "tpch",
        "gold_sql": "select c_count, count(*) as custdist from (  select  c_custkey,  count(o_orderkey) as c_count  from  customer left outer join orders on   c_custkey = o_custkey   and o_comment not like '%pending%requests%'  group by  c_custkey ) as c_orders group by c_count order by custdist desc, c_count desc;",
        "pred_sql": "WITH CustomerOrderCounts AS (     SELECT          C.C_CUSTKEY,          COUNT(O.O_ORDERKEY) AS OrderCount     FROM          CUSTOMER C     LEFT JOIN          ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY AND O.O_COMMENT NOT LIKE '%pending%' AND O.O_COMMENT NOT LIKE '%requests%'     GROUP BY          C.C_CUSTKEY ) SELECT      OrderCount AS c_count,      COUNT(*) AS custdist FROM      CustomerOrderCounts GROUP BY      OrderCount ORDER BY      c_count,      custdist DESC;",
        "score": 0
    },
    {
        "sample_id": "q133",
        "db_id": "tpch",
        "gold_sql": "select c_count, count(*) as custdist from (  select  c_custkey,  count(o_orderkey) as c_count  from  customer left outer join orders on   c_custkey = o_custkey   and o_comment not like '%unusual%accounts%'  group by  c_custkey ) as c_orders group by c_count order by custdist desc, c_count desc;",
        "pred_sql": "WITH SPECIAL_CATEGORY_CUSTOMERS_ORDERS AS (     SELECT         C.C_CUSTKEY,         COUNT(O.O_ORDERKEY) AS C_COUNT     FROM         CUSTOMER C     LEFT JOIN         ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY         AND O.O_COMMENT NOT LIKE '%unusual%'         AND O.O_COMMENT NOT LIKE '%accounts%'     GROUP BY         C.C_CUSTKEY ) SELECT     C_COUNT,     COUNT(*) AS CUSTDIST FROM     SPECIAL_CATEGORY_CUSTOMERS_ORDERS GROUP BY     C_COUNT ORDER BY     C_COUNT, CUSTDIST DESC;",
        "score": 0
    },
    {
        "sample_id": "q141",
        "db_id": "tpch",
        "gold_sql": "select 100.00 * sum(case  when p_type like 'PROMO%'  then l_extendedprice * (1 - l_discount)  else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= '1993-09-01' and l_shipdate < date('1993-09-01', '+1 month');",
        "pred_sql": "SELECT     100.00 * SUM(CASE         WHEN P.P_TYPE LIKE 'PROMO%'             THEN L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)         ELSE 0     END) / SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS promo_revenue FROM     LINEITEM L,     PART P WHERE     L.L_PARTKEY = P.P_PARTKEY     AND L.L_SHIPDATE >= '1993-09-01'     AND L.L_SHIPDATE < '1993-10-01';",
        "score": 1
    },
    {
        "sample_id": "q142",
        "db_id": "tpch",
        "gold_sql": "select 100.00 * sum(case  when p_type like 'PROMO%'  then l_extendedprice * (1 - l_discount)  else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= '1995-03-01' and l_shipdate < date('1995-03-01', '+1 month');",
        "pred_sql": "SELECT 100.00 * SUM(CASE WHEN P.P_TYPE LIKE 'PROMO%' THEN L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT) ELSE 0 END) / SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS promo_revenue FROM LINEITEM L, PART P WHERE L.L_PARTKEY = P.P_PARTKEY AND L.L_SHIPDATE >= '1995-03-01' AND L.L_SHIPDATE < DATE('1995-03-01', '+1 month');",
        "score": 1
    },
    {
        "sample_id": "q143",
        "db_id": "tpch",
        "gold_sql": "select 100.00 * sum(case  when p_type like 'PROMO%'  then l_extendedprice * (1 - l_discount)  else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= '1997-05-01' and l_shipdate < date('1997-05-01', '+1 month');",
        "pred_sql": "SELECT 100.00 * SUM(CASE WHEN P.P_TYPE LIKE 'PROMO%' THEN L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT) ELSE 0 END) / SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS promo_revenue FROM LINEITEM L JOIN PART P ON L.L_PARTKEY = P.P_PARTKEY WHERE L.L_SHIPDATE >= '1997-05-01' AND L.L_SHIPDATE < DATE('1997-05-01', '+1 month');",
        "score": 1
    },
    {
        "sample_id": "q151",
        "db_id": "tpch",
        "gold_sql": " with revenue0 as (select  l_suppkey as supplier_no,  sum(l_extendedprice * (1 - l_discount)) as total_revenue from  lineitem where  l_shipdate >= '1993-03-01'  and l_shipdate < date('1993-03-01', '+3 months') group by  l_suppkey)  select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = (  select  max(total_revenue)  from  revenue0 ) order by s_suppkey;",
        "pred_sql": "WITH SUPPLIER_TOTAL_REVENUE AS (     SELECT         L_SUPPKEY AS supplier_no,         SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS total_revenue     FROM         LINEITEM     WHERE         L_SHIPDATE >= '1993-03-01'         AND L_SHIPDATE < date('1993-03-01', '+3 months')     GROUP BY         L_SUPPKEY ) SELECT     S.S_SUPPKEY, S.S_NAME, S.S_ADDRESS, S.S_PHONE, STR.total_revenue FROM     SUPPLIER S JOIN     SUPPLIER_TOTAL_REVENUE STR ON S.S_SUPPKEY = STR.supplier_no WHERE     STR.total_revenue = (         SELECT             MAX(total_revenue)         FROM             SUPPLIER_TOTAL_REVENUE     ) ORDER BY     S.S_SUPPKEY;",
        "score": 1
    },
    {
        "sample_id": "q152",
        "db_id": "tpch",
        "gold_sql": " with revenue0 as (select  l_suppkey as supplier_no,  sum(l_extendedprice * (1 - l_discount)) as total_revenue from  lineitem where  l_shipdate >= '1995-07-01'  and l_shipdate < date('1995-07-01', '+3 months') group by  l_suppkey)  select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = (  select  max(total_revenue)  from  revenue0 ) order by s_suppkey;",
        "pred_sql": "WITH SUPPLIER_TOTAL_REVENUE AS (     SELECT         L.L_SUPPKEY AS supplier_no,         SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS total_revenue     FROM         LINEITEM L     WHERE         L.L_SHIPDATE >= '1995-07-01' AND L.L_SHIPDATE < DATE('1995-07-01', '+3 months')     GROUP BY         L.L_SUPPKEY ) SELECT     S.S_SUPPKEY, S.S_NAME, S.S_ADDRESS, S.S_PHONE, STR.total_revenue FROM     SUPPLIER S JOIN     SUPPLIER_TOTAL_REVENUE STR ON S.S_SUPPKEY = STR.supplier_no WHERE     STR.total_revenue = (SELECT MAX(total_revenue) FROM SUPPLIER_TOTAL_REVENUE) ORDER BY     S.S_SUPPKEY;",
        "score": 1
    },
    {
        "sample_id": "q153",
        "db_id": "tpch",
        "gold_sql": " with revenue0 as (select  l_suppkey as supplier_no,  sum(l_extendedprice * (1 - l_discount)) as total_revenue from  lineitem where  l_shipdate >= '1996-09-01'  and l_shipdate < date('1996-09-01', '+3 months') group by  l_suppkey)  select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = (  select  max(total_revenue)  from  revenue0 ) order by s_suppkey;",
        "pred_sql": "WITH SUPPLIER_TOTAL_REVENUE AS (     SELECT         L_SUPPKEY AS supplier_no,         SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS total_revenue     FROM         LINEITEM     WHERE         L_SHIPDATE >= '1996-09-01'         AND L_SHIPDATE < DATE('1996-09-01', '+3 months')     GROUP BY         L_SUPPKEY ), TOP_REVENUE_SUPPLIER AS (     SELECT         MAX(total_revenue) AS max_revenue     FROM         SUPPLIER_TOTAL_REVENUE ) SELECT     S.S_SUPPKEY,     S.S_NAME,     S.S_ADDRESS,     S.S_PHONE,     R.total_revenue FROM     SUPPLIER S JOIN     SUPPLIER_TOTAL_REVENUE R ON S.S_SUPPKEY = R.supplier_no JOIN     TOP_REVENUE_SUPPLIER T ON R.total_revenue = T.max_revenue ORDER BY     S.S_SUPPKEY;",
        "score": 1
    },
    {
        "sample_id": "q161",
        "db_id": "tpch",
        "gold_sql": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in (  select  s_suppkey  from  supplier  where  s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size LIMIT 10;",
        "pred_sql": "SELECT     P.P_BRAND,     P.P_TYPE,     P.P_SIZE,     COUNT(DISTINCT PS.PS_SUPPKEY) AS SUPPLIER_CNT FROM     PARTSUPP PS     JOIN PART P ON PS.PS_PARTKEY = P.P_PARTKEY WHERE     P.P_BRAND <> 'Brand#45'     AND P.P_TYPE <> 'MEDIUM POLISHED'     AND P.P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9)     AND PS.PS_SUPPKEY NOT IN (         SELECT S_SUPPKEY         FROM SUPPLIER         WHERE S_COMMENT LIKE '%Customer%Complaints%'     ) GROUP BY     P.P_BRAND,     P.P_TYPE,     P.P_SIZE ORDER BY     SUPPLIER_CNT DESC,     P.P_BRAND ASC,     P.P_TYPE ASC,     P.P_SIZE ASC LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q162",
        "db_id": "tpch",
        "gold_sql": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#32' and p_type not like 'SMALL BURNISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in (  select  s_suppkey  from  supplier  where  s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size LIMIT 10;",
        "pred_sql": "SELECT P.P_BRAND, P.P_TYPE, P.P_SIZE, COUNT(DISTINCT PS.PS_SUPPKEY) AS SUPPLIER_CNT FROM PARTSUPP PS JOIN PART P ON PS.PS_PARTKEY = P.P_PARTKEY WHERE P.P_BRAND <> 'Brand#32' AND P.P_TYPE <> 'SMALL BURNISHED' AND P.P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9) AND PS.PS_SUPPKEY NOT IN (SELECT S_SUPPKEY FROM SUPPLIER WHERE S_COMMENT LIKE '%Customer%Complaints%') GROUP BY P.P_BRAND, P.P_TYPE, P.P_SIZE ORDER BY SUPPLIER_CNT DESC, P.P_BRAND ASC, P.P_TYPE ASC, P.P_SIZE ASC LIMIT 10;",
        "score": 0
    },
    {
        "sample_id": "q163",
        "db_id": "tpch",
        "gold_sql": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#15' and p_type not like 'STANDARD ANODIZED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in (  select  s_suppkey  from  supplier  where  s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size LIMIT 10;",
        "pred_sql": "SELECT     P.P_BRAND,     P.P_TYPE,     P.P_SIZE,     COUNT(DISTINCT PS.PS_SUPPKEY) AS SUPPLIER_CNT FROM     PART P     JOIN PARTSUPP PS ON P.P_PARTKEY = PS.PS_PARTKEY WHERE     P.P_BRAND <> 'Brand#15'     AND P.P_TYPE NOT LIKE 'STANDARD ANODIZED%'     AND P.P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9)     AND PS.PS_SUPPKEY NOT IN (         SELECT S_SUPPKEY         FROM SUPPLIER         WHERE S_COMMENT LIKE '%Customer%Complaints%'     ) GROUP BY     P.P_BRAND,     P.P_TYPE,     P.P_SIZE ORDER BY     SUPPLIER_CNT DESC,     P.P_BRAND,     P.P_TYPE,     P.P_SIZE LIMIT 10;",
        "score": 1
    },
    {
        "sample_id": "q171",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice) / (strftime('%Y', max(o_orderdate))-strftime('%Y', min(o_orderdate))) as avg_yearly from lineitem,     orders,                                                                             part, (SELECT   l_partkey AS agg_partkey,   0.2 * avg(l_quantity) AS avg_quantity  FROM lineitem  GROUP BY l_partkey) part_agg where p_partkey = l_partkey     and l_orderkey = o_orderkey and agg_partkey = l_partkey and p_brand = 'Brand#23' and p_container = 'MED BOX' and l_quantity < avg_quantity;",
        "pred_sql": "WITH AvgQuantity AS ( SELECT AVG(L.l_quantity) AS avg_quantity FROM LINEITEM L JOIN PART P ON L.l_partkey = P.p_partkey WHERE P.p_brand = 'Brand#23' AND P.p_container = 'MED BOX' ), Threshold AS ( SELECT 0.2 * avg_quantity AS threshold_quantity FROM AvgQuantity ), YearlyRevenueLoss AS ( SELECT SUM(L.l_extendedprice) / (strftime('%Y', 'now') - strftime('%Y', MIN(O.o_orderdate))) AS avg_yearly_loss FROM LINEITEM L JOIN PART P ON L.l_partkey = P.p_partkey JOIN ORDERS O ON L.l_orderkey = O.o_orderkey JOIN Threshold T ON L.l_quantity < T.threshold_quantity WHERE P.p_brand = 'Brand#23' AND P.p_container = 'MED BOX' ) SELECT (SELECT avg_quantity FROM AvgQuantity) AS avg_quantity, avg_yearly_loss FROM YearlyRevenueLoss;",
        "score": 0
    },
    {
        "sample_id": "q172",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice) / (strftime('%Y', max(o_orderdate))-strftime('%Y', min(o_orderdate))) as avg_yearly from lineitem,     orders, part, (SELECT   l_partkey AS agg_partkey,   0.2 * avg(l_quantity) AS avg_quantity  FROM lineitem  GROUP BY l_partkey) part_agg where p_partkey = l_partkey     and l_orderkey = o_orderkey and agg_partkey = l_partkey and p_brand = 'Brand#14' and p_container = 'JUMBO JAR' and l_quantity < avg_quantity;",
        "pred_sql": "WITH AvgQuantity AS ( SELECT AVG(L.l_quantity) AS avg_quantity FROM LINEITEM L JOIN PART P ON L.l_partkey = P.p_partkey WHERE P.p_brand = 'Brand#14' AND P.p_container = 'JUMBO JAR' ), FilteredOrders AS ( SELECT L.l_extendedprice, O.o_orderdate FROM LINEITEM L JOIN PART P ON L.l_partkey = P.p_partkey JOIN ORDERS O ON L.l_orderkey = O.o_orderkey WHERE P.p_brand = 'Brand#14' AND P.p_container = 'JUMBO JAR' AND L.l_quantity < (SELECT 0.2 * avg_quantity FROM AvgQuantity) ) SELECT (SELECT avg_quantity FROM AvgQuantity) AS average_quantity, SUM(F.l_extendedprice) / (strftime('%Y', 'now') - strftime('%Y', MIN(F.o_orderdate))) AS yearly_gross_undiscounted_revenue_loss FROM FilteredOrders F;",
        "score": 0
    },
    {
        "sample_id": "q173",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice) / (strftime('%Y', max(o_orderdate))-strftime('%Y', min(o_orderdate))) as avg_yearly from lineitem,     orders, part, (SELECT   l_partkey AS agg_partkey,   0.2 * avg(l_quantity) AS avg_quantity  FROM lineitem  GROUP BY l_partkey) part_agg where p_partkey = l_partkey     and l_orderkey = o_orderkey and agg_partkey = l_partkey and p_brand = 'Brand#45' and p_container = 'WRAP PKG' and l_quantity < avg_quantity;",
        "pred_sql": "WITH AvgQuantity AS ( SELECT AVG(L.l_quantity) AS avg_quantity FROM LINEITEM L JOIN PART P ON L.l_partkey = P.p_partkey WHERE P.p_brand = 'Brand#45' AND P.p_container = 'WRAP PKG' ), Threshold AS ( SELECT 0.2 * avg_quantity AS threshold_quantity FROM AvgQuantity ), YearlyRevenueLoss AS ( SELECT SUM(L.l_extendedprice) / (strftime('%Y', 'now') - strftime('%Y', MIN(O.o_orderdate))) AS avg_yearly_loss FROM LINEITEM L JOIN PART P ON L.l_partkey = P.p_partkey JOIN ORDERS O ON L.l_orderkey = O.o_orderkey JOIN Threshold T ON L.l_quantity < T.threshold_quantity WHERE P.p_brand = 'Brand#45' AND P.p_container = 'WRAP PKG' ) SELECT A.avg_quantity, Y.avg_yearly_loss FROM AvgQuantity A, YearlyRevenueLoss Y;",
        "score": 0
    },
    {
        "sample_id": "q181",
        "db_id": "tpch",
        "gold_sql": "select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in (  select  l_orderkey  from  lineitem  group by  l_orderkey having   sum(l_quantity) > 300 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate LIMIT 100;",
        "pred_sql": "SELECT T1.C_NAME, T1.C_CUSTKEY, T2.O_ORDERKEY, T2.O_ORDERDATE, T2.O_TOTALPRICE, SUM(T3.L_QUANTITY) AS TOTAL_QUANTITY FROM CUSTOMER T1 JOIN ORDERS T2 ON T1.C_CUSTKEY = T2.O_CUSTKEY JOIN LINEITEM T3 ON T2.O_ORDERKEY = T3.L_ORDERKEY GROUP BY T1.C_NAME, T1.C_CUSTKEY, T2.O_ORDERKEY, T2.O_ORDERDATE, T2.O_TOTALPRICE HAVING TOTAL_QUANTITY > 300 ORDER BY T2.O_TOTALPRICE DESC, T2.O_ORDERDATE LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q182",
        "db_id": "tpch",
        "gold_sql": "select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in (  select  l_orderkey  from  lineitem  group by  l_orderkey having   sum(l_quantity) > 312 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate LIMIT 100;",
        "pred_sql": "SELECT C.C_NAME, C.C_CUSTKEY, O.O_ORDERKEY, O.O_ORDERDATE, O.O_TOTALPRICE, SUM(L.L_QUANTITY) AS TOTAL_QUANTITY FROM CUSTOMER C JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY GROUP BY C.C_NAME, C.C_CUSTKEY, O.O_ORDERKEY, O.O_ORDERDATE, O.O_TOTALPRICE HAVING TOTAL_QUANTITY > 312 ORDER BY O.O_TOTALPRICE DESC LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q183",
        "db_id": "tpch",
        "gold_sql": "select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in (  select  l_orderkey  from  lineitem  group by  l_orderkey having   sum(l_quantity) > 315 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate LIMIT 100;",
        "pred_sql": "SELECT     C.C_NAME,     C.C_CUSTKEY,     O.O_ORDERKEY,     O.O_ORDERDATE,     O.O_TOTALPRICE,     SUM(L.L_QUANTITY) AS TOTAL_QUANTITY FROM     CUSTOMER C     JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY     JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY WHERE     O.O_ORDERKEY IN (         SELECT             L_ORDERKEY         FROM             LINEITEM         GROUP BY             L_ORDERKEY         HAVING             SUM(L_QUANTITY) > 315     ) GROUP BY     C.C_NAME,     C.C_CUSTKEY,     O.O_ORDERKEY,     O.O_ORDERDATE,     O.O_TOTALPRICE ORDER BY     O.O_TOTALPRICE DESC,     O.O_ORDERDATE LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q191",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where (  p_partkey = l_partkey  and p_brand = 'Brand#12'  and p_container like '%SM%'  and l_quantity >= 1 and l_quantity <= 11  and p_size between 1 and 5  and l_shipmode in ('AIR', 'AIR REG')  and l_shipinstruct = 'DELIVER IN PERSON' );",
        "pred_sql": "SELECT SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS revenue FROM LINEITEM L JOIN PART P ON L.L_PARTKEY = P.P_PARTKEY WHERE P.P_BRAND = 'Brand#12' AND P.P_CONTAINER LIKE '%SM%' AND P.P_SIZE BETWEEN 1 AND 5 AND L.L_QUANTITY BETWEEN 1 AND 11 AND L.L_SHIPMODE IN ('AIR', 'AIR REG') AND L.L_SHIPINSTRUCT = 'DELIVER IN PERSON'",
        "score": 1
    },
    {
        "sample_id": "q192",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where (  p_partkey = l_partkey  and p_brand = 'Brand#23'  and p_container like '%LG%'  and l_quantity >= 10 and l_quantity <= 20  and p_size between 1 and 10  and l_shipmode in ('AIR', 'AIR REG')  and l_shipinstruct = 'DELIVER IN PERSON' );",
        "pred_sql": "SELECT SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS revenue FROM LINEITEM L JOIN PART P ON L.L_PARTKEY = P.P_PARTKEY WHERE P.P_BRAND = 'Brand#23' AND P.P_CONTAINER LIKE '%LG%' AND L.L_QUANTITY BETWEEN 10 AND 20 AND P.P_SIZE BETWEEN 1 AND 10 AND L.L_SHIPMODE IN ('AIR', 'AIR REG') AND L.L_SHIPINSTRUCT = 'DELIVER IN PERSON'",
        "score": 1
    },
    {
        "sample_id": "q193",
        "db_id": "tpch",
        "gold_sql": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where (  p_partkey = l_partkey  and p_brand = 'Brand#34'  and p_container like '%MED%'  and l_quantity >= 20 and l_quantity <= 30  and p_size between 1 and 15  and l_shipmode in ('AIR', 'AIR REG')  and l_shipinstruct = 'DELIVER IN PERSON' );",
        "pred_sql": "SELECT SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS revenue FROM LINEITEM L JOIN PART P ON L.L_PARTKEY = P.P_PARTKEY WHERE P.P_BRAND = 'Brand#34' AND P.P_CONTAINER LIKE '%MED%' AND P.P_SIZE BETWEEN 1 AND 15 AND L.L_QUANTITY BETWEEN 20 AND 30 AND L.L_SHIPMODE IN ('AIR', 'AIR REG') AND L.L_SHIPINSTRUCT = 'DELIVER IN PERSON'",
        "score": 1
    },
    {
        "sample_id": "q201",
        "db_id": "tpch",
        "gold_sql": "select s_name, s_address from supplier, nation where s_suppkey in (  select  ps_suppkey  from  partsupp,  (   select   l_partkey agg_partkey,   l_suppkey agg_suppkey,   0.5 * sum(l_quantity) AS agg_quantity   from   lineitem   where   l_shipdate >= '1993-01-01'   and l_shipdate < '1994-01-01'   group by   l_partkey,   l_suppkey  ) agg_lineitem  where  agg_partkey = ps_partkey  and agg_suppkey = ps_suppkey  and ps_partkey in (   select   p_partkey   from   part   where   p_name like '%forest%'  )  and ps_availqty > agg_quantity ) and s_nationkey = n_nationkey and n_name = 'CANADA' order by s_name LIMIT 100;",
        "pred_sql": "SELECT s.s_name, s.s_address FROM supplier s JOIN nation n ON s.s_nationkey = n.n_nationkey WHERE s.s_suppkey IN (     SELECT ps.ps_suppkey     FROM partsupp ps     JOIN (         SELECT l.l_partkey, l.l_suppkey, 0.5 * SUM(l.l_quantity) AS agg_quantity         FROM lineitem l         WHERE l.l_shipdate >= '1993-01-01' AND l.l_shipdate < '1994-01-01'         GROUP BY l.l_partkey, l.l_suppkey     ) agg_lineitem ON agg_lineitem.l_partkey = ps.ps_partkey AND agg_lineitem.l_suppkey = ps.ps_suppkey     WHERE ps.ps_partkey IN (         SELECT p.p_partkey         FROM part p         WHERE p.p_name LIKE '%forest%'     )     AND ps.ps_availqty > agg_lineitem.agg_quantity ) AND n.n_name = 'CANADA' ORDER BY s.s_name LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q202",
        "db_id": "tpch",
        "gold_sql": "select s_name, s_address from supplier, nation where s_suppkey in (  select  ps_suppkey  from  partsupp,  (   select   l_partkey agg_partkey,   l_suppkey agg_suppkey,   0.5 * sum(l_quantity) AS agg_quantity   from   lineitem   where   l_shipdate >= '1995-01-01'   and l_shipdate < '1996-01-01'   group by   l_partkey,   l_suppkey  ) agg_lineitem  where  agg_partkey = ps_partkey  and agg_suppkey = ps_suppkey  and ps_partkey in (   select   p_partkey   from   part   where   p_name like '%green%'  )  and ps_availqty > agg_quantity ) and s_nationkey = n_nationkey and n_name = 'VIETNAM' order by s_name LIMIT 100;",
        "pred_sql": "SELECT s.s_name, s.s_address FROM supplier s JOIN nation n ON s.s_nationkey = n.n_nationkey WHERE s.s_suppkey IN (     SELECT ps.ps_suppkey     FROM partsupp ps     JOIN (         SELECT l.l_partkey AS agg_partkey, l.l_suppkey AS agg_suppkey, 0.5 * SUM(l.l_quantity) AS agg_quantity         FROM lineitem l         WHERE l.l_shipdate >= '1995-01-01' AND l.l_shipdate < '1996-01-01'         GROUP BY l.l_partkey, l.l_suppkey     ) agg_lineitem ON agg_lineitem.agg_partkey = ps.ps_partkey AND agg_lineitem.agg_suppkey = ps.ps_suppkey     JOIN part p ON ps.ps_partkey = p.p_partkey     WHERE p.p_name LIKE '%green%'     AND ps.ps_availqty > agg_lineitem.agg_quantity ) AND n.n_name = 'VIETNAM' ORDER BY s.s_name LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q203",
        "db_id": "tpch",
        "gold_sql": "select s_name, s_address from supplier, nation where s_suppkey in (  select  ps_suppkey  from  partsupp,  (   select   l_partkey agg_partkey,   l_suppkey agg_suppkey,   0.5 * sum(l_quantity) AS agg_quantity   from   lineitem   where   l_shipdate >= '1997-01-01'   and l_shipdate < '1998-01-01'   group by   l_partkey,   l_suppkey  ) agg_lineitem  where  agg_partkey = ps_partkey  and agg_suppkey = ps_suppkey  and ps_partkey in (   select   p_partkey   from   part   where   p_name like '%light%'  )  and ps_availqty > agg_quantity ) and s_nationkey = n_nationkey and n_name = 'GERMANY' order by s_name LIMIT 100;",
        "pred_sql": "SELECT s.s_suppkey FROM SUPPLIER s JOIN NATION n ON s.s_nationkey = n.n_nationkey JOIN PARTSUPP ps ON s.s_suppkey = ps.ps_suppkey JOIN PART p ON ps.ps_partkey = p.p_partkey JOIN (     SELECT l.l_partkey, l.l_suppkey, 0.5 * SUM(l.l_quantity) AS avg_quantity     FROM LINEITEM l     WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'     GROUP BY l.l_partkey, l.l_suppkey ) agg ON ps.ps_partkey = agg.l_partkey AND ps.ps_suppkey = agg.l_suppkey WHERE n.n_name = 'GERMANY'   AND p.p_name LIKE '%light%'   AND ps.ps_availqty > agg.avg_quantity LIMIT 100;",
        "score": 0
    },
    {
        "sample_id": "q211",
        "db_id": "tpch",
        "gold_sql": "select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists (  select  *  from  lineitem l2  where  l2.l_orderkey = l1.l_orderkey  and l2.l_suppkey <> l1.l_suppkey ) and not exists (  select  *  from  lineitem l3  where  l3.l_orderkey = l1.l_orderkey  and l3.l_suppkey <> l1.l_suppkey  and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'GERMANY' group by s_name order by numwait desc, s_name LIMIT 100;",
        "pred_sql": "SELECT S.S_NAME, COUNT(*) AS NUMWAIT FROM SUPPLIER S JOIN LINEITEM L1 ON S.S_SUPPKEY = L1.L_SUPPKEY JOIN ORDERS O ON O.O_ORDERKEY = L1.L_ORDERKEY JOIN NATION N ON S.S_NATIONKEY = N.N_NATIONKEY WHERE O.O_ORDERSTATUS = 'F' AND L1.L_RECEIPTDATE > L1.L_COMMITDATE AND EXISTS ( SELECT 1 FROM LINEITEM L2 WHERE L2.L_ORDERKEY = L1.L_ORDERKEY AND L2.L_SUPPKEY <> L1.L_SUPPKEY ) AND NOT EXISTS ( SELECT 1 FROM LINEITEM L3 WHERE L3.L_ORDERKEY = L1.L_ORDERKEY AND L3.L_SUPPKEY <> L1.L_SUPPKEY AND L3.L_RECEIPTDATE > L3.L_COMMITDATE ) AND N.N_NAME = 'GERMANY' GROUP BY S.S_NAME ORDER BY NUMWAIT DESC, S.S_NAME LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q212",
        "db_id": "tpch",
        "gold_sql": "select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists (  select  *  from  lineitem l2  where  l2.l_orderkey = l1.l_orderkey  and l2.l_suppkey <> l1.l_suppkey ) and not exists (  select  *  from  lineitem l3  where  l3.l_orderkey = l1.l_orderkey  and l3.l_suppkey <> l1.l_suppkey  and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'SAUDI ARABIA' group by s_name order by numwait desc, s_name LIMIT 100;",
        "pred_sql": "SELECT s.s_name, COUNT(*) AS numwait FROM supplier s JOIN lineitem l1 ON s.s_suppkey = l1.l_suppkey JOIN orders o ON o.o_orderkey = l1.l_orderkey JOIN nation n ON s.s_nationkey = n.n_nationkey WHERE o.o_orderstatus = 'F'   AND l1.l_receiptdate > l1.l_commitdate   AND EXISTS (     SELECT 1     FROM lineitem l2     WHERE l2.l_orderkey = l1.l_orderkey       AND l2.l_suppkey <> l1.l_suppkey   )   AND NOT EXISTS (     SELECT 1     FROM lineitem l3     WHERE l3.l_orderkey = l1.l_orderkey       AND l3.l_suppkey <> l1.l_suppkey       AND l3.l_receiptdate > l3.l_commitdate   )   AND n.n_name = 'SAUDI ARABIA' GROUP BY s.s_name ORDER BY numwait DESC, s.s_name LIMIT 100;",
        "score": 1
    },
    {
        "sample_id": "q213",
        "db_id": "tpch",
        "gold_sql": "select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists (  select  *  from  lineitem l2  where  l2.l_orderkey = l1.l_orderkey  and l2.l_suppkey <> l1.l_suppkey ) and not exists (  select  *  from  lineitem l3  where  l3.l_orderkey = l1.l_orderkey  and l3.l_suppkey <> l1.l_suppkey  and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'UNITED STATES' group by s_name order by numwait desc, s_name LIMIT 100;",
        "pred_sql": "SELECT s.s_name, COUNT(*) AS numwait FROM supplier s JOIN lineitem l1 ON s.s_suppkey = l1.l_suppkey JOIN orders o ON o.o_orderkey = l1.l_orderkey JOIN nation n ON s.s_nationkey = n.n_nationkey WHERE o.o_orderstatus = 'F'   AND l1.l_receiptdate > l1.l_commitdate   AND EXISTS (     SELECT 1     FROM lineitem l2     WHERE l2.l_orderkey = l1.l_orderkey       AND l2.l_suppkey <> l1.l_suppkey   )   AND NOT EXISTS (     SELECT 1     FROM lineitem l3     WHERE l3.l_orderkey = l1.l_orderkey       AND l3.l_suppkey <> l1.l_suppkey       AND l3.l_receiptdate > l3.l_commitdate   )   AND n.n_name = 'UNITED STATES' GROUP BY s.s_name ORDER BY numwait DESC, s.s_name LIMIT 100;",
        "score": 1
    }
]