{
    "perpetrator": {
        "perpetrator": {
            "Perpetrator_ID": "Unique identifier for each perpetrator.",
            "People_ID": "Identifier linking to the associated person.",
            "Date": "Date of the incident involving the perpetrator.",
            "Year": "Year when the incident occurred.",
            "Location": "Geographical location of the incident.",
            "Country": "Country where the incident took place.",
            "Killed": "Number of people killed in the incident.",
            "Injured": "Number of people injured in the incident."
        },
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Name": "Full name of the person.",
            "Height": "Height of the person in centimeters.",
            "Weight": "Weight of the person in kilograms.",
            "Home Town": "Hometown of the person."
        }
    },
    "college_2": {
        "classroom": {
            "building": "The name of the building where the classroom is located.",
            "room_number": "The specific room number of the classroom.",
            "capacity": "The maximum number of students that can be accommodated in the classroom."
        },
        "department": {
            "dept_name": "The name of the academic department.",
            "building": "The building where the department's offices are located.",
            "budget": "The allocated budget for the department."
        },
        "course": {
            "course_id": "A unique identifier for each course.",
            "title": "The title or name of the course.",
            "dept_name": "The name of the department offering the course.",
            "credits": "The number of credits awarded for completing the course."
        },
        "instructor": {
            "ID": "A unique identifier for each instructor.",
            "name": "The name of the instructor.",
            "dept_name": "The department to which the instructor belongs.",
            "salary": "The annual salary of the instructor."
        },
        "section": {
            "course_id": "The identifier for the course associated with the section.",
            "sec_id": "The unique identifier for the section.",
            "semester": "The semester in which the section is offered.",
            "year": "The academic year in which the section is offered.",
            "building": "The building where the section is held.",
            "room_number": "The room number where the section takes place.",
            "time_slot_id": "The identifier for the time slot assigned to the section."
        },
        "teaches": {
            "ID": "The identifier for the instructor teaching the course.",
            "course_id": "The identifier for the course being taught.",
            "sec_id": "The section identifier for the course.",
            "semester": "The semester in which the course is taught.",
            "year": "The academic year in which the course is taught."
        },
        "student": {
            "ID": "A unique identifier for each student.",
            "name": "The name of the student.",
            "dept_name": "The department to which the student is enrolled.",
            "tot_cred": "The total number of credits earned by the student."
        },
        "takes": {
            "ID": "The identifier for the student taking the course.",
            "course_id": "The identifier for the course being taken.",
            "sec_id": "The section identifier for the course.",
            "semester": "The semester in which the course is taken.",
            "year": "The academic year in which the course is taken.",
            "grade": "The grade received by the student in the course."
        },
        "advisor": {
            "s_ID": "The identifier for the student being advised.",
            "i_ID": "The identifier for the instructor acting as the advisor."
        },
        "time_slot": {
            "time_slot_id": "A unique identifier for each time slot.",
            "day": "The day of the week when the time slot occurs.",
            "start_hr": "The hour when the time slot starts.",
            "start_min": "The minute when the time slot starts.",
            "end_hr": "The hour when the time slot ends.",
            "end_min": "The minute when the time slot ends."
        },
        "prereq": {
            "course_id": "The identifier for the course that has prerequisites.",
            "prereq_id": "The identifier for the prerequisite course."
        }
    },
    "flight_company": {
        "airport": {
            "id": "Unique identifier for the airport.",
            "City": "City where the airport is located.",
            "Country": "Country where the airport is situated.",
            "IATA": "International Air Transport Association airport code.",
            "ICAO": "International Civil Aviation Organization airport code.",
            "name": "Official name of the airport."
        },
        "operate_company": {
            "id": "Unique identifier for the operating company.",
            "name": "Name of the operating company.",
            "Type": "Type of the operating company (e.g., airline, charter).",
            "Principal_activities": "Main activities conducted by the company.",
            "Incorporated_in": "Country where the company is incorporated.",
            "Group_Equity_Shareholding": "Percentage of equity shareholding in the company."
        },
        "flight": {
            "id": "Unique identifier for the flight.",
            "Vehicle_Flight_number": "Flight number assigned to the vehicle.",
            "Date": "Date when the flight is scheduled.",
            "Pilot": "Name of the pilot operating the flight.",
            "Velocity": "Speed of the flight in specified units.",
            "Altitude": "Height of the flight above sea level.",
            "airport_id": "Identifier linking to the airport for departure/arrival.",
            "company_id": "Identifier linking to the operating company of the flight."
        }
    },
    "icfp_1": {
        "Inst": {
            "instID": "Unique identifier for each institution.",
            "name": "Name of the institution.",
            "country": "Country where the institution is located."
        },
        "Authors": {
            "authID": "Unique identifier for each author.",
            "lname": "Last name of the author.",
            "fname": "First name of the author."
        },
        "Papers": {
            "paperID": "Unique identifier for each paper.",
            "title": "Title of the paper."
        },
        "Authorship": {
            "authID": "Identifier for the author associated with the paper.",
            "instID": "Identifier for the institution of the author.",
            "paperID": "Identifier for the paper authored.",
            "authOrder": "Order of the author in the list of authors for the paper."
        }
    },
    "body_builder": {
        "body_builder": {
            "Body_Builder_ID": "Unique identifier for each bodybuilder.",
            "People_ID": "Identifier linking to the person associated with the bodybuilder.",
            "Snatch": "Weight lifted in the snatch event.",
            "Clean_Jerk": "Weight lifted in the clean and jerk event.",
            "Total": "Total weight lifted across all events."
        },
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Name": "Full name of the person.",
            "Height": "Height of the person in centimeters.",
            "Weight": "Weight of the person in kilograms.",
            "Birth_Date": "Date of birth of the person.",
            "Birth_Place": "Place of birth of the person."
        }
    },
    "storm_record": {
        "storm": {
            "Storm_ID": "Unique identifier for each storm.",
            "Name": "Name of the storm.",
            "Dates_active": "Dates during which the storm was active.",
            "Max_speed": "Maximum wind speed of the storm in mph.",
            "Damage_millions_USD": "Estimated damage caused by the storm in millions of USD.",
            "Number_Deaths": "Total number of deaths attributed to the storm."
        },
        "region": {
            "Region_id": "Unique identifier for each region.",
            "Region_code": "Code representing the region.",
            "Region_name": "Name of the region."
        },
        "affected_region": {
            "Region_id": "Identifier for the region affected by the storm.",
            "Storm_ID": "Identifier for the storm that affected the region.",
            "Number_city_affected": "Number of cities affected by the storm in the region."
        }
    },
    "pilot_record": {
        "aircraft": {
            "Aircraft_ID": "Unique identifier for each aircraft.",
            "Order_Year": "Year the aircraft was ordered.",
            "Manufacturer": "Company that manufactured the aircraft.",
            "Model": "Specific model name of the aircraft.",
            "Fleet_Series": "Series designation of the aircraft within the fleet.",
            "Powertrain": "Type of powertrain used in the aircraft.",
            "Fuel_Propulsion": "Type of fuel propulsion system used."
        },
        "pilot": {
            "Pilot_ID": "Unique identifier for each pilot.",
            "Pilot_name": "Name of the pilot.",
            "Rank": "Rank or title of the pilot.",
            "Age": "Age of the pilot.",
            "Nationality": "Nationality of the pilot.",
            "Position": "Current position or role of the pilot.",
            "Join_Year": "Year the pilot joined the team.",
            "Team": "Team or organization the pilot is associated with."
        },
        "pilot_record": {
            "Record_ID": "Unique identifier for each pilot record.",
            "Pilot_ID": "Identifier linking to the pilot.",
            "Aircraft_ID": "Identifier linking to the aircraft flown.",
            "Date": "Date of the flight record."
        }
    },
    "race_track": {
        "race": {
            "Race_ID": "Unique identifier for each race.",
            "Name": "Name of the race event.",
            "Class": "Classification of the race (e.g., sprint, marathon).",
            "Date": "Date when the race is scheduled.",
            "Track_ID": "Identifier for the track where the race takes place."
        },
        "track": {
            "Track_ID": "Unique identifier for each track.",
            "Name": "Name of the racing track.",
            "Location": "Geographical location of the track.",
            "Seating": "Total seating capacity of the track.",
            "Year_Opened": "Year when the track was opened for use."
        }
    },
    "academic": {
        "author": {
            "aid": "Unique identifier for the author.",
            "homepage": "URL of the author's homepage.",
            "name": "Full name of the author.",
            "oid": "Object identifier for the author."
        },
        "conference": {
            "cid": "Unique identifier for the conference.",
            "homepage": "URL of the conference homepage.",
            "name": "Name of the conference."
        },
        "domain": {
            "did": "Unique identifier for the domain.",
            "name": "Name of the domain."
        },
        "domain_author": {
            "aid": "Unique identifier for the author associated with the domain.",
            "did": "Unique identifier for the domain."
        },
        "domain_conference": {
            "cid": "Unique identifier for the conference associated with the domain.",
            "did": "Unique identifier for the domain."
        },
        "journal": {
            "homepage": "URL of the journal homepage.",
            "jid": "Unique identifier for the journal.",
            "name": "Name of the journal."
        },
        "domain_journal": {
            "did": "Unique identifier for the domain associated with the journal.",
            "jid": "Unique identifier for the journal."
        },
        "keyword": {
            "keyword": "The keyword or phrase.",
            "kid": "Unique identifier for the keyword."
        },
        "domain_keyword": {
            "did": "Unique identifier for the domain associated with the keyword.",
            "kid": "Unique identifier for the keyword."
        },
        "publication": {
            "abstract": "Summary of the publication.",
            "cid": "Unique identifier for the conference related to the publication.",
            "citation_num": "Number of citations for the publication.",
            "jid": "Unique identifier for the journal related to the publication.",
            "pid": "Unique identifier for the publication.",
            "reference_num": "Number of references in the publication.",
            "title": "Title of the publication.",
            "year": "Year of publication."
        },
        "domain_publication": {
            "did": "Unique identifier for the domain associated with the publication.",
            "pid": "Unique identifier for the publication."
        },
        "organization": {
            "continent": "Continent where the organization is located.",
            "homepage": "URL of the organization's homepage.",
            "name": "Name of the organization.",
            "oid": "Unique identifier for the organization."
        },
        "publication_keyword": {
            "pid": "Unique identifier for the publication associated with the keyword.",
            "kid": "Unique identifier for the keyword."
        },
        "writes": {
            "aid": "Unique identifier for the author who wrote the publication.",
            "pid": "Unique identifier for the publication."
        },
        "cite": {
            "cited": "Identifier for the cited publication.",
            "citing": "Identifier for the citing publication."
        }
    },
    "department_store": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "address_details": "Detailed description of the address."
        },
        "Staff": {
            "staff_id": "Unique identifier for each staff member.",
            "staff_gender": "Gender of the staff member represented numerically.",
            "staff_name": "Name of the staff member."
        },
        "Suppliers": {
            "supplier_id": "Unique identifier for each supplier.",
            "supplier_name": "Name of the supplier.",
            "supplier_phone": "Contact phone number for the supplier."
        },
        "Department_Store_Chain": {
            "dept_store_chain_id": "Unique identifier for each department store chain.",
            "dept_store_chain_name": "Name of the department store chain."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "payment_method_code": "Code representing the customer's payment method.",
            "customer_code": "Unique code assigned to the customer.",
            "customer_name": "Name of the customer.",
            "customer_address": "Address of the customer.",
            "customer_phone": "Contact phone number for the customer.",
            "customer_email": "Email address of the customer."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "product_type_code": "Code representing the type of product.",
            "product_name": "Name of the product.",
            "product_price": "Price of the product."
        },
        "Supplier_Addresses": {
            "supplier_id": "Unique identifier for the supplier associated with the address.",
            "address_id": "Unique identifier for the address.",
            "date_from": "Start date of the address validity.",
            "date_to": "End date of the address validity."
        },
        "Customer_Addresses": {
            "customer_id": "Unique identifier for the customer associated with the address.",
            "address_id": "Unique identifier for the address.",
            "date_from": "Start date of the address validity.",
            "date_to": "End date of the address validity."
        },
        "Customer_Orders": {
            "order_id": "Unique identifier for each customer order.",
            "customer_id": "Unique identifier for the customer placing the order.",
            "order_status_code": "Code representing the status of the order.",
            "order_date": "Date when the order was placed."
        },
        "Department_Stores": {
            "dept_store_id": "Unique identifier for each department store.",
            "dept_store_chain_id": "Identifier for the department store chain the store belongs to.",
            "store_name": "Name of the department store.",
            "store_address": "Address of the department store.",
            "store_phone": "Contact phone number for the department store.",
            "store_email": "Email address of the department store."
        },
        "Departments": {
            "department_id": "Unique identifier for each department.",
            "dept_store_id": "Identifier for the department store the department belongs to.",
            "department_name": "Name of the department."
        },
        "Order_Items": {
            "order_item_id": "Unique identifier for each item in an order.",
            "order_id": "Unique identifier for the order that includes the item.",
            "product_id": "Unique identifier for the product included in the order."
        },
        "Product_Suppliers": {
            "product_id": "Unique identifier for the product supplied.",
            "supplier_id": "Unique identifier for the supplier of the product.",
            "date_supplied_from": "Start date of the supply period.",
            "date_supplied_to": "End date of the supply period.",
            "total_amount_purchased": "Total quantity of the product purchased from the supplier.",
            "total_value_purchased": "Total monetary value of the product purchased from the supplier."
        },
        "Staff_Department_Assignments": {
            "staff_id": "Unique identifier for the staff member assigned to a department.",
            "department_id": "Unique identifier for the department.",
            "date_assigned_from": "Start date of the staff assignment to the department.",
            "job_title_code": "Code representing the job title of the staff member.",
            "date_assigned_to": "End date of the staff assignment to the department."
        }
    },
    "music_4": {
        "artist": {
            "Artist_ID": "Unique identifier for each artist.",
            "Artist": "Name of the artist.",
            "Age": "Age of the artist.",
            "Famous_Title": "Most recognized song title by the artist.",
            "Famous_Release_date": "Release date of the famous title."
        },
        "volume": {
            "Volume_ID": "Unique identifier for each volume.",
            "Volume_Issue": "Issue number within the volume.",
            "Issue_Date": "Date when the issue was released.",
            "Weeks_on_Top": "Number of weeks the song stayed at the top.",
            "Song": "Identifier for the song.",
            "Artist_ID": "Identifier linking to the artist."
        },
        "music_festival": {
            "ID": "Unique identifier for each music festival.",
            "Music_Festival": "Name of the music festival.",
            "Date_of_ceremony": "Date when the ceremony took place.",
            "Category": "Category of the award or recognition.",
            "Volume": "Volume number associated with the festival.",
            "Result": "Outcome of the festival participation."
        }
    },
    "insurance_fnol": {
        "Customers": {
            "Customer_ID": "Unique identifier for each customer.",
            "Customer_name": "Name of the customer."
        },
        "Services": {
            "Service_ID": "Unique identifier for each service.",
            "Service_name": "Name of the service."
        },
        "Available_Policies": {
            "Policy_ID": "Unique identifier for each insurance policy.",
            "policy_type_code": "Code representing the type of policy.",
            "Customer_Phone": "Contact phone number of the customer."
        },
        "Customers_Policies": {
            "Customer_ID": "Identifier linking to the customer.",
            "Policy_ID": "Identifier linking to the policy.",
            "Date_Opened": "Date when the policy was opened.",
            "Date_Closed": "Date when the policy was closed."
        },
        "First_Notification_of_Loss": {
            "FNOL_ID": "Unique identifier for the first notification of loss.",
            "Customer_ID": "Identifier linking to the customer reporting the loss.",
            "Policy_ID": "Identifier linking to the policy related to the loss.",
            "Service_ID": "Identifier linking to the service associated with the loss."
        },
        "Claims": {
            "Claim_ID": "Unique identifier for each claim.",
            "FNOL_ID": "Identifier linking to the first notification of loss.",
            "Effective_Date": "Date when the claim becomes effective."
        },
        "Settlements": {
            "Settlement_ID": "Unique identifier for each settlement.",
            "Claim_ID": "Identifier linking to the claim being settled.",
            "Effective_Date": "Date when the settlement is effective.",
            "Settlement_Amount": "Amount agreed upon in the settlement."
        }
    },
    "cinema": {
        "film": {
            "Film_ID": "Unique identifier for each film.",
            "Rank_in_series": "Position of the film within its series.",
            "Number_in_season": "Episode number of the film in its season.",
            "Title": "Title of the film.",
            "Directed_by": "Name of the director of the film.",
            "Original_air_date": "Date when the film was originally aired.",
            "Production_code": "Code assigned to the film during production."
        },
        "cinema": {
            "Cinema_ID": "Unique identifier for each cinema.",
            "Name": "Name of the cinema.",
            "Openning_year": "Year when the cinema was opened.",
            "Capacity": "Total seating capacity of the cinema.",
            "Location": "Geographical location of the cinema."
        },
        "schedule": {
            "Cinema_ID": "Identifier linking to the cinema showing the film.",
            "Film_ID": "Identifier linking to the film being shown.",
            "Date": "Date of the scheduled film showing.",
            "Show_times_per_day": "Number of times the film is shown in a day.",
            "Price": "Ticket price for the film showing."
        }
    },
    "decoration_competition": {
        "college": {
            "College_ID": "Unique identifier for each college.",
            "Name": "Name of the college.",
            "Leader_Name": "Name of the leader or head of the college.",
            "College_Location": "Geographical location of the college."
        },
        "member": {
            "Member_ID": "Unique identifier for each member.",
            "Name": "Name of the member.",
            "Country": "Country of residence of the member.",
            "College_ID": "Identifier linking the member to their college."
        },
        "round": {
            "Round_ID": "Unique identifier for each round of competition.",
            "Member_ID": "Identifier linking the round to a specific member.",
            "Decoration_Theme": "Theme of decoration for the round.",
            "Rank_in_Round": "Rank achieved by the member in the round."
        }
    },
    "phone_market": {
        "phone": {
            "Name": "The name of the phone model.",
            "Phone_ID": "A unique identifier for each phone.",
            "Memory_in_G": "The amount of memory in gigabytes.",
            "Carrier": "The mobile carrier associated with the phone.",
            "Price": "The retail price of the phone."
        },
        "market": {
            "Market_ID": "A unique identifier for each market.",
            "District": "The district where the market is located.",
            "Num_of_employees": "The total number of employees in the market.",
            "Num_of_shops": "The total number of shops in the market.",
            "Ranking": "The ranking of the market based on performance."
        },
        "phone_market": {
            "Market_ID": "The identifier for the market where the phone is sold.",
            "Phone_ID": "The identifier for the phone available in the market.",
            "Num_of_stock": "The number of units of the phone in stock."
        }
    },
    "store_product": {
        "product": {
            "product_id": "Unique identifier for each product.",
            "product": "Name or description of the product.",
            "dimensions": "Physical dimensions of the product.",
            "dpi": "Dots per inch resolution of the product.",
            "pages_per_minute_color": "Print speed in pages per minute for color output.",
            "max_page_size": "Maximum size of paper that the product can handle.",
            "interface": "Type of interface used by the product (e.g., USB, wireless)."
        },
        "store": {
            "Store_ID": "Unique identifier for each store.",
            "Store_Name": "Name of the store.",
            "Type": "Type or category of the store.",
            "Area_size": "Size of the store's physical area.",
            "Number_of_product_category": "Count of different product categories available in the store.",
            "Ranking": "Ranking of the store based on performance or sales."
        },
        "district": {
            "District_ID": "Unique identifier for each district.",
            "District_name": "Name of the district.",
            "Headquartered_City": "City where the district's headquarters is located.",
            "City_Population": "Population of the city within the district.",
            "City_Area": "Total area of the city within the district."
        },
        "store_product": {
            "Store_ID": "Identifier for the store that sells the product.",
            "Product_ID": "Identifier for the product available in the store."
        },
        "store_district": {
            "Store_ID": "Identifier for the store associated with a district.",
            "District_ID": "Identifier for the district where the store is located."
        }
    },
    "assets_maintenance": {
        "Third_Party_Companies": {
            "company_id": "Unique identifier for the company.",
            "company_type": "Type of the company (e.g., supplier, contractor).",
            "company_name": "Name of the company.",
            "company_address": "Physical address of the company.",
            "other_company_details": "Additional details about the company."
        },
        "Maintenance_Contracts": {
            "maintenance_contract_id": "Unique identifier for the maintenance contract.",
            "maintenance_contract_company_id": "Identifier for the company associated with the contract.",
            "contract_start_date": "Start date of the maintenance contract.",
            "contract_end_date": "End date of the maintenance contract.",
            "other_contract_details": "Additional details about the maintenance contract."
        },
        "Parts": {
            "part_id": "Unique identifier for the part.",
            "part_name": "Name of the part.",
            "chargeable_yn": "Indicates if the part is chargeable (yes/no).",
            "chargeable_amount": "Cost associated with the chargeable part.",
            "other_part_details": "Additional details about the part."
        },
        "Skills": {
            "skill_id": "Unique identifier for the skill.",
            "skill_code": "Code representing the skill.",
            "skill_description": "Description of the skill."
        },
        "Staff": {
            "staff_id": "Unique identifier for the staff member.",
            "staff_name": "Name of the staff member.",
            "gender": "Gender of the staff member.",
            "other_staff_details": "Additional details about the staff member."
        },
        "Assets": {
            "asset_id": "Unique identifier for the asset.",
            "maintenance_contract_id": "Identifier for the maintenance contract associated with the asset.",
            "supplier_company_id": "Identifier for the supplier company of the asset.",
            "asset_details": "Detailed description of the asset.",
            "asset_make": "Manufacturer of the asset.",
            "asset_model": "Model of the asset.",
            "asset_acquired_date": "Date when the asset was acquired.",
            "asset_disposed_date": "Date when the asset was disposed of.",
            "other_asset_details": "Additional details about the asset."
        },
        "Asset_Parts": {
            "asset_id": "Identifier for the asset associated with the part.",
            "part_id": "Identifier for the part associated with the asset."
        },
        "Maintenance_Engineers": {
            "engineer_id": "Unique identifier for the maintenance engineer.",
            "company_id": "Identifier for the company employing the engineer.",
            "first_name": "First name of the engineer.",
            "last_name": "Last name of the engineer.",
            "other_details": "Additional details about the engineer."
        },
        "Engineer_Skills": {
            "engineer_id": "Identifier for the engineer associated with the skill.",
            "skill_id": "Identifier for the skill associated with the engineer."
        },
        "Fault_Log": {
            "fault_log_entry_id": "Unique identifier for the fault log entry.",
            "asset_id": "Identifier for the asset associated with the fault.",
            "recorded_by_staff_id": "Identifier for the staff member who recorded the fault.",
            "fault_log_entry_datetime": "Date and time when the fault was logged.",
            "fault_description": "Description of the fault.",
            "other_fault_details": "Additional details about the fault."
        },
        "Engineer_Visits": {
            "engineer_visit_id": "Unique identifier for the engineer visit.",
            "contact_staff_id": "Identifier for the staff member contacted for the visit.",
            "engineer_id": "Identifier for the engineer conducting the visit.",
            "fault_log_entry_id": "Identifier for the fault log entry related to the visit.",
            "fault_status": "Current status of the fault during the visit.",
            "visit_start_datetime": "Start date and time of the engineer's visit.",
            "visit_end_datetime": "End date and time of the engineer's visit.",
            "other_visit_details": "Additional details about the visit."
        },
        "Part_Faults": {
            "part_fault_id": "Unique identifier for the part fault.",
            "part_id": "Identifier for the part associated with the fault.",
            "fault_short_name": "Short name for the fault.",
            "fault_description": "Description of the fault related to the part.",
            "other_fault_details": "Additional details about the part fault."
        },
        "Fault_Log_Parts": {
            "fault_log_entry_id": "Identifier for the fault log entry associated with the part.",
            "part_fault_id": "Identifier for the part fault associated with the log entry.",
            "fault_status": "Current status of the fault related to the part."
        },
        "Skills_Required_To_Fix": {
            "part_fault_id": "Identifier for the part fault that requires skills.",
            "skill_id": "Identifier for the skill required to fix the fault."
        }
    },
    "student_assessment": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "line_1": "Primary address line for the location.",
            "line_2": "Secondary address line for additional information.",
            "city": "City where the address is located.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country of the address."
        },
        "People": {
            "person_id": "Unique identifier for each person.",
            "first_name": "First name of the person.",
            "middle_name": "Middle name of the person.",
            "last_name": "Last name of the person.",
            "cell_mobile_number": "Mobile phone number of the person.",
            "email_address": "Email address of the person.",
            "login_name": "Username for the person's login.",
            "password": "Password for the person's account."
        },
        "Students": {
            "student_id": "Unique identifier for each student.",
            "student_details": "Detailed information about the student."
        },
        "Courses": {
            "course_id": "Unique identifier for each course.",
            "course_name": "Name of the course.",
            "course_description": "Description of the course content.",
            "other_details": "Additional information about the course."
        },
        "People_Addresses": {
            "person_address_id": "Unique identifier for the person-address relationship.",
            "person_id": "Identifier for the associated person.",
            "address_id": "Identifier for the associated address.",
            "date_from": "Start date of the address association.",
            "date_to": "End date of the address association."
        },
        "Student_Course_Registrations": {
            "student_id": "Identifier for the registered student.",
            "course_id": "Identifier for the registered course.",
            "registration_date": "Date when the student registered for the course."
        },
        "Student_Course_Attendance": {
            "student_id": "Identifier for the attending student.",
            "course_id": "Identifier for the attended course.",
            "date_of_attendance": "Date when the student attended the course."
        },
        "Candidates": {
            "candidate_id": "Unique identifier for each candidate.",
            "candidate_details": "Detailed information about the candidate."
        },
        "Candidate_Assessments": {
            "candidate_id": "Identifier for the assessed candidate.",
            "qualification": "Qualification of the candidate.",
            "assessment_date": "Date when the assessment took place.",
            "asessment_outcome_code": "Code representing the outcome of the assessment."
        }
    },
    "dog_kennels": {
        "Breeds": {
            "breed_code": "Unique identifier for each breed.",
            "breed_name": "Name of the breed."
        },
        "Charges": {
            "charge_id": "Unique identifier for each charge.",
            "charge_type": "Type of charge (e.g., adoption fee, treatment cost).",
            "charge_amount": "Amount associated with the charge."
        },
        "Sizes": {
            "size_code": "Unique identifier for each size category.",
            "size_description": "Description of the size (e.g., small, medium, large)."
        },
        "Treatment_Types": {
            "treatment_type_code": "Unique identifier for each treatment type.",
            "treatment_type_description": "Description of the treatment type."
        },
        "Owners": {
            "owner_id": "Unique identifier for each owner.",
            "first_name": "Owner's first name.",
            "last_name": "Owner's last name.",
            "street": "Street address of the owner.",
            "city": "City where the owner resides.",
            "state": "State where the owner resides.",
            "zip_code": "Postal code of the owner's address.",
            "email_address": "Owner's email address.",
            "home_phone": "Owner's home phone number.",
            "cell_number": "Owner's cell phone number."
        },
        "Dogs": {
            "dog_id": "Unique identifier for each dog.",
            "owner_id": "Identifier linking the dog to its owner.",
            "abandoned_yn": "Indicates if the dog is abandoned (yes/no).",
            "breed_code": "Identifier for the dog's breed.",
            "size_code": "Identifier for the dog's size category.",
            "name": "Name of the dog.",
            "age": "Age of the dog in years.",
            "date_of_birth": "Dog's date of birth.",
            "gender": "Gender of the dog.",
            "weight": "Weight of the dog in pounds.",
            "date_arrived": "Date the dog arrived at the facility.",
            "date_adopted": "Date the dog was adopted.",
            "date_departed": "Date the dog left the facility."
        },
        "Professionals": {
            "professional_id": "Unique identifier for each professional.",
            "role_code": "Code indicating the professional's role.",
            "first_name": "Professional's first name.",
            "street": "Street address of the professional.",
            "city": "City where the professional resides.",
            "state": "State where the professional resides.",
            "zip_code": "Postal code of the professional's address.",
            "last_name": "Professional's last name.",
            "email_address": "Professional's email address.",
            "home_phone": "Professional's home phone number.",
            "cell_number": "Professional's cell phone number."
        },
        "Treatments": {
            "treatment_id": "Unique identifier for each treatment record.",
            "dog_id": "Identifier linking the treatment to a specific dog.",
            "professional_id": "Identifier linking the treatment to the professional who administered it.",
            "treatment_type_code": "Code indicating the type of treatment given.",
            "date_of_treatment": "Date when the treatment was administered.",
            "cost_of_treatment": "Cost associated with the treatment."
        }
    },
    "music_1": {
        "genre": {
            "g_name": "The name of the music genre.",
            "rating": "The rating of the genre.",
            "most_popular_in": "The region where the genre is most popular."
        },
        "artist": {
            "artist_name": "The name of the music artist.",
            "country": "The country where the artist is from.",
            "gender": "The gender of the artist.",
            "preferred_genre": "The genre that the artist prefers."
        },
        "files": {
            "f_id": "The unique identifier for the file.",
            "artist_name": "The name of the artist associated with the file.",
            "file_size": "The size of the file in bytes.",
            "duration": "The duration of the audio file.",
            "formats": "The formats in which the file is available."
        },
        "song": {
            "song_name": "The title of the song.",
            "artist_name": "The name of the artist who performed the song.",
            "country": "The country where the song is popular.",
            "f_id": "The unique identifier for the file associated with the song.",
            "genre_is": "The genre to which the song belongs.",
            "rating": "The rating of the song.",
            "languages": "The languages in which the song is available.",
            "releasedate": "The date when the song was released.",
            "resolution": "The audio resolution of the song file."
        }
    },
    "company_employee": {
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Age": "Age of the person.",
            "Name": "Full name of the person.",
            "Nationality": "Country of citizenship of the person.",
            "Graduation_College": "Name of the college from which the person graduated."
        },
        "company": {
            "Company_ID": "Unique identifier for each company.",
            "Name": "Name of the company.",
            "Headquarters": "Location of the company's headquarters.",
            "Industry": "Type of industry the company operates in.",
            "Sales_in_Billion": "Total sales revenue of the company in billions.",
            "Profits_in_Billion": "Total profits of the company in billions.",
            "Assets_in_Billion": "Total assets owned by the company in billions.",
            "Market_Value_in_Billion": "Market capitalization of the company in billions."
        },
        "employment": {
            "Company_ID": "Identifier for the company where the person is employed.",
            "People_ID": "Identifier for the person employed at the company.",
            "Year_working": "Number of years the person has been working at the company."
        }
    },
    "farm": {
        "city": {
            "City_ID": "Unique identifier for each city.",
            "Official_Name": "The official name of the city.",
            "Status": "Current status of the city (e.g., active, inactive).",
            "Area_km_2": "Total area of the city in square kilometers.",
            "Population": "Total population residing in the city.",
            "Census_Ranking": "Ranking of the city based on census data."
        },
        "farm": {
            "Farm_ID": "Unique identifier for each farm.",
            "Year": "Year of the recorded data.",
            "Total_Horses": "Total number of horses on the farm.",
            "Working_Horses": "Number of horses used for work on the farm.",
            "Total_Cattle": "Total number of cattle on the farm.",
            "Oxen": "Number of oxen present on the farm.",
            "Bulls": "Number of bulls on the farm.",
            "Cows": "Number of cows on the farm.",
            "Pigs": "Number of pigs on the farm.",
            "Sheep_and_Goats": "Total number of sheep and goats on the farm."
        },
        "farm_competition": {
            "Competition_ID": "Unique identifier for each competition.",
            "Year": "Year in which the competition took place.",
            "Theme": "Theme or focus of the competition.",
            "Host_city_ID": "Identifier for the city hosting the competition.",
            "Hosts": "Names of the hosts for the competition."
        },
        "competition_record": {
            "Competition_ID": "Identifier for the competition being recorded.",
            "Farm_ID": "Identifier for the farm participating in the competition.",
            "Rank": "Rank achieved by the farm in the competition."
        }
    },
    "solvency_ii": {
        "Addresses": {
            "Address_ID": "Unique identifier for each address.",
            "address_details": "Detailed description of the address."
        },
        "Locations": {
            "Location_ID": "Unique identifier for each location.",
            "Other_Details": "Additional information related to the location."
        },
        "Products": {
            "Product_ID": "Unique identifier for each product.",
            "Product_Type_Code": "Code representing the type of product.",
            "Product_Name": "Name of the product.",
            "Product_Price": "Price of the product."
        },
        "Parties": {
            "Party_ID": "Unique identifier for each party.",
            "Party_Details": "Detailed information about the party."
        },
        "Assets": {
            "Asset_ID": "Unique identifier for each asset.",
            "Other_Details": "Additional information related to the asset."
        },
        "Channels": {
            "Channel_ID": "Unique identifier for each channel.",
            "Other_Details": "Additional information related to the channel."
        },
        "Finances": {
            "Finance_ID": "Unique identifier for each finance record.",
            "Other_Details": "Additional financial information."
        },
        "Events": {
            "Event_ID": "Unique identifier for each event.",
            "Address_ID": "Identifier linking to the address of the event.",
            "Channel_ID": "Identifier linking to the channel of the event.",
            "Event_Type_Code": "Code representing the type of event.",
            "Finance_ID": "Identifier linking to the financial details of the event.",
            "Location_ID": "Identifier linking to the location of the event."
        },
        "Products_in_Events": {
            "Product_in_Event_ID": "Unique identifier for each product in an event.",
            "Event_ID": "Identifier linking to the event.",
            "Product_ID": "Identifier linking to the product."
        },
        "Parties_in_Events": {
            "Party_ID": "Identifier linking to the party involved in the event.",
            "Event_ID": "Identifier linking to the event.",
            "Role_Code": "Code representing the role of the party in the event."
        },
        "Agreements": {
            "Document_ID": "Unique identifier for each agreement document.",
            "Event_ID": "Identifier linking to the event associated with the agreement."
        },
        "Assets_in_Events": {
            "Asset_ID": "Identifier linking to the asset involved in the event.",
            "Event_ID": "Identifier linking to the event."
        }
    },
    "city_record": {
        "city": {
            "City_ID": "Unique identifier for each city.",
            "City": "Name of the city.",
            "Hanzi": "Chinese characters representing the city name.",
            "Hanyu_Pinyin": "Romanized spelling of the city name in Mandarin.",
            "Regional_Population": "Population of the region where the city is located.",
            "GDP": "Gross Domestic Product of the city."
        },
        "match": {
            "Match_ID": "Unique identifier for each match.",
            "Date": "Date when the match took place.",
            "Venue": "Identifier for the venue where the match was held.",
            "Score": "Final score of the match.",
            "Result": "Outcome of the match (e.g., win, loss, draw).",
            "Competition": "Identifier for the competition in which the match occurred."
        },
        "temperature": {
            "City_ID": "Unique identifier for the city associated with temperature data.",
            "Jan": "Average temperature in January.",
            "Feb": "Average temperature in February.",
            "Mar": "Average temperature in March.",
            "Apr": "Average temperature in April.",
            "Jun": "Average temperature in June.",
            "Jul": "Average temperature in July.",
            "Aug": "Average temperature in August.",
            "Sep": "Average temperature in September.",
            "Oct": "Average temperature in October.",
            "Nov": "Average temperature in November.",
            "Dec": "Average temperature in December."
        },
        "hosting_city": {
            "Year": "Year in which the match was hosted.",
            "Match_ID": "Unique identifier for the match being hosted.",
            "Host_City": "Name of the city hosting the match."
        }
    },
    "swimming": {
        "swimmer": {
            "ID": "Unique identifier for each swimmer.",
            "name": "Full name of the swimmer.",
            "Nationality": "Country of representation for the swimmer.",
            "meter_100": "Performance time for the 100 meter swim.",
            "meter_200": "Performance time for the 200 meter swim.",
            "meter_300": "Performance time for the 300 meter swim.",
            "meter_400": "Performance time for the 400 meter swim.",
            "meter_500": "Performance time for the 500 meter swim.",
            "meter_600": "Performance time for the 600 meter swim.",
            "meter_700": "Performance time for the 700 meter swim.",
            "Time": "Overall best time recorded by the swimmer."
        },
        "stadium": {
            "ID": "Unique identifier for each stadium.",
            "name": "Name of the stadium.",
            "Capacity": "Maximum number of spectators the stadium can hold.",
            "City": "City where the stadium is located.",
            "Country": "Country where the stadium is located.",
            "Opening_year": "Year the stadium was opened."
        },
        "event": {
            "ID": "Unique identifier for each event.",
            "Name": "Name of the event.",
            "Stadium_ID": "Identifier for the stadium where the event takes place.",
            "Year": "Year in which the event is held."
        },
        "record": {
            "ID": "Unique identifier for each record.",
            "Result": "Result achieved in the event.",
            "Swimmer_ID": "Identifier for the swimmer who achieved the record.",
            "Event_ID": "Identifier for the event in which the record was set."
        }
    },
    "flight_2": {
        "airlines": {
            "uid": "Unique identifier for each airline.",
            "Airline": "Name of the airline.",
            "Abbreviation": "Short form or code representing the airline.",
            "Country": "Country where the airline is based."
        },
        "airports": {
            "City": "Unique identifier for the city where the airport is located.",
            "AirportCode": "Unique code assigned to the airport.",
            "AirportName": "Full name of the airport.",
            "Country": "Unique identifier for the country where the airport is located.",
            "CountryAbbrev": "Abbreviation for the country."
        },
        "flights": {
            "Airline": "Name of the airline operating the flight.",
            "FlightNo": "Unique number assigned to the flight.",
            "SourceAirport": "Code of the airport from which the flight departs.",
            "DestAirport": "Code of the airport where the flight arrives."
        }
    },
    "election": {
        "county": {
            "County_Id": "Unique identifier for each county.",
            "County_name": "Name of the county.",
            "Population": "Total population of the county.",
            "Zip_code": "Postal code associated with the county."
        },
        "party": {
            "Party_ID": "Unique identifier for each political party.",
            "Year": "Year of the election.",
            "Party": "Identifier for the political party.",
            "Governor": "Votes received by the governor candidate.",
            "Lieutenant_Governor": "Votes received by the lieutenant governor candidate.",
            "Comptroller": "Votes received by the comptroller candidate.",
            "Attorney_General": "Votes received by the attorney general candidate.",
            "US_Senate": "Votes received by the US Senate candidate."
        },
        "election": {
            "Election_ID": "Unique identifier for each election.",
            "Counties_Represented": "Counties that participated in the election.",
            "District": "Electoral district for the election.",
            "Delegate": "Delegate representing the election.",
            "Party": "Political party associated with the election.",
            "First_Elected": "Year the delegate was first elected.",
            "Committee": "Committee overseeing the election."
        }
    },
    "manufactory_1": {
        "Manufacturers": {
            "Code": "Unique identifier for each manufacturer.",
            "Name": "Name of the manufacturer company.",
            "Headquarter": "Location of the manufacturer's headquarters.",
            "Founder": "Name of the founder of the manufacturer.",
            "Revenue": "Annual revenue generated by the manufacturer."
        },
        "Products": {
            "Code": "Unique identifier for each product.",
            "Name": "Name of the product.",
            "Price": "Retail price of the product.",
            "Manufacturer": "Identifier for the manufacturer of the product."
        }
    },
    "debate": {
        "people": {
            "People_ID": "Unique identifier for each person.",
            "District": "The district where the person is registered.",
            "Name": "Full name of the person.",
            "Party": "Political party affiliation of the person.",
            "Age": "Age of the person."
        },
        "debate": {
            "Debate_ID": "Unique identifier for each debate event.",
            "Date": "Date when the debate is held.",
            "Venue": "Location where the debate takes place.",
            "Num_of_Audience": "Number of audience members attending the debate."
        },
        "debate_people": {
            "Debate_ID": "Identifier linking to the specific debate.",
            "Affirmative": "Name of the person or team on the affirmative side.",
            "Negative": "Name of the person or team on the negative side.",
            "If_Affirmative_Win": "Indicates if the affirmative side won the debate."
        }
    },
    "network_2": {
        "Person": {
            "name": "The full name of the person.",
            "age": "The age of the person in years.",
            "city": "The city where the person resides.",
            "gender": "The gender of the person.",
            "job": "The occupation or job title of the person."
        },
        "PersonFriend": {
            "name": "The name of the person who has friends.",
            "friend": "The name of the person's friend.",
            "year": "The year when the friendship was established."
        }
    },
    "local_govt_in_alabama": {
        "Services": {
            "Service_ID": "Unique identifier for each service.",
            "Service_Type_Code": "Code representing the type of service."
        },
        "Participants": {
            "Participant_ID": "Unique identifier for each participant.",
            "Participant_Type_Code": "Code representing the type of participant.",
            "Participant_Details": "Details or attributes related to the participant."
        },
        "Events": {
            "Event_ID": "Unique identifier for each event.",
            "Service_ID": "Identifier linking the event to a specific service.",
            "Event_Details": "Description or details about the event."
        },
        "Participants_in_Events": {
            "Event_ID": "Identifier for the event in which participants are involved.",
            "Participant_ID": "Identifier for the participant attending the event."
        }
    },
    "climbing": {
        "mountain": {
            "Mountain_ID": "Unique identifier for each mountain.",
            "Name": "The name of the mountain.",
            "Height": "The height of the mountain in meters.",
            "Prominence": "The prominence of the mountain in meters.",
            "Range": "The mountain range to which the mountain belongs.",
            "Country": "The country where the mountain is located."
        },
        "climber": {
            "Climber_ID": "Unique identifier for each climber.",
            "Name": "The name of the climber.",
            "Country": "The country of origin of the climber.",
            "Time": "The time taken by the climber to reach the summit in hours.",
            "Points": "The points awarded to the climber based on their achievements.",
            "Mountain_ID": "Identifier linking the climber to the mountain they climbed."
        }
    },
    "e_learning": {
        "Course_Authors_and_Tutors": {
            "author_id": "Unique identifier for each author or tutor.",
            "author_tutor_ATB": "Indicates if the individual is an author or a tutor.",
            "login_name": "Username used for logging into the system.",
            "password": "Password associated with the login name.",
            "personal_name": "First name of the author or tutor.",
            "middle_name": "Middle name of the author or tutor.",
            "family_name": "Last name of the author or tutor.",
            "gender_mf": "Gender of the author or tutor, indicated as male or female.",
            "address_line_1": "Primary address line for the author or tutor."
        },
        "Students": {
            "student_id": "Unique identifier for each student.",
            "date_of_registration": "Date when the student registered.",
            "date_of_latest_logon": "Most recent date the student logged into the system.",
            "login_name": "Username used for student login.",
            "password": "Password associated with the student's login name.",
            "personal_name": "First name of the student.",
            "middle_name": "Middle name of the student.",
            "family_name": "Last name of the student."
        },
        "Subjects": {
            "subject_id": "Unique identifier for each subject.",
            "subject_name": "Name of the subject."
        },
        "Courses": {
            "course_id": "Unique identifier for each course.",
            "author_id": "Identifier for the author of the course.",
            "subject_id": "Identifier for the subject associated with the course.",
            "course_name": "Name of the course.",
            "course_description": "Detailed description of the course content."
        },
        "Student_Course_Enrolment": {
            "registration_id": "Unique identifier for each course registration.",
            "student_id": "Identifier for the student enrolled in the course.",
            "course_id": "Identifier for the course in which the student is enrolled.",
            "date_of_enrolment": "Date when the student enrolled in the course.",
            "date_of_completion": "Date when the student completed the course."
        },
        "Student_Tests_Taken": {
            "registration_id": "Unique identifier for the test registration.",
            "date_test_taken": "Date when the test was taken by the student.",
            "test_result": "Result of the test taken by the student."
        }
    },
    "scientist_1": {
        "Scientists": {
            "SSN": "Unique social security number assigned to each scientist.",
            "Name": "Full name of the scientist."
        },
        "Projects": {
            "Code": "Unique numerical identifier for each project.",
            "Name": "Name or title of the project.",
            "Hours": "Total hours allocated for the project."
        },
        "AssignedTo": {
            "Scientist": "SSN of the scientist assigned to the project.",
            "Project": "Code of the project the scientist is assigned to."
        }
    },
    "ship_1": {
        "captain": {
            "Captain_ID": "Unique identifier for each captain.",
            "Name": "Full name of the captain.",
            "Ship_ID": "Identifier for the ship the captain commands.",
            "age": "Age of the captain.",
            "Class": "Class designation of the captain.",
            "Rank": "Rank of the captain within the fleet."
        },
        "Ship": {
            "Ship_ID": "Unique identifier for each ship.",
            "Name": "Name of the ship.",
            "Type": "Type or category of the ship.",
            "Built_Year": "Year the ship was constructed.",
            "Class": "Class designation of the ship.",
            "Flag": "Country flag under which the ship is registered."
        }
    },
    "entertainment_awards": {
        "festival_detail": {
            "Festival_ID": "Unique identifier for each festival.",
            "Festival_Name": "Name of the festival.",
            "Chair_Name": "Name of the chairperson overseeing the festival.",
            "Location": "Geographical location where the festival is held.",
            "Year": "Year in which the festival takes place.",
            "Num_of_Audience": "Estimated number of attendees at the festival."
        },
        "artwork": {
            "Artwork_ID": "Unique identifier for each artwork.",
            "Type": "Numerical code representing the type of artwork.",
            "Name": "Name or title of the artwork."
        },
        "nomination": {
            "Artwork_ID": "Identifier linking to the nominated artwork.",
            "Festival_ID": "Identifier linking to the festival where the nomination is made.",
            "Result": "Outcome of the nomination (e.g., winner, nominee)."
        }
    },
    "allergy_1": {
        "Allergy_Type": {
            "Allergy": "The name of the allergy.",
            "AllergyType": "The type or category of the allergy."
        },
        "Has_Allergy": {
            "StuID": "The unique identifier for a student.",
            "Allergy": "The name of the allergy that the student has."
        },
        "Student": {
            "StuID": "The unique identifier for each student.",
            "LName": "The last name of the student.",
            "Fname": "The first name of the student.",
            "Age": "The age of the student.",
            "Sex": "The gender of the student.",
            "Major": "The academic major of the student.",
            "Advisor": "The name of the student's academic advisor.",
            "city_code": "The code representing the city where the student resides."
        }
    },
    "imdb": {
        "actor": {
            "aid": "Unique identifier for each actor.",
            "gender": "Gender of the actor.",
            "name": "Full name of the actor.",
            "nationality": "Nationality of the actor.",
            "birth_city": "City where the actor was born.",
            "birth_year": "Year when the actor was born."
        },
        "copyright": {
            "id": "Unique identifier for each copyright record.",
            "msid": "Media source identifier associated with the copyright.",
            "cid": "Copyright identifier."
        },
        "cast": {
            "id": "Unique identifier for each cast record.",
            "msid": "Media source identifier for the cast.",
            "aid": "Actor identifier for the cast member.",
            "role": "Role played by the actor in the media."
        },
        "genre": {
            "gid": "Unique identifier for each genre.",
            "genre": "Name of the genre."
        },
        "classification": {
            "id": "Unique identifier for each classification record.",
            "msid": "Media source identifier for the classification.",
            "gid": "Genre identifier associated with the classification."
        },
        "company": {
            "id": "Unique identifier for each company.",
            "name": "Name of the company.",
            "country_code": "Country code where the company is based."
        },
        "director": {
            "did": "Unique identifier for each director.",
            "gender": "Gender of the director.",
            "name": "Full name of the director.",
            "nationality": "Nationality of the director.",
            "birth_city": "City where the director was born.",
            "birth_year": "Year when the director was born."
        },
        "producer": {
            "pid": "Unique identifier for each producer.",
            "gender": "Gender of the producer.",
            "name": "Full name of the producer.",
            "nationality": "Nationality of the producer.",
            "birth_city": "City where the producer was born.",
            "birth_year": "Year when the producer was born."
        },
        "directed_by": {
            "id": "Unique identifier for each directed_by record.",
            "msid": "Media source identifier for the directed media.",
            "did": "Director identifier for the media."
        },
        "keyword": {
            "id": "Unique identifier for each keyword.",
            "keyword": "Text of the keyword."
        },
        "made_by": {
            "id": "Unique identifier for each made_by record.",
            "msid": "Media source identifier for the media.",
            "pid": "Producer identifier associated with the media."
        },
        "movie": {
            "mid": "Unique identifier for each movie.",
            "title": "Title of the movie.",
            "release_year": "Year when the movie was released.",
            "title_aka": "Alternative title of the movie.",
            "budget": "Budget allocated for the movie."
        },
        "tags": {
            "id": "Unique identifier for each tag.",
            "msid": "Media source identifier for the tagged media.",
            "kid": "Keyword identifier associated with the tag."
        },
        "tv_series": {
            "sid": "Unique identifier for each TV series.",
            "title": "Title of the TV series.",
            "release_year": "Year when the TV series was released.",
            "num_of_seasons": "Total number of seasons in the TV series.",
            "num_of_episodes": "Total number of episodes in the TV series.",
            "title_aka": "Alternative title of the TV series.",
            "budget": "Budget allocated for the TV series."
        },
        "writer": {
            "wid": "Unique identifier for each writer.",
            "gender": "Gender of the writer.",
            "name": "Full name of the writer.",
            "nationality": "Nationality of the writer.",
            "num_of_episodes": "Number of episodes written by the writer.",
            "birth_city": "City where the writer was born.",
            "birth_year": "Year when the writer was born."
        },
        "written_by": {
            "id": "Unique identifier for each written_by record.",
            "msid": "Media source identifier for the written media.",
            "wid": "Writer identifier associated with the media."
        }
    },
    "products_for_hire": {
        "Discount_Coupons": {
            "coupon_id": "Unique identifier for each discount coupon.",
            "date_issued": "Date when the coupon was issued.",
            "coupon_amount": "Monetary value of the discount coupon."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "coupon_id": "Identifier for the coupon associated with the customer.",
            "good_or_bad_customer": "Indicator of customer reliability.",
            "first_name": "Customer's first name.",
            "last_name": "Customer's last name.",
            "gender_mf": "Gender of the customer (male/female).",
            "date_became_customer": "Date when the customer registered.",
            "date_last_hire": "Date of the customer's last hire."
        },
        "Bookings": {
            "booking_id": "Unique identifier for each booking.",
            "customer_id": "Identifier for the customer making the booking.",
            "booking_status_code": "Current status of the booking.",
            "returned_damaged_yn": "Indicator if the item was returned damaged.",
            "booking_start_date": "Start date of the booking period.",
            "booking_end_date": "End date of the booking period.",
            "count_hired": "Number of items hired in the booking.",
            "amount_payable": "Total amount due for the booking.",
            "amount_of_discount": "Total discount applied to the booking.",
            "amount_outstanding": "Remaining amount to be paid.",
            "amount_of_refund": "Total refund amount processed."
        },
        "Products_for_Hire": {
            "product_id": "Unique identifier for each product available for hire.",
            "product_type_code": "Code representing the type of product.",
            "daily_hire_cost": "Cost of hiring the product per day.",
            "product_name": "Name of the product available for hire.",
            "product_description": "Detailed description of the product."
        },
        "Payments": {
            "payment_id": "Unique identifier for each payment transaction.",
            "booking_id": "Identifier for the booking associated with the payment.",
            "customer_id": "Identifier for the customer making the payment.",
            "payment_type_code": "Code representing the type of payment.",
            "amount_paid_in_full_yn": "Indicator if the payment was made in full.",
            "payment_date": "Date when the payment was made.",
            "amount_due": "Total amount due for payment.",
            "amount_paid": "Total amount that has been paid."
        },
        "Products_Booked": {
            "booking_id": "Identifier for the booking associated with the products.",
            "product_id": "Identifier for the product that has been booked.",
            "returned_yn": "Indicator if the product has been returned.",
            "returned_late_yn": "Indicator if the product was returned late.",
            "booked_count": "Number of units of the product booked.",
            "booked_amount": "Total amount for the booked products."
        },
        "View_Product_Availability": {
            "product_id": "Unique identifier for the product being checked.",
            "booking_id": "Identifier for the booking associated with the product.",
            "status_date": "Date when the availability status was recorded.",
            "available_yn": "Indicator if the product is currently available."
        }
    },
    "candidate_poll": {
        "candidate": {
            "Candidate_ID": "Unique identifier for each candidate.",
            "People_ID": "Identifier linking to the person's details.",
            "Poll_Source": "Source of the poll data.",
            "Date": "Date when the poll was conducted.",
            "Support_rate": "Percentage of respondents supporting the candidate.",
            "Consider_rate": "Percentage of respondents considering the candidate.",
            "Oppose_rate": "Percentage of respondents opposing the candidate.",
            "Unsure_rate": "Percentage of respondents who are unsure about the candidate."
        },
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Sex": "Gender of the person (e.g., male, female).",
            "Name": "Full name of the person.",
            "Date_of_Birth": "Birth date of the person.",
            "Height": "Height of the person in centimeters.",
            "Weight": "Weight of the person in kilograms."
        }
    },
    "chinook_1": {
        "Album": {
            "AlbumId": "Unique identifier for each album.",
            "Title": "Title of the album.",
            "ArtistId": "Identifier for the artist of the album."
        },
        "Artist": {
            "ArtistId": "Unique identifier for each artist.",
            "Name": "Name of the artist."
        },
        "Customer": {
            "CustomerId": "Unique identifier for each customer.",
            "FirstName": "First name of the customer.",
            "LastName": "Last name of the customer.",
            "Company": "Company name of the customer, if applicable.",
            "Address": "Street address of the customer.",
            "City": "City where the customer resides.",
            "State": "State where the customer resides.",
            "Country": "Country where the customer resides.",
            "PostalCode": "Postal code of the customer's address.",
            "Phone": "Contact phone number of the customer.",
            "Fax": "Fax number of the customer, if applicable.",
            "Email": "Email address of the customer.",
            "SupportRepId": "Identifier for the support representative assigned to the customer."
        },
        "Employee": {
            "EmployeeId": "Unique identifier for each employee.",
            "LastName": "Last name of the employee.",
            "FirstName": "First name of the employee.",
            "Title": "Job title of the employee.",
            "ReportsTo": "Identifier for the employee's manager.",
            "BirthDate": "Birth date of the employee.",
            "HireDate": "Date when the employee was hired.",
            "Address": "Street address of the employee.",
            "City": "City where the employee resides.",
            "State": "State where the employee resides.",
            "Country": "Country where the employee resides.",
            "PostalCode": "Postal code of the employee's address.",
            "Phone": "Contact phone number of the employee.",
            "Fax": "Fax number of the employee, if applicable.",
            "Email": "Email address of the employee."
        },
        "Genre": {
            "GenreId": "Unique identifier for each genre.",
            "Name": "Name of the genre."
        },
        "Invoice": {
            "InvoiceId": "Unique identifier for each invoice.",
            "CustomerId": "Identifier for the customer associated with the invoice.",
            "InvoiceDate": "Date when the invoice was issued.",
            "BillingAddress": "Billing address for the invoice.",
            "BillingCity": "City for the billing address.",
            "BillingState": "State for the billing address.",
            "BillingCountry": "Country for the billing address.",
            "BillingPostalCode": "Postal code for the billing address.",
            "Total": "Total amount of the invoice."
        },
        "InvoiceLine": {
            "InvoiceLineId": "Unique identifier for each line item in an invoice.",
            "InvoiceId": "Identifier for the invoice that this line item belongs to.",
            "TrackId": "Identifier for the track associated with this line item.",
            "UnitPrice": "Price per unit of the track.",
            "Quantity": "Number of units of the track purchased."
        },
        "MediaType": {
            "MediaTypeId": "Unique identifier for each media type.",
            "Name": "Name of the media type."
        },
        "Playlist": {
            "PlaylistId": "Unique identifier for each playlist.",
            "Name": "Name of the playlist."
        },
        "PlaylistTrack": {
            "PlaylistId": "Identifier for the playlist that this track belongs to.",
            "TrackId": "Identifier for the track in the playlist."
        },
        "Track": {
            "TrackId": "Unique identifier for each track.",
            "Name": "Name of the track.",
            "AlbumId": "Identifier for the album that this track belongs to.",
            "MediaTypeId": "Identifier for the media type of the track.",
            "GenreId": "Identifier for the genre of the track.",
            "Composer": "Composer of the track.",
            "Milliseconds": "Duration of the track in milliseconds.",
            "Bytes": "File size of the track in bytes.",
            "UnitPrice": "Price of the track."
        }
    },
    "flight_4": {
        "routes": {
            "rid": "Unique identifier for the route.",
            "dst_apid": "Destination airport ID.",
            "dst_ap": "Destination airport name.",
            "src_apid": "Source airport ID.",
            "src_ap": "Source airport name.",
            "alid": "Airline ID associated with the route.",
            "airline": "Name of the airline operating the route.",
            "codeshare": "Indicates if the route is a codeshare."
        },
        "airports": {
            "apid": "Unique identifier for the airport.",
            "name": "Name of the airport.",
            "city": "City where the airport is located.",
            "country": "Country where the airport is located.",
            "x": "X coordinate of the airport's location.",
            "y": "Y coordinate of the airport's location.",
            "elevation": "Elevation of the airport in feet.",
            "iata": "IATA code for the airport.",
            "icao": "ICAO code for the airport."
        },
        "airlines": {
            "alid": "Unique identifier for the airline.",
            "name": "Name of the airline.",
            "iata": "IATA code for the airline.",
            "icao": "ICAO code for the airline.",
            "callsign": "Radio callsign used by the airline.",
            "country": "Country where the airline is based.",
            "active": "Indicates if the airline is currently active."
        }
    },
    "pets_1": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study for the student.",
            "Advisor": "Name of the student's academic advisor.",
            "city_code": "Code representing the city where the student resides."
        },
        "Has_Pet": {
            "StuID": "Identifier linking to the student who owns the pet.",
            "PetID": "Identifier for the pet owned by the student."
        },
        "Pets": {
            "PetID": "Unique identifier for each pet.",
            "PetType": "Type of pet (e.g., dog, cat).",
            "pet_age": "Age of the pet.",
            "weight": "Weight of the pet."
        }
    },
    "dorm_1": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study for the student.",
            "Advisor": "Name of the student's academic advisor.",
            "city_code": "Code representing the city of the student's residence."
        },
        "Dorm": {
            "dormid": "Unique identifier for each dormitory.",
            "dorm_name": "Name of the dormitory.",
            "student_capacity": "Maximum number of students that can reside in the dorm.",
            "gender": "Gender designation for the dormitory."
        },
        "Dorm_amenity": {
            "amenid": "Unique identifier for each amenity.",
            "amenity_name": "Name of the amenity available in the dorm."
        },
        "Has_amenity": {
            "dormid": "Identifier for the dormitory that has the amenity.",
            "amenid": "Identifier for the amenity available in the dorm."
        },
        "Lives_in": {
            "stuid": "Identifier for the student living in the dorm.",
            "dormid": "Identifier for the dormitory where the student resides.",
            "room_number": "Room number assigned to the student in the dorm."
        }
    },
    "journal_committee": {
        "journal": {
            "Journal_ID": "Unique identifier for each journal entry.",
            "Date": "Date when the journal entry was created.",
            "Theme": "Main topic or theme of the journal entry.",
            "Sales": "Sales figures related to the journal entry."
        },
        "editor": {
            "Editor_ID": "Unique identifier for each editor.",
            "Name": "Name of the editor.",
            "Age": "Age of the editor."
        },
        "journal_committee": {
            "Editor_ID": "Identifier linking to the editor involved in the committee.",
            "Journal_ID": "Identifier linking to the journal associated with the committee.",
            "Work_Type": "Type of work or contribution made by the committee."
        }
    },
    "flight_1": {
        "flight": {
            "flno": "The flight number identifying the specific flight.",
            "origin": "The starting location of the flight.",
            "destination": "The ending location of the flight.",
            "distance": "The total distance of the flight in miles or kilometers.",
            "departure_date": "The scheduled date and time of flight departure.",
            "arrival_date": "The scheduled date and time of flight arrival.",
            "price": "The cost of a ticket for the flight.",
            "aid": "The aircraft ID associated with the flight."
        },
        "aircraft": {
            "aid": "The unique identifier for each aircraft.",
            "name": "The name or model of the aircraft.",
            "distance": "The maximum distance the aircraft can travel."
        },
        "employee": {
            "eid": "The unique identifier for each employee.",
            "name": "The full name of the employee.",
            "salary": "The annual salary of the employee."
        },
        "certificate": {
            "eid": "The employee ID of the individual holding the certificate.",
            "aid": "The aircraft ID related to the certification."
        }
    },
    "medicine_enzyme_interaction": {
        "medicine": {
            "id": "Unique identifier for each medicine.",
            "name": "Name of the medicine.",
            "Trade_Name": "Commercial name under which the medicine is sold.",
            "FDA_approved": "Indicates whether the medicine is approved by the FDA."
        },
        "enzyme": {
            "id": "Unique identifier for each enzyme.",
            "name": "Name of the enzyme.",
            "Location": "Geographical location of the enzyme's activity.",
            "Product": "Product produced by the enzyme.",
            "Chromosome": "Chromosome location of the enzyme gene.",
            "OMIM": "Online Mendelian Inheritance in Man identifier for the enzyme.",
            "Porphyria": "Indicates association with porphyria disorders."
        },
        "medicine_enzyme_interaction": {
            "enzyme_id": "Identifier for the enzyme involved in the interaction.",
            "medicine_id": "Identifier for the medicine involved in the interaction.",
            "interaction_type": "Type of interaction between the medicine and enzyme."
        }
    },
    "local_govt_and_lot": {
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "customer_details": "Detailed information about the customer."
        },
        "Properties": {
            "property_id": "Unique identifier for each property.",
            "property_type_code": "Code representing the type of property.",
            "property_address": "Address of the property.",
            "other_details": "Additional information about the property."
        },
        "Residents": {
            "resident_id": "Unique identifier for each resident.",
            "property_id": "Identifier for the property where the resident lives.",
            "date_moved_in": "Date when the resident moved into the property.",
            "date_moved_out": "Date when the resident moved out of the property.",
            "other_details": "Additional information about the resident."
        },
        "Organizations": {
            "organization_id": "Unique identifier for each organization.",
            "parent_organization_id": "Identifier for the parent organization, if applicable.",
            "organization_details": "Detailed information about the organization."
        },
        "Services": {
            "service_id": "Unique identifier for each service offered.",
            "organization_id": "Identifier for the organization providing the service.",
            "service_type_code": "Code representing the type of service.",
            "service_details": "Detailed information about the service."
        },
        "Residents_Services": {
            "resident_id": "Unique identifier for each resident receiving services.",
            "service_id": "Identifier for the service being provided.",
            "date_moved_in": "Date when the resident started receiving the service.",
            "property_id": "Identifier for the property associated with the service.",
            "date_requested": "Date when the service was requested.",
            "date_provided": "Date when the service was provided.",
            "other_details": "Additional information about the service provided."
        },
        "Things": {
            "thing_id": "Unique identifier for each item or thing.",
            "organization_id": "Identifier for the organization associated with the thing.",
            "Type_of_Thing_Code": "Code representing the type of thing.",
            "service_type_code": "Code representing the type of service related to the thing.",
            "service_details": "Detailed information about the service associated with the thing."
        },
        "Customer_Events": {
            "Customer_Event_ID": "Unique identifier for each customer event.",
            "customer_id": "Identifier for the customer associated with the event.",
            "date_moved_in": "Date when the customer moved into the property related to the event.",
            "property_id": "Identifier for the property associated with the event.",
            "resident_id": "Identifier for the resident involved in the event.",
            "thing_id": "Identifier for the thing associated with the event."
        },
        "Customer_Event_Notes": {
            "Customer_Event_Note_ID": "Unique identifier for each note related to a customer event.",
            "Customer_Event_ID": "Identifier for the customer event associated with the note.",
            "service_type_code": "Code representing the type of service related to the event note.",
            "resident_id": "Identifier for the resident associated with the event note.",
            "property_id": "Identifier for the property associated with the event note.",
            "date_moved_in": "Date when the resident moved in, relevant to the event note."
        },
        "Timed_Status_of_Things": {
            "thing_id": "Identifier for the thing whose status is being tracked.",
            "Date_and_Date": "Date and time when the status was recorded.",
            "Status_of_Thing_Code": "Code representing the current status of the thing."
        },
        "Timed_Locations_of_Things": {
            "thing_id": "Identifier for the thing whose location is being tracked.",
            "Date_and_Time": "Date and time when the location was recorded.",
            "Location_Code": "Code representing the location of the thing."
        }
    },
    "station_weather": {
        "train": {
            "id": "Unique identifier for each train.",
            "train_number": "The official number assigned to the train.",
            "name": "The name or title of the train.",
            "origin": "The starting station of the train.",
            "destination": "The final station where the train arrives.",
            "time": "The scheduled time for the train's journey.",
            "interval": "The frequency of the train's service."
        },
        "station": {
            "id": "Unique identifier for each station.",
            "network_name": "The name of the transport network the station belongs to.",
            "services": "The number of services available at the station.",
            "local_authority": "The local government authority responsible for the station."
        },
        "route": {
            "train_id": "Identifier linking to the specific train.",
            "station_id": "Identifier linking to the specific station."
        },
        "weekly_weather": {
            "station_id": "Identifier linking to the specific weather station.",
            "day_of_week": "The day of the week for the weather data.",
            "high_temperature": "The highest temperature recorded for the day.",
            "low_temperature": "The lowest temperature recorded for the day.",
            "precipitation": "The amount of precipitation recorded for the day.",
            "wind_speed_mph": "The wind speed measured in miles per hour."
        }
    },
    "shop_membership": {
        "member": {
            "Member_ID": "Unique identifier for each member.",
            "Card_Number": "The membership card number assigned to the member.",
            "Name": "Full name of the member.",
            "Hometown": "The hometown of the member.",
            "Level": "The membership level of the member."
        },
        "branch": {
            "Branch_ID": "Unique identifier for each branch.",
            "Name": "The name of the branch.",
            "Open_year": "The year the branch was opened.",
            "Address_road": "The street address of the branch.",
            "City": "The city where the branch is located.",
            "membership_amount": "The total number of memberships at the branch."
        },
        "membership_register_branch": {
            "Member_ID": "Identifier for the member who registered.",
            "Branch_ID": "Identifier for the branch where the member registered.",
            "Register_Year": "The year the member registered at the branch."
        },
        "purchase": {
            "Member_ID": "Identifier for the member making the purchase.",
            "Branch_ID": "Identifier for the branch where the purchase was made.",
            "Year": "The year the purchase occurred.",
            "Total_pounds": "The total amount spent in pounds during the purchase."
        }
    },
    "driving_school": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "line_1_number_building": "Primary address line including building number.",
            "city": "City where the address is located.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country of the address."
        },
        "Staff": {
            "staff_id": "Unique identifier for each staff member.",
            "staff_address_id": "Identifier linking to the staff's address.",
            "nickname": "Nickname of the staff member.",
            "first_name": "First name of the staff member.",
            "middle_name": "Middle name of the staff member.",
            "last_name": "Last name of the staff member.",
            "date_of_birth": "Birth date of the staff member.",
            "date_joined_staff": "Date when the staff member joined.",
            "date_left_staff": "Date when the staff member left."
        },
        "Vehicles": {
            "vehicle_id": "Unique identifier for each vehicle.",
            "vehicle_details": "Detailed information about the vehicle."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "customer_address_id": "Identifier linking to the customer's address.",
            "customer_status_code": "Current status of the customer.",
            "date_became_customer": "Date when the individual became a customer.",
            "date_of_birth": "Birth date of the customer.",
            "first_name": "First name of the customer.",
            "last_name": "Last name of the customer.",
            "amount_outstanding": "Total amount owed by the customer.",
            "email_address": "Email address of the customer.",
            "phone_number": "Primary phone number of the customer.",
            "cell_mobile_phone_number": "Mobile phone number of the customer."
        },
        "Customer_Payments": {
            "customer_id": "Identifier for the customer making the payment.",
            "datetime_payment": "Date and time when the payment was made.",
            "payment_method_code": "Code indicating the method of payment.",
            "amount_payment": "Amount of money paid by the customer."
        },
        "Lessons": {
            "lesson_id": "Unique identifier for each lesson.",
            "customer_id": "Identifier for the customer attending the lesson.",
            "lesson_status_code": "Current status of the lesson.",
            "staff_id": "Identifier for the staff member conducting the lesson.",
            "vehicle_id": "Identifier for the vehicle used in the lesson.",
            "lesson_date": "Date when the lesson is scheduled.",
            "lesson_time": "Time when the lesson is scheduled.",
            "price": "Cost of the lesson."
        }
    },
    "concert_singer": {
        "stadium": {
            "Stadium_ID": "Unique identifier for each stadium.",
            "Location": "Geographical location of the stadium.",
            "Name": "Name of the stadium.",
            "Capacity": "Maximum number of spectators the stadium can hold.",
            "Highest": "Highest recorded attendance at the stadium.",
            "Lowest": "Lowest recorded attendance at the stadium.",
            "Average": "Average attendance at the stadium."
        },
        "singer": {
            "Singer_ID": "Unique identifier for each singer.",
            "Name": "Name of the singer.",
            "Country": "Country of origin of the singer.",
            "Song_Name": "Title of the song performed by the singer.",
            "Song_release_year": "Year the song was released.",
            "Age": "Current age of the singer.",
            "Is_male": "Indicator of whether the singer is male (1 for yes, 0 for no)."
        },
        "concert": {
            "concert_ID": "Unique identifier for each concert.",
            "concert_Name": "Name of the concert event.",
            "Theme": "Theme or concept of the concert.",
            "Stadium_ID": "Identifier for the stadium where the concert is held.",
            "Year": "Year the concert takes place."
        },
        "singer_in_concert": {
            "concert_ID": "Identifier for the concert in which the singer performs.",
            "Singer_ID": "Identifier for the singer performing at the concert."
        }
    },
    "music_2": {
        "Songs": {
            "SongId": "Unique identifier for each song.",
            "Title": "Title of the song."
        },
        "Albums": {
            "AId": "Unique identifier for each album.",
            "Title": "Title of the album.",
            "Year": "Year the album was released.",
            "Label": "Record label associated with the album.",
            "Type": "Type or genre of the album."
        },
        "Band": {
            "Id": "Unique identifier for each band member.",
            "Firstname": "First name of the band member.",
            "Lastname": "Last name of the band member."
        },
        "Instruments": {
            "SongId": "Identifier for the song associated with the instrument.",
            "BandmateId": "Identifier for the band member playing the instrument.",
            "Instrument": "Type of instrument played."
        },
        "Performance": {
            "SongId": "Identifier for the song being performed.",
            "Bandmate": "Name of the band member performing.",
            "StagePosition": "Position of the band member on stage."
        },
        "Tracklists": {
            "AlbumId": "Identifier for the album containing the track.",
            "Position": "Position of the song in the album tracklist.",
            "SongId": "Identifier for the song in the tracklist."
        },
        "Vocals": {
            "SongId": "Identifier for the song featuring vocals.",
            "Bandmate": "Name of the band member providing vocals.",
            "Type": "Type of vocals (e.g., lead, backing)."
        }
    },
    "sports_competition": {
        "club": {
            "Club_ID": "Unique identifier for each club.",
            "name": "Name of the club.",
            "Region": "Geographical region where the club is located.",
            "Start_year": "Year the club was established."
        },
        "club_rank": {
            "Rank": "Ranking position of the club.",
            "Club_ID": "Identifier for the club associated with the rank.",
            "Gold": "Number of gold medals won by the club.",
            "Silver": "Number of silver medals won by the club.",
            "Bronze": "Number of bronze medals won by the club.",
            "Total": "Total number of medals won by the club."
        },
        "player": {
            "Player_ID": "Unique identifier for each player.",
            "name": "Name of the player.",
            "Position": "Playing position of the player.",
            "Club_ID": "Identifier for the club the player belongs to.",
            "Apps": "Number of appearances made by the player.",
            "Tries": "Number of tries scored by the player.",
            "Goals": "Number of goals scored by the player.",
            "Points": "Total points scored by the player."
        },
        "competition": {
            "Competition_ID": "Unique identifier for each competition.",
            "Year": "Year in which the competition took place.",
            "Competition_type": "Type of the competition (e.g., league, tournament).",
            "Country": "Country where the competition was held."
        },
        "competition_result": {
            "Competition_ID": "Identifier for the competition associated with the result.",
            "Club_ID_1": "Identifier for the first club in the competition result.",
            "Club_ID_2": "Identifier for the second club in the competition result.",
            "Score": "Final score of the match between the two clubs."
        }
    },
    "railway": {
        "railway": {
            "Railway_ID": "Unique identifier for each railway.",
            "Railway": "Name of the railway.",
            "Builder": "Name of the company or individual that built the railway.",
            "Built": "Year the railway was constructed.",
            "Wheels": "Number of wheels on the railway vehicles.",
            "Location": "Geographical location of the railway.",
            "ObjectNumber": "Unique object number for tracking purposes."
        },
        "train": {
            "Train_ID": "Unique identifier for each train.",
            "Train_Num": "Train number used for identification.",
            "Name": "Name of the train.",
            "From": "Departure station or location.",
            "Arrival": "Arrival station or location.",
            "Railway_ID": "Identifier linking the train to its railway."
        },
        "manager": {
            "Manager_ID": "Unique identifier for each manager.",
            "Name": "Name of the manager.",
            "Country": "Country where the manager is based.",
            "Working_year_starts": "Year the manager started working.",
            "Age": "Age of the manager.",
            "Level": "Management level of the manager."
        },
        "railway_manage": {
            "Railway_ID": "Identifier linking to the railway managed.",
            "Manager_ID": "Identifier linking to the manager in charge.",
            "From_Year": "Year the manager started overseeing the railway."
        }
    },
    "inn_1": {
        "Rooms": {
            "RoomId": "Unique identifier for each room.",
            "roomName": "Name of the room.",
            "beds": "Number of beds in the room.",
            "bedType": "Type of beds available in the room.",
            "maxOccupancy": "Maximum number of occupants allowed in the room.",
            "basePrice": "Base price per night for the room.",
            "decor": "Description of the room's decor."
        },
        "Reservations": {
            "Code": "Unique reservation code.",
            "Room": "Identifier for the reserved room.",
            "CheckIn": "Check-in date for the reservation.",
            "CheckOut": "Check-out date for the reservation.",
            "Rate": "Rate charged for the reservation.",
            "LastName": "Last name of the guest making the reservation.",
            "FirstName": "First name of the guest making the reservation.",
            "Adults": "Number of adults in the reservation.",
            "Kids": "Number of kids in the reservation."
        }
    },
    "museum_visit": {
        "museum": {
            "Museum_ID": "Unique identifier for each museum.",
            "Name": "Name of the museum.",
            "Num_of_Staff": "Total number of staff employed at the museum.",
            "Open_Year": "Year the museum was established."
        },
        "visitor": {
            "ID": "Unique identifier for each visitor.",
            "Name": "Name of the visitor.",
            "Level_of_membership": "Membership level of the visitor.",
            "Age": "Age of the visitor."
        },
        "visit": {
            "Museum_ID": "Identifier for the museum being visited.",
            "visitor_ID": "Identifier for the visitor making the visit.",
            "Num_of_Ticket": "Number of tickets purchased for the visit.",
            "Total_spent": "Total amount spent by the visitor during the visit."
        }
    },
    "browser_web": {
        "Web_client_accelerator": {
            "id": "Unique identifier for the web client accelerator.",
            "name": "Name of the web client accelerator.",
            "Operating_system": "Operating system supported by the web client accelerator.",
            "Client": "Type of client associated with the web client accelerator.",
            "Connection": "Type of connection used by the web client accelerator."
        },
        "browser": {
            "id": "Unique identifier for the browser.",
            "name": "Name of the browser.",
            "market_share": "Percentage of market share held by the browser."
        },
        "accelerator_compatible_browser": {
            "accelerator_id": "Identifier for the associated web client accelerator.",
            "browser_id": "Identifier for the compatible browser.",
            "compatible_since_year": "Year when the browser became compatible with the accelerator."
        }
    },
    "baseball_1": {
        "all_star": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the All-Star game.",
            "game_num": "Game number of the All-Star event.",
            "game_id": "Unique identifier for the specific game.",
            "team_id": "Identifier for the team the player represented.",
            "league_id": "Identifier for the league of the All-Star game.",
            "gp": "Games played by the player in the season.",
            "starting_pos": "Starting position of the player in the game."
        },
        "appearances": {
            "year": "Year of the player's appearances.",
            "team_id": "Identifier for the team the player played for.",
            "league_id": "Identifier for the league of the appearances.",
            "player_id": "Unique identifier for each player.",
            "g_all": "Total games played by the player.",
            "gs": "Games started by the player.",
            "g_batting": "Games played in batting positions.",
            "g_defense": "Games played in defensive positions.",
            "g_p": "Games played as a pitcher.",
            "g_c": "Games played as a catcher.",
            "g_1b": "Games played as a first baseman.",
            "g_2b": "Games played as a second baseman.",
            "g_3b": "Games played as a third baseman.",
            "g_ss": "Games played as a shortstop.",
            "g_lf": "Games played as a left fielder.",
            "g_cf": "Games played as a center fielder.",
            "g_rf": "Games played as a right fielder.",
            "g_of": "Total games played in outfield positions.",
            "g_dh": "Games played as a designated hitter.",
            "g_ph": "Games played as a pinch hitter.",
            "g_pr": "Games played as a pinch runner."
        },
        "manager_award": {
            "player_id": "Unique identifier for the manager.",
            "award_id": "Identifier for the award received.",
            "year": "Year the award was given.",
            "league_id": "Identifier for the league of the award.",
            "tie": "Indicates if the award was tied.",
            "notes": "Additional notes regarding the award."
        },
        "player_award": {
            "player_id": "Unique identifier for the player.",
            "award_id": "Identifier for the award received.",
            "year": "Year the award was given.",
            "league_id": "Identifier for the league of the award.",
            "tie": "Indicates if the award was tied.",
            "notes": "Additional notes regarding the award."
        },
        "manager_award_vote": {
            "award_id": "Identifier for the award being voted on.",
            "year": "Year of the voting.",
            "league_id": "Identifier for the league of the award.",
            "player_id": "Unique identifier for the player being voted for.",
            "points_won": "Points won by the player in the voting.",
            "points_max": "Maximum points possible in the voting.",
            "votes_first": "Number of first-place votes received."
        },
        "player_award_vote": {
            "award_id": "Identifier for the award being voted on.",
            "year": "Year of the voting.",
            "league_id": "Identifier for the league of the award.",
            "player_id": "Unique identifier for the player being voted for.",
            "points_won": "Points won by the player in the voting.",
            "points_max": "Maximum points possible in the voting.",
            "votes_first": "Number of first-place votes received."
        },
        "batting": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the batting statistics.",
            "stint": "Stint number for the player in that year.",
            "team_id": "Identifier for the team the player played for.",
            "league_id": "Identifier for the league of the batting statistics.",
            "g": "Total games played by the player.",
            "ab": "At bats by the player.",
            "r": "Runs scored by the player.",
            "h": "Hits made by the player.",
            "double": "Doubles hit by the player.",
            "triple": "Triples hit by the player.",
            "hr": "Home runs hit by the player.",
            "rbi": "Runs batted in by the player.",
            "sb": "Stolen bases by the player.",
            "cs": "Caught stealing by the player.",
            "bb": "Walks received by the player.",
            "so": "Strikeouts by the player.",
            "ibb": "Intentional walks received by the player.",
            "hbp": "Hit by pitch occurrences for the player.",
            "sh": "Sacrifice hits by the player.",
            "sf": "Sacrifice flies by the player.",
            "g_idp": "Ground into double plays by the player."
        },
        "batting_postseason": {
            "year": "Year of the postseason statistics.",
            "round": "Round of the postseason.",
            "player_id": "Unique identifier for each player.",
            "team_id": "Identifier for the team the player played for.",
            "league_id": "Identifier for the league of the batting statistics.",
            "g": "Total games played by the player in postseason.",
            "ab": "At bats by the player in postseason.",
            "r": "Runs scored by the player in postseason.",
            "h": "Hits made by the player in postseason.",
            "double": "Doubles hit by the player in postseason.",
            "triple": "Triples hit by the player in postseason.",
            "hr": "Home runs hit by the player in postseason.",
            "rbi": "Runs batted in by the player in postseason.",
            "sb": "Stolen bases by the player in postseason.",
            "cs": "Caught stealing by the player in postseason.",
            "bb": "Walks received by the player in postseason.",
            "so": "Strikeouts by the player in postseason.",
            "ibb": "Intentional walks received by the player in postseason.",
            "hbp": "Hit by pitch occurrences for the player in postseason.",
            "sh": "Sacrifice hits by the player in postseason.",
            "sf": "Sacrifice flies by the player in postseason.",
            "g_idp": "Ground into double plays by the player in postseason."
        },
        "player_college": {
            "player_id": "Unique identifier for each player.",
            "college_id": "Unique identifier for the college attended.",
            "year": "Year the player attended college."
        },
        "fielding": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the fielding statistics.",
            "stint": "Stint number for the player in that year.",
            "team_id": "Identifier for the team the player played for.",
            "league_id": "Identifier for the league of the fielding statistics.",
            "pos": "Position played by the player.",
            "g": "Total games played by the player in fielding.",
            "gs": "Games started by the player in fielding.",
            "inn_outs": "Innings played by the player.",
            "po": "Putouts made by the player.",
            "a": "Assists made by the player.",
            "e": "Errors committed by the player.",
            "dp": "Double plays turned by the player.",
            "pb": "Passed balls by the player.",
            "wp": "Wild pitches by the player.",
            "sb": "Stolen bases allowed by the player.",
            "cs": "Caught stealing by the player.",
            "zr": "Zone rating of the player."
        },
        "fielding_outfield": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the outfield statistics.",
            "stint": "Stint number for the player in that year.",
            "glf": "Games played in left field.",
            "gcf": "Games played in center field.",
            "grf": "Games played in right field."
        },
        "fielding_postseason": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the postseason fielding statistics.",
            "team_id": "Identifier for the team the player played for.",
            "league_id": "Identifier for the league of the postseason.",
            "round": "Round of the postseason.",
            "pos": "Position played by the player.",
            "g": "Total games played by the player in postseason fielding.",
            "gs": "Games started by the player in postseason fielding.",
            "inn_outs": "Innings played by the player in postseason.",
            "po": "Putouts made by the player in postseason.",
            "a": "Assists made by the player in postseason.",
            "e": "Errors committed by the player in postseason.",
            "dp": "Double plays turned by the player in postseason.",
            "tp": "Triple plays turned by the player in postseason.",
            "pb": "Passed balls by the player in postseason.",
            "sb": "Stolen bases allowed by the player in postseason.",
            "cs": "Caught stealing by the player in postseason."
        },
        "hall_of_fame": {
            "player_id": "Unique identifier for each player.",
            "yearid": "Year of the Hall of Fame induction.",
            "votedby": "Entity that voted for the induction.",
            "ballots": "Total ballots cast for the player.",
            "needed": "Number of votes needed for induction.",
            "votes": "Total votes received by the player.",
            "inducted": "Indicates if the player was inducted.",
            "category": "Category of the Hall of Fame induction.",
            "needed_note": "Notes regarding the voting requirements."
        },
        "home_game": {
            "year": "Year of the home games.",
            "league_id": "Identifier for the league of the home games.",
            "team_id": "Identifier for the team hosting the games.",
            "park_id": "Identifier for the park where games were played.",
            "span_first": "First date of the home game span.",
            "span_last": "Last date of the home game span.",
            "games": "Total number of home games played.",
            "openings": "Total openings for home games.",
            "attendance": "Total attendance for home games."
        },
        "manager": {
            "player_id": "Unique identifier for the manager.",
            "year": "Year of the managerial statistics.",
            "team_id": "Identifier for the team managed.",
            "league_id": "Identifier for the league of the manager.",
            "inseason": "Indicates if the manager was active in-season.",
            "g": "Total games managed.",
            "w": "Total wins by the team managed.",
            "l": "Total losses by the team managed.",
            "rank": "Rank of the team managed.",
            "plyr_mgr": "Indicates if the manager was a former player."
        },
        "manager_half": {
            "player_id": "Unique identifier for the manager.",
            "year": "Year of the managerial statistics.",
            "team_id": "Identifier for the team managed.",
            "league_id": "Identifier for the league of the manager.",
            "inseason": "Indicates if the manager was active in-season.",
            "half": "Half of the season being reported.",
            "g": "Total games managed in that half.",
            "w": "Total wins by the team managed in that half.",
            "l": "Total losses by the team managed in that half.",
            "rank": "Rank of the team managed in that half."
        },
        "player": {
            "player_id": "Unique identifier for each player.",
            "birth_year": "Year of birth of the player.",
            "birth_month": "Month of birth of the player.",
            "birth_day": "Day of birth of the player.",
            "birth_country": "Country of birth of the player.",
            "birth_state": "State of birth of the player.",
            "birth_city": "City of birth of the player.",
            "death_year": "Year of death of the player.",
            "death_month": "Month of death of the player.",
            "death_day": "Day of death of the player.",
            "death_country": "Country of death of the player.",
            "death_state": "State of death of the player.",
            "death_city": "City of death of the player.",
            "name_first": "First name of the player.",
            "name_last": "Last name of the player.",
            "name_given": "Given name of the player.",
            "weight": "Weight of the player in pounds.",
            "height": "Height of the player in inches.",
            "bats": "Batting hand of the player (left/right).",
            "throws": "Throwing hand of the player (left/right).",
            "debut": "Date of the player's debut.",
            "final_game": "Date of the player's final game.",
            "retro_id": "Retro identifier for the player.",
            "bbref_id": "Baseball Reference identifier for the player."
        },
        "park": {
            "park_id": "Unique identifier for each park.",
            "park_name": "Name of the park.",
            "park_alias": "Alias for the park.",
            "city": "City where the park is located.",
            "state": "State where the park is located.",
            "country": "Country where the park is located."
        },
        "pitching": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the pitching statistics.",
            "stint": "Stint number for the player in that year.",
            "team_id": "Identifier for the team the player pitched for.",
            "league_id": "Identifier for the league of the pitching statistics.",
            "w": "Total wins by the pitcher.",
            "l": "Total losses by the pitcher.",
            "g": "Total games pitched.",
            "gs": "Games started by the pitcher.",
            "cg": "Complete games pitched.",
            "sho": "Shutouts pitched.",
            "sv": "Saves recorded by the pitcher.",
            "ipouts": "Innings pitched (outs recorded).",
            "h": "Hits allowed by the pitcher.",
            "er": "Earned runs allowed by the pitcher.",
            "hr": "Home runs allowed by the pitcher.",
            "bb": "Walks allowed by the pitcher.",
            "so": "Strikeouts recorded by the pitcher.",
            "baopp": "Batting average against the pitcher.",
            "era": "Earned run average of the pitcher.",
            "ibb": "Intentional walks allowed by the pitcher.",
            "wp": "Wild pitches thrown by the pitcher.",
            "hbp": "Hit by pitch occurrences by the pitcher.",
            "bk": "Balks committed by the pitcher.",
            "bfp": "Batters faced by the pitcher.",
            "gf": "Games finished by the pitcher.",
            "r": "Total runs allowed by the pitcher.",
            "sh": "Sacrifice hits allowed by the pitcher.",
            "sf": "Sacrifice flies allowed by the pitcher.",
            "g_idp": "Ground into double plays allowed by the pitcher."
        },
        "pitching_postseason": {
            "player_id": "Unique identifier for each player.",
            "year": "Year of the postseason pitching statistics.",
            "round": "Round of the postseason.",
            "team_id": "Identifier for the team the player pitched for.",
            "league_id": "Identifier for the league of the postseason.",
            "w": "Total wins by the pitcher in postseason.",
            "l": "Total losses by the pitcher in postseason.",
            "g": "Total games pitched in postseason.",
            "gs": "Games started by the pitcher in postseason.",
            "cg": "Complete games pitched in postseason.",
            "sho": "Shutouts pitched in postseason.",
            "sv": "Saves recorded by the pitcher in postseason.",
            "ipouts": "Innings pitched (outs recorded) in postseason.",
            "h": "Hits allowed by the pitcher in postseason.",
            "er": "Earned runs allowed by the pitcher in postseason.",
            "hr": "Home runs allowed by the pitcher in postseason.",
            "bb": "Walks allowed by the pitcher in postseason.",
            "so": "Strikeouts recorded by the pitcher in postseason.",
            "baopp": "Batting average against the pitcher in postseason.",
            "era": "Earned run average of the pitcher in postseason.",
            "ibb": "Intentional walks allowed by the pitcher in postseason.",
            "wp": "Wild pitches thrown by the pitcher in postseason.",
            "hbp": "Hit by pitch occurrences by the pitcher in postseason.",
            "bk": "Balks committed by the pitcher in postseason.",
            "bfp": "Batters faced by the pitcher in postseason.",
            "gf": "Games finished by the pitcher in postseason.",
            "r": "Total runs allowed by the pitcher in postseason.",
            "sh": "Sacrifice hits allowed by the pitcher in postseason.",
            "sf": "Sacrifice flies allowed by the pitcher in postseason.",
            "g_idp": "Ground into double plays allowed by the pitcher in postseason."
        },
        "salary": {
            "year": "Year of the salary record.",
            "team_id": "Identifier for the team associated with the salary.",
            "league_id": "Identifier for the league of the salary.",
            "player_id": "Unique identifier for each player.",
            "salary": "Salary amount for the player."
        },
        "college": {
            "college_id": "Unique identifier for each college.",
            "name_full": "Full name of the college.",
            "city": "City where the college is located.",
            "state": "State where the college is located.",
            "country": "Country where the college is located."
        },
        "postseason": {
            "year": "Year of the postseason.",
            "round": "Round of the postseason.",
            "team_id_winner": "Identifier for the winning team.",
            "league_id_winner": "Identifier for the league of the winning team.",
            "team_id_loser": "Identifier for the losing team.",
            "league_id_loser": "Identifier for the league of the losing team.",
            "wins": "Total wins by the winning team.",
            "losses": "Total losses by the winning team.",
            "ties": "Total ties in the postseason."
        },
        "team": {
            "year": "Year of the team statistics.",
            "league_id": "Identifier for the league of the team.",
            "team_id": "Identifier for the team.",
            "franchise_id": "Identifier for the franchise of the team.",
            "div_id": "Identifier for the division of the team.",
            "rank": "Rank of the team in the league.",
            "g": "Total games played by the team.",
            "ghome": "Total home games played by the team.",
            "w": "Total wins by the team.",
            "l": "Total losses by the team.",
            "div_win": "Indicates if the team won the division.",
            "wc_win": "Indicates if the team won the wild card.",
            "lg_win": "Indicates if the team won the league.",
            "ws_win": "Indicates if the team won the World Series.",
            "r": "Total runs scored by the team.",
            "ab": "Total at bats by the team.",
            "h": "Total hits made by the team.",
            "double": "Total doubles hit by the team.",
            "triple": "Total triples hit by the team.",
            "hr": "Total home runs hit by the team.",
            "bb": "Total walks received by the team.",
            "so": "Total strikeouts by the team.",
            "sb": "Total stolen bases by the team.",
            "cs": "Total caught stealing by the team.",
            "hbp": "Total hit by pitches received by the team.",
            "sf": "Total sacrifice flies by the team.",
            "ra": "Total runs allowed by the team.",
            "er": "Total earned runs allowed by the team.",
            "era": "Earned run average of the team.",
            "cg": "Total complete games by the team.",
            "sho": "Total shutouts by the team.",
            "sv": "Total saves recorded by the team.",
            "ipouts": "Total innings pitched by the team.",
            "ha": "Total hits allowed by the team.",
            "hra": "Total home runs allowed by the team.",
            "bba": "Total walks allowed by the team.",
            "soa": "Total strikeouts against the team.",
            "e": "Total errors committed by the team.",
            "dp": "Total double plays turned by the team.",
            "fp": "Fielding percentage of the team.",
            "name": "Name of the team.",
            "park": "Identifier for the park where the team plays.",
            "attendance": "Total attendance for the team's games.",
            "bpf": "Batting park factor for the team.",
            "ppf": "Pitching park factor for the team.",
            "team_id_br": "Identifier for the team in the Baseball Reference database.",
            "team_id_lahman45": "Identifier for the team in the Lahman database.",
            "team_id_retro": "Identifier for the team in the Retro database."
        },
        "team_franchise": {
            "franchise_id": "Unique identifier for each franchise.",
            "franchise_name": "Name of the franchise.",
            "active": "Indicates if the franchise is currently active.",
            "na_assoc": "Indicates if the franchise is associated with the National Association."
        },
        "team_half": {
            "year": "Year of the team statistics.",
            "league_id": "Identifier for the league of the team.",
            "team_id": "Identifier for the team.",
            "half": "Half of the season being reported.",
            "div_id": "Identifier for the division of the team.",
            "div_win": "Indicates if the team won the division in that half.",
            "rank": "Rank of the team in the league for that half.",
            "g": "Total games played by the team in that half.",
            "w": "Total wins by the team in that half.",
            "l": "Total losses by the team in that half."
        }
    },
    "architecture": {
        "architect": {
            "id": "Unique identifier for each architect.",
            "name": "Full name of the architect.",
            "nationality": "Country of citizenship or origin of the architect.",
            "gender": "Gender of the architect."
        },
        "bridge": {
            "architect_id": "Identifier linking the bridge to its architect.",
            "id": "Unique identifier for each bridge.",
            "name": "Name of the bridge.",
            "location": "Geographical location where the bridge is situated.",
            "length_meters": "Length of the bridge measured in meters.",
            "length_feet": "Length of the bridge measured in feet."
        },
        "mill": {
            "architect_id": "Identifier linking the mill to its architect.",
            "id": "Unique identifier for each mill.",
            "location": "Geographical location where the mill is situated.",
            "name": "Name of the mill.",
            "type": "Type or category of the mill.",
            "built_year": "Year when the mill was constructed.",
            "notes": "Additional notes or comments about the mill."
        }
    },
    "csu_1": {
        "Campuses": {
            "Id": "Unique identifier for each campus.",
            "Campus": "Name of the campus.",
            "Location": "Geographical location of the campus.",
            "County": "County where the campus is situated.",
            "Year": "Year of the data record."
        },
        "csu_fees": {
            "Campus": "Identifier for the campus associated with the fee.",
            "Year": "Year the fee is applicable.",
            "CampusFee": "Amount of the fee charged for the campus."
        },
        "degrees": {
            "Year": "Year when the degrees were awarded.",
            "Campus": "Identifier for the campus where degrees were awarded.",
            "Degrees": "Types of degrees awarded."
        },
        "discipline_enrollments": {
            "Campus": "Identifier for the campus related to enrollments.",
            "Discipline": "Field of study or discipline.",
            "Year": "Year of the enrollment data.",
            "Undergraduate": "Number of undergraduate enrollments.",
            "Graduate": "Number of graduate enrollments."
        },
        "enrollments": {
            "Campus": "Identifier for the campus related to total enrollments.",
            "Year": "Year of the enrollment data.",
            "TotalEnrollment_AY": "Total number of enrollments for the academic year.",
            "FTE_AY": "Full-time equivalent enrollments for the academic year."
        },
        "faculty": {
            "Campus": "Identifier for the campus associated with faculty data.",
            "Year": "Year of the faculty data record.",
            "Faculty": "Number of faculty members at the campus."
        }
    },
    "tracking_orders": {
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "customer_name": "Name of the customer.",
            "customer_details": "Additional information about the customer."
        },
        "Invoices": {
            "invoice_number": "Unique identifier for each invoice.",
            "invoice_date": "Date when the invoice was issued.",
            "invoice_details": "Details related to the invoice."
        },
        "Orders": {
            "order_id": "Unique identifier for each order.",
            "customer_id": "Identifier for the customer who placed the order.",
            "order_status": "Current status of the order.",
            "date_order_placed": "Date when the order was placed.",
            "order_details": "Details related to the order."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "product_name": "Name of the product.",
            "product_details": "Additional information about the product."
        },
        "Order_Items": {
            "order_item_id": "Unique identifier for each order item.",
            "product_id": "Identifier for the product in the order item.",
            "order_id": "Identifier for the order that includes this item.",
            "order_item_status": "Current status of the order item.",
            "order_item_details": "Details related to the order item."
        },
        "Shipments": {
            "shipment_id": "Unique identifier for each shipment.",
            "order_id": "Identifier for the order associated with the shipment.",
            "invoice_number": "Identifier for the invoice linked to the shipment.",
            "shipment_tracking_number": "Tracking number for the shipment.",
            "shipment_date": "Date when the shipment was sent.",
            "other_shipment_details": "Additional information about the shipment."
        },
        "Shipment_Items": {
            "shipment_id": "Identifier for the shipment containing the items.",
            "order_item_id": "Identifier for the order item included in the shipment."
        }
    },
    "insurance_policies": {
        "Customers": {
            "Customer_ID": "Unique identifier for each customer.",
            "Customer_Details": "Detailed information about the customer."
        },
        "Customer_Policies": {
            "Policy_ID": "Unique identifier for each insurance policy.",
            "Customer_ID": "Identifier linking the policy to a specific customer.",
            "Policy_Type_Code": "Code representing the type of insurance policy.",
            "Start_Date": "Date when the insurance policy becomes effective.",
            "End_Date": "Date when the insurance policy expires."
        },
        "Claims": {
            "Claim_ID": "Unique identifier for each insurance claim.",
            "Policy_ID": "Identifier linking the claim to a specific insurance policy.",
            "Date_Claim_Made": "Date when the claim was submitted.",
            "Date_Claim_Settled": "Date when the claim was resolved.",
            "Amount_Claimed": "Total amount requested in the claim.",
            "Amount_Settled": "Total amount approved and paid for the claim."
        },
        "Settlements": {
            "Settlement_ID": "Unique identifier for each settlement record.",
            "Claim_ID": "Identifier linking the settlement to a specific claim.",
            "Date_Claim_Made": "Date when the claim associated with the settlement was submitted.",
            "Date_Claim_Settled": "Date when the claim associated with the settlement was resolved.",
            "Amount_Claimed": "Total amount requested in the claim related to the settlement.",
            "Amount_Settled": "Total amount approved and paid in the settlement.",
            "Customer_Policy_ID": "Identifier linking the settlement to a specific customer policy."
        },
        "Payments": {
            "Payment_ID": "Unique identifier for each payment transaction.",
            "Settlement_ID": "Identifier linking the payment to a specific settlement.",
            "Payment_Method_Code": "Code representing the method used for the payment.",
            "Date_Payment_Made": "Date when the payment was processed.",
            "Amount_Payment": "Total amount paid in the transaction."
        }
    },
    "gas_company": {
        "company": {
            "Company_ID": "Unique identifier for each company.",
            "Rank": "Rank of the company based on performance metrics.",
            "Company": "Name of the company.",
            "Headquarters": "Location of the company's headquarters.",
            "Main_Industry": "Primary industry in which the company operates.",
            "Sales_billion": "Total sales revenue in billions.",
            "Profits_billion": "Total profits in billions.",
            "Assets_billion": "Total assets held by the company in billions.",
            "Market_Value": "Total market value of the company."
        },
        "gas_station": {
            "Station_ID": "Unique identifier for each gas station.",
            "Open_Year": "Year the gas station was opened.",
            "Location": "Geographical location of the gas station.",
            "Manager_Name": "Name of the gas station manager.",
            "Vice_Manager_Name": "Name of the gas station vice manager.",
            "Representative_Name": "Name of the representative for the gas station."
        },
        "station_company": {
            "Station_ID": "Unique identifier for the gas station associated with a company.",
            "Company_ID": "Unique identifier for the company associated with the gas station.",
            "Rank_of_the_Year": "Rank of the gas station for the specific year."
        }
    },
    "e_government": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "line_1_number_building": "Primary address line including building number and name.",
            "town_city": "Name of the town or city.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country of the address."
        },
        "Services": {
            "service_id": "Unique identifier for each service.",
            "service_type_code": "Code representing the type of service.",
            "service_name": "Name of the service.",
            "service_descriptio": "Description of the service."
        },
        "Forms": {
            "form_id": "Unique identifier for each form.",
            "form_type_code": "Code representing the type of form.",
            "service_id": "Identifier linking the form to a specific service.",
            "form_number": "Number associated with the form.",
            "form_name": "Name of the form.",
            "form_description": "Description of the form."
        },
        "Individuals": {
            "individual_id": "Unique identifier for each individual.",
            "individual_first_name": "First name of the individual.",
            "individual_middle_name": "Middle name of the individual.",
            "inidividual_phone": "Phone number of the individual.",
            "individual_email": "Email address of the individual.",
            "individual_address": "Address of the individual.",
            "individual_last_name": "Last name of the individual."
        },
        "Organizations": {
            "organization_id": "Unique identifier for each organization.",
            "date_formed": "Date when the organization was established.",
            "organization_name": "Name of the organization.",
            "uk_vat_number": "VAT registration number for UK organizations."
        },
        "Parties": {
            "party_id": "Unique identifier for each party.",
            "payment_method_code": "Code representing the payment method used.",
            "party_phone": "Phone number of the party.",
            "party_email": "Email address of the party."
        },
        "Organization_Contact_Individuals": {
            "individual_id": "Unique identifier for the individual contacting the organization.",
            "organization_id": "Unique identifier for the organization being contacted.",
            "date_contact_from": "Start date of the contact period.",
            "date_contact_to": "End date of the contact period."
        },
        "Party_Addresses": {
            "party_id": "Unique identifier for the party associated with the address.",
            "address_id": "Unique identifier for the address.",
            "date_address_from": "Start date for the address validity.",
            "address_type_code": "Code representing the type of address.",
            "date_address_to": "End date for the address validity."
        },
        "Party_Forms": {
            "party_id": "Unique identifier for the party associated with the form.",
            "form_id": "Unique identifier for the form.",
            "date_completion_started": "Date when the form completion started.",
            "form_status_code": "Code representing the current status of the form.",
            "date_fully_completed": "Date when the form was fully completed."
        },
        "Party_Services": {
            "booking_id": "Unique identifier for the service booking.",
            "customer_id": "Unique identifier for the customer.",
            "service_id": "Unique identifier for the service booked.",
            "service_datetime": "Date and time when the service is scheduled.",
            "booking_made_date": "Date when the booking was made."
        }
    },
    "school_bus": {
        "driver": {
            "Driver_ID": "Unique identifier for each driver.",
            "Name": "Full name of the driver.",
            "Party": "Political party affiliation of the driver.",
            "Home_city": "City where the driver resides.",
            "Age": "Age of the driver."
        },
        "school": {
            "School_ID": "Unique identifier for each school.",
            "Grade": "Grade level of students in the school.",
            "School": "Name or identifier of the school.",
            "Location": "Geographical location of the school.",
            "Type": "Type of school (e.g., public, private)."
        },
        "school_bus": {
            "School_ID": "Identifier linking to the associated school.",
            "Driver_ID": "Identifier linking to the driver of the bus.",
            "Years_Working": "Number of years the driver has worked with the school bus.",
            "If_full_time": "Indicates if the driver works full-time."
        }
    },
    "machine_repair": {
        "repair": {
            "repair_ID": "Unique identifier for each repair record.",
            "name": "Name or title of the repair task.",
            "Launch_Date": "Date when the repair was initiated.",
            "Notes": "Additional comments or details regarding the repair."
        },
        "machine": {
            "Machine_ID": "Unique identifier for each machine.",
            "Making_Year": "Year the machine was manufactured.",
            "Class": "Classification category of the machine.",
            "Team": "Identifier for the team responsible for the machine.",
            "Machine_series": "Series number of the machine model.",
            "value_points": "Points representing the machine's value.",
            "quality_rank": "Rank indicating the quality of the machine."
        },
        "technician": {
            "technician_id": "Unique identifier for each technician.",
            "Name": "Full name of the technician.",
            "Team": "Identifier for the team the technician belongs to.",
            "Starting_Year": "Year when the technician started working.",
            "Age": "Current age of the technician."
        },
        "repair_assignment": {
            "technician_id": "Identifier for the technician assigned to the repair.",
            "repair_ID": "Identifier for the repair task assigned.",
            "Machine_ID": "Identifier for the machine involved in the repair."
        }
    },
    "theme_gallery": {
        "artist": {
            "Artist_ID": "Unique identifier for each artist.",
            "Name": "Name of the artist.",
            "Country": "Country where the artist is from.",
            "Year_Join": "Year the artist joined the exhibition.",
            "Age": "Age of the artist."
        },
        "exhibition": {
            "Exhibition_ID": "Unique identifier for each exhibition.",
            "Year": "Year the exhibition took place.",
            "Theme": "Theme of the exhibition.",
            "Artist_ID": "Identifier linking to the artist in the artist table.",
            "Ticket_Price": "Price of the ticket for the exhibition."
        },
        "exhibition_record": {
            "Exhibition_ID": "Identifier for the exhibition being recorded.",
            "Date": "Date when the exhibition occurred.",
            "Attendance": "Number of attendees at the exhibition."
        }
    },
    "film_rank": {
        "film": {
            "Film_ID": "Unique identifier for each film.",
            "Title": "The title of the film.",
            "Studio": "The studio that produced the film.",
            "Director": "The director of the film.",
            "Gross_in_dollar": "Total gross revenue of the film in dollars."
        },
        "market": {
            "Market_ID": "Unique identifier for each market.",
            "Country": "The country where the market is located.",
            "Number_cities": "Total number of cities in the market."
        },
        "film_market_estimation": {
            "Estimation_ID": "Unique identifier for each estimation record.",
            "Low_Estimate": "The lower bound of the revenue estimate.",
            "High_Estimate": "The upper bound of the revenue estimate.",
            "Film_ID": "Identifier linking to the specific film.",
            "Type": "Type of estimation (e.g., box office, streaming).",
            "Market_ID": "Identifier linking to the specific market.",
            "Year": "The year for which the estimation is made."
        }
    },
    "party_people": {
        "region": {
            "Region_ID": "Unique identifier for each region.",
            "Region_name": "Name of the region.",
            "Date": "Date associated with the region data.",
            "Label": "Label or category for the region.",
            "Format": "Format type of the region data.",
            "Catalogue": "Catalogue reference for the region."
        },
        "party": {
            "Party_ID": "Unique identifier for each political party.",
            "Minister": "Identifier for the minister associated with the party.",
            "Took_office": "Date when the party took office.",
            "Left_office": "Date when the party left office.",
            "Region_ID": "Identifier for the region where the party operates.",
            "Party_name": "Name of the political party."
        },
        "member": {
            "Member_ID": "Unique identifier for each member.",
            "Member_Name": "Name of the member.",
            "Party_ID": "Identifier for the party the member belongs to.",
            "In_office": "Status indicating if the member is currently in office."
        },
        "party_events": {
            "Event_ID": "Unique identifier for each party event.",
            "Event_Name": "Name of the event organized by the party.",
            "Party_ID": "Identifier for the party hosting the event.",
            "Member_in_charge_ID": "Identifier for the member responsible for the event."
        }
    },
    "hospital_1": {
        "Physician": {
            "EmployeeID": "Unique identifier for each physician.",
            "Name": "Full name of the physician.",
            "Position": "Job title or role of the physician.",
            "SSN": "Social Security Number of the physician."
        },
        "Department": {
            "DepartmentID": "Unique identifier for each department.",
            "Name": "Name of the department.",
            "Head": "Identifier for the head of the department."
        },
        "Affiliated_With": {
            "Physician": "Identifier for the physician.",
            "Department": "Identifier for the department.",
            "PrimaryAffiliation": "Indicates if this is the primary affiliation."
        },
        "Procedures": {
            "Code": "Unique code for each medical procedure.",
            "Name": "Name of the medical procedure.",
            "Cost": "Cost associated with the procedure."
        },
        "Trained_In": {
            "Physician": "Identifier for the physician.",
            "Treatment": "Identifier for the treatment.",
            "CertificationDate": "Date when the physician was certified.",
            "CertificationExpires": "Date when the certification expires."
        },
        "Patient": {
            "SSN": "Social Security Number of the patient.",
            "Name": "Full name of the patient.",
            "Address": "Residential address of the patient.",
            "Phone": "Contact phone number of the patient.",
            "InsuranceID": "Identifier for the patient's insurance.",
            "PCP": "Identifier for the patient's primary care physician."
        },
        "Nurse": {
            "EmployeeID": "Unique identifier for each nurse.",
            "Name": "Full name of the nurse.",
            "Position": "Job title or role of the nurse.",
            "Registered": "Indicates if the nurse is registered.",
            "SSN": "Social Security Number of the nurse."
        },
        "Appointment": {
            "AppointmentID": "Unique identifier for each appointment.",
            "Patient": "Identifier for the patient.",
            "PrepNurse": "Identifier for the nurse preparing the patient.",
            "Physician": "Identifier for the physician conducting the appointment.",
            "Start": "Start time of the appointment.",
            "End": "End time of the appointment.",
            "ExaminationRoom": "Identifier for the examination room."
        },
        "Medication": {
            "Code": "Unique code for each medication.",
            "Name": "Name of the medication.",
            "Brand": "Brand name of the medication.",
            "Description": "Description of the medication."
        },
        "Prescribes": {
            "Physician": "Identifier for the physician prescribing the medication.",
            "Patient": "Identifier for the patient receiving the prescription.",
            "Medication": "Identifier for the prescribed medication.",
            "Date": "Date when the medication was prescribed.",
            "Appointment": "Identifier for the appointment related to the prescription.",
            "Dose": "Dosage of the medication prescribed."
        },
        "Block": {
            "BlockFloor": "Indicates if the floor is blocked.",
            "BlockCode": "Indicates if the block code is active."
        },
        "Room": {
            "RoomNumber": "Unique identifier for each room.",
            "RoomType": "Type of the room (e.g., patient room, examination room).",
            "BlockFloor": "Identifier for the blocked floor status.",
            "BlockCode": "Identifier for the blocked code status.",
            "Unavailable": "Indicates if the room is unavailable."
        },
        "On_Call": {
            "Nurse": "Identifier for the nurse on call.",
            "BlockFloor": "Identifier for the blocked floor status.",
            "BlockCode": "Identifier for the blocked code status.",
            "OnCallStart": "Start time of the on-call period.",
            "OnCallEnd": "End time of the on-call period."
        },
        "Stay": {
            "StayID": "Unique identifier for each hospital stay.",
            "Patient": "Identifier for the patient staying in the hospital.",
            "Room": "Identifier for the room where the patient is staying.",
            "StayStart": "Start date and time of the hospital stay.",
            "StayEnd": "End date and time of the hospital stay."
        },
        "Undergoes": {
            "Patient": "Identifier for the patient undergoing procedures.",
            "Procedures": "Identifier for the procedures being undergone.",
            "Stay": "Identifier for the stay associated with the procedures.",
            "DateUndergoes": "Date when the procedures are performed.",
            "Physician": "Identifier for the physician performing the procedures.",
            "AssistingNurse": "Identifier for the nurse assisting during the procedures."
        }
    },
    "customers_campaigns_ecommerce": {
        "Premises": {
            "premise_id": "Unique identifier for each premise.",
            "premises_type": "Type of the premise (e.g., residential, commercial).",
            "premise_details": "Detailed description of the premise."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "product_category": "Identifier for the category to which the product belongs.",
            "product_name": "Name of the product."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "payment_method": "Preferred payment method of the customer.",
            "customer_name": "Full name of the customer.",
            "customer_phone": "Contact phone number of the customer.",
            "customer_email": "Email address of the customer.",
            "customer_address": "Physical address of the customer.",
            "customer_login": "Username for customer login.",
            "customer_password": "Password for customer login."
        },
        "Mailshot_Campaigns": {
            "mailshot_id": "Unique identifier for each mailshot campaign.",
            "product_category": "Category of products featured in the mailshot.",
            "mailshot_name": "Name of the mailshot campaign.",
            "mailshot_start_date": "Start date of the mailshot campaign.",
            "mailshot_end_date": "End date of the mailshot campaign."
        },
        "Customer_Addresses": {
            "customer_id": "Identifier linking to the customer.",
            "premise_id": "Identifier linking to the premise.",
            "date_address_from": "Date when the address became effective.",
            "address_type_code": "Code indicating the type of address (e.g., billing, shipping).",
            "date_address_to": "Date when the address ceased to be effective."
        },
        "Customer_Orders": {
            "order_id": "Unique identifier for each order.",
            "customer_id": "Identifier linking to the customer who placed the order.",
            "order_status_code": "Code indicating the current status of the order.",
            "shipping_method_code": "Code representing the shipping method chosen.",
            "order_placed_datetime": "Date and time when the order was placed.",
            "order_delivered_datetime": "Date and time when the order was delivered.",
            "order_shipping_charges": "Shipping charges applied to the order."
        },
        "Mailshot_Customers": {
            "mailshot_id": "Identifier linking to the mailshot campaign.",
            "customer_id": "Identifier linking to the customer who received the mailshot.",
            "outcome_code": "Code indicating the outcome of the mailshot for the customer.",
            "mailshot_customer_date": "Date when the mailshot was sent to the customer."
        },
        "Order_Items": {
            "item_id": "Unique identifier for each order item.",
            "order_item_status_code": "Code indicating the status of the order item.",
            "order_id": "Identifier linking to the order that contains this item.",
            "product_id": "Identifier linking to the product being ordered.",
            "item_status_code": "Code indicating the delivery status of the item.",
            "item_delivered_datetime": "Date and time when the item was delivered.",
            "item_order_quantity": "Quantity of the item ordered."
        }
    },
    "gymnast": {
        "gymnast": {
            "Gymnast_ID": "Unique identifier for each gymnast.",
            "Floor_Exercise_Points": "Points scored in the floor exercise event.",
            "Pommel_Horse_Points": "Points scored in the pommel horse event.",
            "Rings_Points": "Points scored in the rings event.",
            "Vault_Points": "Points scored in the vault event.",
            "Parallel_Bars_Points": "Points scored in the parallel bars event.",
            "Horizontal_Bar_Points": "Points scored in the horizontal bar event.",
            "Total_Points": "Total points accumulated across all events."
        },
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Name": "Name of the person.",
            "Age": "Age of the person in years.",
            "Height": "Height of the person in centimeters.",
            "Hometown": "Hometown of the person."
        }
    },
    "restaurants": {
        "GEOGRAPHIC": {
            "CITY_NAME": "The name of the city.",
            "COUNTY": "The name of the county where the city is located.",
            "REGION": "The broader region that encompasses the city."
        },
        "RESTAURANT": {
            "ID": "A unique identifier for each restaurant.",
            "NAME": "The name of the restaurant.",
            "FOOD_TYPE": "The type of cuisine offered by the restaurant.",
            "CITY_NAME": "The city where the restaurant is located.",
            "RATING": "The rating of the restaurant, typically based on customer reviews."
        },
        "LOCATION": {
            "RESTAURANT_ID": "The unique identifier linking to the restaurant.",
            "HOUSE_NUMBER": "The house number of the restaurant's address.",
            "STREET_NAME": "The name of the street where the restaurant is located.",
            "CITY_NAME": "The city where the restaurant's location is found."
        }
    },
    "mountain_photos": {
        "mountain": {
            "id": "Unique identifier for each mountain.",
            "name": "The name of the mountain.",
            "Height": "The height of the mountain in meters.",
            "Prominence": "The prominence of the mountain in meters.",
            "Range": "The mountain range to which the mountain belongs.",
            "Country": "The country where the mountain is located."
        },
        "camera_lens": {
            "id": "Unique identifier for each camera lens.",
            "brand": "The brand name of the camera lens.",
            "name": "The model name of the camera lens.",
            "focal_length_mm": "The focal length of the lens in millimeters.",
            "max_aperture": "The maximum aperture of the lens."
        },
        "photos": {
            "id": "Unique identifier for each photo.",
            "camera_lens_id": "Identifier for the camera lens used to take the photo.",
            "mountain_id": "Identifier for the mountain featured in the photo.",
            "color": "The color profile of the photo.",
            "name": "The name or title of the photo."
        }
    },
    "battle_death": {
        "battle": {
            "id": "Unique identifier for each battle.",
            "name": "Name of the battle.",
            "date": "Date when the battle took place.",
            "bulgarian_commander": "Name of the Bulgarian commander involved in the battle.",
            "latin_commander": "Name of the Latin commander involved in the battle.",
            "result": "Outcome of the battle."
        },
        "ship": {
            "lost_in_battle": "Indicates if the ship was lost in battle (1 for yes, 0 for no).",
            "id": "Unique identifier for each ship.",
            "name": "Name of the ship.",
            "tonnage": "Weight capacity of the ship measured in tons.",
            "ship_type": "Type or classification of the ship.",
            "location": "Geographical location of the ship.",
            "disposition_of_ship": "Current status or condition of the ship."
        },
        "death": {
            "caused_by_ship_id": "Identifier of the ship that caused the death.",
            "id": "Unique identifier for each death record.",
            "note": "Additional notes regarding the death.",
            "killed": "Number of individuals killed.",
            "injured": "Number of individuals injured."
        }
    },
    "cre_Doc_Control_Systems": {
        "Ref_Document_Types": {
            "document_type_code": "Unique code representing the type of document.",
            "document_type_description": "Description of the document type."
        },
        "Roles": {
            "role_code": "Unique code for each role within the organization.",
            "role_description": "Description of the role and its responsibilities."
        },
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "address_details": "Detailed information about the address."
        },
        "Ref_Document_Status": {
            "document_status_code": "Unique code indicating the status of a document.",
            "document_status_description": "Description of the document's current status."
        },
        "Ref_Shipping_Agents": {
            "shipping_agent_code": "Unique code for each shipping agent.",
            "shipping_agent_name": "Name of the shipping agent.",
            "shipping_agent_description": "Description of the shipping agent's services."
        },
        "Documents": {
            "document_id": "Unique identifier for each document.",
            "document_status_code": "Code indicating the current status of the document.",
            "document_type_code": "Code representing the type of document.",
            "shipping_agent_code": "Code for the shipping agent handling the document.",
            "receipt_date": "Date when the document was received.",
            "receipt_number": "Unique number assigned to the receipt of the document.",
            "other_details": "Additional information related to the document."
        },
        "Employees": {
            "employee_id": "Unique identifier for each employee.",
            "role_code": "Code representing the employee's role.",
            "employee_name": "Full name of the employee.",
            "other_details": "Additional information about the employee."
        },
        "Document_Drafts": {
            "document_id": "Identifier for the document associated with the draft.",
            "draft_number": "Unique number assigned to the draft version.",
            "draft_details": "Details and content of the draft."
        },
        "Draft_Copies": {
            "document_id": "Identifier for the document related to the copy.",
            "draft_number": "Number of the draft from which the copy is made.",
            "copy_number": "Unique number assigned to the copy of the draft."
        },
        "Circulation_History": {
            "document_id": "Identifier for the document being circulated.",
            "draft_number": "Number of the draft in circulation.",
            "copy_number": "Number of the copy being circulated.",
            "employee_id": "Identifier for the employee involved in the circulation."
        },
        "Documents_Mailed": {
            "document_id": "Identifier for the document that was mailed.",
            "mailed_to_address_id": "Identifier for the address to which the document was mailed.",
            "mailing_date": "Date when the document was mailed."
        }
    },
    "tracking_share_transactions": {
        "Investors": {
            "investor_id": "Unique identifier for each investor.",
            "Investor_details": "Detailed information about the investor."
        },
        "Lots": {
            "lot_id": "Unique identifier for each lot.",
            "investor_id": "Identifier linking the lot to a specific investor.",
            "lot_details": "Details pertaining to the lot."
        },
        "Ref_Transaction_Types": {
            "transaction_type_code": "Unique code representing the type of transaction.",
            "transaction_type_description": "Description of the transaction type."
        },
        "Transactions": {
            "transaction_id": "Unique identifier for each transaction.",
            "investor_id": "Identifier linking the transaction to a specific investor.",
            "transaction_type_code": "Code indicating the type of transaction.",
            "date_of_transaction": "Date when the transaction occurred.",
            "amount_of_transaction": "Monetary amount involved in the transaction.",
            "share_count": "Number of shares involved in the transaction.",
            "other_details": "Additional details related to the transaction."
        },
        "Sales": {
            "sales_transaction_id": "Unique identifier for each sales transaction.",
            "sales_details": "Details regarding the sales transaction."
        },
        "Purchases": {
            "purchase_transaction_id": "Unique identifier for each purchase transaction.",
            "purchase_details": "Details regarding the purchase transaction."
        },
        "Transactions_Lots": {
            "transaction_id": "Identifier linking the transaction to a specific transaction record.",
            "lot_id": "Identifier linking the transaction to a specific lot."
        }
    },
    "apartment_rentals": {
        "Apartment_Buildings": {
            "building_id": "Unique identifier for each apartment building.",
            "building_short_name": "Abbreviated name of the building.",
            "building_full_name": "Complete name of the building.",
            "building_description": "Detailed description of the building.",
            "building_address": "Physical address of the building.",
            "building_manager": "Name of the building manager.",
            "building_phone": "Contact phone number for the building."
        },
        "Apartments": {
            "apt_id": "Unique identifier for each apartment.",
            "building_id": "Identifier linking the apartment to its building.",
            "apt_type_code": "Code representing the type of apartment.",
            "apt_number": "Number assigned to the apartment.",
            "bathroom_count": "Number of bathrooms in the apartment.",
            "bedroom_count": "Number of bedrooms in the apartment.",
            "room_count": "Total number of rooms in the apartment."
        },
        "Apartment_Facilities": {
            "apt_id": "Identifier linking the facility to its apartment.",
            "facility_code": "Code representing the specific facility."
        },
        "Guests": {
            "guest_id": "Unique identifier for each guest.",
            "gender_code": "Code representing the gender of the guest.",
            "guest_first_name": "First name of the guest.",
            "guest_last_name": "Last name of the guest.",
            "date_of_birth": "Birth date of the guest."
        },
        "Apartment_Bookings": {
            "apt_booking_id": "Unique identifier for each apartment booking.",
            "apt_id": "Identifier linking the booking to its apartment.",
            "guest_id": "Identifier linking the booking to the guest.",
            "booking_status_code": "Code representing the status of the booking.",
            "booking_start_date": "Start date of the booking.",
            "booking_end_date": "End date of the booking."
        },
        "View_Unit_Status": {
            "apt_id": "Identifier linking the status to its apartment.",
            "apt_booking_id": "Identifier linking the status to the booking.",
            "status_date": "Date when the status was recorded.",
            "available_yn": "Indicates if the apartment is available (Yes/No)."
        }
    },
    "student_transcripts_tracking": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "line_1": "Primary address line for street information.",
            "line_2": "Secondary address line for additional information.",
            "line_3": "Tertiary address line for further details.",
            "city": "City name of the address.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country name of the address.",
            "other_address_details": "Any additional details related to the address."
        },
        "Courses": {
            "course_id": "Unique identifier for each course.",
            "course_name": "Name of the course.",
            "course_description": "Brief description of the course content.",
            "other_details": "Additional information about the course."
        },
        "Departments": {
            "department_id": "Unique identifier for each department.",
            "department_name": "Name of the department.",
            "department_description": "Description of the department's focus and offerings.",
            "other_details": "Additional information related to the department."
        },
        "Degree_Programs": {
            "degree_program_id": "Unique identifier for each degree program.",
            "department_id": "Identifier for the department offering the program.",
            "degree_summary_name": "Name of the degree program.",
            "degree_summary_description": "Overview of the degree program's objectives.",
            "other_details": "Additional information about the degree program."
        },
        "Sections": {
            "section_id": "Unique identifier for each section of a course.",
            "course_id": "Identifier for the course associated with the section.",
            "section_name": "Name of the section.",
            "section_description": "Description of the section's content and structure.",
            "other_details": "Additional information related to the section."
        },
        "Semesters": {
            "semester_id": "Unique identifier for each semester.",
            "semester_name": "Name of the semester (e.g., Fall 2023).",
            "semester_description": "Description of the semester's schedule and offerings.",
            "other_details": "Additional information about the semester."
        },
        "Students": {
            "student_id": "Unique identifier for each student.",
            "current_address_id": "Identifier for the student's current address.",
            "permanent_address_id": "Identifier for the student's permanent address.",
            "first_name": "First name of the student.",
            "middle_name": "Middle name of the student.",
            "last_name": "Last name of the student.",
            "cell_mobile_number": "Mobile phone number of the student.",
            "email_address": "Email address of the student.",
            "ssn": "Social Security Number of the student.",
            "date_first_registered": "Date when the student first registered.",
            "date_left": "Date when the student left the institution.",
            "other_student_details": "Additional information related to the student."
        },
        "Student_Enrolment": {
            "student_enrolment_id": "Unique identifier for each student enrolment record.",
            "degree_program_id": "Identifier for the degree program the student is enrolled in.",
            "semester_id": "Identifier for the semester of enrolment.",
            "student_id": "Identifier for the student enrolled.",
            "other_details": "Additional information related to the enrolment."
        },
        "Student_Enrolment_Courses": {
            "student_course_id": "Unique identifier for each student course enrolment.",
            "course_id": "Identifier for the course the student is enrolled in.",
            "student_enrolment_id": "Identifier for the associated student enrolment record."
        },
        "Transcripts": {
            "transcript_id": "Unique identifier for each transcript.",
            "transcript_date": "Date when the transcript was issued.",
            "other_details": "Additional information related to the transcript."
        },
        "Transcript_Contents": {
            "student_course_id": "Identifier for the course associated with the student's transcript.",
            "transcript_id": "Identifier for the transcript that contains the course information."
        }
    },
    "cre_Docs_and_Epenses": {
        "Ref_Document_Types": {
            "Document_Type_Code": "Unique code representing the type of document.",
            "Document_Type_Name": "Name of the document type.",
            "Document_Type_Description": "Description providing details about the document type."
        },
        "Ref_Budget_Codes": {
            "Budget_Type_Code": "Unique code for the type of budget.",
            "Budget_Type_Description": "Description providing details about the budget type."
        },
        "Projects": {
            "Project_ID": "Unique identifier for each project.",
            "Project_Details": "Detailed information about the project."
        },
        "Documents": {
            "Document_ID": "Unique identifier for each document.",
            "Document_Type_Code": "Code indicating the type of document.",
            "Project_ID": "Identifier linking the document to a specific project.",
            "Document_Date": "Date when the document was created or received.",
            "Document_Name": "Name or title of the document.",
            "Document_Description": "Description providing details about the document.",
            "Other_Details": "Additional information related to the document."
        },
        "Statements": {
            "Statement_ID": "Unique identifier for each statement.",
            "Statement_Details": "Detailed information about the statement."
        },
        "Documents_with_Expenses": {
            "Document_ID": "Unique identifier for each document associated with expenses.",
            "Budget_Type_Code": "Code indicating the type of budget related to the document.",
            "Document_Details": "Detailed information about the document with expenses."
        },
        "Accounts": {
            "Account_ID": "Unique identifier for each account.",
            "Statement_ID": "Identifier linking the account to a specific statement.",
            "Account_Details": "Detailed information about the account."
        }
    },
    "ship_mission": {
        "mission": {
            "Mission_ID": "Unique identifier for each mission.",
            "Ship_ID": "Identifier for the ship associated with the mission.",
            "Code": "Code representing the mission type or category.",
            "Launched_Year": "Year the mission was launched.",
            "Location": "Geographical location where the mission took place.",
            "Speed_knots": "Speed of the ship during the mission in knots.",
            "Fate": "Outcome or status of the mission."
        },
        "ship": {
            "Ship_ID": "Unique identifier for each ship.",
            "Name": "Name of the ship.",
            "Type": "Type or classification of the ship.",
            "Nationality": "Country of registration or ownership of the ship.",
            "Tonnage": "Total weight capacity of the ship measured in tons."
        }
    },
    "company_office": {
        "buildings": {
            "id": "Unique identifier for each building.",
            "name": "Name of the building.",
            "City": "City where the building is located.",
            "Height": "Height of the building in meters.",
            "Stories": "Number of stories in the building.",
            "Status": "Current status of the building (e.g., active, under construction)."
        },
        "Companies": {
            "id": "Unique identifier for each company.",
            "name": "Name of the company.",
            "Headquarters": "Location of the company's headquarters.",
            "Industry": "Industry sector the company operates in.",
            "Sales_billion": "Annual sales revenue in billions.",
            "Profits_billion": "Annual profits in billions.",
            "Assets_billion": "Total assets in billions.",
            "Market_Value_billion": "Market value of the company in billions."
        },
        "Office_locations": {
            "building_id": "Identifier for the building where the office is located.",
            "company_id": "Identifier for the company that occupies the office.",
            "move_in_year": "Year when the company moved into the office."
        }
    },
    "tracking_software_problems": {
        "Problem_Category_Codes": {
            "problem_category_code": "Unique identifier for each problem category.",
            "problem_category_description": "Description of the problem category."
        },
        "Problem_Log": {
            "problem_log_id": "Unique identifier for each problem log entry.",
            "assigned_to_staff_id": "Identifier for the staff member assigned to the problem.",
            "problem_id": "Identifier for the related problem.",
            "problem_category_code": "Code representing the category of the problem.",
            "problem_status_code": "Code indicating the current status of the problem.",
            "log_entry_date": "Date when the log entry was created.",
            "log_entry_description": "Description of the log entry.",
            "log_entry_fix": "Details of the fix applied in the log entry.",
            "other_log_details": "Additional details related to the log entry."
        },
        "Problem_Status_Codes": {
            "problem_status_code": "Unique code for each problem status.",
            "problem_status_description": "Description of the problem status."
        },
        "Product": {
            "product_id": "Unique identifier for each product.",
            "product_name": "Name of the product.",
            "product_details": "Detailed information about the product."
        },
        "Staff": {
            "staff_id": "Unique identifier for each staff member.",
            "staff_first_name": "First name of the staff member.",
            "staff_last_name": "Last name of the staff member.",
            "other_staff_details": "Additional details about the staff member."
        },
        "Problems": {
            "problem_id": "Unique identifier for each problem.",
            "product_id": "Identifier for the product associated with the problem.",
            "closure_authorised_by_staff_id": "Identifier for the staff member who authorized the closure.",
            "reported_by_staff_id": "Identifier for the staff member who reported the problem.",
            "date_problem_reported": "Date when the problem was reported.",
            "date_problem_closed": "Date when the problem was closed.",
            "problem_description": "Description of the problem.",
            "other_problem_details": "Additional details related to the problem."
        }
    },
    "products_gen_characteristics": {
        "Ref_Characteristic_Types": {
            "characteristic_type_code": "Unique code representing the type of characteristic.",
            "characteristic_type_description": "Description of the characteristic type."
        },
        "Ref_Colors": {
            "color_code": "Unique code for the color.",
            "color_description": "Description of the color."
        },
        "Ref_Product_Categories": {
            "product_category_code": "Unique code for the product category.",
            "product_category_description": "Description of the product category.",
            "unit_of_measure": "Unit used to measure the product."
        },
        "Characteristics": {
            "characteristic_id": "Unique identifier for the characteristic.",
            "characteristic_type_code": "Code linking to the type of characteristic.",
            "characteristic_data_type": "Data type of the characteristic value.",
            "characteristic_name": "Name of the characteristic.",
            "other_characteristic_details": "Additional details about the characteristic."
        },
        "Products": {
            "product_id": "Unique identifier for the product.",
            "color_code": "Code representing the color of the product.",
            "product_category_code": "Code linking to the product category.",
            "product_name": "Name of the product.",
            "typical_buying_price": "Average price at which the product is bought.",
            "typical_selling_price": "Average price at which the product is sold.",
            "product_description": "Description of the product.",
            "other_product_details": "Additional details about the product."
        },
        "Product_Characteristics": {
            "product_id": "Identifier linking to the specific product.",
            "characteristic_id": "Identifier linking to the specific characteristic.",
            "product_characteristic_value": "Value of the characteristic for the product."
        }
    },
    "coffee_shop": {
        "shop": {
            "Shop_ID": "Unique identifier for each shop.",
            "Address": "Physical location of the shop.",
            "Num_of_staff": "Total number of staff employed at the shop.",
            "Score": "Rating score of the shop based on customer feedback.",
            "Open_Year": "Year when the shop was established."
        },
        "member": {
            "Member_ID": "Unique identifier for each member.",
            "Name": "Name of the member.",
            "Membership_card": "Identifier for the member's membership card.",
            "Age": "Age of the member.",
            "Time_of_purchase": "Timestamp of when the member made a purchase.",
            "Level_of_membership": "Tier or level of the member's membership.",
            "Address": "Residential address of the member."
        },
        "happy_hour": {
            "HH_ID": "Unique identifier for each happy hour event.",
            "Shop_ID": "Identifier for the shop hosting the happy hour.",
            "Month": "Month during which the happy hour takes place.",
            "Num_of_shaff_in_charge": "Number of staff members in charge during the happy hour."
        },
        "happy_hour_member": {
            "HH_ID": "Identifier for the happy hour event attended.",
            "Member_ID": "Identifier for the member participating in the happy hour.",
            "Total_amount": "Total amount spent by the member during the happy hour."
        }
    },
    "riding_club": {
        "player": {
            "Player_ID": "Unique identifier for each player.",
            "Sponsor_name": "Name of the sponsor associated with the player.",
            "Player_name": "Full name of the player.",
            "Gender": "Gender of the player.",
            "Residence": "Residential address or location of the player.",
            "Occupation": "Occupation or profession of the player.",
            "Votes": "Number of votes received by the player.",
            "Rank": "Current rank of the player."
        },
        "club": {
            "Club_ID": "Unique identifier for each club.",
            "Club_name": "Name of the club.",
            "Region": "Geographical region where the club is located.",
            "Start_year": "Year the club was established."
        },
        "coach": {
            "Coach_ID": "Unique identifier for each coach.",
            "Coach_name": "Full name of the coach.",
            "Gender": "Gender of the coach.",
            "Club_ID": "Identifier for the club the coach is associated with.",
            "Rank": "Current rank of the coach."
        },
        "player_coach": {
            "Player_ID": "Unique identifier for the player in the coaching relationship.",
            "Coach_ID": "Unique identifier for the coach in the coaching relationship.",
            "Starting_year": "Year when the coaching relationship started."
        },
        "match_result": {
            "Rank": "Rank achieved by the club in the match.",
            "Club_ID": "Identifier for the club that participated in the match.",
            "Gold": "Number of gold medals won.",
            "Big_Silver": "Number of big silver medals won.",
            "Small_Silver": "Number of small silver medals won.",
            "Bronze": "Number of bronze medals won.",
            "Points": "Total points scored by the club in the match."
        }
    },
    "customers_card_transactions": {
        "Accounts": {
            "account_id": "Unique identifier for each account.",
            "customer_id": "Identifier linking the account to a customer.",
            "account_name": "Name associated with the account.",
            "other_account_details": "Additional details related to the account."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "customer_first_name": "First name of the customer.",
            "customer_last_name": "Last name of the customer.",
            "customer_address": "Address of the customer.",
            "customer_phone": "Phone number of the customer.",
            "customer_email": "Email address of the customer.",
            "other_customer_details": "Additional details related to the customer."
        },
        "Customers_Cards": {
            "card_id": "Unique identifier for each card.",
            "customer_id": "Identifier linking the card to a customer.",
            "card_type_code": "Code representing the type of card.",
            "card_number": "Number of the card.",
            "date_valid_from": "Start date of the card's validity.",
            "date_valid_to": "End date of the card's validity.",
            "other_card_details": "Additional details related to the card."
        },
        "Financial_Transactions": {
            "transaction_id": "Unique identifier for each transaction.",
            "previous_transaction_id": "Identifier for the previous transaction, if applicable.",
            "account_id": "Identifier linking the transaction to an account.",
            "card_id": "Identifier linking the transaction to a card.",
            "transaction_type": "Type of the transaction (e.g., debit, credit).",
            "transaction_date": "Date when the transaction occurred.",
            "transaction_amount": "Amount involved in the transaction.",
            "transaction_comment": "Comments or notes related to the transaction.",
            "other_transaction_details": "Additional details related to the transaction."
        }
    },
    "county_public_safety": {
        "county_public_safety": {
            "County_ID": "Unique identifier for each county.",
            "Name": "Name of the county.",
            "Population": "Total population of the county.",
            "Police_officers": "Number of police officers in the county.",
            "Residents_per_officer": "Ratio of residents to police officers.",
            "Case_burden": "Average number of cases handled by police.",
            "Crime_rate": "Rate of crime incidents per population.",
            "Police_force": "Description of the police force in the county.",
            "Location": "Geographical location of the county."
        },
        "city": {
            "City_ID": "Unique identifier for each city.",
            "County_ID": "Identifier for the county the city belongs to.",
            "Name": "Name of the city.",
            "White": "Number of White residents in the city.",
            "Black": "Number of Black residents in the city.",
            "Amerindian": "Number of American Indian residents in the city.",
            "Asian": "Number of Asian residents in the city.",
            "Multiracial": "Number of Multiracial residents in the city.",
            "Hispanic": "Number of Hispanic residents in the city."
        }
    },
    "performance_attendance": {
        "member": {
            "Member_ID": "Unique identifier for each member.",
            "Name": "Full name of the member.",
            "Nationality": "Country of origin of the member.",
            "Role": "Role or position of the member within the organization."
        },
        "performance": {
            "Performance_ID": "Unique identifier for each performance event.",
            "Date": "Date when the performance takes place.",
            "Host": "Name of the host organization or individual for the performance.",
            "Location": "Venue or place where the performance is held.",
            "Attendance": "Number of attendees present at the performance."
        },
        "member_attendance": {
            "Member_ID": "Unique identifier for the member attending the performance.",
            "Performance_ID": "Unique identifier for the performance being attended.",
            "Num_of_Pieces": "Number of pieces performed by the member during the performance."
        }
    },
    "club_1": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study the student is enrolled in.",
            "Advisor": "Name of the student's academic advisor.",
            "city_code": "Code representing the city where the student resides."
        },
        "Club": {
            "ClubID": "Unique identifier for each club.",
            "ClubName": "Name of the club.",
            "ClubDesc": "Description of the club's purpose and activities.",
            "ClubLocation": "Location where the club meets."
        },
        "Member_of_club": {
            "StuID": "Identifier for the student who is a member of the club.",
            "ClubID": "Identifier for the club the student belongs to.",
            "Position": "Role or position of the student within the club."
        }
    },
    "singer": {
        "singer": {
            "Singer_ID": "Unique identifier for each singer.",
            "Name": "Full name of the singer.",
            "Birth_Year": "Year the singer was born.",
            "Net_Worth_Millions": "Estimated net worth of the singer in millions.",
            "Citizenship": "Country of citizenship of the singer."
        },
        "song": {
            "Song_ID": "Unique identifier for each song.",
            "Title": "Title of the song.",
            "Singer_ID": "Identifier linking the song to its singer.",
            "Sales": "Total sales figures for the song.",
            "Highest_Position": "Highest chart position achieved by the song."
        }
    },
    "culture_company": {
        "book_club": {
            "book_club_id": "Unique identifier for each book club entry.",
            "Year": "The year the book was published or discussed.",
            "Author_or_Editor": "Name of the author or editor of the book.",
            "Book_Title": "Title of the book being discussed.",
            "Publisher": "Name of the publisher of the book.",
            "Category": "Genre or category of the book.",
            "Result": "Outcome or conclusion from the book club discussion."
        },
        "movie": {
            "movie_id": "Unique identifier for each movie entry.",
            "Title": "Title of the movie.",
            "Year": "The year the movie was released.",
            "Director": "Name of the director of the movie.",
            "Budget_million": "Budget of the movie in millions.",
            "Gross_worldwide": "Total worldwide gross revenue of the movie."
        },
        "culture_company": {
            "Company_name": "Name of the cultural company.",
            "Type": "Type or category of the company.",
            "Incorporated_in": "Year the company was incorporated.",
            "Group_Equity_Shareholding": "Percentage of equity shareholding in the group.",
            "book_club_id": "Reference to the associated book club entry.",
            "movie_id": "Reference to the associated movie entry."
        }
    },
    "cre_Doc_Template_Mgt": {
        "Ref_Template_Types": {
            "Template_Type_Code": "A unique code representing the type of template.",
            "Template_Type_Description": "A description of the template type."
        },
        "Templates": {
            "Template_ID": "A unique identifier for each template.",
            "Version_Number": "The version number of the template.",
            "Template_Type_Code": "The code indicating the type of the template.",
            "Date_Effective_From": "The date from which the template is effective.",
            "Date_Effective_To": "The date until which the template is effective.",
            "Template_Details": "Detailed information about the template."
        },
        "Documents": {
            "Document_ID": "A unique identifier for each document.",
            "Template_ID": "The identifier of the template associated with the document.",
            "Document_Name": "The name of the document.",
            "Document_Description": "A brief description of the document.",
            "Other_Details": "Additional details related to the document."
        },
        "Paragraphs": {
            "Paragraph_ID": "A unique identifier for each paragraph.",
            "Document_ID": "The identifier of the document to which the paragraph belongs.",
            "Paragraph_Text": "The text content of the paragraph.",
            "Other_Details": "Additional details related to the paragraph."
        }
    },
    "musical": {
        "musical": {
            "Musical_ID": "Unique identifier for each musical.",
            "Name": "Title of the musical.",
            "Year": "Year the musical was released.",
            "Award": "Name of the award associated with the musical.",
            "Category": "Category of the award.",
            "Nominee": "Name of the nominee for the award.",
            "Result": "Outcome of the nomination (e.g., Won, Nominated)."
        },
        "actor": {
            "Actor_ID": "Unique identifier for each actor.",
            "Name": "Name of the actor.",
            "Musical_ID": "Identifier linking the actor to a specific musical.",
            "Character": "Name of the character played by the actor.",
            "Duration": "Duration of the actor's performance in the musical.",
            "age": "Age of the actor at the time of the performance."
        }
    },
    "world_1": {
        "city": {
            "ID": "Unique identifier for the city.",
            "Name": "Name of the city.",
            "CountryCode": "Code representing the country the city is located in.",
            "District": "Name of the district where the city is situated.",
            "Population": "Total population of the city."
        },
        "sqlite_sequence": {
            "name": "Name of the table for which the sequence is defined.",
            "seq": "Current sequence number for the specified table."
        },
        "country": {
            "Code": "Unique code representing the country.",
            "Name": "Name of the country.",
            "Continent": "Continent where the country is located.",
            "Region": "Geographical region of the country.",
            "SurfaceArea": "Total surface area of the country in square kilometers.",
            "IndepYear": "Year the country gained independence.",
            "Population": "Total population of the country.",
            "LifeExpectancy": "Average life expectancy in the country.",
            "GNP": "Gross National Product of the country.",
            "GNPOld": "Previous Gross National Product of the country.",
            "LocalName": "Name of the country in its local language.",
            "GovernmentForm": "Type of government in the country.",
            "HeadOfState": "Current head of state of the country.",
            "Capital": "Capital city of the country.",
            "Code2": "Two-letter country code."
        },
        "countrylanguage": {
            "CountryCode": "Code representing the country the language is spoken in.",
            "Language": "Name of the language.",
            "IsOfficial": "Indicates if the language is an official language of the country.",
            "Percentage": "Percentage of the population that speaks the language."
        }
    },
    "device": {
        "device": {
            "Device_ID": "Unique identifier for each device.",
            "Device": "Name or model of the device.",
            "Carrier": "Name of the carrier associated with the device.",
            "Package_Version": "Version of the software package installed on the device.",
            "Applications": "List of applications installed on the device.",
            "Software_Platform": "Operating system or platform the device runs on."
        },
        "shop": {
            "Shop_ID": "Unique identifier for each shop.",
            "Shop_Name": "Name of the shop.",
            "Location": "Geographical location of the shop.",
            "Open_Date": "Date when the shop was opened.",
            "Open_Year": "Year when the shop was opened."
        },
        "stock": {
            "Shop_ID": "Identifier for the shop where the stock is held.",
            "Device_ID": "Identifier for the device in stock.",
            "Quantity": "Number of units of the device available in stock."
        }
    },
    "tracking_grants_for_research": {
        "Document_Types": {
            "document_type_code": "Unique code representing the type of document.",
            "document_description": "Description of the document type."
        },
        "Documents": {
            "document_id": "Unique identifier for each document.",
            "document_type_code": "Code indicating the type of document.",
            "grant_id": "Identifier for the associated grant.",
            "sent_date": "Date when the document was sent.",
            "response_received_date": "Date when a response to the document was received.",
            "other_details": "Additional information related to the document."
        },
        "Grants": {
            "grant_id": "Unique identifier for each grant.",
            "organisation_id": "Identifier for the organisation receiving the grant.",
            "grant_amount": "Total amount of the grant.",
            "grant_start_date": "Start date of the grant period.",
            "grant_end_date": "End date of the grant period.",
            "other_details": "Additional information related to the grant."
        },
        "Organisation_Types": {
            "organisation_type": "Unique identifier for the type of organisation.",
            "organisation_type_description": "Description of the organisation type."
        },
        "Organisations": {
            "organisation_id": "Unique identifier for each organisation.",
            "organisation_type": "Type of the organisation.",
            "organisation_details": "Additional details about the organisation."
        },
        "Project_Outcomes": {
            "project_id": "Unique identifier for each project.",
            "outcome_code": "Code representing the outcome of the project.",
            "outcome_details": "Details describing the project outcome."
        },
        "Project_Staff": {
            "staff_id": "Unique identifier for each staff member.",
            "project_id": "Identifier for the project the staff member is associated with.",
            "role_code": "Code representing the staff member's role.",
            "date_from": "Start date of the staff member's involvement in the project.",
            "date_to": "End date of the staff member's involvement in the project.",
            "other_details": "Additional information related to the staff member's role."
        },
        "Projects": {
            "project_id": "Unique identifier for each project.",
            "organisation_id": "Identifier for the organisation managing the project.",
            "project_details": "Detailed description of the project."
        },
        "Research_Outcomes": {
            "outcome_code": "Unique code for each research outcome.",
            "outcome_description": "Description of the research outcome."
        },
        "Research_Staff": {
            "staff_id": "Unique identifier for each research staff member.",
            "employer_organisation_id": "Identifier for the organisation employing the staff member.",
            "staff_details": "Additional details about the research staff member."
        },
        "Staff_Roles": {
            "role_code": "Unique code representing the role of the staff member.",
            "role_description": "Description of the staff member's role."
        },
        "Tasks": {
            "task_id": "Unique identifier for each task.",
            "project_id": "Identifier for the project the task is associated with.",
            "task_details": "Detailed description of the task.",
            "eg Agree Objectives": "Example or guideline related to the task."
        }
    },
    "employee_hire_evaluation": {
        "employee": {
            "Employee_ID": "Unique identifier for each employee.",
            "Name": "Full name of the employee.",
            "Age": "Age of the employee.",
            "City": "City where the employee resides."
        },
        "shop": {
            "Shop_ID": "Unique identifier for each shop.",
            "Name": "Name of the shop.",
            "Location": "Geographical location of the shop.",
            "District": "District where the shop is located.",
            "Number_products": "Total number of products available in the shop.",
            "Manager_name": "Name of the shop manager."
        },
        "hiring": {
            "Shop_ID": "Identifier for the shop where the employee is hired.",
            "Employee_ID": "Identifier for the employee being hired.",
            "Start_from": "Date when the employee starts working.",
            "Is_full_time": "Indicates if the employee is a full-time worker."
        },
        "evaluation": {
            "Employee_ID": "Identifier for the employee being evaluated.",
            "Year_awarded": "Year in which the evaluation was conducted.",
            "Bonus": "Bonus amount awarded to the employee."
        }
    },
    "movie_1": {
        "Movie": {
            "mID": "Unique identifier for each movie.",
            "title": "Title of the movie.",
            "year": "Year the movie was released.",
            "director": "Name of the movie's director."
        },
        "Reviewer": {
            "rID": "Unique identifier for each reviewer.",
            "name": "Name of the reviewer."
        },
        "Rating": {
            "rID": "Identifier linking to the reviewer who gave the rating.",
            "mID": "Identifier linking to the movie being rated.",
            "stars": "Number of stars given in the rating.",
            "ratingDate": "Date when the rating was submitted."
        }
    },
    "network_1": {
        "Highschooler": {
            "ID": "Unique identifier for each high school student.",
            "name": "Full name of the high school student.",
            "grade": "Current grade level of the student in school."
        },
        "Friend": {
            "student_id": "Identifier for the student who has friends.",
            "friend_id": "Identifier for the student's friend."
        },
        "Likes": {
            "student_id": "Identifier for the student who likes someone.",
            "liked_id": "Identifier for the student who is liked."
        }
    },
    "poker_player": {
        "poker_player": {
            "Poker_Player_ID": "Unique identifier for each poker player.",
            "People_ID": "Identifier linking to the person's details.",
            "Final_Table_Made": "Indicates if the player reached the final table in a tournament.",
            "Best_Finish": "The highest position the player has achieved in tournaments.",
            "Money_Rank": "Ranking of the player based on their earnings.",
            "Earnings": "Total monetary winnings of the player from tournaments."
        },
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Nationality": "Code representing the person's nationality.",
            "Name": "Full name of the person.",
            "Birth_Date": "Date of birth of the person.",
            "Height": "Height of the person in centimeters."
        }
    },
    "program_share": {
        "program": {
            "Program_ID": "Unique identifier for each program.",
            "Name": "Name of the program.",
            "Origin": "Country or region where the program originates.",
            "Launch": "Date when the program was launched.",
            "Owner": "Individual or organization that owns the program."
        },
        "channel": {
            "Channel_ID": "Unique identifier for each channel.",
            "Name": "Name of the channel.",
            "Owner": "Individual or organization that owns the channel.",
            "Share_in_percent": "Percentage of market share held by the channel.",
            "Rating_in_percent": "Viewer rating percentage for the channel."
        },
        "broadcast": {
            "Channel_ID": "Identifier for the channel broadcasting the program.",
            "Program_ID": "Identifier for the program being broadcast.",
            "Time_of_day": "Time at which the program is broadcast."
        },
        "broadcast_share": {
            "Channel_ID": "Identifier for the channel sharing the broadcast data.",
            "Program_ID": "Identifier for the program being analyzed.",
            "Date": "Date of the broadcast.",
            "Share_in_percent": "Percentage share of the program during the broadcast."
        }
    },
    "aircraft": {
        "pilot": {
            "Pilot_Id": "Unique identifier for each pilot.",
            "Name": "Full name of the pilot.",
            "Age": "Age of the pilot."
        },
        "aircraft": {
            "Aircraft_ID": "Unique identifier for each aircraft.",
            "Aircraft": "Model or type of the aircraft.",
            "Description": "Detailed description of the aircraft.",
            "Max_Gross_Weight": "Maximum allowable weight of the aircraft.",
            "Total_disk_area": "Total area of the aircraft's wings.",
            "Max_disk_Loading": "Maximum loading capacity per unit area of the wings."
        },
        "match": {
            "Round": "Round number of the match.",
            "Location": "Geographical location where the match took place.",
            "Country": "Country where the match was held.",
            "Date": "Date when the match occurred.",
            "Fastest_Qualifying": "Fastest qualifying time recorded in the match.",
            "Winning_Pilot": "Name of the pilot who won the match.",
            "Winning_Aircraft": "Model of the aircraft used by the winning pilot."
        },
        "airport": {
            "Airport_ID": "Unique identifier for each airport.",
            "Airport_Name": "Name of the airport.",
            "Total_Passengers": "Total number of passengers handled by the airport.",
            "%_Change_2007": "Percentage change in passenger numbers compared to 2007.",
            "International_Passengers": "Number of international passengers at the airport.",
            "Domestic_Passengers": "Number of domestic passengers at the airport.",
            "Transit_Passengers": "Number of passengers in transit at the airport.",
            "Aircraft_Movements": "Total number of aircraft takeoffs and landings.",
            "Freight_Metric_Tonnes": "Total freight handled at the airport in metric tonnes."
        },
        "airport_aircraft": {
            "ID": "Unique identifier for each airport-aircraft relationship.",
            "Airport_ID": "Identifier for the associated airport.",
            "Aircraft_ID": "Identifier for the associated aircraft."
        }
    },
    "restaurant_1": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study for the student.",
            "Advisor": "Name of the student's academic advisor.",
            "city_code": "Code representing the city where the student resides."
        },
        "Restaurant": {
            "ResID": "Unique identifier for each restaurant.",
            "ResName": "Name of the restaurant.",
            "Address": "Physical address of the restaurant.",
            "Rating": "Rating score of the restaurant."
        },
        "Type_Of_Restaurant": {
            "ResID": "Identifier linking to the restaurant.",
            "ResTypeID": "Identifier for the type of restaurant."
        },
        "Restaurant_Type": {
            "ResTypeID": "Unique identifier for each restaurant type.",
            "ResTypeName": "Name of the restaurant type.",
            "ResTypeDescription": "Description of the restaurant type."
        },
        "Visits_Restaurant": {
            "StuID": "Identifier linking to the student who visited.",
            "ResID": "Identifier linking to the restaurant visited.",
            "Time": "Time of the visit to the restaurant.",
            "Spent": "Amount of money spent during the visit."
        }
    },
    "customers_and_invoices": {
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "customer_first_name": "First name of the customer.",
            "customer_middle_initial": "Middle initial of the customer.",
            "customer_last_name": "Last name of the customer.",
            "gender": "Gender of the customer.",
            "email_address": "Email address of the customer.",
            "login_name": "Username for customer login.",
            "login_password": "Password for customer login.",
            "phone_number": "Contact phone number of the customer.",
            "town_city": "City or town where the customer resides.",
            "state_county_province": "State, county, or province of the customer's address.",
            "country": "Country of the customer."
        },
        "Orders": {
            "order_id": "Unique identifier for each order.",
            "customer_id": "Identifier for the customer who placed the order.",
            "date_order_placed": "Date when the order was placed.",
            "order_details": "Details regarding the order."
        },
        "Invoices": {
            "invoice_number": "Unique identifier for each invoice.",
            "order_id": "Identifier for the order associated with the invoice.",
            "invoice_date": "Date when the invoice was issued."
        },
        "Accounts": {
            "account_id": "Unique identifier for each account.",
            "customer_id": "Identifier for the customer associated with the account.",
            "date_account_opened": "Date when the account was opened.",
            "account_name": "Name of the account.",
            "other_account_details": "Additional details about the account."
        },
        "Product_Categories": {
            "production_type_code": "Code representing the type of product.",
            "product_type_description": "Description of the product type.",
            "vat_rating": "Value-added tax rating for the product category."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "parent_product_id": "Identifier for the parent product, if applicable.",
            "production_type_code": "Code indicating the production type of the product.",
            "unit_price": "Price per unit of the product.",
            "product_name": "Name of the product.",
            "product_color": "Color of the product.",
            "product_size": "Size of the product."
        },
        "Financial_Transactions": {
            "transaction_id": "Unique identifier for each financial transaction.",
            "account_id": "Identifier for the account associated with the transaction.",
            "invoice_number": "Invoice number related to the transaction.",
            "transaction_type": "Type of transaction (e.g., credit, debit).",
            "transaction_date": "Date when the transaction occurred.",
            "transaction_amount": "Amount involved in the transaction.",
            "transaction_comment": "Comments or notes regarding the transaction.",
            "other_transaction_details": "Additional details about the transaction."
        },
        "Order_Items": {
            "order_item_id": "Unique identifier for each item in an order.",
            "order_id": "Identifier for the order that includes this item.",
            "product_id": "Identifier for the product being ordered.",
            "product_quantity": "Quantity of the product ordered.",
            "other_order_item_details": "Additional details about the order item."
        },
        "Invoice_Line_Items": {
            "order_item_id": "Unique identifier for each line item in an invoice.",
            "invoice_number": "Identifier for the invoice that includes this line item.",
            "product_id": "Identifier for the product in the line item.",
            "product_title": "Title or name of the product in the line item.",
            "product_quantity": "Quantity of the product in the line item.",
            "product_price": "Price of the product in the line item.",
            "derived_product_cost": "Calculated cost of the product.",
            "derived_vat_payable": "Calculated VAT payable for the line item.",
            "derived_total_cost": "Total cost derived from the line item."
        }
    },
    "insurance_and_eClaims": {
        "Customers": {
            "Customer_ID": "Unique identifier for each customer.",
            "Customer_Details": "Detailed information about the customer."
        },
        "Staff": {
            "Staff_ID": "Unique identifier for each staff member.",
            "Staff_Details": "Detailed information about the staff member."
        },
        "Policies": {
            "Policy_ID": "Unique identifier for each insurance policy.",
            "Customer_ID": "Identifier linking the policy to a specific customer.",
            "Policy_Type_Code": "Code representing the type of insurance policy.",
            "Start_Date": "Date when the insurance policy becomes effective.",
            "End_Date": "Date when the insurance policy expires."
        },
        "Claim_Headers": {
            "Claim_Header_ID": "Unique identifier for each claim header.",
            "Claim_Status_Code": "Code indicating the current status of the claim.",
            "Claim_Type_Code": "Code representing the type of claim.",
            "Policy_ID": "Identifier linking the claim to a specific policy.",
            "Date_of_Claim": "Date when the claim was filed.",
            "Date_of_Settlement": "Date when the claim was settled.",
            "Amount_Claimed": "Total amount claimed by the policyholder.",
            "Amount_Paid": "Total amount paid out for the claim."
        },
        "Claims_Documents": {
            "Claim_ID": "Identifier linking the document to a specific claim.",
            "Document_Type_Code": "Code representing the type of document submitted.",
            "Created_by_Staff_ID": "Identifier of the staff member who created the document.",
            "Created_Date": "Date when the document was created."
        },
        "Claims_Processing_Stages": {
            "Claim_Stage_ID": "Unique identifier for each claim processing stage.",
            "Next_Claim_Stage_ID": "Identifier for the next stage in the claim process.",
            "Claim_Status_Name": "Name of the current status of the claim.",
            "Claim_Status_Description": "Description of the current status of the claim."
        },
        "Claims_Processing": {
            "Claim_Processing_ID": "Unique identifier for each claim processing record.",
            "Claim_ID": "Identifier linking the processing record to a specific claim.",
            "Claim_Outcome_Code": "Code indicating the outcome of the claim processing.",
            "Claim_Stage_ID": "Identifier for the stage of processing the claim is in.",
            "Staff_ID": "Identifier of the staff member handling the claim."
        }
    },
    "college_1": {
        "CLASS": {
            "CLASS_CODE": "Unique identifier for the class.",
            "CRS_CODE": "Code representing the course associated with the class.",
            "CLASS_SECTION": "Section identifier for the class.",
            "CLASS_TIME": "Scheduled time for the class.",
            "CLASS_ROOM": "Room where the class is held.",
            "PROF_NUM": "Identifier for the professor teaching the class."
        },
        "COURSE": {
            "CRS_CODE": "Unique code for the course.",
            "DEPT_CODE": "Code representing the department offering the course.",
            "CRS_DESCRIPTION": "Description of the course content.",
            "CRS_CREDIT": "Number of credit hours for the course."
        },
        "DEPARTMENT": {
            "DEPT_CODE": "Unique code for the department.",
            "DEPT_NAME": "Name of the department.",
            "SCHOOL_CODE": "Code representing the school to which the department belongs.",
            "EMP_NUM": "Identifier for the employee associated with the department.",
            "DEPT_ADDRESS": "Physical address of the department.",
            "DEPT_EXTENSION": "Phone extension for the department."
        },
        "EMPLOYEE": {
            "EMP_NUM": "Unique identifier for the employee.",
            "EMP_LNAME": "Last name of the employee.",
            "EMP_FNAME": "First name of the employee.",
            "EMP_INITIAL": "Middle initial of the employee.",
            "EMP_JOBCODE": "Job code representing the employee's position.",
            "EMP_HIREDATE": "Date the employee was hired.",
            "EMP_DOB": "Date of birth of the employee."
        },
        "ENROLL": {
            "CLASS_CODE": "Code for the class in which the student is enrolled.",
            "STU_NUM": "Unique identifier for the student.",
            "ENROLL_GRADE": "Grade received by the student in the class."
        },
        "PROFESSOR": {
            "EMP_NUM": "Unique identifier for the professor.",
            "DEPT_CODE": "Code representing the department the professor belongs to.",
            "PROF_OFFICE": "Office location of the professor.",
            "PROF_EXTENSION": "Phone extension for the professor.",
            "PROF_HIGH_DEGREE": "Highest degree obtained by the professor."
        },
        "STUDENT": {
            "STU_NUM": "Unique identifier for the student.",
            "STU_LNAME": "Last name of the student.",
            "STU_FNAME": "First name of the student.",
            "STU_INIT": "Middle initial of the student.",
            "STU_DOB": "Date of birth of the student.",
            "STU_HRS": "Total credit hours completed by the student.",
            "STU_CLASS": "Current class level of the student.",
            "STU_GPA": "Grade point average of the student.",
            "STU_TRANSFER": "Indicates if the student is a transfer student.",
            "DEPT_CODE": "Code representing the department the student is enrolled in.",
            "STU_PHONE": "Contact phone number of the student.",
            "PROF_NUM": "Identifier for the professor assigned to the student."
        }
    },
    "local_govt_mdm": {
        "Customer_Master_Index": {
            "master_customer_id": "Unique identifier for each customer in the master index.",
            "cmi_details": "Detailed information related to the customer master index."
        },
        "CMI_Cross_References": {
            "cmi_cross_ref_id": "Unique identifier for cross-references in the customer master index.",
            "master_customer_id": "Identifier linking to the master customer in the index.",
            "source_system_code": "Code indicating the source system of the cross-reference."
        },
        "Council_Tax": {
            "council_tax_id": "Unique identifier for each council tax record.",
            "cmi_cross_ref_id": "Identifier linking to the corresponding cross-reference in the customer master index."
        },
        "Business_Rates": {
            "business_rates_id": "Unique identifier for each business rates record.",
            "cmi_cross_ref_id": "Identifier linking to the corresponding cross-reference in the customer master index."
        },
        "Benefits_Overpayments": {
            "council_tax_id": "Identifier for the council tax associated with overpayments.",
            "cmi_cross_ref_id": "Identifier linking to the corresponding cross-reference in the customer master index."
        },
        "Parking_Fines": {
            "council_tax_id": "Identifier for the council tax associated with parking fines.",
            "cmi_cross_ref_id": "Identifier linking to the corresponding cross-reference in the customer master index."
        },
        "Rent_Arrears": {
            "council_tax_id": "Identifier for the council tax associated with rent arrears.",
            "cmi_cross_ref_id": "Identifier linking to the corresponding cross-reference in the customer master index."
        },
        "Electoral_Register": {
            "electoral_register_id": "Unique identifier for each entry in the electoral register.",
            "cmi_cross_ref_id": "Identifier linking to the corresponding cross-reference in the customer master index."
        }
    },
    "book_2": {
        "publication": {
            "Publication_ID": "Unique identifier for each publication.",
            "Book_ID": "Identifier for the book associated with the publication.",
            "Publisher": "Name of the publisher of the book.",
            "Publication_Date": "Date when the book was published.",
            "Price": "Retail price of the publication."
        },
        "book": {
            "Book_ID": "Unique identifier for each book.",
            "Title": "Title of the book.",
            "Issues": "Number of issues or editions of the book.",
            "Writer": "Identifier for the writer of the book."
        }
    },
    "hr_1": {
        "regions": {
            "REGION_ID": "Unique identifier for each region.",
            "REGION_NAME": "Name of the region."
        },
        "countries": {
            "COUNTRY_ID": "Unique identifier for each country.",
            "COUNTRY_NAME": "Name of the country.",
            "REGION_ID": "Identifier linking the country to its region."
        },
        "departments": {
            "DEPARTMENT_ID": "Unique identifier for each department.",
            "DEPARTMENT_NAME": "Name of the department.",
            "MANAGER_ID": "Identifier for the manager of the department.",
            "LOCATION_ID": "Identifier for the location of the department."
        },
        "jobs": {
            "JOB_ID": "Unique identifier for each job.",
            "JOB_TITLE": "Title of the job.",
            "MIN_SALARY": "Minimum salary for the job.",
            "MAX_SALARY": "Maximum salary for the job."
        },
        "employees": {
            "EMPLOYEE_ID": "Unique identifier for each employee.",
            "FIRST_NAME": "First name of the employee.",
            "LAST_NAME": "Last name of the employee.",
            "EMAIL": "Email address of the employee.",
            "PHONE_NUMBER": "Phone number of the employee.",
            "HIRE_DATE": "Date when the employee was hired.",
            "JOB_ID": "Identifier for the job held by the employee.",
            "SALARY": "Salary of the employee.",
            "COMMISSION_PCT": "Commission percentage for the employee.",
            "MANAGER_ID": "Identifier for the employee's manager.",
            "DEPARTMENT_ID": "Identifier for the department the employee belongs to."
        },
        "job_history": {
            "EMPLOYEE_ID": "Identifier for the employee whose job history is recorded.",
            "START_DATE": "Date when the employee started the job.",
            "END_DATE": "Date when the employee ended the job.",
            "JOB_ID": "Identifier for the job held during this period.",
            "DEPARTMENT_ID": "Identifier for the department during this period."
        },
        "locations": {
            "LOCATION_ID": "Unique identifier for each location.",
            "STREET_ADDRESS": "Street address of the location.",
            "POSTAL_CODE": "Postal code of the location.",
            "CITY": "City where the location is situated.",
            "STATE_PROVINCE": "State or province of the location.",
            "COUNTRY_ID": "Identifier for the country of the location."
        }
    },
    "soccer_1": {
        "Player_Attributes": {
            "id": "Unique identifier for the player attribute record.",
            "player_fifa_api_id": "FIFA API identifier for the player.",
            "player_api_id": "API identifier for the player in the database.",
            "date": "Date when the player attributes were recorded.",
            "overall_rating": "Overall skill rating of the player.",
            "potential": "Potential skill rating of the player.",
            "preferred_foot": "Player's preferred foot (left or right).",
            "attacking_work_rate": "Player's work rate in attacking situations.",
            "defensive_work_rate": "Player's work rate in defensive situations.",
            "crossing": "Player's ability to cross the ball.",
            "finishing": "Player's ability to finish scoring opportunities.",
            "heading_accuracy": "Player's accuracy in heading the ball.",
            "short_passing": "Player's ability in short passing.",
            "volleys": "Player's ability to score from volleys.",
            "dribbling": "Player's skill in dribbling the ball.",
            "curve": "Player's ability to curve the ball.",
            "free_kick_accuracy": "Player's accuracy in taking free kicks.",
            "long_passing": "Player's ability in long passing.",
            "ball_control": "Player's control over the ball.",
            "acceleration": "Player's speed of acceleration.",
            "sprint_speed": "Player's maximum sprinting speed.",
            "agility": "Player's ability to change direction quickly.",
            "reactions": "Player's reaction time in gameplay.",
            "balance": "Player's balance while on the ball.",
            "shot_power": "Power behind the player's shots.",
            "jumping": "Player's jumping ability.",
            "stamina": "Player's endurance during a match.",
            "strength": "Player's physical strength.",
            "long_shots": "Player's ability to score from long distances.",
            "aggression": "Player's level of aggression on the field.",
            "interceptions": "Player's ability to intercept passes.",
            "positioning": "Player's positioning during play.",
            "vision": "Player's ability to see and execute plays.",
            "penalties": "Player's skill in taking penalty kicks.",
            "marking": "Player's ability to mark opponents.",
            "standing_tackle": "Player's ability to perform standing tackles.",
            "sliding_tackle": "Player's ability to perform sliding tackles.",
            "gk_diving": "Goalkeeper's ability to dive for the ball.",
            "gk_handling": "Goalkeeper's ability to handle the ball.",
            "gk_kicking": "Goalkeeper's ability to kick the ball.",
            "gk_positioning": "Goalkeeper's positioning in goal.",
            "gk_reflexes": "Goalkeeper's reflexes in saving shots."
        },
        "sqlite_sequence": {
            "name": "Name of the table for which the sequence is maintained.",
            "seq": "Current sequence number for the table."
        },
        "Player": {
            "id": "Unique identifier for the player.",
            "player_api_id": "API identifier for the player.",
            "player_name": "Name of the player.",
            "player_fifa_api_id": "FIFA API identifier for the player.",
            "birthday": "Player's date of birth.",
            "height": "Player's height in centimeters.",
            "weight": "Player's weight in kilograms."
        },
        "League": {
            "id": "Unique identifier for the league.",
            "country_id": "Identifier for the country of the league.",
            "name": "Name of the league."
        },
        "Country": {
            "id": "Unique identifier for the country.",
            "name": "Name of the country."
        },
        "Team": {
            "id": "Unique identifier for the team.",
            "team_api_id": "API identifier for the team.",
            "team_fifa_api_id": "FIFA API identifier for the team.",
            "team_long_name": "Full name of the team.",
            "team_short_name": "Abbreviated name of the team."
        },
        "Team_Attributes": {
            "id": "Unique identifier for the team attribute record.",
            "team_fifa_api_id": "FIFA API identifier for the team.",
            "team_api_id": "API identifier for the team.",
            "date": "Date when the team attributes were recorded.",
            "buildUpPlaySpeed": "Speed of the team's build-up play.",
            "buildUpPlaySpeedClass": "Classification of build-up play speed.",
            "buildUpPlayDribbling": "Team's dribbling ability in build-up play.",
            "buildUpPlayDribblingClass": "Classification of build-up play dribbling.",
            "buildUpPlayPassing": "Team's passing ability in build-up play.",
            "buildUpPlayPassingClass": "Classification of build-up play passing.",
            "buildUpPlayPositioningClass": "Classification of build-up play positioning.",
            "chanceCreationPassing": "Team's passing ability in chance creation.",
            "chanceCreationPassingClass": "Classification of chance creation passing.",
            "chanceCreationCrossing": "Team's crossing ability in chance creation.",
            "chanceCreationCrossingClass": "Classification of chance creation crossing.",
            "chanceCreationShooting": "Team's shooting ability in chance creation.",
            "chanceCreationShootingClass": "Classification of chance creation shooting.",
            "chanceCreationPositioningClass": "Classification of chance creation positioning.",
            "defencePressure": "Team's pressure in defense.",
            "defencePressureClass": "Classification of defensive pressure.",
            "defenceAggression": "Team's aggression in defense.",
            "defenceAggressionClass": "Classification of defensive aggression.",
            "defenceTeamWidth": "Width of the team's defensive formation.",
            "defenceTeamWidthClass": "Classification of defensive team width.",
            "defenceDefenderLineClass": "Classification of the defensive line."
        }
    },
    "sakila_1": {
        "actor": {
            "actor_id": "Unique identifier for each actor.",
            "first_name": "First name of the actor.",
            "last_name": "Last name of the actor.",
            "last_update": "Timestamp of the last update to the actor's record."
        },
        "address": {
            "address_id": "Unique identifier for each address.",
            "address": "Primary address line.",
            "address2": "Secondary address line (if any).",
            "district": "District where the address is located.",
            "city_id": "Identifier for the city associated with the address.",
            "postal_code": "Postal code for the address.",
            "phone": "Contact phone number associated with the address.",
            "last_update": "Timestamp of the last update to the address record."
        },
        "category": {
            "category_id": "Unique identifier for each category.",
            "name": "Name of the category.",
            "last_update": "Timestamp of the last update to the category record."
        },
        "city": {
            "city_id": "Unique identifier for each city.",
            "city": "Name of the city.",
            "country_id": "Identifier for the country associated with the city.",
            "last_update": "Timestamp of the last update to the city record."
        },
        "country": {
            "country_id": "Unique identifier for each country.",
            "country": "Name of the country.",
            "last_update": "Timestamp of the last update to the country record."
        },
        "customer": {
            "customer_id": "Unique identifier for each customer.",
            "store_id": "Identifier for the store associated with the customer.",
            "first_name": "First name of the customer.",
            "last_name": "Last name of the customer.",
            "email": "Email address of the customer.",
            "address_id": "Identifier for the address associated with the customer.",
            "active": "Indicates if the customer is active.",
            "create_date": "Date when the customer was created.",
            "last_update": "Timestamp of the last update to the customer record."
        },
        "film": {
            "film_id": "Unique identifier for each film.",
            "title": "Title of the film.",
            "description": "Description of the film.",
            "release_year": "Year the film was released.",
            "language_id": "Identifier for the language of the film.",
            "original_language_id": "Identifier for the original language of the film (if applicable).",
            "rental_duration": "Duration for which the film can be rented.",
            "rental_rate": "Rental price for the film.",
            "length": "Length of the film in minutes.",
            "replacement_cost": "Cost to replace the film if lost or damaged.",
            "rating": "Rating of the film.",
            "special_features": "Special features available for the film.",
            "last_update": "Timestamp of the last update to the film record."
        },
        "film_actor": {
            "actor_id": "Identifier for the actor associated with the film.",
            "film_id": "Identifier for the film associated with the actor.",
            "last_update": "Timestamp of the last update to the film-actor relationship."
        },
        "film_category": {
            "film_id": "Identifier for the film associated with the category.",
            "category_id": "Identifier for the category associated with the film.",
            "last_update": "Timestamp of the last update to the film-category relationship."
        },
        "film_text": {
            "film_id": "Identifier for the film.",
            "title": "Title of the film.",
            "description": "Description of the film."
        },
        "inventory": {
            "inventory_id": "Unique identifier for each inventory item.",
            "film_id": "Identifier for the film in the inventory.",
            "store_id": "Identifier for the store where the inventory is located.",
            "last_update": "Timestamp of the last update to the inventory record."
        },
        "language": {
            "language_id": "Unique identifier for each language.",
            "name": "Name of the language.",
            "last_update": "Timestamp of the last update to the language record."
        },
        "payment": {
            "payment_id": "Unique identifier for each payment.",
            "customer_id": "Identifier for the customer making the payment.",
            "staff_id": "Identifier for the staff member processing the payment.",
            "rental_id": "Identifier for the rental associated with the payment.",
            "amount": "Amount of the payment.",
            "payment_date": "Date when the payment was made.",
            "last_update": "Timestamp of the last update to the payment record."
        },
        "rental": {
            "rental_id": "Unique identifier for each rental transaction.",
            "rental_date": "Date when the rental was made.",
            "inventory_id": "Identifier for the inventory item being rented.",
            "customer_id": "Identifier for the customer renting the item.",
            "return_date": "Date when the rental item is returned.",
            "staff_id": "Identifier for the staff member processing the rental.",
            "last_update": "Timestamp of the last update to the rental record."
        },
        "staff": {
            "staff_id": "Unique identifier for each staff member.",
            "first_name": "First name of the staff member.",
            "last_name": "Last name of the staff member.",
            "address_id": "Identifier for the address of the staff member.",
            "picture": "Picture of the staff member.",
            "email": "Email address of the staff member.",
            "store_id": "Identifier for the store where the staff member works.",
            "active": "Indicates if the staff member is active.",
            "username": "Username for the staff member's account.",
            "password": "Password for the staff member's account.",
            "last_update": "Timestamp of the last update to the staff record."
        },
        "store": {
            "store_id": "Unique identifier for each store.",
            "manager_staff_id": "Identifier for the staff member managing the store.",
            "address_id": "Identifier for the address of the store.",
            "last_update": "Timestamp of the last update to the store record."
        }
    },
    "real_estate_properties": {
        "Ref_Feature_Types": {
            "feature_type_code": "Unique code representing the type of feature.",
            "feature_type_name": "Name of the feature type."
        },
        "Ref_Property_Types": {
            "property_type_code": "Unique code representing the type of property.",
            "property_type_description": "Description of the property type."
        },
        "Other_Available_Features": {
            "feature_id": "Unique identifier for the feature.",
            "feature_type_code": "Code indicating the type of feature.",
            "feature_name": "Name of the feature.",
            "feature_description": "Description of the feature."
        },
        "Properties": {
            "property_id": "Unique identifier for the property.",
            "property_type_code": "Code indicating the type of property.",
            "date_on_market": "Date the property was listed for sale.",
            "date_sold": "Date the property was sold.",
            "property_name": "Name of the property.",
            "property_address": "Address of the property.",
            "room_count": "Total number of rooms in the property.",
            "vendor_requested_price": "Price requested by the vendor.",
            "buyer_offered_price": "Price offered by the buyer.",
            "agreed_selling_price": "Final selling price agreed upon.",
            "apt_feature_1": "Feature specific to apartments.",
            "apt_feature_2": "Additional feature specific to apartments.",
            "apt_feature_3": "Another feature specific to apartments.",
            "fld_feature_1": "Feature specific to flats.",
            "fld_feature_2": "Additional feature specific to flats.",
            "fld_feature_3": "Another feature specific to flats.",
            "hse_feature_1": "Feature specific to houses.",
            "hse_feature_2": "Additional feature specific to houses.",
            "hse_feature_3": "Another feature specific to houses.",
            "oth_feature_1": "Other feature not categorized.",
            "oth_feature_2": "Additional other feature.",
            "oth_feature_3": "Another additional other feature.",
            "shp_feature_1": "Feature specific to shops.",
            "shp_feature_2": "Additional feature specific to shops.",
            "shp_feature_3": "Another feature specific to shops.",
            "other_property_details": "Additional details about the property."
        },
        "Other_Property_Features": {
            "property_id": "Unique identifier for the property.",
            "feature_id": "Unique identifier for the feature.",
            "property_feature_description": "Description of the property feature."
        }
    },
    "college_3": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Major field of study for the student.",
            "Advisor": "Advisor assigned to the student.",
            "city_code": "Code representing the city of the student's residence."
        },
        "Faculty": {
            "FacID": "Unique identifier for each faculty member.",
            "Lname": "Last name of the faculty member.",
            "Fname": "First name of the faculty member.",
            "Rank": "Rank or title of the faculty member.",
            "Sex": "Gender of the faculty member.",
            "Phone": "Contact phone number of the faculty member.",
            "Room": "Room number assigned to the faculty member.",
            "Building": "Building where the faculty member's office is located."
        },
        "Department": {
            "DNO": "Unique identifier for each department.",
            "Division": "Division to which the department belongs.",
            "DName": "Name of the department.",
            "Room": "Room number assigned to the department.",
            "Building": "Building where the department is located.",
            "DPhone": "Contact phone number for the department."
        },
        "Member_of": {
            "FacID": "Unique identifier for the faculty member.",
            "DNO": "Unique identifier for the department.",
            "Appt_Type": "Type of appointment for the faculty member in the department."
        },
        "Course": {
            "CID": "Unique identifier for each course.",
            "CName": "Name of the course.",
            "Credits": "Number of credits awarded for the course.",
            "Instructor": "Identifier for the instructor teaching the course.",
            "Days": "Days of the week the course is held.",
            "Hours": "Time of day the course is scheduled.",
            "DNO": "Unique identifier for the department offering the course."
        },
        "Minor_in": {
            "StuID": "Unique identifier for each student pursuing a minor.",
            "DNO": "Unique identifier for the department offering the minor."
        },
        "Enrolled_in": {
            "StuID": "Unique identifier for each student enrolled in a course.",
            "CID": "Unique identifier for the course the student is enrolled in.",
            "Grade": "Grade received by the student in the course."
        },
        "Gradeconversion": {
            "lettergrade": "Letter grade assigned to a course.",
            "gradepoint": "Corresponding grade point value for the letter grade."
        }
    },
    "course_teach": {
        "course": {
            "Course_ID": "Unique identifier for each course.",
            "Staring_Date": "The date when the course begins.",
            "Course": "The name or title of the course."
        },
        "teacher": {
            "Teacher_ID": "Unique identifier for each teacher.",
            "Name": "The full name of the teacher.",
            "Age": "The age of the teacher.",
            "Hometown": "The hometown of the teacher."
        },
        "course_arrange": {
            "Course_ID": "Identifier linking to the specific course.",
            "Teacher_ID": "Identifier linking to the teacher assigned to the course.",
            "Grade": "The grade level or classification of the course."
        }
    },
    "roller_coaster": {
        "roller_coaster": {
            "Roller_Coaster_ID": "Unique identifier for each roller coaster.",
            "Name": "The name of the roller coaster.",
            "Park": "The amusement park where the roller coaster is located.",
            "Country_ID": "Identifier for the country where the roller coaster is situated.",
            "Length": "The length of the roller coaster track in meters.",
            "Height": "The maximum height of the roller coaster in meters.",
            "Speed": "The maximum speed of the roller coaster in kilometers per hour.",
            "Opened": "The year the roller coaster was opened to the public.",
            "Status": "Current operational status of the roller coaster."
        },
        "country": {
            "Country_ID": "Unique identifier for each country.",
            "Name": "The name of the country.",
            "Population": "Total population of the country.",
            "Area": "Total land area of the country in square kilometers.",
            "Languages": "Number of official languages spoken in the country."
        }
    },
    "customer_deliveries": {
        "Products": {
            "product_id": "Unique identifier for each product.",
            "product_name": "Name of the product.",
            "product_price": "Price of the product.",
            "product_description": "Detailed description of the product."
        },
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "address_details": "Detailed information about the address.",
            "city": "City where the address is located.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country of the address."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "payment_method": "Preferred payment method of the customer.",
            "customer_name": "Full name of the customer.",
            "customer_phone": "Contact phone number of the customer.",
            "customer_email": "Email address of the customer.",
            "date_became_customer": "Date when the customer registered."
        },
        "Regular_Orders": {
            "regular_order_id": "Unique identifier for each regular order.",
            "distributer_id": "Identifier for the distributor associated with the order."
        },
        "Regular_Order_Products": {
            "regular_order_id": "Identifier for the regular order.",
            "product_id": "Identifier for the product in the order."
        },
        "Actual_Orders": {
            "actual_order_id": "Unique identifier for each actual order.",
            "order_status_code": "Status code indicating the current state of the order.",
            "regular_order_id": "Identifier for the associated regular order.",
            "actual_order_date": "Date when the actual order was placed."
        },
        "Actual_Order_Products": {
            "actual_order_id": "Identifier for the actual order.",
            "product_id": "Identifier for the product in the actual order."
        },
        "Customer_Addresses": {
            "customer_id": "Identifier for the customer associated with the address.",
            "address_id": "Identifier for the address.",
            "date_from": "Start date for the address validity.",
            "address_type": "Type of address (e.g., billing, shipping).",
            "date_to": "End date for the address validity."
        },
        "Delivery_Routes": {
            "route_id": "Unique identifier for each delivery route.",
            "route_name": "Name of the delivery route.",
            "other_route_details": "Additional details about the delivery route."
        },
        "Delivery_Route_Locations": {
            "location_code": "Unique code for each delivery location.",
            "route_id": "Identifier for the associated delivery route.",
            "location_address_id": "Identifier for the address of the location.",
            "location_name": "Name of the delivery location."
        },
        "Trucks": {
            "truck_id": "Unique identifier for each truck.",
            "truck_licence_number": "License number of the truck.",
            "truck_details": "Detailed information about the truck."
        },
        "Employees": {
            "employee_id": "Unique identifier for each employee.",
            "employee_address_id": "Identifier for the employee's address.",
            "employee_name": "Full name of the employee.",
            "employee_phone": "Contact phone number of the employee."
        },
        "Order_Deliveries": {
            "location_code": "Code for the delivery location.",
            "actual_order_id": "Identifier for the actual order being delivered.",
            "delivery_status_code": "Status code indicating the delivery status.",
            "driver_employee_id": "Identifier for the employee driving the delivery.",
            "truck_id": "Identifier for the truck used for delivery.",
            "delivery_date": "Date when the delivery is scheduled."
        }
    },
    "game_injury": {
        "stadium": {
            "id": "Unique identifier for each stadium.",
            "name": "Name of the stadium.",
            "Home_Games": "Total number of home games played at the stadium.",
            "Average_Attendance": "Average number of attendees per game at the stadium.",
            "Total_Attendance": "Total number of attendees across all games at the stadium.",
            "Capacity_Percentage": "Percentage of stadium capacity filled during games."
        },
        "game": {
            "stadium_id": "Identifier linking the game to its respective stadium.",
            "id": "Unique identifier for each game.",
            "Season": "The season in which the game is played.",
            "Date": "Date when the game takes place.",
            "Home_team": "Identifier for the home team participating in the game.",
            "Away_team": "Identifier for the away team participating in the game.",
            "Score": "Final score of the game.",
            "Competition": "Identifier for the competition or league in which the game is held."
        },
        "injury_accident": {
            "game_id": "Identifier linking the injury to the specific game.",
            "id": "Unique identifier for each injury incident.",
            "Player": "Name of the player who sustained the injury.",
            "Injury": "Description of the injury sustained by the player.",
            "Number_of_matches": "Number of matches the player missed due to the injury.",
            "Source": "Source of information regarding the injury."
        }
    },
    "school_finance": {
        "School": {
            "School_id": "Unique identifier for each school.",
            "School_name": "Name of the school.",
            "Location": "Geographical location of the school.",
            "Mascot": "School mascot representation.",
            "Enrollment": "Total number of students enrolled.",
            "IHSAA_Class": "Class designation in the Indiana High School Athletic Association.",
            "IHSAA_Football_Class": "Football class designation in the Indiana High School Athletic Association.",
            "County": "County where the school is located."
        },
        "budget": {
            "School_id": "Unique identifier for the school associated with the budget.",
            "Year": "Fiscal year for the budget.",
            "Budgeted": "Total budgeted amount for the year.",
            "total_budget_percent_budgeted": "Percentage of the total budget that is budgeted.",
            "Invested": "Amount that has been invested from the budget.",
            "total_budget_percent_invested": "Percentage of the total budget that has been invested.",
            "Budget_invested_percent": "Percentage of the budget that has been invested."
        },
        "endowment": {
            "endowment_id": "Unique identifier for each endowment record.",
            "School_id": "Unique identifier for the school associated with the endowment.",
            "donator_name": "Name of the individual or organization that donated.",
            "amount": "Amount of money donated."
        }
    },
    "scholar": {
        "venue": {
            "venueId": "Unique identifier for each venue.",
            "venueName": "Name of the venue where the paper is published."
        },
        "author": {
            "authorId": "Unique identifier for each author.",
            "authorName": "Name of the author."
        },
        "dataset": {
            "datasetId": "Unique identifier for each dataset.",
            "datasetName": "Name of the dataset."
        },
        "journal": {
            "journalId": "Unique identifier for each journal.",
            "journalName": "Name of the journal."
        },
        "keyphrase": {
            "keyphraseId": "Unique identifier for each keyphrase.",
            "keyphraseName": "Name of the keyphrase."
        },
        "paper": {
            "paperId": "Unique identifier for each paper.",
            "title": "Title of the paper.",
            "venueId": "Identifier for the venue where the paper is published.",
            "year": "Year the paper was published.",
            "numCiting": "Number of papers that cite this paper.",
            "numCitedBy": "Number of papers this paper cites.",
            "journalId": "Identifier for the journal where the paper is published."
        },
        "cite": {
            "citingPaperId": "Identifier for the paper that cites another paper.",
            "citedPaperId": "Identifier for the paper that is being cited."
        },
        "paperDataset": {
            "paperId": "Identifier for the paper associated with a dataset.",
            "datasetId": "Identifier for the dataset associated with a paper."
        },
        "paperKeyphrase": {
            "paperId": "Identifier for the paper associated with a keyphrase.",
            "keyphraseId": "Identifier for the keyphrase associated with a paper."
        },
        "writes": {
            "paperId": "Identifier for the paper written by an author.",
            "authorId": "Identifier for the author who wrote the paper."
        }
    },
    "voter_1": {
        "AREA_CODE_STATE": {
            "area_code": "The telephone area code associated with a specific region.",
            "state": "The name of the state corresponding to the area code."
        },
        "CONTESTANTS": {
            "contestant_number": "A unique identifier for each contestant.",
            "contestant_name": "The name of the contestant participating in the contest."
        },
        "VOTES": {
            "vote_id": "A unique identifier for each vote cast.",
            "phone_number": "The phone number of the voter.",
            "state": "The state from which the vote was cast.",
            "contestant_number": "The unique identifier of the contestant that received the vote.",
            "created": "The timestamp indicating when the vote was created."
        }
    },
    "match_season": {
        "country": {
            "Country_id": "Unique identifier for each country.",
            "Country_name": "Name of the country.",
            "Capital": "Capital city of the country.",
            "Official_native_language": "The official language spoken in the country."
        },
        "team": {
            "Team_id": "Unique identifier for each team.",
            "Name": "Name of the team."
        },
        "match_season": {
            "Season": "The season during which the match took place.",
            "Player": "Name of the player participating in the match.",
            "Position": "Position of the player in the team.",
            "Country": "Country the player represents.",
            "Team": "Team the player is part of.",
            "Draft_Pick_Number": "The draft pick number assigned to the player.",
            "Draft_Class": "The year the player was drafted.",
            "College": "College or university the player attended."
        },
        "player": {
            "Player_ID": "Unique identifier for each player.",
            "Player": "Name of the player.",
            "Years_Played": "Total number of years the player has played.",
            "Total_WL": "Total wins and losses of the player.",
            "Singles_WL": "Wins and losses in singles matches.",
            "Doubles_WL": "Wins and losses in doubles matches.",
            "Team": "Team the player is currently associated with."
        }
    },
    "small_bank_1": {
        "ACCOUNTS": {
            "custid": "Unique identifier for each customer.",
            "name": "Full name of the customer."
        },
        "SAVINGS": {
            "custid": "Unique identifier for each customer, linked to the ACCOUNTS table.",
            "balance": "Current balance in the savings account."
        },
        "CHECKING": {
            "custid": "Unique identifier for each customer, linked to the ACCOUNTS table.",
            "balance": "Current balance in the checking account."
        }
    },
    "wta_1": {
        "players": {
            "player_id": "Unique identifier for each player.",
            "first_name": "Player's first name.",
            "last_name": "Player's last name.",
            "hand": "Playing hand of the player (e.g., left or right).",
            "birth_date": "Date of birth of the player.",
            "country_code": "ISO code representing the player's country."
        },
        "matches": {
            "best_of": "Number of sets in the match (e.g., best of 3 or 5).",
            "draw_size": "Total number of players in the tournament draw.",
            "loser_age": "Age of the losing player at the time of the match.",
            "loser_entry": "Entry type of the losing player (e.g., direct, qualifier).",
            "loser_hand": "Playing hand of the losing player.",
            "loser_ht": "Height of the losing player in centimeters.",
            "loser_id": "Unique identifier for the losing player.",
            "loser_ioc": "IOC code representing the losing player's country.",
            "loser_name": "Name of the losing player.",
            "loser_rank": "Rank of the losing player at the time of the match.",
            "loser_rank_points": "Ranking points of the losing player.",
            "loser_seed": "Seed number of the losing player in the tournament.",
            "match_num": "Sequential number of the match in the tournament.",
            "minutes": "Duration of the match in minutes.",
            "round": "Round of the tournament in which the match took place.",
            "score": "Final score of the match.",
            "surface": "Type of surface the match was played on (e.g., clay, grass).",
            "tourney_date": "Date of the tournament.",
            "tourney_id": "Unique identifier for the tournament.",
            "tourney_level": "Level of the tournament (e.g., Grand Slam, ATP 250).",
            "tourney_name": "Name of the tournament.",
            "winner_age": "Age of the winning player at the time of the match.",
            "winner_entry": "Entry type of the winning player.",
            "winner_hand": "Playing hand of the winning player.",
            "winner_ht": "Height of the winning player in centimeters.",
            "winner_id": "Unique identifier for the winning player.",
            "winner_ioc": "IOC code representing the winning player's country.",
            "winner_name": "Name of the winning player.",
            "winner_rank": "Rank of the winning player at the time of the match.",
            "winner_rank_points": "Ranking points of the winning player.",
            "winner_seed": "Seed number of the winning player in the tournament.",
            "year": "Year in which the match took place."
        },
        "rankings": {
            "ranking_date": "Date when the ranking was recorded.",
            "ranking": "Current ranking of the player.",
            "player_id": "Unique identifier for the player.",
            "ranking_points": "Total points contributing to the player's ranking.",
            "tours": "Tours or events considered for the ranking."
        }
    },
    "yelp": {
        "business": {
            "bid": "Unique identifier for the business.",
            "business_id": "Identifier for the business in the database.",
            "name": "Name of the business.",
            "full_address": "Complete address of the business.",
            "city": "City where the business is located.",
            "latitude": "Geographical latitude of the business.",
            "longitude": "Geographical longitude of the business.",
            "review_count": "Total number of reviews for the business.",
            "is_open": "Indicates if the business is currently open.",
            "rating": "Average rating of the business."
        },
        "category": {
            "id": "Unique identifier for the category.",
            "business_id": "Identifier linking to the business.",
            "category_name": "Name of the category."
        },
        "user": {
            "uid": "Unique identifier for the user.",
            "user_id": "Identifier for the user in the database.",
            "name": "Name of the user."
        },
        "checkin": {
            "cid": "Unique identifier for the check-in record.",
            "business_id": "Identifier linking to the business.",
            "count": "Number of check-ins at the business.",
            "day": "Day of the check-in."
        },
        "neighbourhood": {
            "id": "Unique identifier for the neighbourhood.",
            "business_id": "Identifier linking to the business.",
            "neighbourhood_name": "Name of the neighbourhood."
        },
        "review": {
            "rid": "Unique identifier for the review.",
            "business_id": "Identifier linking to the business.",
            "user_id": "Identifier linking to the user who wrote the review.",
            "rating": "Rating given in the review.",
            "text": "Content of the review.",
            "year": "Year when the review was written.",
            "month": "Month when the review was written."
        },
        "tip": {
            "tip_id": "Unique identifier for the tip.",
            "business_id": "Identifier linking to the business.",
            "text": "Content of the tip.",
            "user_id": "Identifier linking to the user who wrote the tip.",
            "likes": "Number of likes the tip has received.",
            "year": "Year when the tip was written.",
            "month": "Month when the tip was written."
        }
    },
    "student_1": {
        "list": {
            "LastName": "The surname of the student.",
            "FirstName": "The given name of the student.",
            "Grade": "The academic grade level of the student.",
            "Classroom": "The designated classroom for the student."
        },
        "teachers": {
            "LastName": "The surname of the teacher.",
            "FirstName": "The given name of the teacher.",
            "Classroom": "The classroom assigned to the teacher."
        }
    },
    "manufacturer": {
        "manufacturer": {
            "Manufacturer_ID": "Unique identifier for each manufacturer.",
            "Open_Year": "Year the manufacturer was established.",
            "Name": "Name of the manufacturer.",
            "Num_of_Factories": "Total number of factories owned by the manufacturer.",
            "Num_of_Shops": "Total number of shops operated by the manufacturer."
        },
        "furniture": {
            "Furniture_ID": "Unique identifier for each piece of furniture.",
            "Name": "Name of the furniture item.",
            "Num_of_Component": "Number of components that make up the furniture.",
            "Market_Rate": "Current market price of the furniture item."
        },
        "furniture_manufacte": {
            "Manufacturer_ID": "Identifier linking to the manufacturer of the furniture.",
            "Furniture_ID": "Identifier linking to the specific furniture item.",
            "Price_in_Dollar": "Selling price of the furniture in US dollars."
        }
    },
    "store_1": {
        "artists": {
            "id": "Unique identifier for each artist.",
            "name": "Name of the artist."
        },
        "sqlite_sequence": {
            "name": "Name of the table for which the sequence is maintained.",
            "seq": "Current sequence number for the table."
        },
        "albums": {
            "id": "Unique identifier for each album.",
            "title": "Title of the album.",
            "artist_id": "Identifier for the artist of the album."
        },
        "employees": {
            "id": "Unique identifier for each employee.",
            "last_name": "Last name of the employee.",
            "first_name": "First name of the employee.",
            "title": "Job title of the employee.",
            "reports_to": "Identifier of the employee's manager.",
            "birth_date": "Birth date of the employee.",
            "hire_date": "Date when the employee was hired.",
            "address": "Street address of the employee.",
            "city": "City where the employee resides.",
            "state": "State where the employee resides.",
            "country": "Country where the employee resides.",
            "postal_code": "Postal code of the employee's address.",
            "phone": "Phone number of the employee.",
            "fax": "Fax number of the employee.",
            "email": "Email address of the employee."
        },
        "customers": {
            "id": "Unique identifier for each customer.",
            "first_name": "First name of the customer.",
            "last_name": "Last name of the customer.",
            "company": "Company name of the customer.",
            "address": "Street address of the customer.",
            "city": "City where the customer resides.",
            "state": "State where the customer resides.",
            "country": "Country where the customer resides.",
            "postal_code": "Postal code of the customer's address.",
            "phone": "Phone number of the customer.",
            "fax": "Fax number of the customer.",
            "email": "Email address of the customer.",
            "support_rep_id": "Identifier for the customer's support representative."
        },
        "genres": {
            "id": "Unique identifier for each genre.",
            "name": "Name of the genre."
        },
        "invoices": {
            "id": "Unique identifier for each invoice.",
            "customer_id": "Identifier for the customer associated with the invoice.",
            "invoice_date": "Date when the invoice was issued.",
            "billing_address": "Billing address for the invoice.",
            "billing_city": "City for the billing address.",
            "billing_state": "State for the billing address.",
            "billing_country": "Country for the billing address.",
            "billing_postal_code": "Postal code for the billing address.",
            "total": "Total amount of the invoice."
        },
        "media_types": {
            "id": "Unique identifier for each media type.",
            "name": "Name of the media type."
        },
        "tracks": {
            "id": "Unique identifier for each track.",
            "name": "Name of the track.",
            "album_id": "Identifier for the album the track belongs to.",
            "media_type_id": "Identifier for the media type of the track.",
            "genre_id": "Identifier for the genre of the track.",
            "composer": "Name of the composer of the track.",
            "milliseconds": "Duration of the track in milliseconds.",
            "bytes": "File size of the track in bytes.",
            "unit_price": "Price per unit of the track."
        },
        "invoice_lines": {
            "id": "Unique identifier for each invoice line.",
            "invoice_id": "Identifier for the associated invoice.",
            "track_id": "Identifier for the track in the invoice line.",
            "unit_price": "Price per unit of the track in the invoice line.",
            "quantity": "Quantity of the track in the invoice line."
        },
        "playlists": {
            "id": "Unique identifier for each playlist.",
            "name": "Name of the playlist."
        },
        "playlist_tracks": {
            "playlist_id": "Identifier for the playlist containing the track.",
            "track_id": "Identifier for the track in the playlist."
        }
    },
    "train_station": {
        "station": {
            "Station_ID": "Unique identifier for each station.",
            "Name": "Name of the station.",
            "Annual_entry_exit": "Total number of entries and exits at the station annually.",
            "Annual_interchanges": "Total number of interchanges at the station annually.",
            "Total_Passengers": "Total number of passengers using the station.",
            "Location": "Geographical location of the station.",
            "Main_Services": "Primary services offered at the station.",
            "Number_of_Platforms": "Total number of platforms available at the station."
        },
        "train": {
            "Train_ID": "Unique identifier for each train.",
            "Name": "Name of the train.",
            "Time": "Scheduled time for the train.",
            "Service": "Type of service provided by the train."
        },
        "train_station": {
            "Train_ID": "Identifier linking to a specific train.",
            "Station_ID": "Identifier linking to a specific station."
        }
    },
    "document_management": {
        "Roles": {
            "role_code": "Unique identifier for each role.",
            "role_description": "Description of the role's responsibilities."
        },
        "Users": {
            "user_id": "Unique identifier for each user.",
            "role_code": "Code representing the user's role.",
            "user_name": "Full name of the user.",
            "user_login": "Username used for logging in.",
            "password": "User's password for authentication."
        },
        "Document_Structures": {
            "document_structure_code": "Unique identifier for each document structure.",
            "parent_document_structure_code": "Code of the parent document structure, if applicable.",
            "document_structure_description": "Description of the document structure."
        },
        "Functional_Areas": {
            "functional_area_code": "Unique identifier for each functional area.",
            "parent_functional_area_code": "Code of the parent functional area, if applicable.",
            "functional_area_description": "Description of the functional area."
        },
        "Images": {
            "image_id": "Unique identifier for each image.",
            "image_alt_text": "Alternative text for the image.",
            "image_name": "Name of the image file.",
            "image_url": "URL where the image is hosted."
        },
        "Documents": {
            "document_code": "Unique identifier for each document.",
            "document_structure_code": "Code representing the structure of the document.",
            "document_type_code": "Code indicating the type of document.",
            "access_count": "Number of times the document has been accessed.",
            "document_name": "Name of the document."
        },
        "Document_Functional_Areas": {
            "document_code": "Code of the document associated with the functional area.",
            "functional_area_code": "Code of the functional area associated with the document."
        },
        "Document_Sections": {
            "section_id": "Unique identifier for each section of a document.",
            "document_code": "Code of the document to which the section belongs.",
            "section_sequence": "Sequence number indicating the order of the section.",
            "section_code": "Unique code for the section.",
            "section_title": "Title of the section."
        },
        "Document_Sections_Images": {
            "section_id": "Identifier for the section that contains the image.",
            "image_id": "Identifier for the image associated with the section."
        }
    },
    "formula_1": {
        "circuits": {
            "circuitId": "Unique identifier for each circuit.",
            "circuitRef": "Reference name for the circuit.",
            "name": "Official name of the circuit.",
            "location": "Geographical location of the circuit.",
            "country": "Country where the circuit is located.",
            "lat": "Latitude coordinate of the circuit.",
            "lng": "Longitude coordinate of the circuit.",
            "alt": "Altitude of the circuit in meters.",
            "url": "Website link for more information about the circuit."
        },
        "races": {
            "raceId": "Unique identifier for each race.",
            "year": "Year in which the race took place.",
            "round": "Round number of the race in the season.",
            "circuitId": "Identifier for the circuit where the race was held.",
            "name": "Official name of the race.",
            "date": "Date when the race occurred.",
            "time": "Time when the race started.",
            "url": "Website link for more information about the race."
        },
        "drivers": {
            "driverId": "Unique identifier for each driver.",
            "driverRef": "Reference name for the driver.",
            "number": "Racing number assigned to the driver.",
            "code": "Short code for the driver.",
            "forename": "Driver's first name.",
            "surname": "Driver's last name.",
            "dob": "Date of birth of the driver.",
            "nationality": "Nationality of the driver.",
            "url": "Website link for more information about the driver."
        },
        "status": {
            "statusId": "Unique identifier for each status.",
            "status": "Description of the status."
        },
        "seasons": {
            "year": "Year of the racing season.",
            "url": "Website link for more information about the season."
        },
        "constructors": {
            "constructorId": "Unique identifier for each constructor.",
            "constructorRef": "Reference name for the constructor.",
            "name": "Official name of the constructor.",
            "nationality": "Nationality of the constructor.",
            "url": "Website link for more information about the constructor."
        },
        "constructorStandings": {
            "constructorStandingsId": "Unique identifier for constructor standings.",
            "raceId": "Identifier for the race related to the standings.",
            "constructorId": "Identifier for the constructor.",
            "points": "Total points scored by the constructor.",
            "position": "Current position in the standings.",
            "positionText": "Textual representation of the position.",
            "wins": "Total number of wins by the constructor."
        },
        "results": {
            "resultId": "Unique identifier for each race result.",
            "raceId": "Identifier for the race.",
            "driverId": "Identifier for the driver.",
            "constructorId": "Identifier for the constructor.",
            "number": "Racing number of the driver.",
            "grid": "Starting grid position of the driver.",
            "position": "Finishing position of the driver.",
            "positionText": "Textual representation of the finishing position.",
            "positionOrder": "Order of finishing position.",
            "points": "Points awarded for the finishing position.",
            "laps": "Total number of laps completed by the driver.",
            "time": "Total time taken to complete the race.",
            "milliseconds": "Total time in milliseconds.",
            "fastestLap": "Fastest lap time recorded by the driver.",
            "rank": "Rank of the driver based on performance.",
            "fastestLapTime": "Time of the fastest lap.",
            "fastestLapSpeed": "Speed during the fastest lap.",
            "statusId": "Identifier for the status of the result."
        },
        "driverStandings": {
            "driverStandingsId": "Unique identifier for driver standings.",
            "raceId": "Identifier for the race related to the standings.",
            "driverId": "Identifier for the driver.",
            "points": "Total points scored by the driver.",
            "position": "Current position in the standings.",
            "positionText": "Textual representation of the position.",
            "wins": "Total number of wins by the driver."
        },
        "constructorResults": {
            "constructorResultsId": "Unique identifier for constructor results.",
            "raceId": "Identifier for the race.",
            "constructorId": "Identifier for the constructor.",
            "points": "Points scored by the constructor in the race.",
            "status": "Status of the constructor's performance in the race."
        },
        "qualifying": {
            "qualifyId": "Unique identifier for qualifying results.",
            "raceId": "Identifier for the race.",
            "driverId": "Identifier for the driver.",
            "constructorId": "Identifier for the constructor.",
            "number": "Racing number of the driver.",
            "position": "Qualifying position of the driver.",
            "q1": "Time taken in Q1 session.",
            "q2": "Time taken in Q2 session.",
            "q3": "Time taken in Q3 session."
        },
        "pitStops": {
            "raceId": "Identifier for the race.",
            "driverId": "Identifier for the driver.",
            "stop": "Stop number during the race.",
            "lap": "Lap number when the pit stop occurred.",
            "time": "Time when the pit stop started.",
            "duration": "Duration of the pit stop.",
            "milliseconds": "Duration of the pit stop in milliseconds."
        },
        "lapTimes": {
            "raceId": "Identifier for the race.",
            "driverId": "Identifier for the driver.",
            "lap": "Lap number for which the time is recorded.",
            "position": "Position of the driver during the lap.",
            "time": "Time taken to complete the lap.",
            "milliseconds": "Time taken to complete the lap in milliseconds."
        }
    },
    "game_1": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study for the student.",
            "Advisor": "Name of the student's academic advisor.",
            "city_code": "Code representing the city where the student resides."
        },
        "Video_Games": {
            "GameID": "Unique identifier for each video game.",
            "GName": "Name of the video game.",
            "GType": "Type or genre of the video game."
        },
        "Plays_Games": {
            "StuID": "Unique identifier for the student playing the game.",
            "GameID": "Unique identifier for the video game being played.",
            "Hours_Played": "Total hours spent playing the game."
        },
        "SportsInfo": {
            "StuID": "Unique identifier for each student participating in sports.",
            "SportName": "Name of the sport the student is involved in.",
            "HoursPerWeek": "Number of hours the student dedicates to the sport each week.",
            "GamesPlayed": "Total number of games played by the student.",
            "OnScholarship": "Indicates if the student is on a sports scholarship."
        }
    },
    "loan_1": {
        "bank": {
            "branch_ID": "Unique identifier for each bank branch.",
            "bname": "Name of the bank branch.",
            "no_of_customers": "Total number of customers associated with the branch.",
            "city": "City where the bank branch is located.",
            "state": "State where the bank branch is located."
        },
        "customer": {
            "cust_ID": "Unique identifier for each customer.",
            "cust_name": "Name of the customer.",
            "acc_type": "Type of account held by the customer.",
            "acc_bal": "Current balance of the customer's account.",
            "no_of_loans": "Number of loans taken by the customer.",
            "credit_score": "Credit score of the customer indicating creditworthiness.",
            "branch_ID": "Identifier for the branch where the customer holds accounts.",
            "state": "State where the customer resides."
        },
        "loan": {
            "loan_ID": "Unique identifier for each loan.",
            "loan_type": "Type of loan issued to the customer.",
            "cust_ID": "Identifier for the customer who took the loan.",
            "branch_ID": "Identifier for the branch that issued the loan.",
            "amount": "Total amount of the loan."
        }
    },
    "bike_1": {
        "station": {
            "id": "Unique identifier for each station.",
            "name": "Name of the bike station.",
            "lat": "Latitude coordinate of the station.",
            "long": "Longitude coordinate of the station.",
            "dock_count": "Total number of docks available at the station.",
            "city": "City where the station is located.",
            "installation_date": "Date when the station was installed."
        },
        "status": {
            "station_id": "Identifier for the station associated with the status.",
            "bikes_available": "Number of bikes currently available at the station.",
            "docks_available": "Number of docks currently available at the station.",
            "time": "Timestamp of the status report."
        },
        "trip": {
            "id": "Unique identifier for each trip.",
            "duration": "Duration of the trip in minutes.",
            "start_date": "Start date and time of the trip.",
            "start_station_name": "Name of the station where the trip started.",
            "start_station_id": "Identifier for the station where the trip started.",
            "end_date": "End date and time of the trip.",
            "end_station_name": "Name of the station where the trip ended.",
            "end_station_id": "Identifier for the station where the trip ended.",
            "bike_id": "Identifier for the bike used in the trip.",
            "subscription_type": "Type of subscription of the user (e.g., monthly, pay-as-you-go).",
            "zip_code": "Zip code of the user starting the trip."
        },
        "weather": {
            "date": "Date of the weather report.",
            "max_temperature_f": "Maximum temperature in Fahrenheit for the day.",
            "mean_temperature_f": "Mean temperature in Fahrenheit for the day.",
            "min_temperature_f": "Minimum temperature in Fahrenheit for the day.",
            "max_dew_point_f": "Maximum dew point in Fahrenheit for the day.",
            "mean_dew_point_f": "Mean dew point in Fahrenheit for the day.",
            "min_dew_point_f": "Minimum dew point in Fahrenheit for the day.",
            "max_humidity": "Maximum humidity percentage for the day.",
            "mean_humidity": "Mean humidity percentage for the day.",
            "min_humidity": "Minimum humidity percentage for the day.",
            "max_sea_level_pressure_inches": "Maximum sea level pressure in inches for the day.",
            "mean_sea_level_pressure_inches": "Mean sea level pressure in inches for the day.",
            "min_sea_level_pressure_inches": "Minimum sea level pressure in inches for the day.",
            "max_visibility_miles": "Maximum visibility in miles for the day.",
            "mean_visibility_miles": "Mean visibility in miles for the day.",
            "min_visibility_miles": "Minimum visibility in miles for the day.",
            "max_wind_Speed_mph": "Maximum wind speed in miles per hour for the day.",
            "mean_wind_speed_mph": "Mean wind speed in miles per hour for the day.",
            "max_gust_speed_mph": "Maximum gust speed in miles per hour for the day.",
            "precipitation_inches": "Total precipitation in inches for the day.",
            "cloud_cover": "Cloud cover percentage for the day.",
            "events": "Weather events recorded for the day.",
            "wind_dir_degrees": "Wind direction in degrees for the day.",
            "zip_code": "Zip code associated with the weather report."
        }
    },
    "entrepreneur": {
        "entrepreneur": {
            "Entrepreneur_ID": "Unique identifier for each entrepreneur.",
            "People_ID": "Identifier linking to the person's details.",
            "Company": "Name of the company founded by the entrepreneur.",
            "Money_Requested": "Amount of money requested by the entrepreneur.",
            "Investor": "Name of the investor interested in the entrepreneur's company."
        },
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Name": "Full name of the person.",
            "Height": "Height of the person in centimeters.",
            "Weight": "Weight of the person in kilograms.",
            "Date_of_Birth": "Birth date of the person in YYYY-MM-DD format."
        }
    },
    "orchestra": {
        "conductor": {
            "Conductor_ID": "Unique identifier for each conductor.",
            "Name": "Full name of the conductor.",
            "Age": "Age of the conductor.",
            "Nationality": "Country of origin of the conductor.",
            "Year_of_Work": "Year when the conductor started working."
        },
        "orchestra": {
            "Orchestra_ID": "Unique identifier for each orchestra.",
            "Orchestra": "Name of the orchestra.",
            "Conductor_ID": "Identifier linking to the conductor of the orchestra.",
            "Record_Company": "Identifier for the record company associated with the orchestra.",
            "Year_of_Founded": "Year when the orchestra was founded.",
            "Major_Record_Format": "Primary format of recordings produced by the orchestra."
        },
        "performance": {
            "Performance_ID": "Unique identifier for each performance.",
            "Orchestra_ID": "Identifier linking to the orchestra performing.",
            "Type": "Type of performance (e.g., concert, opera).",
            "Date": "Date when the performance took place.",
            "Official_ratings_(millions)": "Official ratings of the performance in millions.",
            "Weekly_rank": "Rank of the performance in weekly charts.",
            "Share": "Market share of the performance."
        },
        "show": {
            "Show_ID": "Unique identifier for each show.",
            "Performance_ID": "Identifier linking to the performance of the show.",
            "If_first_show": "Indicator of whether this is the first show (1 for yes, 0 for no).",
            "Result": "Outcome of the show (e.g., successful, unsuccessful).",
            "Attendance": "Number of attendees at the show."
        }
    },
    "cre_Drama_Workshop_Groups": {
        "Ref_Payment_Methods": {
            "payment_method_code": "Unique code identifying the payment method.",
            "payment_method_description": "Description of the payment method."
        },
        "Ref_Service_Types": {
            "Service_Type_Code": "Unique code for the type of service.",
            "Parent_Service_Type_Code": "Code for the parent service type, if applicable.",
            "Service_Type_Description": "Description of the service type."
        },
        "Addresses": {
            "Address_ID": "Unique identifier for the address.",
            "Line_1": "First line of the address.",
            "Line_2": "Second line of the address (optional).",
            "City_Town": "City or town of the address.",
            "State_County": "State or county of the address.",
            "Other_Details": "Additional details about the address."
        },
        "Products": {
            "Product_ID": "Unique identifier for the product.",
            "Product_Name": "Name of the product.",
            "Product_Price": "Price of the product.",
            "Product_Description": "Description of the product.",
            "Other_Product_Service_Details": "Additional details about the product or service."
        },
        "Marketing_Regions": {
            "Marketing_Region_Code": "Unique code for the marketing region.",
            "Marketing_Region_Name": "Name of the marketing region.",
            "Marketing_Region_Descriptrion": "Description of the marketing region.",
            "Other_Details": "Additional details about the marketing region."
        },
        "Clients": {
            "Client_ID": "Unique identifier for the client.",
            "Address_ID": "Identifier linking to the client's address.",
            "Customer_Email_Address": "Email address of the customer.",
            "Customer_Name": "Name of the customer.",
            "Customer_Phone": "Phone number of the customer.",
            "Other_Details": "Additional details about the client."
        },
        "Drama_Workshop_Groups": {
            "Workshop_Group_ID": "Unique identifier for the workshop group.",
            "Address_ID": "Identifier linking to the workshop group's address.",
            "Currency_Code": "Code representing the currency used.",
            "Marketing_Region_Code": "Code for the marketing region associated with the group.",
            "Store_Name": "Name of the store associated with the workshop group.",
            "Store_Phone": "Phone number of the store.",
            "Store_Email_Address": "Email address of the store.",
            "Other_Details": "Additional details about the workshop group."
        },
        "Performers": {
            "Performer_ID": "Unique identifier for the performer.",
            "Address_ID": "Identifier linking to the performer's address.",
            "Customer_Name": "Name of the performer.",
            "Customer_Phone": "Phone number of the performer.",
            "Customer_Email_Address": "Email address of the performer.",
            "Other_Details": "Additional details about the performer."
        },
        "Customers": {
            "Customer_ID": "Unique identifier for the customer.",
            "Address_ID": "Identifier linking to the customer's address.",
            "Customer_Name": "Name of the customer.",
            "Customer_Phone": "Phone number of the customer.",
            "Customer_Email_Address": "Email address of the customer.",
            "Other_Details": "Additional details about the customer."
        },
        "Stores": {
            "Store_ID": "Unique identifier for the store.",
            "Address_ID": "Identifier linking to the store's address.",
            "Marketing_Region_Code": "Code for the marketing region associated with the store.",
            "Store_Name": "Name of the store.",
            "Store_Phone": "Phone number of the store.",
            "Store_Email_Address": "Email address of the store.",
            "Other_Details": "Additional details about the store."
        },
        "Bookings": {
            "Booking_ID": "Unique identifier for the booking.",
            "Customer_ID": "Identifier linking to the customer making the booking.",
            "Workshop_Group_ID": "Identifier linking to the workshop group for the booking.",
            "Status_Code": "Code indicating the status of the booking.",
            "Store_ID": "Identifier linking to the store associated with the booking.",
            "Order_Date": "Date when the order was placed.",
            "Planned_Delivery_Date": "Expected delivery date for the booking.",
            "Actual_Delivery_Date": "Actual delivery date for the booking.",
            "Other_Order_Details": "Additional details about the order."
        },
        "Performers_in_Bookings": {
            "Order_ID": "Identifier linking to the order associated with the booking.",
            "Performer_ID": "Identifier linking to the performer involved in the booking."
        },
        "Customer_Orders": {
            "Order_ID": "Unique identifier for the customer order.",
            "Customer_ID": "Identifier linking to the customer who placed the order.",
            "Store_ID": "Identifier linking to the store where the order was placed.",
            "Order_Date": "Date when the order was placed.",
            "Planned_Delivery_Date": "Expected delivery date for the order.",
            "Actual_Delivery_Date": "Actual delivery date for the order.",
            "Other_Order_Details": "Additional details about the order."
        },
        "Order_Items": {
            "Order_Item_ID": "Unique identifier for the order item.",
            "Order_ID": "Identifier linking to the order that includes this item.",
            "Product_ID": "Identifier linking to the product being ordered.",
            "Order_Quantity": "Quantity of the product ordered.",
            "Other_Item_Details": "Additional details about the order item."
        },
        "Invoices": {
            "Invoice_ID": "Unique identifier for the invoice.",
            "Order_ID": "Identifier linking to the order associated with the invoice.",
            "payment_method_code": "Code indicating the payment method used for the invoice.",
            "Product_ID": "Identifier linking to the product on the invoice.",
            "Order_Quantity": "Quantity of the product on the invoice.",
            "Other_Item_Details": "Additional details about the invoice item.",
            "Order_Item_ID": "Identifier linking to the order item on the invoice."
        },
        "Services": {
            "Service_ID": "Unique identifier for the service.",
            "Service_Type_Code": "Code indicating the type of service.",
            "Workshop_Group_ID": "Identifier linking to the workshop group offering the service.",
            "Product_Description": "Description of the product associated with the service.",
            "Product_Name": "Name of the product associated with the service.",
            "Product_Price": "Price of the product associated with the service.",
            "Other_Product_Service_Details": "Additional details about the product or service."
        },
        "Bookings_Services": {
            "Order_ID": "Identifier linking to the order associated with the service booking.",
            "Product_ID": "Identifier linking to the product associated with the service."
        },
        "Invoice_Items": {
            "Invoice_Item_ID": "Unique identifier for the invoice item.",
            "Invoice_ID": "Identifier linking to the invoice that includes this item.",
            "Order_ID": "Identifier linking to the order associated with the invoice item.",
            "Order_Item_ID": "Identifier linking to the order item associated with the invoice item.",
            "Product_ID": "Identifier linking to the product on the invoice item.",
            "Order_Quantity": "Quantity of the product on the invoice item.",
            "Other_Item_Details": "Additional details about the invoice item."
        }
    },
    "car_1": {
        "continents": {
            "ContId": "Unique identifier for each continent.",
            "Continent": "Name of the continent."
        },
        "countries": {
            "CountryId": "Unique identifier for each country.",
            "CountryName": "Name of the country.",
            "Continent": "Identifier for the continent to which the country belongs."
        },
        "car_makers": {
            "Id": "Unique identifier for each car maker.",
            "Maker": "Short name of the car maker.",
            "FullName": "Full name of the car maker.",
            "Country": "Country where the car maker is based."
        },
        "model_list": {
            "ModelId": "Unique identifier for each car model.",
            "Maker": "Identifier for the car maker of the model.",
            "Model": "Name of the car model."
        },
        "car_names": {
            "MakeId": "Unique identifier for each car make.",
            "Model": "Name of the car model.",
            "Make": "Name of the car make."
        },
        "cars_data": {
            "Id": "Unique identifier for each car entry.",
            "MPG": "Miles per gallon fuel efficiency of the car.",
            "Cylinders": "Number of cylinders in the car's engine.",
            "Edispl": "Engine displacement in liters.",
            "Horsepower": "Power output of the car's engine in horsepower.",
            "Weight": "Weight of the car in pounds.",
            "Accelerate": "Time taken to accelerate from 0 to 60 mph in seconds.",
            "Year": "Year the car model was manufactured."
        }
    },
    "geo": {
        "state": {
            "state_name": "The name of the state.",
            "population": "The total population of the state.",
            "area": "The total area of the state in square units.",
            "country_name": "The name of the country the state belongs to.",
            "capital": "The capital city of the state.",
            "density": "The population density of the state."
        },
        "city": {
            "city_name": "The name of the city.",
            "population": "The total population of the city.",
            "country_name": "The name of the country the city is located in.",
            "state_name": "The name of the state the city is located in."
        },
        "border_info": {
            "state_name": "The name of the state.",
            "border": "The number of borders the state has with other states."
        },
        "highlow": {
            "state_name": "The name of the state.",
            "highest_elevation": "The highest elevation point in the state.",
            "lowest_point": "The lowest point in the state.",
            "highest_point": "The highest geographical point in the state.",
            "lowest_elevation": "The lowest elevation point in the state."
        },
        "lake": {
            "lake_name": "The name of the lake.",
            "area": "The area of the lake in square units.",
            "country_name": "The name of the country where the lake is located.",
            "state_name": "The name of the state where the lake is located."
        },
        "mountain": {
            "mountain_name": "The name of the mountain.",
            "mountain_altitude": "The altitude of the mountain in meters.",
            "country_name": "The name of the country where the mountain is located.",
            "state_name": "The name of the state where the mountain is located."
        },
        "river": {
            "river_name": "The name of the river.",
            "length": "The length of the river in kilometers.",
            "country_name": "The name of the country the river flows through.",
            "traverse": "The number of states the river traverses."
        }
    },
    "behavior_monitoring": {
        "Ref_Address_Types": {
            "address_type_code": "Unique code representing the type of address.",
            "address_type_description": "Description of the address type."
        },
        "Ref_Detention_Type": {
            "detention_type_code": "Unique code representing the type of detention.",
            "detention_type_description": "Description of the detention type."
        },
        "Ref_Incident_Type": {
            "incident_type_code": "Unique code representing the type of incident.",
            "incident_type_description": "Description of the incident type."
        },
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "line_1": "Primary address line.",
            "line_2": "Secondary address line (if any).",
            "line_3": "Tertiary address line (if any).",
            "city": "City of the address.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country of the address.",
            "other_address_details": "Additional details about the address."
        },
        "Students": {
            "student_id": "Unique identifier for each student.",
            "address_id": "Identifier linking to the student's address.",
            "first_name": "First name of the student.",
            "middle_name": "Middle name of the student.",
            "last_name": "Last name of the student.",
            "cell_mobile_number": "Mobile phone number of the student.",
            "email_address": "Email address of the student.",
            "date_first_rental": "Date when the student first rented accommodation.",
            "date_left_university": "Date when the student left the university.",
            "other_student_details": "Additional details about the student."
        },
        "Teachers": {
            "teacher_id": "Unique identifier for each teacher.",
            "address_id": "Identifier linking to the teacher's address.",
            "first_name": "First name of the teacher.",
            "middle_name": "Middle name of the teacher.",
            "last_name": "Last name of the teacher.",
            "gender": "Gender of the teacher.",
            "cell_mobile_number": "Mobile phone number of the teacher.",
            "email_address": "Email address of the teacher.",
            "other_details": "Additional details about the teacher."
        },
        "Assessment_Notes": {
            "notes_id": "Unique identifier for each assessment note.",
            "student_id": "Identifier linking to the student the note is about.",
            "teacher_id": "Identifier linking to the teacher who made the note.",
            "date_of_notes": "Date when the notes were made.",
            "text_of_notes": "Content of the assessment notes.",
            "other_details": "Additional details related to the notes."
        },
        "Behavior_Incident": {
            "incident_id": "Unique identifier for each behavior incident.",
            "incident_type_code": "Code representing the type of incident.",
            "student_id": "Identifier linking to the student involved in the incident.",
            "date_incident_start": "Start date of the incident.",
            "date_incident_end": "End date of the incident.",
            "incident_summary": "Summary of the incident.",
            "recommendations": "Recommendations following the incident.",
            "other_details": "Additional details about the incident."
        },
        "Detention": {
            "detention_id": "Unique identifier for each detention record.",
            "detention_type_code": "Code representing the type of detention.",
            "teacher_id": "Identifier linking to the teacher overseeing the detention.",
            "datetime_detention_start": "Start date and time of the detention.",
            "datetime_detention_end": "End date and time of the detention.",
            "detention_summary": "Summary of the detention.",
            "other_details": "Additional details about the detention."
        },
        "Student_Addresses": {
            "student_id": "Identifier linking to the student.",
            "address_id": "Identifier linking to the address associated with the student.",
            "date_address_from": "Start date of the student's residence at the address.",
            "date_address_to": "End date of the student's residence at the address.",
            "monthly_rental": "Monthly rental cost for the address.",
            "other_details": "Additional details about the student's address."
        },
        "Students_in_Detention": {
            "student_id": "Identifier linking to the student in detention.",
            "detention_id": "Identifier linking to the detention record.",
            "incident_id": "Identifier linking to the incident related to the detention."
        }
    },
    "cre_Doc_Tracking_DB": {
        "Ref_Document_Types": {
            "Document_Type_Code": "Unique code identifying the type of document.",
            "Document_Type_Name": "Name of the document type.",
            "Document_Type_Description": "Description providing details about the document type."
        },
        "Ref_Calendar": {
            "Calendar_Date": "Specific date in the calendar.",
            "Day_Number": "Numeric representation of the day in the year."
        },
        "Ref_Locations": {
            "Location_Code": "Unique code for each location.",
            "Location_Name": "Name of the location.",
            "Location_Description": "Description providing details about the location."
        },
        "Roles": {
            "Role_Code": "Unique code for each role.",
            "Role_Name": "Name of the role.",
            "Role_Description": "Description providing details about the role."
        },
        "All_Documents": {
            "Document_ID": "Unique identifier for each document.",
            "Date_Stored": "Date when the document was stored.",
            "Document_Type_Code": "Code indicating the type of document.",
            "Document_Name": "Name of the document.",
            "Document_Description": "Description providing details about the document.",
            "Other_Details": "Additional information related to the document."
        },
        "Employees": {
            "Employee_ID": "Unique identifier for each employee.",
            "Role_Code": "Code indicating the role of the employee.",
            "Employee_Name": "Name of the employee.",
            "Gender_MFU": "Gender of the employee (Male/Female/Unknown).",
            "Date_of_Birth": "Birth date of the employee.",
            "Other_Details": "Additional information related to the employee."
        },
        "Document_Locations": {
            "Document_ID": "Unique identifier for the document.",
            "Location_Code": "Code indicating the location of the document.",
            "Date_in_Location_From": "Date when the document was placed in the location.",
            "Date_in_Locaton_To": "Date when the document was removed from the location."
        },
        "Documents_to_be_Destroyed": {
            "Document_ID": "Unique identifier for the document scheduled for destruction.",
            "Destruction_Authorised_by_Employee_ID": "Employee ID of the person authorizing destruction.",
            "Destroyed_by_Employee_ID": "Employee ID of the person who destroyed the document.",
            "Planned_Destruction_Date": "Date planned for the document's destruction.",
            "Actual_Destruction_Date": "Date when the document was actually destroyed.",
            "Other_Details": "Additional information related to the destruction of the document."
        }
    },
    "university_basketball": {
        "basketball_match": {
            "Team_ID": "Unique identifier for each basketball team.",
            "School_ID": "Identifier for the school associated with the team.",
            "Team_Name": "Name of the basketball team.",
            "ACC_Regular_Season": "Record of the team in the ACC regular season.",
            "ACC_Percent": "Winning percentage of the team in the ACC.",
            "ACC_Home": "Record of the team in home ACC games.",
            "ACC_Road": "Record of the team in away ACC games.",
            "All_Games": "Overall record of the team in all games played.",
            "All_Games_Percent": "Winning percentage of the team in all games.",
            "All_Home": "Record of the team in home games overall.",
            "All_Road": "Record of the team in away games overall.",
            "All_Neutral": "Record of the team in neutral site games."
        },
        "university": {
            "School_ID": "Unique identifier for each university.",
            "School": "Name of the university.",
            "Location": "Geographical location of the university.",
            "Founded": "Year the university was established.",
            "Affiliation": "Type of affiliation or governance of the university.",
            "Enrollment": "Total number of students enrolled at the university.",
            "Nickname": "Nickname or mascot of the university.",
            "Primary_conference": "Main athletic conference the university belongs to."
        }
    },
    "soccer_2": {
        "College": {
            "cName": "The name of the college.",
            "state": "The state where the college is located.",
            "enr": "The enrollment number of students at the college."
        },
        "Player": {
            "pID": "The unique identifier for each player.",
            "pName": "The name of the player.",
            "yCard": "The year of the player's card or eligibility.",
            "HS": "The high school the player attended."
        },
        "Tryout": {
            "pID": "The unique identifier for the player participating in the tryout.",
            "cName": "The name of the college where the tryout is held.",
            "pPos": "The position the player is trying out for.",
            "decision": "The decision made regarding the player's tryout."
        }
    },
    "activity_1": {
        "Activity": {
            "actid": "Unique identifier for each activity.",
            "activity_name": "Name of the activity."
        },
        "Participates_in": {
            "stuid": "Unique identifier for each student participating in activities.",
            "actid": "Identifier for the activity in which the student participates."
        },
        "Faculty_Participates_in": {
            "FacID": "Unique identifier for each faculty member participating in activities.",
            "actid": "Identifier for the activity in which the faculty member participates."
        },
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study for the student.",
            "Advisor": "Identifier for the student's academic advisor.",
            "city_code": "Code representing the city where the student resides."
        },
        "Faculty": {
            "FacID": "Unique identifier for each faculty member.",
            "Lname": "Last name of the faculty member.",
            "Fname": "First name of the faculty member.",
            "Rank": "Academic rank of the faculty member.",
            "Sex": "Gender of the faculty member.",
            "Phone": "Contact phone number of the faculty member.",
            "Room": "Room number where the faculty member's office is located.",
            "Building": "Building where the faculty member's office is located."
        }
    },
    "cre_Theme_park": {
        "Ref_Hotel_Star_Ratings": {
            "star_rating_code": "Unique code representing the star rating of a hotel.",
            "star_rating_description": "Description of the star rating level for hotels."
        },
        "Locations": {
            "Location_ID": "Unique identifier for each location.",
            "Location_Name": "Name of the location.",
            "Address": "Physical address of the location.",
            "Other_Details": "Additional information about the location."
        },
        "Ref_Attraction_Types": {
            "Attraction_Type_Code": "Unique code for different types of attractions.",
            "Attraction_Type_Description": "Description of the type of attraction."
        },
        "Visitors": {
            "Tourist_ID": "Unique identifier for each tourist.",
            "Tourist_Details": "Details related to the tourist."
        },
        "Features": {
            "Feature_ID": "Unique identifier for each feature.",
            "Feature_Details": "Description of the feature."
        },
        "Hotels": {
            "hotel_id": "Unique identifier for each hotel.",
            "star_rating_code": "Code indicating the star rating of the hotel.",
            "pets_allowed_yn": "Indicates if pets are allowed in the hotel (Yes/No).",
            "price_range": "Price range category for the hotel.",
            "other_hotel_details": "Additional details about the hotel."
        },
        "Tourist_Attractions": {
            "Tourist_Attraction_ID": "Unique identifier for each tourist attraction.",
            "Attraction_Type_Code": "Code indicating the type of attraction.",
            "Location_ID": "Identifier linking to the location of the attraction.",
            "How_to_Get_There": "Instructions on how to reach the attraction.",
            "Name": "Name of the tourist attraction.",
            "Description": "Description of the tourist attraction.",
            "Opening_Hours": "Hours during which the attraction is open to visitors.",
            "Other_Details": "Additional information about the attraction."
        },
        "Street_Markets": {
            "Market_ID": "Unique identifier for each street market.",
            "Market_Details": "Description of the street market."
        },
        "Shops": {
            "Shop_ID": "Unique identifier for each shop.",
            "Shop_Details": "Description of the shop."
        },
        "Museums": {
            "Museum_ID": "Unique identifier for each museum.",
            "Museum_Details": "Details related to the museum."
        },
        "Royal_Family": {
            "Royal_Family_ID": "Unique identifier for each royal family entry.",
            "Royal_Family_Details": "Details about the royal family."
        },
        "Theme_Parks": {
            "Theme_Park_ID": "Unique identifier for each theme park.",
            "Theme_Park_Details": "Details related to the theme park."
        },
        "Visits": {
            "Visit_ID": "Unique identifier for each visit record.",
            "Tourist_Attraction_ID": "Identifier linking to the visited attraction.",
            "Tourist_ID": "Identifier linking to the tourist who visited.",
            "Visit_Date": "Date when the visit occurred.",
            "Visit_Details": "Details about the visit."
        },
        "Photos": {
            "Photo_ID": "Unique identifier for each photo.",
            "Tourist_Attraction_ID": "Identifier linking to the attraction the photo is associated with.",
            "Name": "Name of the photo.",
            "Description": "Description of the photo.",
            "Filename": "Filename of the photo stored in the system.",
            "Other_Details": "Additional information about the photo."
        },
        "Staff": {
            "Staff_ID": "Unique identifier for each staff member.",
            "Tourist_Attraction_ID": "Identifier linking to the attraction where the staff works.",
            "Name": "Name of the staff member.",
            "Other_Details": "Additional information about the staff member."
        },
        "Tourist_Attraction_Features": {
            "Tourist_Attraction_ID": "Identifier linking to the tourist attraction.",
            "Feature_ID": "Identifier linking to the feature associated with the attraction."
        }
    },
    "twitter_1": {
        "follows": {
            "f1": "The identifier for the user being followed.",
            "f2": "The identifier for the user who is following."
        },
        "tweets": {
            "id": "The unique identifier for each tweet.",
            "uid": "The unique identifier for the user who posted the tweet.",
            "text": "The content of the tweet.",
            "createdate": "The date and time when the tweet was created."
        },
        "user_profiles": {
            "uid": "The unique identifier for each user.",
            "name": "The name of the user.",
            "email": "The email address of the user.",
            "partitionid": "The identifier for the partition the user belongs to.",
            "followers": "The number of followers the user has."
        }
    },
    "election_representative": {
        "election": {
            "Election_ID": "Unique identifier for each election.",
            "Representative_ID": "Identifier for the representative associated with the election.",
            "Date": "Date when the election took place.",
            "Votes": "Total number of votes cast in the election.",
            "Vote_Percent": "Percentage of total votes received.",
            "Seats": "Number of seats contested in the election.",
            "Place": "Location where the election was held."
        },
        "representative": {
            "Representative_ID": "Unique identifier for each representative.",
            "Name": "Full name of the representative.",
            "State": "State represented by the representative.",
            "Party": "Political party affiliation of the representative.",
            "Lifespan": "Lifespan of the representative."
        }
    },
    "voter_2": {
        "Student": {
            "StuID": "Unique identifier for each student.",
            "LName": "Last name of the student.",
            "Fname": "First name of the student.",
            "Age": "Age of the student.",
            "Sex": "Gender of the student.",
            "Major": "Field of study the student is enrolled in.",
            "Advisor": "Name of the student's academic advisor.",
            "city_code": "Code representing the city where the student resides."
        },
        "Voting_record": {
            "StuID": "Unique identifier for the student associated with the voting record.",
            "Registration_Date": "Date when the student registered to vote.",
            "Election_Cycle": "Identifier for the election cycle during which the votes were cast.",
            "President_Vote": "Vote cast for the presidential candidate.",
            "Vice_President_Vote": "Vote cast for the vice presidential candidate.",
            "Secretary_Vote": "Vote cast for the secretary candidate.",
            "Treasurer_Vote": "Vote cast for the treasurer candidate.",
            "Class_President_Vote": "Vote cast for the class president candidate.",
            "Class_Senator_Vote": "Vote cast for the class senator candidate."
        }
    },
    "wedding": {
        "people": {
            "People_ID": "Unique identifier for each person.",
            "Name": "Full name of the person.",
            "Country": "Country of residence of the person.",
            "Is_Male": "Indicates if the person is male (yes/no).",
            "Age": "Age of the person in years."
        },
        "church": {
            "Church_ID": "Unique identifier for each church.",
            "Name": "Name of the church.",
            "Organized_by": "Identifier for the person or group that organized the church.",
            "Open_Date": "Date when the church was established.",
            "Continuation_of": "Identifier for the church that this church continues from, if applicable."
        },
        "wedding": {
            "Church_ID": "Identifier for the church where the wedding took place.",
            "Male_ID": "Identifier for the male participant in the wedding.",
            "Female_ID": "Identifier for the female participant in the wedding.",
            "Year": "Year when the wedding occurred."
        }
    },
    "news_report": {
        "event": {
            "Event_ID": "Unique identifier for each event.",
            "Date": "Date when the event takes place.",
            "Venue": "Location where the event is held.",
            "Name": "Name of the event.",
            "Event_Attendance": "Number of attendees at the event."
        },
        "journalist": {
            "journalist_ID": "Unique identifier for each journalist.",
            "Name": "Full name of the journalist.",
            "Nationality": "Country of origin of the journalist.",
            "Age": "Current age of the journalist.",
            "Years_working": "Total years the journalist has been active in the field."
        },
        "news_report": {
            "journalist_ID": "Identifier linking to the journalist who wrote the report.",
            "Event_ID": "Identifier linking to the event covered in the report.",
            "Work_Type": "Type of work the report represents (e.g., article, interview)."
        }
    },
    "wine_1": {
        "grapes": {
            "ID": "Unique identifier for each grape variety.",
            "Grape": "Name of the grape variety.",
            "Color": "Color of the grape (e.g., red, white)."
        },
        "appellations": {
            "No": "Unique identifier for each appellation.",
            "Appelation": "Name of the appellation.",
            "County": "County where the appellation is located.",
            "State": "State where the appellation is located.",
            "Area": "Geographical area of the appellation.",
            "isAVA": "Indicator if the appellation is an American Viticultural Area (AVA)."
        },
        "wine": {
            "No": "Unique identifier for each wine entry.",
            "Grape": "Grape variety used in the wine.",
            "Winery": "Name of the winery producing the wine.",
            "Appelation": "Appellation where the wine is produced.",
            "State": "State where the winery is located.",
            "Name": "Name of the wine.",
            "Year": "Year the wine was produced.",
            "Price": "Retail price of the wine.",
            "Score": "Rating score of the wine.",
            "Cases": "Number of cases available for the wine.",
            "Drink": "Recommended drinking window for the wine."
        }
    },
    "customers_and_addresses": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "address_content": "Detailed description of the address.",
            "city": "Name of the city associated with the address.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country where the address is located.",
            "other_address_details": "Additional details about the address."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "product_details": "Numerical representation of product specifications."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "payment_method": "Preferred method of payment for the customer.",
            "customer_name": "Full name of the customer.",
            "date_became_customer": "Date when the customer registered.",
            "other_customer_details": "Additional information about the customer."
        },
        "Customer_Addresses": {
            "customer_id": "Identifier linking to the customer.",
            "address_id": "Identifier linking to the address.",
            "date_address_from": "Date when the address became effective.",
            "address_type": "Type of address (e.g., billing, shipping).",
            "date_address_to": "Date when the address ceased to be effective."
        },
        "Customer_Contact_Channels": {
            "customer_id": "Identifier linking to the customer.",
            "channel_code": "Code representing the contact channel (e.g., phone, email).",
            "active_from_date": "Date when the contact channel became active.",
            "active_to_date": "Date when the contact channel was deactivated.",
            "contact_number": "Contact number associated with the channel."
        },
        "Customer_Orders": {
            "order_id": "Unique identifier for each order.",
            "customer_id": "Identifier linking to the customer who placed the order.",
            "order_status": "Current status of the order (e.g., pending, completed).",
            "order_date": "Date when the order was placed.",
            "order_details": "Details regarding the items in the order."
        },
        "Order_Items": {
            "order_id": "Identifier linking to the order.",
            "product_id": "Identifier linking to the product ordered.",
            "order_quantity": "Quantity of the product ordered."
        }
    },
    "protein_institute": {
        "building": {
            "building_id": "Unique identifier for each building.",
            "Name": "The name of the building.",
            "Street_address": "The street address where the building is located.",
            "Years_as_tallest": "Number of years the building has held the title of tallest.",
            "Height_feet": "Height of the building in feet.",
            "Floors": "Total number of floors in the building."
        },
        "Institution": {
            "Institution_id": "Unique identifier for each institution.",
            "Institution": "The name of the institution.",
            "Location": "Geographical location of the institution.",
            "Founded": "Year the institution was founded.",
            "Type": "Type of institution (e.g., university, college).",
            "Enrollment": "Total number of enrolled students.",
            "Team": "Name of the institution's sports team.",
            "Primary_Conference": "The primary athletic conference the institution belongs to.",
            "building_id": "Identifier linking to the associated building."
        },
        "protein": {
            "common_name": "Common name of the protein.",
            "protein_name": "Scientific name of the protein.",
            "divergence_from_human_lineage": "Degree of divergence from human protein lineage.",
            "accession_number": "Unique identifier for the protein in databases.",
            "sequence_length": "Length of the protein sequence.",
            "sequence_identity_to_human_protein": "Percentage identity of the protein sequence to human protein.",
            "Institution_id": "Identifier linking to the associated institution."
        }
    },
    "school_player": {
        "school": {
            "School_ID": "Unique identifier for each school.",
            "School": "Name of the school.",
            "Location": "Geographical location of the school.",
            "Enrollment": "Total number of students enrolled in the school.",
            "Founded": "Year the school was established.",
            "Denomination": "Religious affiliation of the school, if any.",
            "Boys_or_Girls": "Indicates if the school is for boys, girls, or co-educational.",
            "Day_or_Boarding": "Specifies if the school is a day school or offers boarding facilities.",
            "Year_Entered_Competition": "Year the school began participating in competitions.",
            "School_Colors": "Official colors representing the school."
        },
        "school_details": {
            "School_ID": "Identifier linking to the school.",
            "Nickname": "Commonly used nickname for the school.",
            "Colors": "Colors associated with the school, typically for sports.",
            "League": "Sports league in which the school competes.",
            "Class": "Classification of the school based on size or level.",
            "Division": "Specific division within the league for competition."
        },
        "school_performance": {
            "School_Id": "Identifier linking to the school for performance records.",
            "School_Year": "Academic year for which performance is recorded.",
            "Class_A": "Performance metrics for Class A students.",
            "Class_AA": "Performance metrics for Class AA students."
        },
        "player": {
            "Player_ID": "Unique identifier for each player.",
            "Player": "Name of the player.",
            "Team": "Team the player is associated with.",
            "Age": "Age of the player.",
            "Position": "Position played by the player in the team.",
            "School_ID": "Identifier linking the player to their school."
        }
    },
    "phone_1": {
        "chip_model": {
            "Model_name": "The name of the chip model.",
            "Launch_year": "The year the chip model was launched.",
            "RAM_MiB": "The amount of RAM in MiB for the chip model.",
            "ROM_MiB": "The amount of ROM in MiB for the chip model.",
            "Slots": "The number of slots available for the chip model.",
            "WiFi": "Indicates the WiFi capabilities of the chip model.",
            "Bluetooth": "Indicates the Bluetooth capabilities of the chip model."
        },
        "screen_mode": {
            "Graphics_mode": "The graphics mode supported by the screen.",
            "Char_cells": "The number of character cells available on the screen.",
            "Pixels": "The resolution of the screen in pixels.",
            "Hardware_colours": "The number of hardware colors supported by the screen.",
            "used_kb": "The amount of kilobytes used by the screen mode.",
            "map": "The mapping information for the screen mode.",
            "Type": "The type of screen mode."
        },
        "phone": {
            "Company_name": "The name of the company that manufactured the phone.",
            "Hardware_Model_name": "The hardware model name of the phone.",
            "Accreditation_type": "The type of accreditation the phone has.",
            "Accreditation_level": "The level of accreditation the phone has achieved.",
            "Date": "The date associated with the phone's record.",
            "chip_model": "Reference to the chip model used in the phone.",
            "screen_mode": "Reference to the screen mode used in the phone."
        }
    },
    "tvshow": {
        "TV_Channel": {
            "id": "Unique identifier for each TV channel.",
            "series_name": "Name of the TV series broadcasted by the channel.",
            "Country": "Country where the TV channel is based.",
            "Language": "Language in which the channel broadcasts.",
            "Content": "Type of content provided by the channel.",
            "Pixel_aspect_ratio_PAR": "Aspect ratio of the channel's video content.",
            "Hight_definition_TV": "Indicates if the channel broadcasts in high definition.",
            "Pay_per_view_PPV": "Indicates if the channel offers pay-per-view options.",
            "Package_Option": "Available subscription packages for the channel."
        },
        "TV_series": {
            "id": "Unique identifier for each TV series.",
            "Episode": "Episode number of the TV series.",
            "Air_Date": "Date when the episode was aired.",
            "Rating": "Viewer rating of the episode.",
            "Share": "Percentage of viewers watching the episode compared to total TV viewers.",
            "18_49_Rating_Share": "Rating share among viewers aged 18 to 49.",
            "Viewers_m": "Number of viewers in millions for the episode.",
            "Weekly_Rank": "Rank of the episode based on viewership for the week.",
            "Channel": "Channel on which the TV series is broadcasted."
        },
        "Cartoon": {
            "id": "Unique identifier for each cartoon.",
            "Title": "Title of the cartoon.",
            "Directed_by": "Name of the director of the cartoon.",
            "Written_by": "Name of the writer of the cartoon.",
            "Original_air_date": "Original date when the cartoon first aired.",
            "Production_code": "Code used for identifying the production of the cartoon.",
            "Channel": "Channel on which the cartoon is broadcasted."
        }
    },
    "wrestler": {
        "wrestler": {
            "Wrestler_ID": "Unique identifier for each wrestler.",
            "Name": "The name of the wrestler.",
            "Reign": "The title reign of the wrestler.",
            "Days_held": "Total number of days the title was held.",
            "Location": "The location where the title was defended.",
            "Event": "The event during which the title was contested."
        },
        "Elimination": {
            "Elimination_ID": "Unique identifier for each elimination event.",
            "Wrestler_ID": "Identifier for the wrestler who was eliminated.",
            "Team": "Identifier for the team involved in the elimination.",
            "Eliminated_By": "Identifier for the wrestler who performed the elimination.",
            "Elimination_Move": "Identifier for the move used to eliminate the wrestler.",
            "Time": "The time during the match when the elimination occurred."
        }
    },
    "customer_complaints": {
        "Staff": {
            "staff_id": "Unique identifier for each staff member.",
            "gender": "Gender of the staff member.",
            "first_name": "First name of the staff member.",
            "last_name": "Last name of the staff member.",
            "email_address": "Email address of the staff member.",
            "phone_number": "Contact phone number of the staff member."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "customer_type_code": "Code representing the type of customer.",
            "address_line_1": "First line of the customer's address.",
            "address_line_2": "Second line of the customer's address.",
            "town_city": "Town or city where the customer resides.",
            "state": "State where the customer resides.",
            "email_address": "Email address of the customer.",
            "phone_number": "Contact phone number of the customer."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "parent_product_id": "Identifier for the parent product if applicable.",
            "product_category_code": "Code representing the category of the product.",
            "date_product_first_available": "Date when the product was first available for sale.",
            "date_product_discontinued": "Date when the product was discontinued.",
            "product_name": "Name of the product.",
            "product_description": "Description of the product.",
            "product_price": "Price of the product."
        },
        "Complaints": {
            "complaint_id": "Unique identifier for each complaint.",
            "product_id": "Identifier for the product related to the complaint.",
            "customer_id": "Identifier for the customer who made the complaint.",
            "complaint_outcome_code": "Code representing the outcome of the complaint.",
            "complaint_status_code": "Code representing the current status of the complaint.",
            "complaint_type_code": "Code representing the type of complaint.",
            "date_complaint_raised": "Date when the complaint was raised.",
            "date_complaint_closed": "Date when the complaint was closed.",
            "staff_id": "Identifier for the staff member handling the complaint."
        }
    },
    "department_management": {
        "department": {
            "Department_ID": "Unique identifier for each department.",
            "Name": "Name of the department.",
            "Creation": "Date when the department was established.",
            "Ranking": "Ranking of the department based on performance.",
            "Budget_in_Billions": "Annual budget allocated to the department in billions.",
            "Num_Employees": "Total number of employees in the department."
        },
        "head": {
            "head_ID": "Unique identifier for each department head.",
            "name": "Name of the department head.",
            "born_state": "State where the department head was born.",
            "age": "Age of the department head."
        },
        "management": {
            "department_ID": "Identifier for the department managed.",
            "head_ID": "Identifier for the head of the department.",
            "temporary_acting": "Indicates if the head is temporarily acting in the position."
        }
    },
    "customers_and_products_contacts": {
        "Addresses": {
            "address_id": "Unique identifier for each address.",
            "line_1_number_building": "Primary address line including building number.",
            "city": "City where the address is located.",
            "zip_postcode": "Postal code for the address.",
            "state_province_county": "State, province, or county of the address.",
            "country": "Country of the address."
        },
        "Products": {
            "product_id": "Unique identifier for each product.",
            "product_type_code": "Code representing the type of product.",
            "product_name": "Name of the product.",
            "product_price": "Price of the product."
        },
        "Customers": {
            "customer_id": "Unique identifier for each customer.",
            "payment_method_code": "Code representing the customer's payment method.",
            "customer_number": "Unique customer number for identification.",
            "customer_name": "Full name of the customer.",
            "customer_address": "Address associated with the customer.",
            "customer_phone": "Phone number of the customer.",
            "customer_email": "Email address of the customer."
        },
        "Contacts": {
            "contact_id": "Unique identifier for each contact.",
            "customer_id": "Identifier linking the contact to a customer.",
            "gender": "Gender of the contact.",
            "first_name": "First name of the contact.",
            "last_name": "Last name of the contact.",
            "contact_phone": "Phone number of the contact."
        },
        "Customer_Address_History": {
            "customer_id": "Identifier linking to the customer.",
            "address_id": "Identifier linking to the address.",
            "date_from": "Start date of the address history.",
            "date_to": "End date of the address history."
        },
        "Customer_Orders": {
            "order_id": "Unique identifier for each order.",
            "customer_id": "Identifier linking the order to a customer.",
            "order_date": "Date when the order was placed.",
            "order_status_code": "Code representing the status of the order."
        },
        "Order_Items": {
            "order_item_id": "Unique identifier for each order item.",
            "order_id": "Identifier linking the item to an order.",
            "product_id": "Identifier linking to the product.",
            "order_quantity": "Quantity of the product ordered."
        }
    },
    "company_1": {
        "works_on": {
            "Essn": "Employee's social security number.",
            "Pno": "Project number the employee is working on.",
            "Hours": "Number of hours the employee has worked on the project."
        },
        "employee": {
            "Fname": "First name of the employee.",
            "Minit": "Middle initial of the employee.",
            "Lname": "Last name of the employee.",
            "Ssn": "Social security number of the employee.",
            "Bdate": "Birth date of the employee.",
            "Address": "Home address of the employee.",
            "Sex": "Gender of the employee.",
            "Salary": "Salary of the employee.",
            "Super_ssn": "Social security number of the employee's supervisor.",
            "Dno": "Department number the employee belongs to."
        },
        "department": {
            "Dname": "Name of the department.",
            "Dnumber": "Unique department number.",
            "Mgr_ssn": "Social security number of the department manager.",
            "Mgr_start_date": "Date when the manager started in the department."
        },
        "project": {
            "Pname": "Name of the project.",
            "Pnumber": "Unique project number.",
            "Plocation": "Location where the project is being carried out.",
            "Dnum": "Department number responsible for the project."
        },
        "dependent": {
            "Essn": "Employee's social security number to whom the dependent is related.",
            "Dependent_name": "Name of the dependent.",
            "Sex": "Gender of the dependent.",
            "Bdate": "Birth date of the dependent.",
            "Relationship": "Relationship of the dependent to the employee."
        },
        "dept_locations": {
            "Dnumber": "Department number for the location.",
            "Dlocation": "Physical location of the department."
        }
    },
    "workshop_paper": {
        "workshop": {
            "Workshop_ID": "Unique identifier for each workshop.",
            "Date": "Date when the workshop is scheduled.",
            "Venue": "Location where the workshop will take place.",
            "Name": "Title or name of the workshop."
        },
        "submission": {
            "Submission_ID": "Unique identifier for each submission.",
            "Scores": "Numeric score awarded to the submission.",
            "Author": "Identifier for the author of the submission.",
            "College": "Identifier for the college associated with the submission."
        },
        "Acceptance": {
            "Submission_ID": "Identifier linking to the submission being evaluated.",
            "Workshop_ID": "Identifier linking to the workshop for which the submission is evaluated.",
            "Result": "Outcome of the submission evaluation (e.g., accepted or rejected)."
        }
    },
    "epinions_1": {
        "item": {
            "i_id": "Unique identifier for each item.",
            "title": "Title of the item."
        },
        "review": {
            "a_id": "Unique identifier for each review.",
            "u_id": "Identifier for the user who wrote the review.",
            "i_id": "Identifier for the item being reviewed.",
            "rating": "Rating given by the user for the item.",
            "rank": "Rank of the review based on certain criteria."
        },
        "useracct": {
            "u_id": "Unique identifier for each user account.",
            "name": "Name of the user."
        },
        "trust": {
            "source_u_id": "Identifier for the user who trusts another user.",
            "target_u_id": "Identifier for the user being trusted.",
            "trust": "Trust level between the source and target users."
        }
    },
    "party_host": {
        "party": {
            "Party_ID": "Unique identifier for each party.",
            "Party_Theme": "Theme or concept of the party.",
            "Location": "Venue where the party is held.",
            "First_year": "Year when the party was first organized.",
            "Last_year": "Year when the party was last organized.",
            "Number_of_hosts": "Total number of hosts involved in the party."
        },
        "host": {
            "Host_ID": "Unique identifier for each host.",
            "Name": "Name of the host.",
            "Nationality": "Nationality of the host.",
            "Age": "Age of the host."
        },
        "party_host": {
            "Party_ID": "Identifier linking to the associated party.",
            "Host_ID": "Identifier linking to the associated host.",
            "Is_Main_in_Charge": "Indicates if the host is the main person in charge."
        }
    },
    "product_catalog": {
        "Attribute_Definitions": {
            "attribute_id": "Unique identifier for each attribute.",
            "attribute_name": "Name of the attribute.",
            "attribute_data_type": "Data type of the attribute (e.g., text, number)."
        },
        "Catalogs": {
            "catalog_id": "Unique identifier for each catalog.",
            "catalog_name": "Name of the catalog.",
            "catalog_publisher": "Publisher of the catalog.",
            "date_of_publication": "Publication date of the catalog.",
            "date_of_latest_revision": "Date when the catalog was last revised."
        },
        "Catalog_Structure": {
            "catalog_level_number": "Level number indicating the hierarchy of the catalog.",
            "catalog_id": "Identifier linking to the specific catalog.",
            "catalog_level_name": "Name of the catalog level."
        },
        "Catalog_Contents": {
            "catalog_entry_id": "Unique identifier for each entry in the catalog.",
            "catalog_level_number": "Level number of the entry within the catalog structure.",
            "parent_entry_id": "Identifier of the parent entry in the catalog hierarchy.",
            "previous_entry_id": "Identifier of the previous entry in the catalog.",
            "next_entry_id": "Identifier of the next entry in the catalog.",
            "catalog_entry_name": "Name of the catalog entry.",
            "product_stock_number": "Stock number associated with the product.",
            "price_in_dollars": "Price of the product in US dollars.",
            "price_in_euros": "Price of the product in euros.",
            "price_in_pounds": "Price of the product in British pounds.",
            "capacity": "Capacity measurement of the product.",
            "length": "Length measurement of the product.",
            "height": "Height measurement of the product.",
            "width": "Width measurement of the product."
        },
        "Catalog_Contents_Additional_Attributes": {
            "catalog_entry_id": "Identifier linking to the specific catalog entry.",
            "catalog_level_number": "Level number of the entry for additional attributes.",
            "attribute_id": "Identifier for the specific attribute.",
            "attribute_value": "Value associated with the attribute."
        }
    }
}