{"sample_id": "train.3193", "rationale": ["The query identifies the relevant table, which is 'COURSE'.", "Select the columns to display, 'crs_credit' and 'crs_description'.", "Add a condition to filter the 'crs_code' column for the specified course code using a placeholder for string values."], "description": "This virtual table provides information about the credit hours and description of a specific course from the 'COURSE' table. The placeholder in the WHERE clause represents the unique course code for which the details are being queried."}
{"sample_id": "train.3195", "rationale": ["The query identifies the relevant table, which is 'DEPARTMENT'.", "It selects a count of distinct department names and the school code.", "The results are grouped by the school code to provide a summary of distinct departments per school."], "description": "This virtual table provides a count of distinct department names grouped by their associated school codes from the 'DEPARTMENT' table. The placeholder in the SELECT clause represents the distinct department names, while the school code is used to group the results."}
{"sample_id": "train.3197", "rationale": ["The query identifies the relevant table, which is 'DEPARTMENT'.", "It selects the count of distinct department names and the school code.", "The results are grouped by school code to aggregate the counts of departments.", "A HAVING clause is added to filter the groups based on a specified threshold for the count of distinct department names using a placeholder for numeric values."], "description": "This virtual table provides a count of distinct department names grouped by school code from the 'DEPARTMENT' table. The placeholder in the HAVING clause allows for filtering the results based on a specified minimum count of distinct departments per school."}
{"sample_id": "train.3199", "rationale": ["The query identifies the relevant table, which is 'CLASS'.", "It selects the count of classes and groups the results by 'crs_code'.", "The use of count(*) allows for the aggregation of the number of classes associated with each course code."], "description": "This virtual table provides a count of classes grouped by their course codes from the 'CLASS' table. The placeholder in the SELECT statement represents the course code for which the count of classes is being aggregated."}
{"sample_id": "train.3203", "rationale": ["The query identifies the relevant table, which is 'CLASS'.", "It selects the count of classes and the 'class_room' column.", "The results are grouped by 'class_room' to aggregate the count of classes per room.", "A condition is added using HAVING to filter rooms that have a count of classes greater than or equal to a specified number, using a placeholder for numeric values."], "description": "This virtual table provides a count of classes held in each room from the 'CLASS' table, grouped by the room. The placeholder in the HAVING clause represents the minimum number of classes that must be held in a room to be included in the results."}
{"sample_id": "train.3207", "rationale": ["The query identifies the relevant tables: 'CLASS', 'COURSE', and 'DEPARTMENT'.", "It selects a count of classes and the school code from the 'DEPARTMENT' table.", "The JOIN operations link the 'CLASS' table to the 'COURSE' table using the course code, and the 'COURSE' table to the 'DEPARTMENT' table using the department code.", "The GROUP BY clause is used to aggregate the results by the school code, allowing for a count of classes per school."], "description": "This virtual table provides a count of classes grouped by the school code from the 'CLASS', 'COURSE', and 'DEPARTMENT' tables. The placeholders in the query allow for dynamic filtering or modification based on specific criteria related to the courses and departments."}
{"sample_id": "train.3211", "rationale": ["The query identifies the relevant table, which is 'employee'.", "It selects the 'emp_jobcode' column and counts the number of occurrences for each job code.", "The results are grouped by 'emp_jobcode' to aggregate the counts.", "The results are ordered in descending order based on the count of employees for each job code.", "A limit is applied to restrict the number of job codes returned, using a placeholder for numeric values."], "description": "This virtual table summarizes the number of employees grouped by their job codes from the 'employee' table. The placeholder in the LIMIT clause represents the maximum number of job codes to display, allowing users to specify how many job codes they want to see in the result."}
{"sample_id": "train.3223", "rationale": ["The query identifies the relevant tables, which are 'student' and 'department'.", "It selects the department name and calculates the average GPA of students.", "The JOIN operation links the 'student' table with the 'department' table based on the department code.", "The results are grouped by department code to calculate the average GPA for each department.", "The ORDER BY clause sorts the results by average GPA in descending order.", "The LIMIT clause uses a placeholder to allow the user to specify how many departments to return."], "description": "This virtual table provides the average GPA of students grouped by their respective departments. It joins the 'student' table with the 'department' table to associate each student with their department, and it orders the results by the average GPA in descending order. The placeholder in the LIMIT clause allows for specifying the maximum number of departments to display."}
{"sample_id": "train.3225", "rationale": ["The query identifies the relevant table, which is 'DEPARTMENT'.", "It uses the COUNT function to count the number of distinct 'SCHOOL_CODE' entries.", "The DISTINCT keyword ensures that only unique school codes are counted."], "description": "This virtual table provides the count of distinct school codes from the 'DEPARTMENT' table, which represents the different schools associated with various departments."}
{"sample_id": "train.3227", "rationale": ["The query is identifying the relevant table, which is 'CLASS'.", "The goal is to count the unique class codes, hence using the COUNT function with DISTINCT on 'class_code'."], "description": "This virtual table provides the count of distinct class codes from the 'CLASS' table, which represents the unique classes offered. The result will indicate how many different classes are available in the database."}
{"sample_id": "train.3229", "rationale": ["The query identifies the relevant table, which is 'CLASS'.", "It uses the COUNT function to count the number of distinct course codes (CRS_CODE) present in the 'CLASS' table."], "description": "This virtual table provides the count of distinct course codes from the 'CLASS' table, indicating the number of unique courses being offered in the classes."}
{"sample_id": "train.3231", "rationale": ["The query identifies the relevant table, which is 'DEPARTMENT'.", "It uses the COUNT function to count the number of distinct department names.", "The DISTINCT keyword ensures that only unique department names are counted."], "description": "This virtual table provides the count of distinct department names from the 'DEPARTMENT' table. The result will indicate how many unique departments are present in the database."}
{"sample_id": "train.3233", "rationale": ["The query identifies the relevant tables, which are 'DEPARTMENT' and 'COURSE'.", "It uses a JOIN operation to connect the two tables based on the 'dept_code' foreign key relationship.", "The SELECT statement counts the number of courses associated with the specified department.", "A condition is added to filter the results based on the department's name using a placeholder for string values."], "description": "This virtual table provides the count of courses offered by a specific department from the 'DEPARTMENT' and 'COURSE' tables. The placeholder in the WHERE clause represents the name of the department for which the course count is being queried."}
{"sample_id": "train.3235", "rationale": ["The query identifies the relevant table, which is 'CLASS'.", "It selects the count of distinct values in the 'class_section' column.", "A condition is added to filter the results based on the 'crs_code' column using a placeholder for string values."], "description": "This virtual table provides the count of distinct class sections from the 'CLASS' table for a specific course code. The placeholder in the WHERE clause represents the course code being queried."}
{"sample_id": "train.3239", "rationale": ["The query identifies the relevant tables: 'COURSE', 'CLASS', and 'DEPARTMENT'.", "It joins the 'COURSE' table with the 'CLASS' table on the course code to associate classes with their respective courses.", "Then, it joins the resulting table with the 'DEPARTMENT' table on the department code to retrieve department names.", "The results are grouped by the department code to aggregate the data correctly.", "The ordering is done based on the sum of credit hours for the courses in descending order to prioritize departments with more credit hours.", "Finally, a limit is applied to restrict the number of results returned, using a placeholder for numeric values."], "description": "This virtual table provides a list of department names from the 'DEPARTMENT' table, which are associated with courses from the 'COURSE' table. The query joins the 'COURSE' and 'CLASS' tables to link courses to their respective classes, and then joins the 'DEPARTMENT' table to retrieve the department names. The results are grouped by department code and ordered by the total sum of credit hours for the courses in descending order, with a limit on the number of departments returned as specified by a placeholder."}
{"sample_id": "train.3242", "rationale": ["The query identifies the relevant tables, which are 'CLASS' and 'ENROLL'.", "It uses a JOIN operation to connect these tables based on the 'class_code'.", "The SELECT statement counts the number of enrollments for classes that match the specified course code using a placeholder for string values."], "description": "This virtual table provides the count of students enrolled in classes associated with a specific course code from the 'CLASS' and 'ENROLL' tables. The placeholder in the WHERE clause represents the course code for which the enrollment count is being queried."}
{"sample_id": "train.3244", "rationale": ["The query identifies the relevant tables: 'CLASS', 'ENROLL', and 'STUDENT'.", "It selects the 'stu_fname' column from the 'STUDENT' table to display the first names of students.", "The JOIN operations link the 'CLASS' table to the 'ENROLL' table using 'class_code', and the 'ENROLL' table to the 'STUDENT' table using 'stu_num'.", "A condition is added to filter the results based on the 'crs_code' from the 'CLASS' table using a placeholder for string values."], "description": "This virtual table describes the first names of students enrolled in classes associated with a specific course code from the 'CLASS', 'ENROLL', and 'STUDENT' tables. The placeholder in the WHERE clause represents the course code."}
{"sample_id": "train.3246", "rationale": ["The query identifies the relevant tables: 'CLASS', 'ENROLL', and 'STUDENT'.", "It selects the 'stu_fname' column from the 'STUDENT' table.", "The JOIN operations link the 'CLASS' table to the 'ENROLL' table using 'class_code', and the 'ENROLL' table to the 'STUDENT' table using 'stu_num'.", "Conditions are added to filter results based on the specified course code and the grade received, using placeholders for string values."], "description": "This virtual table describes the first names of students enrolled in classes associated with a specific course code and who have received a specific grade. The placeholders in the WHERE clause represent the course code and the grade received by the students."}
{"sample_id": "train.3247", "rationale": ["The query is identifying the relevant table, which is 'employee'.", "The count function is used to calculate the total number of records in the employee table."], "description": "This virtual table provides a count of all employees in the 'employee' table. The query uses the count function to aggregate the total number of employee records."}
{"sample_id": "train.3249", "rationale": ["The query identifies the relevant table, which is 'professor'.", "It selects a count of all records that meet the specified condition.", "The condition filters the results based on the 'prof_high_degree' column using a placeholder for string values."], "description": "This virtual table provides the count of professors from the 'professor' table who hold a specific highest degree. The placeholder in the WHERE clause represents the degree type being queried."}
{"sample_id": "train.3251", "rationale": ["The query identifies the relevant tables: 'CLASS', 'ENROLL', 'COURSE', and 'DEPARTMENT'.", "It uses JOIN operations to connect these tables based on their foreign key relationships.", "The SELECT statement counts the number of classes that match the specified department name.", "A condition is added to filter results by the department name using a placeholder for string values."], "description": "This virtual table provides the count of classes offered by a specific department. It joins the 'CLASS', 'ENROLL', 'COURSE', and 'DEPARTMENT' tables to filter the results based on the department's name. The placeholder in the WHERE clause represents the name of the department being queried."}
{"sample_id": "train.3255", "rationale": ["The query identifies the relevant table, which is 'DEPARTMENT'.", "Select the column to display, 'dept_name'.", "Add an ORDER BY clause to sort the results in alphabetical order based on 'dept_name'."], "description": "This virtual table lists the names of all departments from the 'DEPARTMENT' table, sorted in alphabetical order. The query retrieves the 'dept_name' column and orders the results by the same column."}
{"sample_id": "train.3259", "rationale": ["The query identifies the relevant table, which is 'employee'.", "Select the column to display, 'emp_fname'.", "Add a condition to filter the 'emp_jobcode' column for the specified job code using a placeholder for string values.", "Order the results by 'emp_dob' to sort employees by their date of birth."], "description": "This virtual table describes the first names of employees from the 'employee' table who hold a specific job code. The placeholder in the WHERE clause represents the job code of the employees, and the results are ordered by their date of birth."}
{"sample_id": "train.3261", "rationale": ["The query identifies the relevant tables, which are 'PROFESSOR' and 'EMPLOYEE'.", "It selects the 'emp_fname' column from the 'EMPLOYEE' table and the 'prof_office' column from the 'PROFESSOR' table.", "A JOIN operation is performed on the 'emp_num' column to link professors with their corresponding employee records.", "The results are ordered by the first names of the professors."], "description": "This virtual table provides the first names of professors along with their office locations from the 'PROFESSOR' and 'EMPLOYEE' tables. The data is organized in ascending order based on the professors' first names."}
{"sample_id": "train.3263", "rationale": ["The query identifies the relevant table, which is 'EMPLOYEE'.", "Selects the columns to display, 'emp_fname' and 'emp_lname'.", "Orders the results by 'emp_dob' to sort employees by their date of birth.", "Uses a placeholder in the LIMIT clause to specify how many employee records to return."], "description": "This virtual table provides a list of first and last names of employees from the 'EMPLOYEE' table, ordered by their date of birth. The placeholder in the LIMIT clause allows for specifying the maximum number of employees to retrieve."}
{"sample_id": "train.3265", "rationale": ["The query identifies the relevant table, which is 'STUDENT'.", "Select the columns to display: 'stu_fname', 'stu_lname', and 'stu_gpa'.", "Add a condition to filter students based on their GPA using a placeholder for numeric values.", "Order the results by 'stu_dob' in descending order to show the most recently born students first.", "Limit the number of results returned using a placeholder for numeric values."], "description": "This virtual table provides the first name, last name, and GPA of students from the 'STUDENT' table who have a GPA greater than a specified value. The placeholders in the WHERE clause represent the minimum GPA threshold and the limit on the number of results returned."}
{"sample_id": "train.3268", "rationale": ["The query identifies the relevant tables, which are 'student' and 'enroll'.", "It selects the distinct first names of students from the 'student' table.", "The join condition links the 'student' table to the 'enroll' table using the unique student identifier 'stu_num'.", "A condition is added to filter the results based on the 'enroll_grade' column using a placeholder for string values."], "description": "This virtual table provides a list of distinct first names of students who have received a specific grade in their enrolled classes. The query joins the 'student' table with the 'enroll' table based on the unique student identifier, allowing for the filtering of students based on their grades."}
{"sample_id": "train.3269", "rationale": ["The query identifies the relevant tables, 'professor' and 'department'.", "It selects the 'dept_name' from the 'department' table.", "A JOIN operation is performed on 'dept_code' to link professors to their respective departments.", "The results are grouped by 'dept_code' to aggregate the count of professors in each department.", "The output is ordered by the count of professors and limited to a specified number using a placeholder for numeric values."], "description": "This virtual table provides a list of department names from the 'department' table, which are associated with professors in the 'professor' table. The results are grouped by department code to count the number of professors in each department, and the output is limited to a specified number of departments based on the placeholder."}
{"sample_id": "train.3275", "rationale": ["The query identifies the relevant tables: 'employee', 'professor', and 'department'.", "It selects the 'emp_fname' column from the 'employee' table, aliased as T1.", "It joins the 'professor' table (aliased as T2) on the employee number to find professors.", "It further joins the 'department' table (aliased as T3) to filter by department name.", "The WHERE clause specifies the department name using a placeholder for string values.", "The EXCEPT clause is used to exclude those professors who are currently teaching classes, identified by joining the 'class' table (aliased as T5) on the professor's employee number."], "description": "This virtual table describes the first names of employees who are professors in a specific department but are not teaching any classes. The placeholders in the WHERE clause represent the department's name."}
{"sample_id": "train.3277", "rationale": ["The query identifies the relevant tables: 'employee', 'professor', and 'department'.", "It selects the 'emp_lname' from the 'employee' table and 'prof_office' from the 'professor' table.", "A JOIN operation is performed between 'employee' and 'professor' on the employee number, and another JOIN with 'department' on the department code.", "A condition is added to filter results based on the specified department name using a placeholder for string values."], "description": "This virtual table provides the last names of employees and their corresponding office locations from the 'employee' and 'professor' tables, filtered by a specific department name. The placeholder in the WHERE clause represents the name of the department."}
{"sample_id": "train.3279", "rationale": ["The query identifies the relevant tables: 'employee', 'professor', and 'department'.", "It selects the 'dept_name' from the 'department' table and 'prof_office' from the 'professor' table.", "The JOIN operations link the tables based on their foreign key relationships: 'professor' to 'employee' and 'department' to 'professor'.", "A condition is added to filter results based on the employee's last name using a placeholder for string values."], "description": "This virtual table provides the names of departments and the office locations of professors associated with a specific employee's last name. The placeholders in the WHERE clause represent the last name of the employee being queried."}
{"sample_id": "train.3281", "rationale": ["The query identifies the relevant tables, which are 'employee' and 'professor'.", "It selects the columns to display, 'emp_lname' and 'emp_hiredate'.", "A JOIN operation is performed to link the 'employee' table with the 'professor' table based on the employee number.", "A condition is added to filter the results based on the professor's office location using a placeholder for string values."], "description": "This virtual table provides the last names and hire dates of employees who are professors, filtered by a specific office location. The placeholder in the WHERE clause represents the office of the professor."}
{"sample_id": "train.3283", "rationale": ["The query identifies the relevant tables: 'CLASS', 'ENROLL', and 'STUDENT'.", "It selects the 'crs_code' from the 'CLASS' table.", "The query joins the 'CLASS' table with the 'ENROLL' table on 'class_code' to link classes with enrollments.", "It further joins the 'ENROLL' table with the 'STUDENT' table on 'stu_num' to associate students with their enrollments.", "A condition is added to filter the results based on the student's last name using a placeholder for string values."], "description": "This virtual table provides the course codes for classes that a specific student is enrolled in, identified by their last name. The placeholders in the WHERE clause represent the student's last name."}
{"sample_id": "train.3285", "rationale": ["The query identifies the relevant tables: CLASS, ENROLL, STUDENT, and COURSE.", "It selects the columns 'crs_description' and 'crs_credit' from the COURSE table.", "The JOIN operations link the tables based on their foreign key relationships: CLASS to ENROLL, ENROLL to STUDENT, and CLASS to COURSE.", "A condition is added to filter results based on the last name of the student using a placeholder for string values."], "description": "This virtual table provides the course descriptions and credit hours for courses that students are enrolled in, filtered by the last name of a specific student. The placeholders in the WHERE clause represent the student's last name."}
{"sample_id": "train.3287", "rationale": ["The query identifies the relevant table, which is 'professor'.", "It counts the number of records that meet the specified condition.", "The condition checks if the 'prof_high_degree' column matches either of the two specified degrees using placeholders for string values."], "description": "This virtual table provides the count of professors from the 'professor' table who hold a specific high degree. The placeholders in the WHERE clause represent the degrees being queried."}
{"sample_id": "train.3289", "rationale": ["The query identifies the relevant tables, which are 'professor' and 'department'.", "It uses a JOIN operation to connect the two tables based on the department code.", "The SELECT statement counts the number of professors that belong to the specified departments.", "The WHERE clause filters the results based on the department names provided as placeholders."], "description": "This virtual table provides the count of professors associated with specific departments from the 'professor' and 'department' tables. The placeholders in the WHERE clause represent the names of the departments being queried."}
{"sample_id": "train.3291", "rationale": ["The query identifies the relevant tables, which are 'employee' and 'CLASS'.", "It selects the 'emp_fname' column from the 'employee' table, which contains the first names of professors.", "The JOIN operation links the 'employee' table with the 'CLASS' table based on the professor's identifier.", "The WHERE clause filters the results based on the specified course code using a placeholder for string values.", "The INTERSECT operation is used to find common professors teaching the same course in two different instances."], "description": "This virtual table describes the first names of professors who are teaching classes associated with a specific course code. The query uses an INTERSECT operation to find professors who are teaching the same course in two different instances, represented by placeholders for the course code."}
{"sample_id": "train.3295", "rationale": ["The query identifies the relevant tables: 'enroll', 'student', and 'class'.", "It selects the average GPA from the 'student' table, which is joined with the 'enroll' table on the student number.", "It also joins the 'class' table to filter the results based on the course code using a placeholder for string values."], "description": "This virtual table calculates the average GPA of students enrolled in a specific course. It joins the 'enroll' table with the 'student' table to access student GPA data and the 'class' table to filter by the course code. The placeholder in the WHERE clause represents the course code for which the average GPA is being calculated."}
{"sample_id": "train.3297", "rationale": ["The query identifies the relevant table, which is 'student'.", "Select the columns to display: 'stu_gpa', 'stu_phone', and 'stu_fname'.", "Order the results by 'stu_gpa' in descending order to show the highest GPAs first.", "Use a placeholder in the LIMIT clause to allow the user to specify how many records to return."], "description": "This virtual table provides a list of students' first names, GPAs, and phone numbers from the 'student' table, ordered by GPA in descending order. The placeholder in the LIMIT clause allows the user to specify the maximum number of records to return."}
{"sample_id": "train.3301", "rationale": ["The query identifies the relevant table, which is 'student'.", "Select the columns to display, 'stu_fname' and 'stu_gpa'.", "Add a condition to filter students whose GPA is less than the average GPA of all students using a subquery to calculate the average GPA."], "description": "This virtual table provides the first names and GPA of students from the 'student' table who have a GPA lower than the average GPA of all students. The placeholder in the WHERE clause represents the condition for filtering students based on their GPA."}
{"sample_id": "train.3303", "rationale": ["The query identifies the relevant tables, 'student' and 'department'.", "It selects the 'dept_name' and 'dept_address' from the 'department' table.", "A JOIN operation is performed on 'dept_code' to link students to their respective departments.", "The results are grouped by 'dept_code' to aggregate the data for each department.", "The results are ordered by the count of students in each department in descending order.", "A limit is applied to restrict the number of departments returned, using a placeholder for numeric values."], "description": "This virtual table provides a list of department names and their addresses for students, grouped by department code. The results are ordered by the number of students in each department, with a limit on the number of departments returned, specified by a placeholder for numeric values."}
{"sample_id": "train.3305", "rationale": ["The query identifies the relevant tables, 'student' and 'department'.", "It selects the department name and address from the 'department' table and counts the number of students from the 'student' table.", "The JOIN operation links the two tables based on the department code, ensuring that only students from the corresponding departments are counted.", "The results are grouped by department code to aggregate the student counts for each department.", "The ORDER BY clause sorts the results in descending order based on the student count, allowing the most populated departments to appear first.", "The LIMIT clause uses a placeholder to allow users to specify how many departments they want to see."], "description": "This virtual table provides a summary of the number of students enrolled in each department, along with the department's name and address. The data is aggregated by department code, allowing users to see which departments have the most students. The placeholder in the LIMIT clause allows for specifying the maximum number of departments to display."}
{"sample_id": "train.3307", "rationale": ["The query identifies the relevant tables: 'employee', 'professor', and 'department'.", "It selects the 'emp_fname' from the 'employee' table and 'prof_office' from the 'professor' table.", "The join condition links the 'employee' and 'professor' tables through the 'emp_num' field, ensuring we get the correct professor for each employee.", "Another join is made with the 'department' table to filter based on the department name.", "The WHERE clause includes conditions to filter by the specified department name and the highest degree of the professors, both using placeholders for string values."], "description": "This virtual table provides the first names of employees and the office locations of professors from the 'employee' and 'professor' tables, respectively. It filters the results based on a specific department name and the highest degree obtained by the professors, both represented by placeholders for string values."}
{"sample_id": "train.3310", "rationale": ["The query identifies the relevant tables, which are 'CLASS' and 'EMPLOYEE'.", "It selects the 'emp_fname' column from the 'EMPLOYEE' table and the 'crs_code' column from the 'CLASS' table.", "A JOIN operation is performed on the 'prof_num' column from the 'CLASS' table and the 'emp_num' column from the 'EMPLOYEE' table to associate professors with their respective classes."], "description": "This virtual table provides the first names of professors along with the course codes they teach from the 'CLASS' and 'EMPLOYEE' tables. The join condition links the professor's identifier in the 'CLASS' table to the corresponding identifier in the 'EMPLOYEE' table."}
{"sample_id": "train.3311", "rationale": ["The query identifies the relevant tables: 'CLASS', 'EMPLOYEE', and 'COURSE'.", "It selects the 'emp_fname' from the 'EMPLOYEE' table to get the first names of professors.", "It selects the 'crs_description' from the 'COURSE' table to get the descriptions of the courses.", "The JOIN operations link the 'CLASS' table to the 'EMPLOYEE' table using the 'prof_num' and 'emp_num' columns, and the 'CLASS' table to the 'COURSE' table using the 'crs_code' columns."], "description": "This virtual table provides the first names of professors along with the descriptions of the courses they teach. It combines data from the 'CLASS', 'EMPLOYEE', and 'COURSE' tables, linking professors to their respective classes and the courses associated with those classes."}
{"sample_id": "train.3313", "rationale": ["The query identifies the relevant tables: 'CLASS', 'EMPLOYEE', 'COURSE', and 'PROFESSOR'.", "It selects the 'emp_fname' from the 'EMPLOYEE' table, 'prof_office' from the 'PROFESSOR' table, and 'crs_description' from the 'COURSE' table.", "The joins are established based on the foreign key relationships between the tables, linking professors to classes and courses to classes."], "description": "This virtual table provides the first names of employees, the office locations of professors, and descriptions of courses associated with classes. The data is retrieved by joining the 'CLASS', 'EMPLOYEE', 'COURSE', and 'PROFESSOR' tables based on their respective identifiers. The placeholders in the query allow for dynamic filtering or selection of specific records as needed."}
{"sample_id": "train.3316", "rationale": ["The query identifies the relevant tables: CLASS, EMPLOYEE, COURSE, PROFESSOR, and DEPARTMENT.", "It selects the first name of the professor from the EMPLOYEE table, the office location from the PROFESSOR table, the course description from the COURSE table, and the department name from the DEPARTMENT table.", "The JOIN operations link these tables based on their foreign key relationships, ensuring that the data retrieved is related and meaningful."], "description": "This virtual table provides a view of the first names of professors, their office locations, course descriptions, and department names associated with classes. The placeholders in the query represent the relationships between the tables involved, allowing for dynamic filtering or selection based on user input."}
{"sample_id": "train.3317", "rationale": ["The query identifies the relevant tables: 'student', 'enroll', 'class', and 'course'.", "It selects the 'stu_fname' and 'stu_lname' from the 'student' table and 'crs_description' from the 'course' table.", "The joins are established to connect students to their enrollments, classes, and course descriptions based on the foreign key relationships."], "description": "This virtual table provides the first and last names of students along with the descriptions of the courses they are enrolled in. It combines data from the 'student', 'enroll', 'class', and 'course' tables, linking students to their respective enrollments and the courses associated with those classes."}
{"sample_id": "train.3320", "rationale": ["The query identifies the relevant tables, which are 'student' and 'enroll'.", "It selects the columns to display, 'stu_fname' and 'stu_lname' from the 'student' table.", "A JOIN operation is performed between 'student' and 'enroll' on the 'stu_num' column to link students with their enrollment records.", "Conditions are added to filter the results based on the 'enroll_grade' column for the specified grades using placeholders for string values."], "description": "This virtual table describes the first and last names of students from the 'student' table who have received specific grades in their enrolled classes. The placeholders in the WHERE clause represent the grades being queried."}
{"sample_id": "train.3321", "rationale": ["The query identifies the relevant tables: 'CLASS', 'EMPLOYEE', 'PROFESSOR', and 'DEPARTMENT'.", "It selects the 'emp_fname' from the 'EMPLOYEE' table and 'class_room' from the 'CLASS' table.", "The tables are joined based on the relationships defined by foreign keys: 'CLASS.PROF_NUM' with 'EMPLOYEE.EMP_NUM', 'PROFESSOR.EMP_NUM' with 'EMPLOYEE.EMP_NUM', and 'DEPARTMENT.DEPT_CODE' with 'PROFESSOR.DEPT_CODE'.", "A condition is added to filter results based on the 'dept_name' from the 'DEPARTMENT' table using a placeholder for string values."], "description": "This virtual table provides the first names of professors and the rooms where their classes are held from the 'CLASS' table, joined with the 'EMPLOYEE', 'PROFESSOR', and 'DEPARTMENT' tables. The placeholder in the WHERE clause represents the name of the department."}
{"sample_id": "train.3325", "rationale": ["The query identifies the relevant tables, which are 'student' and 'enroll'.", "It selects the 'stu_lname' column from the 'student' table.", "A JOIN operation is performed between 'student' and 'enroll' on the 'stu_num' column to link students with their enrollments.", "Conditions are added to filter the results based on the specified grade and class code using placeholders for string and numeric values."], "description": "This virtual table provides the last names of students who have received a specific grade in a particular class. The placeholders in the WHERE clause represent the grade and the class code respectively."}
{"sample_id": "train.3327", "rationale": ["The query identifies the relevant tables: 'PROFESSOR', 'EMPLOYEE', and 'DEPARTMENT'.", "It selects the 'emp_fname' from the 'EMPLOYEE' table and 'prof_office' from the 'PROFESSOR' table.", "The JOIN operation connects 'PROFESSOR' with 'EMPLOYEE' using 'emp_num' and with 'DEPARTMENT' using 'dept_code'.", "A condition is added to filter results based on the department name and to exclude professors with a specific highest degree using placeholders for string values."], "description": "This virtual table provides the first names of employees and the office locations of professors from the 'PROFESSOR' and 'EMPLOYEE' tables. It filters the results based on a specific department name and excludes professors with a certain highest degree. The placeholders in the WHERE clause represent the department's name and the highest degree to filter out."}
{"sample_id": "train.3329", "rationale": ["The query identifies the relevant tables, which are 'CLASS' and 'EMPLOYEE'.", "It selects the 'emp_fname' column from the 'EMPLOYEE' table, which contains the first names of professors.", "The query performs a JOIN operation between the 'CLASS' table and the 'EMPLOYEE' table using the professor's identifier.", "It groups the results by the professor's identifier to aggregate the number of classes taught by each professor.", "The HAVING clause filters the results to include only those professors who teach more than a specified number of classes, using a placeholder for the numeric value."], "description": "This virtual table provides the first names of professors who teach more than a specified number of classes. It joins the 'CLASS' table with the 'EMPLOYEE' table based on the professor's identifier, grouping the results by the professor's identifier and filtering the groups based on the count of classes taught."}
{"sample_id": "train.3331", "rationale": ["The query identifies the relevant tables, which are 'student' and 'enroll'.", "It selects the 'stu_fname' column from the 'student' table.", "A JOIN operation is performed between 'student' and 'enroll' on the student number to link students with their enrollments.", "The results are grouped by student number to aggregate the data for each student.", "The HAVING clause filters the results to include only those students who are enrolled in a specific number of classes, using a placeholder for numeric values."], "description": "This virtual table describes the first names of students from the 'student' table who are enrolled in a specific number of classes. The placeholder in the HAVING clause represents the count of classes that the students are enrolled in."}
{"sample_id": "train.3334", "rationale": ["The query identifies the relevant tables, which are 'course' and 'department'.", "It selects the 'dept_name' column from the 'department' table.", "A JOIN operation is performed on the 'dept_code' to link courses with their respective departments.", "A condition is added to filter the courses based on the 'crs_description' using a placeholder for string values."], "description": "This virtual table provides the names of departments that offer courses matching a specific description. The query joins the 'course' table with the 'department' table based on the department code, filtering the results to include only those courses whose descriptions contain a specified string."}
{"sample_id": "train.3335", "rationale": ["The query identifies the relevant tables: 'student', 'enroll', and 'CLASS'.", "It selects the 'stu_fname' column from the 'student' table.", "The query joins the 'student' table with the 'enroll' table on the student number to find enrolled students.", "It further joins the 'enroll' table with the 'CLASS' table on the class code to access course information.", "A condition is added to filter the results based on the specified course code and a pattern for the last name using placeholders for string values."], "description": "This virtual table describes the first names of students who are enrolled in a specific course identified by its course code. The query joins the 'student' table with the 'enroll' table to find students enrolled in classes, and then joins with the 'CLASS' table to filter by the course code. The placeholders in the WHERE clause represent the course code and the last name pattern of the students."}
{"sample_id": "train.3337", "rationale": ["The query is identifying the relevant table, which is 'club'.", "The count function is used to determine the total number of entries in the 'club' table."], "description": "This virtual table provides the total number of clubs present in the 'club' table. The query counts all entries in the table, which represents the clubs."}
{"sample_id": "train.3339", "rationale": ["The query is identifying the relevant table, which is 'club'.", "Select the distinct values from the 'Region' column to ensure no duplicates are included.", "Order the results in ascending order to present the regions in a sorted manner."], "description": "This virtual table provides a list of unique geographical regions where clubs are located, sorted in ascending order. The placeholder in the SELECT statement indicates that the results will be distinct regions from the 'club' table."}
{"sample_id": "train.3341", "rationale": ["The query identifies the relevant table, which is 'club_rank'.", "It selects the average of the 'Gold' column to compute the mean number of gold medals won by the clubs."], "description": "This virtual table calculates the average number of gold medals won by clubs from the 'club_rank' table. The result provides insight into the overall performance of clubs in terms of gold medal achievements."}
{"sample_id": "train.3347", "rationale": ["The query identifies the relevant table, which is 'club_rank'.", "It selects the maximum and minimum values of the 'Silver' column to determine the range of silver medals won by clubs."], "description": "This virtual table provides the maximum and minimum number of silver medals won by clubs from the 'club_rank' table. The placeholders in the SELECT statement allow for potential modifications to specify different medal counts if needed."}
{"sample_id": "train.3349", "rationale": ["The query identifies the relevant table, which is 'club_rank'.", "It uses the COUNT function to count the number of records that meet a certain condition.", "The condition filters the 'Total' column for clubs with a total number of medals less than the specified value using a placeholder for numeric values."], "description": "This virtual table counts the number of clubs from the 'club_rank' table that have won a total number of medals less than a specified value. The placeholder in the WHERE clause represents the total number of medals."}
{"sample_id": "train.3351", "rationale": ["The query identifies the relevant table, which is 'club'.", "Select the column to display, 'name'.", "Order the results by the 'Start_year' column in ascending order to show the clubs from the earliest to the latest established."], "description": "This virtual table lists the names of clubs from the 'club' table, ordered by the year they were established. This allows users to see the clubs in chronological order of their founding."}
{"sample_id": "train.3353", "rationale": ["The query identifies the relevant table, which is 'club'.", "Select the column to display, 'name'.", "Add an ORDER BY clause to sort the results in descending order based on the club names."], "description": "This virtual table lists the names of clubs from the 'club' table, sorted in descending order. The query retrieves all club names and organizes them from Z to A."}
{"sample_id": "train.3357", "rationale": ["The query identifies the relevant tables, which are 'club' and 'player'.", "It selects the 'name' column from the 'club' table.", "A JOIN operation is performed between 'club' and 'player' on the 'Club_ID' to link clubs with their players.", "A condition is added to filter players based on their 'Position' using a placeholder for string values."], "description": "This virtual table describes the names of clubs from the 'club' table that have players in a specific playing position. The placeholder in the WHERE clause represents the player's position."}
{"sample_id": "train.3359", "rationale": ["The query identifies the relevant tables, which are 'club' and 'player'.", "It selects the average of the 'Points' column from the 'player' table.", "A JOIN operation is performed on the 'Club_ID' to link players to their respective clubs.", "A condition is added to filter the results based on the specified club name using a placeholder for string values."], "description": "This virtual table calculates the average points scored by players from a specific club. The placeholder in the WHERE clause represents the name of the club for which the average points are being calculated."}
{"sample_id": "train.3365", "rationale": ["The query identifies the relevant table, which is 'competition'.", "It selects the 'Competition_type' column to categorize the competitions.", "The COUNT(*) function is used to count the number of occurrences for each competition type.", "The GROUP BY clause is applied to group the results by 'Competition_type', allowing for a count of each distinct type."], "description": "This virtual table summarizes the different types of competitions held, along with the count of each type from the 'competition' table. The result will show how many competitions of each type have taken place."}
{"sample_id": "train.3369", "rationale": ["The query identifies the relevant table, which is 'competition'.", "It selects the 'Competition_type' column to display the different types of competitions.", "The GROUP BY clause is used to group the results by 'Competition_type'.", "The HAVING clause filters the groups to include only those with a count of occurrences less than or equal to a specified number, using a placeholder for numeric values."], "description": "This virtual table summarizes the types of competitions held in the database, specifically focusing on those competition types that have a count of occurrences less than or equal to a specified number. The placeholder in the HAVING clause represents the maximum count of competitions for which the types are being queried."}
{"sample_id": "train.3371", "rationale": ["The query identifies the relevant table, which is 'club'.", "Select the column to display, 'name'.", "Add a condition to filter clubs that do not have any players associated with them by using a subquery that selects 'Club_ID' from the 'player' table."], "description": "This virtual table lists the names of clubs from the 'club' table that do not have any associated players. The subquery checks for clubs that have player entries, and the placeholder in the NOT IN clause represents the absence of player identifiers."}
{"sample_id": "train.3373", "rationale": ["The query identifies the relevant table, which is 'player'.", "It selects the 'Position' column to display the playing positions of players.", "The INTERSECT operator is used to find positions of players whose points are greater than a specified lower bound and less than a specified upper bound, using placeholders for numeric values."], "description": "This virtual table describes the playing positions of players from the 'player' table who have a total points score that falls between two specified numeric values. The placeholders in the query represent the lower and upper bounds for the points scored by the players."}
{"sample_id": "train.3375", "rationale": ["The query identifies the relevant table, which is 'player'.", "It uses the SUM function to calculate the total of the 'Points' column.", "The result will be a single numeric value representing the total points scored by all players."], "description": "This virtual table calculates the total points scored by all players from the 'player' table. The query uses the SUM function to aggregate the 'Points' column, providing a single value that represents the cumulative score of all players."}
{"sample_id": "train.3379", "rationale": ["The query identifies the relevant table, which is 'player'.", "Select the column to display, 'name'.", "Add a condition to filter players whose 'points' are greater than the average points calculated by a subquery."], "description": "This virtual table describes the names of players from the 'player' table who have scored more points than the average points scored by all players. The subquery calculates the average points, and the main query filters players based on this average."}
{"sample_id": "train.3389", "rationale": ["The query identifies the relevant table, which is 'furniture'.", "It selects the sum of the 'Num_of_Component' column to aggregate the total number of components.", "The use of the SUM function allows for the calculation of the total across all entries in the specified column."], "description": "This virtual table calculates the total number of components across all furniture items from the 'furniture' table. The result will provide a single numeric value representing the sum of all components."}
{"sample_id": "train.3390", "rationale": ["The query identifies the relevant table, which is 'furniture'.", "Select the columns to display, 'name' and 'furniture_id'.", "Order the results by 'market_rate' in descending order to show the most expensive items first.", "Limit the number of results returned using a placeholder for numeric values."], "description": "This virtual table lists the names and unique identifiers of furniture items from the 'furniture' table, ordered by their current market price in descending order. The placeholder in the LIMIT clause represents the maximum number of furniture items to be displayed."}
{"sample_id": "train.3392", "rationale": ["The query is identifying the relevant table, which is 'furniture'.", "Select the columns to display, 'Num_of_Component' and 'Name'.", "Add a condition to filter the 'Num_of_Component' column for values greater than a specified number using a placeholder for numeric values."], "description": "This virtual table describes the number of components and the names of furniture items from the 'furniture' table that have a greater number of components than a specified threshold. The placeholder in the WHERE clause represents the minimum number of components required."}
{"sample_id": "train.3395", "rationale": ["The query identifies the relevant table, which is 'manufacturer'.", "Select the columns to display, 'open_year' and 'name'.", "Add an ORDER BY clause to sort the results based on 'num_of_shops' in descending order.", "Include a LIMIT clause with a placeholder to restrict the number of results returned."], "description": "This virtual table provides a list of manufacturers along with the year they were established, sorted by the number of shops they operate in descending order. The placeholder in the LIMIT clause allows for specifying the maximum number of manufacturers to display."}
{"sample_id": "train.3396", "rationale": ["The query identifies the relevant table, which is 'manufacturer'.", "It selects the average of the 'Num_of_Factories' column to compute the average number of factories.", "A condition is added to filter manufacturers based on the 'Num_of_Shops' column, using a placeholder for numeric values to specify the minimum number of shops."], "description": "This virtual table calculates the average number of factories owned by manufacturers from the 'manufacturer' table who operate more than a specified number of shops. The placeholder in the WHERE clause represents the minimum number of shops that a manufacturer must have to be included in the average calculation."}
{"sample_id": "train.3397", "rationale": ["The query identifies the relevant table, which is 'manufacturer'.", "Select the columns to display, 'name' and 'manufacturer_id'.", "Add an ORDER BY clause to sort the results based on the 'open_year' column."], "description": "This virtual table lists the names and unique identifiers of manufacturers from the 'manufacturer' table, sorted by the year they were established. The sorting allows users to see the manufacturers in chronological order of their establishment."}
{"sample_id": "train.3398", "rationale": ["The query identifies the relevant table, which is 'manufacturer'.", "Select the columns to display, 'name' and 'open_year'.", "Add conditions to filter the results based on the number of shops and factories using placeholders for numeric values."], "description": "This virtual table provides the names and establishment years of manufacturers from the 'manufacturer' table that either operate more than a specified number of shops or own fewer factories than a specified number. The placeholders in the WHERE clause represent the numeric thresholds for the number of shops and factories."}
{"sample_id": "train.3399", "rationale": ["The query identifies the relevant table, which is 'manufacturer'.", "It selects the maximum number of shops and the average number of factories owned by the manufacturers.", "A condition is added to filter the manufacturers based on their establishment year using a placeholder for numeric values."], "description": "This virtual table provides the maximum number of shops and the average number of factories owned by manufacturers that were established before a specific year. The placeholder in the WHERE clause represents the year of establishment."}
{"sample_id": "train.3401", "rationale": ["The query identifies the relevant tables, which are 'manufacturer' and 'furniture_manufacte'.", "It selects the count of furniture items and the name of the manufacturer.", "A JOIN operation is performed to link the two tables based on the manufacturer ID.", "The results are grouped by the manufacturer ID to aggregate the count of furniture items for each manufacturer."], "description": "This virtual table provides a count of furniture items produced by each manufacturer along with the manufacturer's name. The count is derived from the 'furniture_manufacte' table, which links manufacturers to their furniture items, and the results are grouped by the manufacturer's unique identifier."}
{"sample_id": "train.3402", "rationale": ["The query identifies the relevant tables, which are 'furniture' and 'furniture_manufacte'.", "Select the column 'name' from the 'furniture' table and 'price_in_dollar' from the 'furniture_manufacte' table.", "Use a JOIN operation to connect the two tables on the 'Furniture_ID' column, which is the common identifier for the furniture items."], "description": "This virtual table describes the names of furniture items along with their selling prices in US dollars. The data is retrieved from the 'furniture' table, which contains details about the furniture items, and the 'furniture_manufacte' table, which links the furniture to its selling price. The join operation connects these two tables based on the unique identifier for each piece of furniture."}
{"sample_id": "train.3403", "rationale": ["The query identifies the relevant table, which is 'furniture'.", "Select the columns to display, 'Market_Rate' and 'Name'.", "Add a condition to filter out furniture items that are linked to any manufacturer by using a subquery that selects 'Furniture_ID' from the 'furniture_manufacte' table."], "description": "This virtual table provides the market rates and names of furniture items from the 'furniture' table that are not currently associated with any manufacturer in the 'furniture_manufacte' table. The subquery filters out furniture items that have been linked to a manufacturer, ensuring that only unassociated items are displayed."}
{"sample_id": "train.3404", "rationale": ["The query identifies the relevant tables: 'furniture', 'furniture_manufacte', and 'manufacturer'.", "It selects the 'name' column from the 'manufacturer' table, which is aliased as t3.", "The query joins the 'furniture' table (aliased as t1) with the 'furniture_manufacte' table (aliased as t2) on the 'Furniture_ID' column.", "It further joins the 'manufacturer' table (aliased as t3) on the 'Manufacturer_ID' column.", "The first part of the query filters furniture items with a number of components less than a specified numeric value using a placeholder.", "The second part of the query filters furniture items with a number of components greater than another specified numeric value using a placeholder.", "The INTERSECT operator is used to find furniture items that meet both conditions."], "description": "This virtual table lists the names of furniture items from the 'furniture' table that have a number of components less than a specified value and also greater than another specified value. The placeholders in the WHERE clauses represent the numeric thresholds for the number of components."}
{"sample_id": "train.3405", "rationale": ["The query identifies the relevant tables, which are 'employees' and 'departments'.", "It selects the 'first_name' from the employees table and 'department_name' from the departments table.", "A JOIN operation is performed on the 'department_id' to link employees to their respective departments."], "description": "This virtual table describes the first names of employees along with their corresponding department names by joining the 'employees' and 'departments' tables. The join condition links the 'department_id' from the employees table to the 'department_id' in the departments table, allowing for the retrieval of department names associated with each employee."}
{"sample_id": "train.3409", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select the columns to display, 'first_name' and 'department_id'.", "Add a condition to filter the 'last_name' column for the specified last name using a placeholder for string values."], "description": "This virtual table describes the first names and department IDs of employees from the 'employees' table who have a specific last name. The placeholder in the WHERE clause represents the last name of the employee."}
{"sample_id": "train.3411", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select all columns from the 'employees' table using '*'.", "Add a condition to filter the 'department_id' column for the specified department using a placeholder for string values."], "description": "This virtual table provides a comprehensive view of all employees from the 'employees' table who belong to a specific department. The placeholder in the WHERE clause represents the unique identifier of the department to filter the results accordingly."}
{"sample_id": "train.3413", "rationale": ["The query identifies the relevant table, which is 'departments'.", "Select all columns from the 'departments' table using '*'.", "Add a condition to filter the 'department_name' column for the specified department using a placeholder for string values."], "description": "This virtual table retrieves all information about departments from the 'departments' table that match a specific department name. The placeholder in the WHERE clause represents the name of the department being queried."}
{"sample_id": "train.3415", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select the column to display, 'hire_date'.", "Add a condition to filter the 'first_name' column using a NOT LIKE clause with a placeholder for string values."], "description": "This virtual table provides the hire dates of employees from the 'employees' table whose first names do not match a specified pattern. The placeholder in the WHERE clause allows for filtering based on the first name criteria."}
{"sample_id": "train.3421", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select the column to display, 'phone_number'.", "Add a condition to filter the 'salary' column for values between the specified minimum and maximum using placeholders for numeric values."], "description": "This virtual table provides the phone numbers of employees from the 'employees' table whose salaries fall within a specified range. The placeholders in the WHERE clause represent the minimum and maximum salary values."}
{"sample_id": "train.3423", "rationale": ["The query identifies the relevant table, which is 'employees'.", "It selects all columns from the 'employees' table.", "The WHERE clause filters employees based on a salary range using two placeholders for numeric values.", "It also checks that the commission percentage is not equal to a specified string value, and that the department ID is not equal to a specified number, allowing for flexible querying."], "description": "This virtual table retrieves all employee records from the 'employees' table where the salary falls within a specified range and the commission percentage is not equal to a certain value, or the department ID is not equal to a specified number. The placeholders in the WHERE clause allow for dynamic input of salary range, commission percentage, and department ID."}
{"sample_id": "train.3425", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select the columns to display: 'first_name', 'last_name', and 'salary'.", "Add a condition to filter the 'commission_pct' column for the specified commission percentage using a placeholder for string values."], "description": "This virtual table describes the first names, last names, and salaries of employees from the 'employees' table who have a specific commission percentage. The placeholder in the WHERE clause represents the commission percentage value."}
{"sample_id": "train.3427", "rationale": ["The query is identifying the relevant table, which is 'employees'.", "Select the columns to display, 'first_name', 'last_name', and 'salary'.", "Add a condition to filter the 'first_name' column using a LIKE operator for pattern matching with a placeholder for string values."], "description": "This virtual table describes the first names, last names, and salaries of employees from the 'employees' table whose first names match a specific pattern. The placeholder in the WHERE clause represents the pattern for the first name."}
{"sample_id": "train.3429", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select the columns to display, 'job_id' and 'hire_date'.", "Add a condition to filter the 'hire_date' column for the specified date range using placeholders for string values."], "description": "This virtual table provides the job identifiers and hire dates of employees from the 'employees' table who were hired within a specific date range. The placeholders in the WHERE clause represent the start and end dates of the hiring period."}
{"sample_id": "train.3431", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Selects the columns to display, 'first_name' and 'last_name'.", "Adds a condition to filter the 'department_id' column for the specified department identifiers using placeholders for numeric values."], "description": "This virtual table provides the first and last names of employees from the 'employees' table who belong to specific departments. The placeholders in the WHERE clause represent the identifiers of the departments being queried."}
{"sample_id": "train.3433", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select the columns to display, 'salary' and 'manager_id'.", "Add a condition to filter out employees whose 'manager_id' matches the specified value using a placeholder for string values."], "description": "This virtual table provides the salary and manager ID of employees from the 'employees' table, specifically filtering out those employees who have a specified manager ID. The placeholder in the WHERE clause represents the manager's identifier that should be excluded from the results."}
{"sample_id": "train.3435", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select all columns from the 'employees' table using '*'.", "Add a condition to filter the 'hire_date' column for employees hired before the specified date using a placeholder for string values."], "description": "This virtual table provides a list of all employees from the 'employees' table who were hired before a specific date. The placeholder in the WHERE clause represents the hire date to filter the results accordingly."}
{"sample_id": "train.3437", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select all columns from the 'employees' table using '*'.", "Add a condition to filter the 'first_name' column for specific patterns using placeholders for string values.", "Order the results by the 'salary' column in descending order."], "description": "This virtual table retrieves all information about employees from the 'employees' table whose first names match specific patterns. The results are ordered by the employees' salaries in descending order. The placeholders in the WHERE clause represent the patterns for the first names to be searched."}
{"sample_id": "train.3439", "rationale": ["The query identifies the relevant table, which is 'employees'.", "Select all columns from the 'employees' table using '*'.", "Add a condition to filter the 'hire_date' column for employees hired after a specified date using a placeholder for string values."], "description": "This virtual table provides a list of all employees from the 'employees' table who were hired after a specific date. The placeholder in the WHERE clause represents the hire date that will be specified by the user."}
{"sample_id": "train.3441", "rationale": ["The query identifies the relevant table, which is 'jobs'.", "Select the column to display, 'job_title'.", "Add a condition to filter the 'min_salary' column for values greater than the specified amount using a placeholder for numeric values."], "description": "This virtual table lists the job titles from the 'jobs' table where the minimum salary exceeds a specified amount. The placeholder in the WHERE clause represents the minimum salary threshold."}
{"sample_id": "train.3443", "rationale": ["The query identifies the relevant table, which is 'jobs'.", "Select the columns to display, 'job_title' and the calculated difference between 'max_salary' and 'min_salary'.", "Add a condition to filter the 'max_salary' column to ensure it falls within the specified range using placeholders for numeric values."], "description": "This virtual table provides the job titles along with the salary range (calculated as the difference between maximum and minimum salary) for jobs in the 'jobs' table that fall within a specified maximum salary range. The placeholders in the WHERE clause represent the numeric values for the salary limits."}
