{"sample_id": "train.2322", "rationale": ["The query identifies the relevant tables, 'people' and 'perpetrator', and establishes a join condition based on the 'People_ID' foreign key.", "It selects the 'Date' column from the 'perpetrator' table, which contains the dates of incidents.", "The results are ordered by the 'Height' column from the 'people' table in descending order to prioritize taller individuals.", "A placeholder is included in the LIMIT clause to allow users to specify how many results they want to retrieve."], "description": "This virtual table provides a list of incident dates involving perpetrators, ordered by the height of the associated individuals from the 'people' table. The placeholder in the LIMIT clause allows for specifying the maximum number of results to return."}
{"sample_id": "train.2323", "rationale": ["The query is identifying the relevant table, which is 'perpetrator'.", "The goal is to find the maximum year of incidents, so the SQL function 'max' is used on the 'Year' column.", "The result will be a single value representing the latest year of incidents recorded."], "description": "This virtual table retrieves the maximum year of incidents recorded in the 'perpetrator' table. The placeholder in the SELECT clause indicates that the result will be the highest year value found in the data."}
{"sample_id": "train.2324", "rationale": ["The query is identifying the relevant table, which is 'Campuses'.", "Select the column to display, 'campus'.", "Add a condition to filter the 'county' column for the specified county using a placeholder for string values."], "description": "This virtual table describes the campuses located in a specific county from the 'Campuses' table. The placeholder in the WHERE clause represents the name of the county."}
{"sample_id": "train.2326", "rationale": ["The query is identifying the relevant table, which is 'Campuses'.", "Select the column to display, 'campus'.", "Add a condition to filter the 'Location' column for the specified location using a placeholder for string values."], "description": "This virtual table describes the campuses from the 'Campuses' table that are located in a specific geographical location. The placeholder in the WHERE clause represents the location of the campus."}
{"sample_id": "train.2329", "rationale": ["The query identifies the relevant table, which is 'Campuses'.", "Select the column to display, 'Campus'.", "Add a condition to filter the 'Year' column for the specified year using a placeholder for numeric values."], "description": "This virtual table describes the names of campuses from the 'Campuses' table that have records for a specific year. The placeholder in the WHERE clause represents the year for which the campus data is being queried."}
{"sample_id": "train.2330", "rationale": ["The query identifies the relevant table, which is 'Campuses'.", "Select the column to display, 'Campus'.", "Add a condition to filter the 'Year' column for records that are less than the specified year using a placeholder for numeric values."], "description": "This virtual table lists the names of campuses from the 'Campuses' table that have records from years earlier than a specified year. The placeholder in the WHERE clause represents the year to compare against."}
{"sample_id": "train.2332", "rationale": ["The query identifies the relevant table, which is 'Campuses'.", "Select the column to display, 'Campus'.", "Add a condition to filter the 'Year' column for the specified range using placeholders for numeric values."], "description": "This virtual table provides a list of campuses from the 'Campuses' table that have records for a specified range of years. The placeholders in the WHERE clause represent the start and end years for filtering the campuses."}
{"sample_id": "train.2336", "rationale": ["The query identifies the relevant tables, 'Campuses' and 'csu_fees'.", "It selects the 'campusfee' column from the 'csu_fees' table.", "A JOIN operation is performed to link 'Campuses' and 'csu_fees' based on the campus identifier.", "Conditions are added to filter results by the specified campus name and year using placeholders for string and numeric values."], "description": "This virtual table provides the campus fee amount for a specific campus in a given year. The placeholders in the WHERE clause represent the campus name and the applicable year for the fee."}
{"sample_id": "train.2338", "rationale": ["The query identifies the relevant tables, 'Campuses' and 'csu_fees'.", "It selects the 'campusfee' column from the 'csu_fees' table.", "A JOIN operation is performed to link 'Campuses' and 'csu_fees' based on the campus identifier.", "Conditions are added to filter results by the specified campus name and year using placeholders for string and numeric values."], "description": "This virtual table provides the campus fee amount for a specific campus in a given year. The placeholders in the WHERE clause represent the campus name and the applicable year for the fee."}
{"sample_id": "train.2340", "rationale": ["The query identifies the relevant table, which is 'csu_fees'.", "It uses a subquery to calculate the average campus fee from the 'csu_fees' table.", "The main query counts the number of records where the 'CampusFee' is greater than the average calculated in the subquery."], "description": "This virtual table provides the count of campuses that have a campus fee greater than the average campus fee across all campuses. The placeholder in the WHERE clause represents the condition for filtering the campus fees."}
{"sample_id": "train.2344", "rationale": ["The query identifies the relevant table, which is 'Campuses'.", "Select the column to display, 'Campus'.", "Add conditions to filter the 'county' column for the specified county and the 'Year' column for records greater than the specified year using placeholders for string and numeric values."], "description": "This virtual table lists the campuses located in a specific county that have data records from a certain year onwards. The placeholders in the WHERE clause represent the county name and the year threshold."}
{"sample_id": "train.2352", "rationale": ["The query identifies the relevant table, which is 'csu_fees'.", "It selects the average of the 'CampusFee' column to compute the average fee.", "A condition is added to filter the records based on the specified year using a placeholder for numeric values."], "description": "This virtual table calculates the average campus fee from the 'csu_fees' table for a specific year. The placeholder in the WHERE clause represents the year for which the average fee is being calculated."}
{"sample_id": "train.2354", "rationale": ["The query identifies the relevant table, which is 'csu_fees'.", "It selects the average of the 'CampusFee' column to compute the average fee.", "A condition is added to filter the records for the specified year using a placeholder for numeric values."], "description": "This virtual table calculates the average campus fee from the 'csu_fees' table for a specific year. The placeholder in the WHERE clause represents the year for which the average fee is being calculated."}
{"sample_id": "train.2360", "rationale": ["The query starts by selecting the 'campus' from the 'campuses' table, aliased as T1.", "It joins the 'faculty' table, aliased as T2, on the condition that the campus ID matches.", "A condition is added to filter the results for a specific year using a placeholder for numeric values.", "A subquery is included to find the maximum number of faculty members in the specified county for the same year, using placeholders for both the year and county name."], "description": "This virtual table identifies campuses that have a number of faculty members greater than the maximum number of faculty members in a specified county for a given year. The placeholders in the query represent the year and the county name."}
{"sample_id": "train.2364", "rationale": ["The query identifies the relevant table, which is 'Campuses'.", "It selects the count of all records in the table.", "A condition is added to filter the results based on the 'county' column using a placeholder for string values."], "description": "This virtual table provides the count of campuses located in a specific county from the 'Campuses' table. The placeholder in the WHERE clause represents the name of the county."}
{"sample_id": "train.2370", "rationale": ["The query identifies the relevant tables, 'Campuses' and 'degrees'.", "It selects the 'Degrees' column from the 'degrees' table.", "A JOIN operation is performed to link the 'Campuses' table with the 'degrees' table based on the campus identifier.", "Conditions are added to filter results for a specific campus and year using placeholders for string and numeric values."], "description": "This virtual table provides information about the types of degrees awarded at a specific campus during a particular year. The placeholders in the WHERE clause represent the campus name and the year for which the degree data is being queried."}
{"sample_id": "train.2372", "rationale": ["The query identifies the relevant table, which is 'faculty'.", "It selects the sum of the 'faculty' column to get the total number of faculty members.", "A condition is added to filter the results based on the specified year using a placeholder for numeric values."], "description": "This virtual table summarizes the total number of faculty members across all campuses for a specific year. The placeholder in the WHERE clause represents the year for which the faculty count is being queried."}
{"sample_id": "train.2375", "rationale": ["The query identifies the relevant tables, 'faculty' and 'campuses'.", "It selects the 'faculty' column from the 'faculty' table.", "A JOIN operation is performed between 'faculty' and 'campuses' on the campus identifier to link faculty data with campus information.", "Conditions are added to filter the results based on the specified year and campus name using placeholders for numeric and string values."], "description": "This virtual table provides the number of faculty members at a specific campus for a given year. The placeholders in the WHERE clause represent the year of the faculty data record and the name of the campus."}
{"sample_id": "train.2384", "rationale": ["The query identifies the relevant tables, 'discipline_enrollments' and 'campuses'.", "It selects the sum of the 'undergraduate' column from the 'discipline_enrollments' table.", "A JOIN operation is performed to link 'discipline_enrollments' with 'campuses' based on the campus identifier.", "Conditions are added to filter the results by a specific year and campus name using placeholders for numeric and string values."], "description": "This virtual table calculates the total number of undergraduate enrollments from the 'discipline_enrollments' table for a specific campus and year. The placeholders in the WHERE clause represent the year of enrollment and the name of the campus."}
{"sample_id": "train.2386", "rationale": ["The query identifies the relevant tables, 'discipline_enrollments' and 'campuses'.", "It uses a JOIN operation to link the two tables based on the campus identifier.", "The SUM function is applied to the 'graduate' column to calculate the total number of graduate enrollments.", "Conditions are added to filter the results by the specified year and campus name using placeholders for numeric and string values."], "description": "This virtual table calculates the total number of graduate enrollments from the 'discipline_enrollments' table for a specific campus and year. The placeholders in the WHERE clause represent the year of enrollment and the name of the campus."}
{"sample_id": "train.2388", "rationale": ["The query identifies the relevant tables, 'csu_fees' and 'Campuses'.", "It selects the 'campusfee' column from the 'csu_fees' table.", "A JOIN operation is performed to link 'csu_fees' with 'Campuses' based on the campus identifier.", "Conditions are added to filter results by the specified campus name and year using placeholders for string and numeric values."], "description": "This virtual table provides the campus fee amount for a specific campus and year from the 'csu_fees' table. The placeholders in the WHERE clause represent the campus name and the applicable year."}
{"sample_id": "train.2390", "rationale": ["The query identifies the relevant tables, 'csu_fees' and 'Campuses'.", "It selects the 'campusfee' column from the 'csu_fees' table.", "A JOIN operation is performed to link 'csu_fees' with 'Campuses' based on the campus identifier.", "Conditions are added to filter results for a specific campus name and year using placeholders for string and numeric values."], "description": "This virtual table provides the campus fee amount for a specific campus and year from the 'csu_fees' table. The placeholders in the WHERE clause represent the campus name and the applicable year."}
{"sample_id": "train.2392", "rationale": ["The query is identifying the relevant table, which is 'Campuses'.", "Using the count function to calculate the total number of campuses present in the table."], "description": "This virtual table provides the total count of campuses recorded in the 'Campuses' table. The query uses the count function to aggregate the number of entries in the table, which helps in understanding the scale of the campus data available."}
{"sample_id": "train.2394", "rationale": ["The query is identifying the relevant table, which is 'candidate'.", "The count function is used to determine the total number of candidates present in the table."], "description": "This virtual table provides the total number of candidates recorded in the 'candidate' table. The query counts all entries in the table, which helps in understanding the overall participation in the polling data."}
{"sample_id": "train.2399", "rationale": ["The query identifies the relevant table, which is 'candidate'.", "Select the column to display, 'support_rate'.", "Order the results by 'support_rate' in descending order to show the highest support rates first.", "Limit the number of results returned using a placeholder for numeric values."], "description": "This virtual table provides the support rates of candidates from the 'candidate' table, ordered from highest to lowest. The placeholder in the LIMIT clause indicates the maximum number of results to return."}
{"sample_id": "train.2400", "rationale": ["The query identifies the relevant table, which is 'candidate'.", "Select the column to display, 'Candidate_ID'.", "Order the results by the 'oppose_rate' column to show candidates with the least support first.", "Limit the number of results returned using a placeholder for numeric values."], "description": "This virtual table provides a list of candidate identifiers from the 'candidate' table, ordered by the rate of opposition to each candidate. The placeholder in the LIMIT clause allows for specifying the maximum number of candidates to retrieve."}
{"sample_id": "train.2404", "rationale": ["The query identifies the relevant table, which is 'candidate'.", "Select the column to display, 'poll_source'.", "Add an ORDER BY clause to sort the results based on the 'oppose_rate' column in descending order.", "Include a LIMIT clause with a placeholder to specify the number of results to return."], "description": "This virtual table provides a list of poll sources from the 'candidate' table, ordered by the rate of opposition to the candidates. The placeholder in the LIMIT clause allows for specifying the maximum number of poll sources to retrieve."}
{"sample_id": "train.2406", "rationale": ["The query identifies the relevant table, which is 'people'.", "It selects the 'name' column to display the names of individuals.", "The results are ordered by the 'date_of_birth' column to arrange the names chronologically."], "description": "This virtual table lists the names of individuals from the 'people' table, ordered by their date of birth. This allows for a chronological view of individuals based on their age."}
{"sample_id": "train.2408", "rationale": ["The query identifies the relevant table, which is 'people'.", "It selects the average values of 'height' and 'weight' columns.", "A condition is added to filter the results based on the 'sex' column using a placeholder for string values."], "description": "This virtual table calculates the average height and weight of individuals from the 'people' table, filtered by a specific gender. The placeholder in the WHERE clause represents the gender of the individuals being queried."}
{"sample_id": "train.2410", "rationale": ["The query identifies the relevant table, which is 'people'.", "Select the column to display, 'name'.", "Add a condition to filter the 'height' column for values greater than or less than specified thresholds using placeholders for numeric values."], "description": "This virtual table describes the names of individuals from the 'people' table whose height is either greater than or less than specified values. The placeholders in the WHERE clause represent the height thresholds for filtering the results."}
{"sample_id": "train.2412", "rationale": ["The query identifies the relevant table, which is 'people'.", "It selects the average and minimum weight of individuals, which are aggregate functions applied to the 'weight' column.", "The query groups the results by the 'sex' column to categorize the weights according to gender."], "description": "This virtual table provides the average and minimum weight of individuals grouped by their gender from the 'people' table. The placeholders in the SELECT clause represent the calculated values for weight and the gender category."}
{"sample_id": "train.2414", "rationale": ["The query identifies the relevant tables, 'people' and 'candidate'.", "It selects the 'name' and 'sex' columns from the 'people' table.", "A JOIN operation is performed on the 'people' and 'candidate' tables using the 'People_ID' foreign key to link them.", "The results are ordered by the 'support_rate' from the 'candidate' table in descending order to prioritize candidates with higher support.", "A placeholder is included in the LIMIT clause to specify the maximum number of records to return."], "description": "This virtual table provides the names and genders of individuals from the 'people' table who are linked to the 'candidate' table, sorted by their support rates in descending order. The placeholder in the LIMIT clause indicates the maximum number of records to return."}
{"sample_id": "train.2416", "rationale": ["The query identifies the relevant tables, 'people' and 'candidate'.", "It selects the 'name' and 'sex' columns from the 'people' table and the minimum 'oppose_rate' from the 'candidate' table.", "A JOIN operation is performed on the 'People_ID' to link the two tables based on the foreign key relationship.", "The results are grouped by the 'sex' column to aggregate the minimum opposition rates for each gender."], "description": "This virtual table provides the names and genders of individuals from the 'people' table, along with the minimum opposition rate from the 'candidate' table for each gender. The placeholder in the SELECT statement allows for the retrieval of specific data related to the candidates' opposition rates grouped by gender."}
{"sample_id": "train.2419", "rationale": ["The query identifies the relevant tables, 'people' and 'candidate', and establishes a join condition on the 'People_ID' field.", "It selects the 'sex' column from the 'people' table.", "The results are grouped by 'sex' to aggregate the data accordingly.", "The average of the 'unsure_rate' from the 'candidate' table is calculated to order the results.", "The LIMIT clause includes a placeholder to specify how many results to return."], "description": "This virtual table provides the gender distribution of candidates based on the percentage of respondents who are unsure about them. It joins the 'people' and 'candidate' tables on the 'People_ID' field, groups the results by gender, and orders them by the average unsure rate in descending order. The placeholder in the LIMIT clause allows for specifying the maximum number of results to return."}
{"sample_id": "train.2420", "rationale": ["The query identifies the relevant table, which is 'people'.", "Select the column to display, 'name'.", "Add a condition to filter out 'people_id' that are present in the 'candidate' table using a subquery to ensure only those without candidates are selected."], "description": "This virtual table lists the names of individuals from the 'people' table who are not associated with any candidate in the 'candidate' table. The subquery filters out those individuals who have a corresponding entry in the 'candidate' table, ensuring that only those without any candidate affiliation are included."}
{"sample_id": "train.2422", "rationale": ["The query identifies the relevant tables, 'people' and 'candidate'.", "It selects the 'name' column from the 'people' table.", "A JOIN operation is performed on the 'People_ID' to link candidates with their personal details.", "A condition is added to filter candidates where the 'support_rate' is less than the 'oppose_rate' using the appropriate placeholders."], "description": "This virtual table describes the names of individuals from the 'people' table who are candidates in the 'candidate' table, specifically those whose support rate is less than their oppose rate. The query joins the two tables on the People_ID to correlate candidate data with personal details."}
{"sample_id": "train.2424", "rationale": ["The query identifies the relevant table, which is 'people'.", "It selects the count of individuals and the 'sex' column to group the results by gender.", "A condition is added to filter the results based on the 'weight' column, using a placeholder for numeric values."], "description": "This virtual table provides a count of individuals grouped by their gender from the 'people' table, specifically for those whose weight exceeds a certain threshold. The placeholder in the WHERE clause represents the weight limit."}
{"sample_id": "train.2426", "rationale": ["The query identifies the relevant table, which is 'candidate'.", "It selects the maximum value of 'support_rate', the minimum value of 'consider_rate', and the minimum value of 'oppose_rate'.", "The use of aggregate functions (max and min) indicates a summary of the rates for all candidates."], "description": "This virtual table summarizes the maximum support rate, minimum consideration rate, and minimum opposition rate for candidates from the 'candidate' table. The placeholders represent the respective rates being analyzed."}
{"sample_id": "train.2428", "rationale": ["The query identifies the relevant tables, which are 'people' and 'candidate'.", "It selects the 'name' column from the 'people' table.", "A JOIN operation is performed to link the 'people' table with the 'candidate' table based on the 'People_ID' foreign key.", "A condition is added to filter the results based on the 'sex' column using a placeholder for string values.", "The results are ordered by the 'name' column."], "description": "This virtual table describes the names of individuals from the 'people' table who are linked to candidates in the 'candidate' table, filtered by a specific gender. The placeholder in the WHERE clause represents the gender of the individuals."}
{"sample_id": "train.2430", "rationale": ["The query identifies the relevant table, which is 'people'.", "It selects the 'name' column to display the names of individuals.", "A condition is added to filter individuals based on their height being less than the average height, which is calculated using a subquery."], "description": "This virtual table lists the names of individuals from the 'people' table who have a height less than the average height of all individuals in the same table. The query uses a subquery to calculate the average height, ensuring that only those below this average are selected."}
{"sample_id": "train.2432", "rationale": ["The query is selecting all columns from the 'people' table.", "The virtual table represents the complete dataset of individuals, which includes various attributes such as gender, name, date of birth, height, and weight."], "description": "This virtual table retrieves all details of individuals from the 'people' table. The table includes unique identifiers, gender, full name, birth date, height, and weight of each person."}
{"sample_id": "train.2435", "rationale": ["The query is identifying the relevant table, which is 'Movie'.", "Select the column to display, 'title'.", "Add a condition to filter the 'director' column for the specified director using a placeholder for string values."], "description": "This virtual table describes the titles of movies from the 'Movie' table that were directed by a specific director. The placeholder in the WHERE clause represents the director's name."}
{"sample_id": "train.2436", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "Select the column to display, 'title'.", "Add conditions to filter the 'director' column for the specified director using a placeholder for string values and the 'year' column for movies released after a specified year using a placeholder for numeric values."], "description": "This virtual table describes the titles of movies from the 'Movie' table that were directed by a specific director and released after a certain year. The placeholders in the WHERE clause represent the director's name and the year of release."}
{"sample_id": "train.2438", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "It uses the COUNT function to count the total number of movies.", "A condition is added to filter the movies based on their release year using a placeholder for numeric values."], "description": "This virtual table counts the number of movies from the 'Movie' table that were released before a specific year. The placeholder in the WHERE clause represents the year of release."}
{"sample_id": "train.2440", "rationale": ["The query is identifying the relevant table, which is 'Movie'.", "Select the column to display, 'director'.", "Add a condition to filter the 'title' column for the specified movie title using a placeholder for string values."], "description": "This virtual table describes the directors of movies from the 'Movie' table based on a specific movie title. The placeholder in the WHERE clause represents the title of the movie."}
{"sample_id": "train.2442", "rationale": ["The query is identifying the relevant table, which is 'Reviewer'.", "The count function is used to determine the total number of entries in the Reviewer table.", "The use of count(*) indicates that we want to count all rows in the table without any filtering."], "description": "This virtual table provides the total number of reviewers from the 'Reviewer' table. The query counts all entries in the Reviewer table, which helps in understanding the size of the reviewer pool."}
{"sample_id": "train.2444", "rationale": ["The query is identifying the relevant table, which is 'Reviewer'.", "Select the column to display, 'rID'.", "Add a condition to filter the 'name' column using a LIKE clause for the specified name pattern with a placeholder for string values."], "description": "This virtual table describes the unique identifiers of reviewers from the 'Reviewer' table whose names match a specific pattern. The placeholder in the WHERE clause represents the reviewer's name pattern."}
{"sample_id": "train.2446", "rationale": ["The query is identifying the relevant table, which is 'Reviewer'.", "Select the column to display, 'rID'.", "Add a condition to filter the 'name' column for the specified reviewer's name using a placeholder for string values."], "description": "This virtual table describes the unique identifiers of reviewers from the 'Reviewer' table who have a specific name. The placeholder in the WHERE clause represents the reviewer's name."}
{"sample_id": "train.2448", "rationale": ["The query identifies the relevant table, which is 'Rating'.", "It selects the count of all entries that meet a specific condition.", "The condition filters the ratings based on the 'stars' column, using a placeholder for numeric values to specify the minimum star rating."], "description": "This virtual table provides the count of ratings from the 'Rating' table where the number of stars given exceeds a specified threshold. The placeholder in the WHERE clause represents the minimum number of stars that a rating must have to be included in the count."}
{"sample_id": "train.2450", "rationale": ["The query identifies the relevant table, which is 'Rating'.", "It selects the maximum and minimum values of the 'stars' column to provide insights into the range of ratings.", "The use of aggregate functions 'max' and 'min' allows for a summary of the ratings without needing to filter by specific movies or reviewers."], "description": "This virtual table provides the maximum and minimum star ratings from the 'Rating' table, which captures the ratings given by reviewers to various movies. The placeholders in the SELECT statement represent the aggregated values of the star ratings."}
{"sample_id": "train.2454", "rationale": ["The query identifies the relevant tables, which are 'Movie' and 'Rating'.", "It selects the columns to display, 'director' and 'title' from the 'Movie' table.", "A JOIN operation is performed between 'Movie' and 'Rating' on the movie identifier 'mID'.", "A condition is added to filter the results based on the number of stars given in the rating using a placeholder for numeric values."], "description": "This virtual table describes the directors and titles of movies from the 'Movie' table that have received a specific number of stars in their ratings. The placeholder in the WHERE clause represents the number of stars given in the rating."}
{"sample_id": "train.2456", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Reviewer'.", "It selects the reviewer's name from the 'Reviewer' table and calculates the average of the stars from the 'Rating' table.", "A JOIN operation is performed on the 'rID' to link the two tables, allowing access to both the reviewer's name and their ratings.", "The results are grouped by the reviewer's name to compute the average stars for each individual reviewer."], "description": "This virtual table provides the average star ratings given by each reviewer from the 'Rating' table. The placeholder in the SELECT statement represents the reviewer's name, and the average stars are calculated for each reviewer based on their ratings."}
{"sample_id": "train.2458", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "Select the column to display, 'title'.", "Add a condition to filter out movies whose IDs are present in the 'Rating' table using a subquery that selects 'mID' from 'Rating'."], "description": "This virtual table lists the titles of movies from the 'Movie' table that have not received any ratings. The subquery identifies the movie IDs that have been rated, and the main query filters out these IDs to show only unrated movies."}
{"sample_id": "train.2462", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Movie'.", "It selects the average of the 'stars' column from the 'Rating' table and the 'title' column from the 'Movie' table.", "A JOIN operation is performed on the 'mID' column to link ratings to their respective movies.", "A condition is added to filter the results to only include movies released in the earliest year, using a subquery to find the minimum year from the 'Movie' table."], "description": "This virtual table provides the average star rating of movies released in the earliest year from the 'Movie' table. The placeholder in the WHERE clause is used to filter the movies based on their release year, which is determined by a subquery that finds the minimum year."}
{"sample_id": "train.2464", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "It selects the 'title' column to display the names of the movies.", "A subquery is used to find the maximum year from the 'Movie' table, which is then used to filter the results in the WHERE clause."], "description": "This virtual table describes the titles of movies from the 'Movie' table that were released in the most recent year. The subquery retrieves the maximum year from the 'Movie' table, ensuring that only the latest movies are selected."}
{"sample_id": "train.2466", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Movie'.", "It selects the maximum stars from the 'Rating' table and the year from the 'Movie' table.", "A join is performed on the 'mID' to link ratings to their corresponding movies.", "A subquery is used to find the maximum year from the 'Movie' table to filter the results for the most recent year."], "description": "This virtual table provides the maximum star rating for movies released in the most recent year. It joins the 'Rating' and 'Movie' tables to correlate the ratings with their respective movies, filtering for the year of release that is the latest available in the database."}
{"sample_id": "train.2468", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "Select the column to display, 'title'.", "Add a condition to filter the 'year' column for movies released after the maximum year of movies directed by the specified director using a subquery and a placeholder for string values."], "description": "This virtual table describes the titles of movies from the 'Movie' table that were released after the most recent movie directed by a specific director. The placeholder in the WHERE clause represents the director's name."}
{"sample_id": "train.2470", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Movie'.", "It selects the 'title' and 'director' columns from the 'Movie' table.", "A join is performed between 'Rating' and 'Movie' on the movie identifier 'mID'.", "A condition is added to filter movies with ratings greater than the average rating for a specified director, using a subquery that calculates the average stars for that director, with a placeholder for the director's name."], "description": "This virtual table provides the titles and directors of movies that have received ratings higher than the average rating for movies directed by a specific director. The placeholder in the subquery represents the name of the director whose average rating is being calculated."}
{"sample_id": "train.2472", "rationale": ["The query identifies the relevant tables: 'Rating', 'Movie', and 'Reviewer'.", "It selects the columns to display: reviewer's name, movie title, star rating, and rating date.", "The JOIN operations link the 'Rating' table to the 'Movie' and 'Reviewer' tables using their respective identifiers.", "The ORDER BY clause sorts the results by reviewer's name, movie title, and star rating."], "description": "This virtual table presents the names of reviewers along with the titles of movies they rated, the star ratings given, and the dates of those ratings. The placeholders in the query allow for dynamic filtering and sorting based on reviewer names, movie titles, and star ratings."}
{"sample_id": "train.2474", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Reviewer'.", "It selects the 'name' column from the 'Reviewer' table.", "A JOIN operation is performed between 'Rating' and 'Reviewer' on the reviewer ID to link ratings to their respective reviewers.", "The results are grouped by reviewer ID to aggregate the ratings for each reviewer.", "The HAVING clause filters the groups to include only those reviewers who have submitted a number of ratings that meets or exceeds the specified threshold using a placeholder for numeric values."], "description": "This virtual table lists the names of reviewers from the 'Reviewer' table who have submitted a number of ratings equal to or greater than a specified threshold. The placeholder in the HAVING clause represents the minimum count of ratings a reviewer must have submitted."}
{"sample_id": "train.2477", "rationale": ["The query identifies the relevant tables: 'Rating', 'Movie', and 'Reviewer'.", "It selects distinct reviewer names from the 'Reviewer' table.", "The JOIN operations link the 'Rating' table to the 'Movie' table using the movie ID, and to the 'Reviewer' table using the reviewer ID.", "A condition is added to filter the results based on the specified movie title using a placeholder for string values."], "description": "This virtual table lists the distinct names of reviewers who have rated a specific movie from the 'Movie' table. The placeholder in the WHERE clause represents the title of the movie."}
{"sample_id": "train.2478", "rationale": ["The query identifies the relevant tables: 'Rating', 'Movie', and 'Reviewer'.", "It selects the distinct 'director' from the 'Movie' table.", "The JOIN operations link the 'Rating' table to the 'Movie' table using the movie ID, and to the 'Reviewer' table using the reviewer ID.", "A condition is added to filter the results based on the reviewer's name using a placeholder for string values."], "description": "This virtual table provides a list of unique directors of movies that have been rated by a specific reviewer. The placeholder in the WHERE clause represents the reviewer's name."}
{"sample_id": "train.2480", "rationale": ["The query identifies the relevant tables: 'Rating', 'Movie', and 'Reviewer'.", "It selects distinct values for the reviewer's name, movie title, and star rating.", "The JOIN operations link the 'Rating' table to the 'Movie' table using the movie ID, and to the 'Reviewer' table using the reviewer ID.", "A condition is applied to ensure that the director of the movie matches the reviewer's name, using placeholders for the relevant fields."], "description": "This virtual table presents a list of distinct reviewers' names, the titles of movies they rated, and the corresponding star ratings. The data is sourced from the 'Rating', 'Movie', and 'Reviewer' tables, with a condition that the director of the movie matches the reviewer's name."}
{"sample_id": "train.2484", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "It selects distinct movie titles from the 'Movie' table.", "The EXCEPT clause is used to exclude titles that have been rated by a specific reviewer.", "The JOIN operations link the 'Rating', 'Movie', and 'Reviewer' tables based on their foreign key relationships.", "A condition is added to filter the results based on the reviewer's name using a placeholder for string values."], "description": "This virtual table lists the titles of movies from the 'Movie' table that have not been rated by a specific reviewer. The placeholder in the WHERE clause represents the reviewer's name."}
{"sample_id": "train.2486", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "It selects the columns 'title' and 'director' from the 'Movie' table.", "A self-join is performed on the 'Movie' table to find movies with the same director by matching the 'director' column.", "A condition is added to ensure that the titles are different using 'T1.title != T2.title'.", "The results are ordered by 'director' and then by 'title' to organize the output."], "description": "This virtual table lists the titles and directors of movies from the 'Movie' table that share the same director but are different titles. The results are ordered by the director's name and then by the movie title."}
{"sample_id": "train.2490", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "Select the 'director' column to display the names of directors.", "Group the results by 'director' to aggregate the data based on each director's films.", "Use the HAVING clause to filter the grouped results to only include directors who have directed a specific number of movies, using a placeholder for numeric values."], "description": "This virtual table lists the directors of movies from the 'Movie' table who have directed a specific number of films. The placeholder in the HAVING clause represents the count of movies directed by each director."}
{"sample_id": "train.2492", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "Select the column to display, 'director'.", "Add a condition to filter out a specific director using a placeholder for string values.", "Group the results by 'director' to aggregate the data.", "Use the HAVING clause to filter directors based on the count of movies they have directed, using a placeholder for numeric values."], "description": "This virtual table provides a list of directors from the 'Movie' table who have directed a specific number of movies, excluding a particular director. The placeholders in the WHERE clause represent the name of the director to exclude and the number of movies directed by the remaining directors."}
{"sample_id": "train.2498", "rationale": ["The query identifies the relevant tables, 'Rating' and 'Movie'.", "It selects the 'title' from the 'Movie' table and calculates the average of 'stars' from the 'Rating' table.", "A JOIN operation is performed on the 'mID' to link ratings to their corresponding movies.", "The results are grouped by the movie identifier to calculate the average rating for each movie.", "The results are ordered by the average rating, and a limit is applied to control the number of results returned, using a placeholder for numeric values."], "description": "This virtual table provides the titles of movies along with their average ratings from the 'Rating' table. The results are grouped by movie identifier and ordered by the average rating in ascending order, with a limit on the number of results returned as specified by the placeholder."}
{"sample_id": "train.2501", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Movie'.", "It selects the columns 'title' and 'year' from the 'Movie' table.", "A JOIN operation is performed between 'Rating' and 'Movie' on the movie identifier 'mID' to link ratings to their respective movies.", "The results are ordered by the 'stars' column from the 'Rating' table in descending order to show the highest-rated movies first.", "A LIMIT clause is included to restrict the number of results returned, using a placeholder for numeric values."], "description": "This virtual table provides a list of movie titles and their release years from the 'Movie' table, ordered by the number of stars given in ratings from the 'Rating' table. The placeholder in the LIMIT clause allows the user to specify the maximum number of results to return."}
{"sample_id": "train.2510", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Movie'.", "It selects the 'title' column from the 'Movie' table.", "A JOIN operation is performed between 'Rating' and 'Movie' on the movie identifier 'mID'.", "A condition is added to filter the ratings based on a specified range of stars using placeholders for numeric values."], "description": "This virtual table provides the titles of movies from the 'Movie' table that have received ratings within a specified range of stars. The placeholders in the WHERE clause represent the minimum and maximum star ratings."}
{"sample_id": "train.2512", "rationale": ["The query identifies the relevant tables, which are 'Rating' and 'Reviewer'.", "It selects the 'name' column from the 'Reviewer' table.", "The join condition links the 'Rating' table to the 'Reviewer' table using the reviewer identifier (rID).", "A condition is added to filter the ratings to only include those with more than a specified number of stars, using a placeholder for numeric values."], "description": "This virtual table describes the names of reviewers who have given a rating of more than a specified number of stars to movies. The query joins the 'Rating' table with the 'Reviewer' table based on the reviewer's identifier, allowing us to filter the results based on the star rating provided."}
{"sample_id": "train.2520", "rationale": ["The query is identifying the relevant table, which is 'Rating'.", "It selects the 'rID' of all reviewers from the 'Rating' table.", "The EXCEPT clause is used to filter out reviewers who have given a specific number of stars, using a placeholder for numeric values."], "description": "This virtual table identifies reviewers who have submitted ratings for movies but did not give a specific number of stars. The placeholder in the EXCEPT clause represents the number of stars that is being excluded from the results."}
{"sample_id": "train.2524", "rationale": ["The query identifies the relevant tables: 'Rating', 'Movie', and 'Reviewer'.", "It selects distinct movie titles from the 'Movie' table.", "The JOIN operations link the 'Rating' table to the 'Movie' and 'Reviewer' tables based on their respective identifiers.", "The WHERE clause filters the results based on the reviewer's name and the movie's release year using placeholders for string and numeric values."], "description": "This virtual table provides a list of distinct movie titles from the 'Movie' table that have been rated by a specific reviewer or were released after a certain year. The placeholders in the WHERE clause represent the reviewer's name and the year of release, respectively."}
{"sample_id": "train.2526", "rationale": ["The query identifies the relevant table, which is 'Movie'.", "Select the column to display, 'title'.", "Add a condition to filter the 'director' column for the specified director using a placeholder for string values.", "Add another condition to filter movies released before a specified year using a placeholder for numeric values."], "description": "This virtual table lists the titles of movies from the 'Movie' table that were directed by a specific director or released before a certain year. The placeholders in the WHERE clause represent the director's name and the year of release."}
{"sample_id": "train.2532", "rationale": ["The query is identifying the relevant table, which is 'county_public_safety'.", "The count function is used to calculate the total number of records in the table, which provides an overview of the data available.", "No specific conditions are applied, so it counts all entries in the 'county_public_safety' table."], "description": "This virtual table provides the total count of records from the 'county_public_safety' table, which contains information about various counties and their public safety metrics. The query uses a count function to aggregate the number of entries in the table."}
{"sample_id": "train.2534", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "Select the column to display, 'Name', which represents the county names.", "Add an ORDER BY clause to sort the results based on the 'Population' column in descending order."], "description": "This virtual table provides a list of county names from the 'county_public_safety' table, ordered by their population in descending order. This allows users to easily identify the counties with the largest populations."}
{"sample_id": "train.2536", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "Select the distinct values of the 'Police_force' column to avoid duplicates.", "Add a condition to filter out records based on the 'Location' column using a placeholder for string values."], "description": "This virtual table provides a list of distinct police forces from the 'county_public_safety' table, excluding those located in a specific geographical area. The placeholder in the WHERE clause represents the location to be filtered out."}
{"sample_id": "train.2538", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "It selects the minimum and maximum values of the 'Crime_rate' column.", "The use of aggregate functions min() and max() allows for the retrieval of the lowest and highest crime rates, respectively."], "description": "This virtual table provides the minimum and maximum crime rates from the 'county_public_safety' table. The placeholders in the SELECT statement allow for further customization if needed."}
{"sample_id": "train.2540", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "Select the column to display, 'Crime_rate'.", "Add an ORDER BY clause to sort the results based on the 'Police_officers' column in ascending order."], "description": "This virtual table provides the crime rates from the 'county_public_safety' table, sorted in ascending order based on the number of police officers in each county. This allows for an analysis of how the crime rate correlates with the size of the police force."}
{"sample_id": "train.2542", "rationale": ["The query identifies the relevant table, which is 'city'.", "Select the column to display, 'Name', which represents the names of the cities.", "Add an ORDER BY clause to sort the results in ascending order based on the city names."], "description": "This virtual table lists the names of cities from the 'city' table, sorted in ascending order. The query retrieves all city names without any filtering, ensuring a comprehensive view of the cities available in the database."}
{"sample_id": "train.2546", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "Select the column to display, 'Name', which represents the county names.", "Order the results by the 'Population' column in descending order to show the most populated counties first.", "Limit the number of results returned using a placeholder for numeric values."], "description": "This virtual table lists the names of counties from the 'county_public_safety' table, ordered by their population in descending order. The placeholder in the LIMIT clause represents the maximum number of counties to be displayed."}
{"sample_id": "train.2548", "rationale": ["The query identifies the relevant table, which is 'city'.", "Select the column to display, 'Name', which represents the names of the cities.", "Order the results by the 'White' column in descending order to prioritize cities with the highest number of White residents.", "Limit the number of results returned using a placeholder for numeric values."], "description": "This virtual table lists the names of cities from the 'city' table, ordered by the number of White residents in descending order. The placeholder in the LIMIT clause represents the maximum number of city names to be returned."}
{"sample_id": "train.2550", "rationale": ["The query identifies the relevant tables, which are 'city' and 'county_public_safety'.", "It selects the 'Name' column from both tables, representing the names of cities and counties.", "A JOIN operation is performed on the County_ID to link cities to their respective counties, ensuring accurate data representation."], "description": "This virtual table describes the names of cities along with their corresponding counties from the 'city' and 'county_public_safety' tables. The join condition links cities to their respective counties based on the County_ID, ensuring that the data reflects the correct relationships between cities and counties."}
{"sample_id": "train.2554", "rationale": ["The query identifies the relevant tables, which are 'city' and 'county_public_safety'.", "It selects the 'name' column from the 'city' table.", "A subquery is used to find the 'county_ID' from 'county_public_safety', ordering by 'Police_officers' in descending order.", "The LIMIT clause in the subquery uses a placeholder for numeric values to specify how many counties to consider."], "description": "This virtual table lists the names of cities from the 'city' table that belong to the county with the highest number of police officers. The placeholder in the subquery represents the limit for selecting the county based on the number of police officers."}
{"sample_id": "train.2556", "rationale": ["The query identifies the relevant tables, which are 'city' and 'county_public_safety'.", "It uses a subquery to filter counties based on their population, using a placeholder for numeric values.", "The outer query counts the number of cities that belong to the filtered counties by matching 'county_ID'."], "description": "This virtual table provides the count of cities that belong to counties with a population exceeding a specified threshold. The placeholder in the subquery represents the population limit used to filter the counties."}
{"sample_id": "train.2560", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "It selects the 'Police_force' column to display the description of the police force.", "The COUNT function is used to count the number of counties for each unique police force description.", "The GROUP BY clause is applied to group the results by the 'Police_force' column."], "description": "This virtual table summarizes the number of counties grouped by the description of their police force from the 'county_public_safety' table. The placeholder in the SELECT clause represents the police force description, while the COUNT function aggregates the number of counties for each unique police force description."}
{"sample_id": "train.2564", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "Select the column to display, 'Name', which represents the county names.", "Add a condition to filter the counties where the County_ID is not present in the 'city' table, using a subquery to select County_IDs from the 'city' table."], "description": "This virtual table lists the names of counties from the 'county_public_safety' table that do not have any associated cities. The placeholder in the WHERE clause represents the County_IDs of counties that are present in the 'city' table."}
{"sample_id": "train.2568", "rationale": ["The query identifies the relevant tables, which are 'city' and 'county_public_safety'.", "It selects the 'name' column from the 'city' table.", "A subquery is used to filter the 'county_public_safety' table for counties with a crime rate below a specified number, using a placeholder for numeric values."], "description": "This virtual table lists the names of cities from the 'city' table that belong to counties with a crime rate below a specified threshold. The placeholder in the subquery represents the maximum crime rate to filter the counties."}
{"sample_id": "train.2571", "rationale": ["The query identifies the relevant table, which is 'county_public_safety'.", "It selects the 'Case_burden' column to display the average number of cases handled by police.", "The results are ordered by the 'Population' column in descending order to show counties with the highest populations first."], "description": "This virtual table provides the average case burden handled by police in counties, sorted by the total population of each county in descending order. The query retrieves the 'Case_burden' from the 'county_public_safety' table, allowing users to understand which counties have the highest case burdens relative to their populations."}
{"sample_id": "train.2572", "rationale": ["The query identifies the relevant table, which is 'Rooms'.", "Select the column to display, 'roomName'.", "Add conditions to filter the 'basePrice' for values less than a specified number, 'beds' for a specific number of beds, and 'decor' for a specific description using placeholders for numeric and string values."], "description": "This virtual table describes the names of rooms from the 'Rooms' table that have a base price lower than a specified amount, a specific number of beds, and a particular type of decor. The placeholders in the WHERE clause represent the maximum price, number of beds, and decor description respectively."}
{"sample_id": "train.2574", "rationale": ["The query identifies the relevant table, which is 'Rooms'.", "Select the columns to display, 'roomName' and 'RoomId'.", "Add conditions to filter the 'basePrice' and 'maxOccupancy' columns for specified limits using placeholders for numeric values."], "description": "This virtual table describes the names and unique identifiers of rooms from the 'Rooms' table that have a base price exceeding a specified amount and can accommodate more than a certain number of occupants. The placeholders in the WHERE clause represent the minimum base price and maximum occupancy limits."}
{"sample_id": "train.2580", "rationale": ["The query identifies the relevant table, which is 'Reservations'.", "It selects the count of all records that match the specified conditions.", "The WHERE clause filters the records based on the guest's first and last names using placeholders for string values."], "description": "This virtual table provides the count of reservations made by a specific guest identified by their first and last name. The placeholders in the WHERE clause represent the guest's first and last names."}
{"sample_id": "train.2584", "rationale": ["The query is identifying the relevant table, which is 'Reservations'.", "Select the column to display, 'Adults'.", "Add conditions to filter the 'CheckIn' date and the guest's first and last names using placeholders for string values."], "description": "This virtual table describes the number of adults in reservations from the 'Reservations' table for a specific check-in date and guest's first and last name. The placeholders in the WHERE clause represent the check-in date and the names of the guests."}
{"sample_id": "train.2586", "rationale": ["The query identifies the relevant table, which is 'Reservations'.", "Select the column to display, 'Kids'.", "Add conditions to filter the 'CheckIn' date and the guest's first and last names using placeholders for string values."], "description": "This virtual table provides the number of kids associated with reservations made by a specific guest on a particular check-in date. The placeholders in the WHERE clause represent the check-in date and the first and last names of the guest."}
{"sample_id": "train.2592", "rationale": ["The query identifies the relevant table, which is 'Rooms'.", "Selects the columns to display, 'roomName' and 'basePrice'.", "Orders the results by 'basePrice' in ascending order to show the cheapest rooms first.", "Limits the number of results returned based on a specified number using a placeholder for numeric values."], "description": "This virtual table provides a list of room names along with their base prices from the 'Rooms' table, sorted in ascending order of price. The placeholder in the LIMIT clause indicates the maximum number of results to return."}
{"sample_id": "train.2595", "rationale": ["The query is identifying the relevant table, which is 'Rooms'.", "Select the column to display, 'decor'.", "Add a condition to filter the 'roomName' column for the specified room using a placeholder for string values."], "description": "This virtual table describes the decor of a specific room from the 'Rooms' table based on the room's name. The placeholder in the WHERE clause represents the name of the room being queried."}
{"sample_id": "train.2596", "rationale": ["The query identifies the relevant table, which is 'Rooms'.", "Select the column 'bedType' to categorize the rooms by their bed types.", "Calculate the average of the 'basePrice' for each bed type using the AVG function.", "Group the results by 'bedType' to get the average price for each type of bed."], "description": "This virtual table provides the average base price of rooms grouped by the type of beds available in each room. The placeholder in the SELECT clause represents the bed type, while the average price is calculated for each group."}
{"sample_id": "train.2598", "rationale": ["The query identifies the relevant table, which is 'Rooms'.", "It selects the sum of the 'maxOccupancy' column to calculate the total number of occupants allowed.", "A condition is added to filter the results based on the 'decor' column using a placeholder for string values."], "description": "This virtual table calculates the total maximum occupancy of rooms from the 'Rooms' table that have a specific decor style. The placeholder in the WHERE clause represents the decor description being queried."}
{"sample_id": "train.2603", "rationale": ["The query identifies the relevant tables, which are 'Reservations' and 'Rooms'.", "It performs a join operation on the 'Room' column from Reservations and 'RoomId' from Rooms to link reservations to their corresponding rooms.", "The query counts the number of reservations that meet the condition where the sum of adults and kids equals the maximum occupancy of the room, using placeholders for the relevant columns."], "description": "This virtual table provides a count of reservations where the total number of occupants (adults and kids) matches the maximum occupancy allowed for each room. The placeholders in the query represent the relevant columns from the Reservations and Rooms tables."}
{"sample_id": "train.2606", "rationale": ["The query is identifying the relevant table, which is 'Rooms'.", "The count function is used to determine the total number of rooms available.", "The query does not include any filtering conditions, thus it counts all rooms in the table."], "description": "This virtual table provides the total number of rooms available in the 'Rooms' table. The query counts all entries in the table, which gives an overview of the room inventory."}
