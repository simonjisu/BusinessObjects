db_id,sample_id,target_complexity,question,target,no_bos_pred,with_bos_pred,vt,ba,BO_complexity
retails,6798,7,What percentage of customers engaged in the household segment are from Iran?,"SELECT CAST(SUM(IIF(T2.n_name = 'IRAN', 1, 0)) AS REAL) * 100 / COUNT(T2.n_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD'",SELECT (COUNT(CASE WHEN n.n_name = 'IRAN' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM customer c JOIN nation n ON c.c_nationkey = n.n_nationkey WHERE c.c_mktsegment = 'HOUSEHOLD';,SELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'HOUSEHOLD') * 100 AS percentage FROM customer INNER JOIN nation ON customer.c_nationkey = nation.n_nationkey WHERE customer.c_mktsegment = 'HOUSEHOLD' AND nation.n_name = 'IRAN',SELECT CAST(SUM(CASE WHEN customer.c_mktsegment = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) AS FLOAT) * [placeholder-type:numeric] / COUNT(customer.c_name) FROM customer INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE nation.n_name = '[placeholder-type:string]',"The virtual table calculates a weighted average of a specific metric for customers belonging to a certain market segment and nation. It sums up a conditional value based on the market segment and divides it by the count of customer names, applying a multiplier to the result. The placeholders represent the market segment, the numeric values for the calculation, and the nation name.",8
retails,6890,7,"What is the biggest discount among all orders for the part ""burnished seashell gainsboro navajo chocolate""?",SELECT MAX(T1.l_discount) FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T2.p_name = 'burnished seashell gainsboro navajo chocolate',SELECT MAX(l_discount) FROM lineitem JOIN part ON lineitem.l_partkey = part.p_partkey WHERE part.p_name = 'burnished seashell gainsboro navajo chocolate',SELECT MAX(l_extendedprice * (1 - l_discount)) AS max_discount FROM lineitem JOIN part ON lineitem.l_partkey = part.p_partkey WHERE part.p_name = 'burnished seashell gainsboro navajo chocolate',SELECT part.p_name FROM part WHERE part.p_retailprice = (SELECT MAX(part.p_retailprice) FROM part),"The virtual table describes the name of the part from the 'part' table that has the highest retail price. The subquery is used to find the maximum retail price among all parts, and the placeholder represents this maximum value.",9
retails,6859,6,How many parts have a retail price of over 1900?,SELECT COUNT(p_partkey) FROM part WHERE p_retailprice > 1900,SELECT COUNT(*) FROM part WHERE p_retailprice > 1900;,SELECT COUNT(*) FROM part WHERE p_retailprice > 1900.8,SELECT SUM(partsupp.ps_availqty) FROM partsupp INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey WHERE part.p_name = '[placeholder-type:string]',"The virtual table summarizes the total available quantity of parts from the 'partsupp' table, filtered by the name of the part from the 'part' table. The placeholder in the WHERE clause represents the specific name of the part being queried.",7
language_corpus,5725,6,How many total occurrences are there in the three-letter words?,SELECT SUM(occurrences) FROM words WHERE LENGTH(word) = 3,SELECT SUM(occurrences) FROM words WHERE LENGTH(word) = 3;,SELECT SUM(pages_words.occurrences) FROM words INNER JOIN pages_words ON words.wid = pages_words.wid WHERE LENGTH(words.word) = 3,SELECT SUM(pages.words) FROM words INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE words.word = '[placeholder-type:string]' AND pages_words.occurrences = [placeholder-type:numeric],"The virtual table calculates the total number of words from the 'pages' table that are associated with a specific word from the 'words' table. It uses inner joins to connect the 'words', 'pages_words', and 'pages' tables, filtering results based on a specific word and the occurrences of that word in the pages.",9
talkingdata,1104,6,What is the age of the youngest female user of the app?,SELECT MIN(age) FROM gender_age WHERE gender = 'F',SELECT MIN(age) AS youngest_female_age FROM gender_age WHERE gender = 'F';,SELECT MIN(gender_age.age) FROM gender_age INNER JOIN phone_brand_device_model2 ON gender_age.device_id = phone_brand_device_model2.device_id WHERE gender_age.gender = 'F',SELECT gender_age.age FROM phone_brand_device_model2 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE phone_brand_device_model2.device_model = '[placeholder-type:string]',"The virtual table retrieves the age of users based on their device model from the 'phone_brand_device_model2' and 'gender_age' tables. It uses an inner join to connect these tables through the 'device_id', ensuring that only relevant records are selected. The placeholder in the WHERE clause allows for filtering by a specific device model.",7
talkingdata,1071,7,How many app IDs were included under science fiction category?,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id WHERE T1.category = 'science fiction',SELECT COUNT(DISTINCT al.app_id) FROM app_labels al JOIN label_categories lc ON al.label_id = lc.label_id WHERE lc.category = 'science fiction';,SELECT COUNT(app_labels.app_id) FROM label_categories INNER JOIN app_labels AS T2 ON label_categories.label_id = T2.label_id WHERE label_categories.category = 'science fiction',SELECT COUNT(app_labels.app_id) FROM label_categories INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE label_categories.category = '[placeholder-type:string]',The virtual table counts the number of app users associated with a specific label category from the 'label_categories' and 'app_labels' tables. The placeholder in the WHERE clause represents the category of the label being queried.,7
codebase_comments,649,7,"Please list the names of methods with the solution path ""wallerdev_htmlsharp\HtmlSharp.sln"".",SELECT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'wallerdev_htmlsharpHtmlSharp.sln',SELECT method.name FROM method JOIN solution ON method.solutionid = solution.id WHERE solution.path = 'wallerdev_htmlsharp\\HtmlSharp.sln';,SELECT DISTINCT method.name FROM solution INNER JOIN method ON solution.id = method.solutionid WHERE solution.path = 'wallerdev_htmlsharp\HtmlSharp.sln',SELECT DISTINCT method.nametokenized FROM solution INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE solution.path = '[placeholder-type:string]',The virtual table describes the distinct tokenized names of methods from the 'method' table that are associated with a specific solution path in the 'solution' table. The placeholder in the WHERE clause represents the path of the solution being queried.,8
chicago_crime,8604,6,"Among the crimes in all the districts in Chicago, what is the percentage of them happening in the Central district?",SELECT CAST(SUM(CASE WHEN T2.district_name = 'Central' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.case_number) FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no,SELECT (COUNT(CASE WHEN d.district_name = 'Central' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_crimes_in_central FROM crime c JOIN district d ON c.district_no = d.district_no;,SELECT CAST(COUNT(CASE WHEN fbi_code.title = 'Central' THEN crime.report_no END) AS FLOAT) * 100 / COUNT(crime.report_no) AS percentage FROM community_area INNER JOIN crime ON crime.community_area_no = community_area.community_area_no INNER JOIN fbi_code ON fbi_code.fbi_code_no = crime.fbi_code_no WHERE community_area.side = 'Central',SELECT CAST(COUNT(CASE WHEN fbi_code.title = '[placeholder-type:string]' THEN crime.report_no END) AS FLOAT) * [placeholder-type:numeric] / COUNT(crime.report_no) FROM community_area INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no INNER JOIN FBI_Code AS T3 ON T3.fbi_code_no = T2.fbi_code_no WHERE community_area.side = '[placeholder-type:string]',"The virtual table calculates the proportion of specific crime reports in a given community area, adjusted by a numeric factor. It counts the number of reports that match a specified FBI crime title and divides it by the total number of crime reports in that community area, then multiplies the result by a numeric placeholder. The query filters the results based on the district side of the community area.",9
music_platform_2,7986,7,"What is the average rating of the podcast ""Please Excuse My Dead Aunt Sally""?",SELECT AVG(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally',SELECT AVG(rating) AS average_rating FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE p.title = 'Please Excuse My Dead Aunt Sally';,SELECT AVG(reviews.rating) FROM podcasts INNER JOIN reviews AS T2 ON T2.podcast_id = podcasts.podcast_id WHERE podcasts.title = 'Please Excuse My Dead Aunt Sally',SELECT AVG(reviews.rating) FROM podcasts INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE podcasts.title = '[placeholder-type:string]',The virtual table calculates the average rating of a specific podcast from the 'podcasts' table by joining it with the 'reviews' table. The placeholder in the WHERE clause represents the title of the podcast for which the average rating is being calculated.,7
world_development_indicators,2242,7,"How many countries have notes on the indicator Stocks traded, turnover ratio of domestic shares?","SELECT COUNT(T1.Countrycode)  FROM CountryNotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T2.IndicatorName = 'Stocks traded, turnover ratio of domestic shares (%)'","SELECT COUNT(DISTINCT country.countrycode) FROM country JOIN countrynotes ON country.countrycode = countrynotes.countrycode JOIN indicators ON countrynotes.seriescode = indicators.indicatorcode WHERE indicators.indicatorname = 'Stocks traded, turnover ratio of domestic shares (%)';","SELECT COUNT(country.countrycode) FROM country INNER JOIN indicators ON country.countrycode = indicators.countrycode WHERE indicators.indicatorname = 'Stocks traded, turnover ratio of domestic shares (%)'",SELECT COUNT(country.countrycode) FROM country INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE indicators.indicatorname = '[placeholder-type:string]' AND country.externaldebtreportingstatus = '[placeholder-type:string]' AND indicators.value > [placeholder-type:numeric],"The virtual table counts the number of countries from the 'country' table that have a specific indicator name, a defined external debt reporting status, and an indicator value greater than a specified numeric threshold. The placeholders in the WHERE clause represent the indicator name, the external debt reporting status, and the numeric value for filtering the results.",10
financial,9593,5,What was the difference in the number of crimes committed in East and North Bohemia in 1996?,"SELECT SUM(IIF(A3 = 'east Bohemia', A16, 0)) - SUM(IIF(A3 = 'north Bohemia', A16, 0)) FROM district","SELECT (SUM(CASE WHEN a3 = 'east Bohemia' THEN a16 ELSE 0 END) - SUM(CASE WHEN a3 = 'north Bohemia' THEN a16 ELSE 0 END)) AS crime_difference FROM district WHERE a3 IN ('east Bohemia', 'north Bohemia');",SELECT (SELECT a16 FROM district WHERE a3 = 'east Bohemia' AND a2 = [PLACEHOLDER-TYPE:STRING]) - (SELECT a16 FROM district WHERE a3 = 'north Bohemia' AND a2 = [PLACEHOLDER-TYPE:STRING]) AS crime_difference;,No BOs provided,No BOs,No BOs provided
works_cycles,7249,6,When did the company hired its first Accountant?,SELECT MIN(HireDate) FROM Employee WHERE JobTitle = 'Accountant',SELECT MIN(hiredate) AS hiredate FROM employee WHERE jobtitle = 'Accountant';,"SELECT person.firstname, person.lastname, employee.hiredate FROM person INNER JOIN employee ON person.businessentityid = employee.businessentityid WHERE employee.jobtitle = 'Accountant' ORDER BY employee.hiredate ASC LIMIT 1","SELECT person.firstname, person.lastname, employee.hiredate FROM person INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE NOT employeedepartmenthistory.enddate IS NULL","The virtual table describes the first and last names of employees along with their hire dates from the 'person' and 'employee' tables. It filters the results to include only those employees who have a recorded end date in their department history, indicating they are no longer in that department.",12
works_cycles,7085,6,What is the average total due price of products with approved status?,SELECT SUM(TotalDue) / COUNT(TotalDue) FROM PurchaseOrderHeader WHERE Status = 2,SELECT AVG(totaldue) FROM purchaseorderheader WHERE status = 2;,SELECT AVG(totaldue) FROM salesorderheader WHERE status = 2,"SELECT COUNT(product.productid), AVG(productreview.rating) FROM product INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE product.name = '[placeholder-type:string]'","The virtual table provides a count of products and the average rating from reviews for a specific product name. It joins the 'product' table with the 'productreview' table based on the product ID, filtering results to only include the specified product name.",9
menu,5573,5,"For how many times had the dish ""Chicken gumbo"" appeared on a menu page?",SELECT SUM(CASE WHEN T1.name = 'Chicken gumbo' THEN 1 ELSE 0 END) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id,SELECT COUNT(*) FROM menuitem WHERE dish_id = (SELECT id FROM dish WHERE name = 'Chicken gumbo'),SELECT SUM(CASE WHEN dish.name = 'Chicken gumbo' THEN 1 ELSE 0 END) FROM menuitem INNER JOIN menupage ON menuitem.menu_page_id = menupage.id INNER JOIN menu ON menupage.menu_id = menu.id INNER JOIN dish ON menuitem.dish_id = dish.id WHERE menu.sponsor IS NULL,SELECT SUM(CASE WHEN dish.name = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) FROM menuitem INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE menu.call_number IS NULL,"The virtual table calculates the total number of times a specific dish appears in the menu items, using a conditional sum based on the dish's name. It joins multiple tables: 'menuitem' to get the menu items, 'menupage' to link to the corresponding menu pages, 'menu' to filter menus that are DIY (without a sponsor), and 'dish' to identify the specific dish by its name. The placeholders represent the dish name and numeric values for the sum calculation.",9
menu,5559,6,How many menus were created for lunch?,SELECT COUNT(*) FROM Menu WHERE event = 'LUNCH',SELECT COUNT(*) FROM menu WHERE event = 'LUNCH';,SELECT COUNT(*) FROM menu,SELECT COUNT(*) FROM menuitem INNER JOIN Dish AS T2 ON T1.dish_id = T2.id WHERE menuitem.xpos > [placeholder-type:numeric] AND menuitem.ypos < [placeholder-type:numeric],"The virtual table counts the number of menu items from the 'menuitem' table that are associated with dishes in the 'dish' table. It filters the results based on the x and y positions of the menu items, ensuring that only those with an x position greater than a specified value and a y position less than a specified value are included in the count.",9
menu,5473,7,"How many menus with the name ""Waldorf Astoria"" have 4 pages?",SELECT COUNT(*) FROM Menu WHERE name = 'Waldorf Astoria' AND page_count = 4,SELECT COUNT(DISTINCT menu.id) FROM menu INNER JOIN menupage ON menu.id = menupage.menu_id WHERE menu.name = 'Waldorf Astoria' AND (SELECT COUNT(*) FROM menupage WHERE menupage.menu_id = menu.id) = 4,SELECT COUNT(DISTINCT menu.id) FROM menu JOIN menupage ON menu.id = menupage.menu_id WHERE menu.name = 'Waldorf Astoria' GROUP BY menu.id HAVING COUNT(menupage.page_number) = 4,SELECT COUNT(*) FROM menu WHERE menu.name = '[placeholder-type:string]',The virtual table counts the number of menus from the 'menu' table that match a specific name. The placeholder in the WHERE clause represents the name of the menu being queried.,6
european_football_2,10498,7,"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,"SELECT (AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control END) - AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control END)) AS difference FROM player_attributes pa JOIN player p ON pa.player_api_id = p.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye')",SELECT (SELECT CAST(SUM(ball_control) AS FLOAT) / COUNT(id) FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo') - (SELECT CAST(SUM(ball_control) AS FLOAT) / COUNT(id) FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Aaron Appindangoye') AS average_difference;,SELECT CAST(SUM(player_attributes.overall_rating) AS FLOAT) / COUNT(player_attributes.id) FROM player INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE player.player_name = '[placeholder-type:string]',The virtual table calculates the average overall rating of a specific player by summing their overall ratings from the 'player_attributes' table and dividing it by the count of their entries. The query joins the 'player' table with the 'player_attributes' table using the player_api_id to ensure that the correct player's ratings are being averaged. The placeholder in the WHERE clause represents the name of the player whose average rating is being queried.,8
soccer_2016,1955,5,How many cities are in U.A.E?,SELECT SUM(CASE WHEN T2.Country_Name = 'U.A.E' THEN 1 ELSE 0 END) FROM City AS T1 INNER JOIN country AS T2 ON T1.Country_id = T2.Country_id,SELECT COUNT(*) FROM city WHERE country_id = (SELECT country_id FROM country WHERE country_name = 'U.A.E');,SELECT COUNT(city_name) FROM city WHERE country_id = '1',No BOs provided,No BOs,No BOs provided
soccer_2016,1819,5,How many times does M Chinnaswamy Stadium host games than Maharashtra Cricket Association Stadium?,"SELECT SUM(CASE WHEN T2.Venue_Name = 'M Chinnaswamy Stadium' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Venue_Name = 'Maharashtra Cricket Association Stadium' THEN 1 ELSE 0 END) FROM ""Match"" AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id",SELECT (SELECT COUNT(*) FROM match WHERE venue_id = (SELECT venue_id FROM venue WHERE venue_name = 'M Chinnaswamy Stadium' LIMIT 1)) - (SELECT COUNT(*) FROM match WHERE venue_id = (SELECT venue_id FROM venue WHERE venue_name = 'Maharashtra Cricket Association Stadium' LIMIT 1)) AS difference;,"SELECT SUM(CASE WHEN venue.venue_name = 'M Chinnaswamy Stadium' THEN 1 ELSE 0 END) AS chinnaswamy_count, SUM(CASE WHEN venue.venue_name = 'Maharashtra Cricket Association Stadium' THEN 1 ELSE 0 END) AS maharashtra_count FROM match INNER JOIN venue ON match.venue_id = venue.venue_id","SELECT venue.venue_name FROM ""match"" INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id GROUP BY venue.venue_name ORDER BY COUNT(venue.venue_id) LIMIT [placeholder-type:numeric]","The virtual table lists the names of venues where matches have been held, grouped by venue name. It orders the results based on the count of matches held at each venue and limits the output to a specified number of venues.",10
thrombosis_prediction,10634,7,"For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient?",SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300,SELECT patient.admission FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.alp < 300,"SELECT patient.admission, COUNT(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.alp < 300 GROUP BY patient.admission",SELECT COUNT(patient.id) FROM patient INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE laboratory.alp >= [placeholder-type:numeric] AND patient.admission = '[placeholder-type:string]',"The virtual table counts the number of patients from the 'patient' table who have undergone laboratory tests, specifically filtering for those whose alkaline phosphatase (ALP) levels are above a specified threshold and who have a certain admission status (either admitted to the hospital or followed at an outpatient clinic). The placeholders represent the ALP value and the admission status respectively.",9
public_review_platform,4009,7,"Among all closed businesses in Avondale, AZ what percent have obtained a 'wonderful experience' rating of the business.",SELECT CAST(SUM(CASE WHEN stars > 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(stars) FROM Business WHERE city = 'Avondale' AND active = 'false',SELECT (COUNT(CASE WHEN stars > 3 THEN 1 END) * 100.0 / COUNT(*)) AS wonderful_experience_percentage FROM business WHERE active = 'false' AND city = 'Avondale' AND state = 'AZ',SELECT (COUNT(CASE WHEN b.stars > 3 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM business AS b WHERE b.active = 'False' AND b.city = 'Avondale' AND b.state = 'AZ',SELECT COUNT(DISTINCT T1.category_id) FROM categories INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE business.review_count = '[placeholder-type:string]' AND business.stars > [placeholder-type:numeric],"The virtual table counts the distinct categories associated with businesses that have a specific review count and a star rating greater than a specified value. It joins the 'categories' table with the 'business_categories' table to link categories to businesses, and then further joins with the 'business' table to apply the filtering conditions based on review count and star rating.",11
public_review_platform,3773,7,"There was only one tip that user No. 69722 gave to the Yelp business, what was the ratings of that business?",SELECT T2.stars FROM Tips AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.user_id = 69722,SELECT b.stars FROM tips t JOIN business b ON t.business_id = b.business_id WHERE t.user_id = 69722 GROUP BY t.business_id HAVING COUNT(t.tip_length) = 1;,SELECT reviews.review_stars FROM reviews JOIN tips ON reviews.business_id = tips.business_id WHERE tips.user_id = 69722,"SELECT reviews.user_id, reviews.review_stars FROM reviews WHERE reviews.business_id = [placeholder-type:numeric] AND reviews.review_length = '[placeholder-type:string]'",The virtual table describes the user IDs and their corresponding star ratings from the 'reviews' table for a specific business and review length. The placeholders represent the business ID and the length of the review.,9
video_games,3504,7,When was the game ID 156 released?,SELECT T1.release_year FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id WHERE T2.game_id = 156,SELECT release_year FROM game_platform WHERE game_publisher_id = (SELECT id FROM game_publisher WHERE game_id = 156),SELECT game_platform.release_year FROM game INNER JOIN game_platform ON game.id = game_platform.game_publisher_id WHERE game.id = 156,SELECT DISTINCT platform.platform_name FROM game_platform INNER JOIN platform AS T2 ON T1.platform_id = T2.id WHERE game_platform.release_year = [placeholder-type:numeric],The virtual table lists the distinct names of platforms from the 'platform' table that have games released in a specific year. The placeholder in the WHERE clause represents the release year of the games.,8
toxicology,9695,7,What is the percentage of element chlorine in carcinogenic molecules?,SELECT CAST(COUNT( CASE WHEN T1.element = 'cl' THEN T1.element ELSE NULL END) AS REAL) * 100 / COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',SELECT (COUNT(CASE WHEN a.element = 'cl' THEN 1 END) * 100.0 / COUNT(*)) AS chlorine_percentage FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+',SELECT COUNT(CASE WHEN molecule.label = '+' AND atom.element = 'cl' THEN molecule.molecule_id ELSE NULL END) * 100 / COUNT(molecule.molecule_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+',SELECT COUNT(CASE WHEN molecule.label = '[placeholder-type:string]' AND atom.element = '[placeholder-type:string]' THEN molecule.molecule_id ELSE NULL END) * [placeholder-type:numeric] / COUNT(molecule.molecule_id) FROM atom INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id,"The virtual table calculates the proportion of molecules with a specific carcinogenic label that contain a certain element, scaled by a numeric factor. It counts the number of molecules that match the specified label and element, and divides this by the total number of molecules, multiplying the result by a placeholder for numeric values.",7
disney,4649,6,How many movies did Wolfgang Reitherman direct?,SELECT COUNT(name) FROM director WHERE director = 'Wolfgang Reitherman',SELECT COUNT(*) FROM director WHERE director = 'Wolfgang Reitherman',SELECT COUNT(DISTINCT movie_title) FROM director WHERE director = 'Wolfgang Reitherman',"SELECT COUNT((SELECT T2.name FROM ""movies_total_gross"" AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Wolfgang Reitherman' AND T1.genre = 'Comedy' GROUP BY T2.name).name) FROM (SELECT director.name FROM ""movies_total_gross"" AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Wolfgang Reitherman' AND T1.genre = 'Comedy' GROUP BY T2.name) AS t3",The virtual table counts the number of unique movies directed by Wolfgang Reitherman in the Comedy genre. It retrieves movie titles from the 'movies_total_gross' table and joins it with the 'director' table to filter by the specified director and genre.,16
disney,4682,6,List the movie titles directed by Jack Kinney.,SELECT name FROM director WHERE director = 'Jack Kinney',SELECT name FROM director WHERE director = 'Jack Kinney';,SELECT movies_total_gross.movie_title FROM director INNER JOIN movies_total_gross ON director.name = movies_total_gross.movie_title WHERE director.director = 'Jack Kinney',"SELECT movies_total_gross.movie_title FROM director INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE director.director = '[placeholder-type:string]' ORDER BY CAST(REPLACE(TRIM(movies_total_gross.total_gross, '[placeholder-type:string]'), ',', '') AS FLOAT) LIMIT [placeholder-type:numeric]","The virtual table lists the titles of movies directed by a specific director from the 'director' table. It joins the 'director' table with the 'movies_total_gross' table to filter movies based on the director's name. The results are ordered by the total gross of the movies, and a limit is applied to restrict the number of results returned.",10
mondial_geo,8296,7,How many times longer is the longest border in the United States than the shortest?,SELECT MAX(T2.Length) / MIN(T2.Length) FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country2 WHERE T1.Name = 'United States',SELECT (SELECT MAX(length) FROM borders WHERE country1 = 'USA' OR country2 = 'USA') / (SELECT MIN(length) FROM borders WHERE country1 = 'USA' OR country2 = 'USA') AS ratio;,SELECT (SELECT MAX(length) FROM borders WHERE country1 = 'USA') / (SELECT MIN(length) FROM borders WHERE country1 = 'USA') AS border_ratio,"SELECT borders.country2, borders.length FROM country INNER JOIN borders AS T2 ON T1.Code = T2.Country1 INNER JOIN country AS T3 ON T3.Code = T2.Country2 WHERE country.name = (SELECT country.name FROM country ORDER BY Population DESC LIMIT 1)","The virtual table provides information about the second country and the length of the border it shares with the most populous country. It retrieves data from the 'borders' table, which contains border information between countries, and joins it with the 'country' table to filter based on the country with the highest population.",16
student_loan,4369,4,"For the students who have been absent from school for the longest time, how many months have they been absent?",SELECT MAX(month) FROM longest_absense_from_school,SELECT MAX(month) FROM longest_absense_from_school,SELECT COUNT(name) FROM longest_absense_from_school WHERE month = (SELECT MAX(month) FROM longest_absense_from_school),SELECT COUNT(longest_absense_from_school.name) FROM longest_absense_from_school WHERE longest_absense_from_school.month < [placeholder-type:numeric],"The virtual table counts the number of students who have been absent from school for a duration less than a specified number of months. It retrieves data from the 'longest_absense_from_school' table, filtering based on the 'month' column using a numeric placeholder.",6
sales_in_weather,8200,4,What is the minimum dew point?,SELECT MIN(dewpoint) FROM weather,SELECT MIN(dewpoint) AS min_dew_point FROM weather;,SELECT MIN(weather.dewpoint) FROM sales_in_weather INNER JOIN relation ON sales_in_weather.store_nbr = relation.store_nbr INNER JOIN weather ON relation.station_nbr = weather.station_nbr WHERE relation.store_nbr = 1 AND sales_in_weather.item_nbr = 1 AND weather.date = '2023-01-01',"SELECT weather.dewpoint FROM sales_in_weather INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE relation.store_nbr = [placeholder-type:numeric] AND SUBSTRING(sales_in_weather.""date"", [placeholder-type:numeric], [placeholder-type:numeric]) = '[placeholder-type:string]' AND sales_in_weather.item_nbr = [placeholder-type:numeric] ORDER BY sales_in_weather.units LIMIT [placeholder-type:numeric]","The virtual table retrieves the dewpoint values from the 'weather' table for specific stores and items on a given date. It joins the 'sales_in_weather' table with the 'relation' table to link stores to their corresponding weather stations, and then further joins with the 'weather' table to access weather data. The placeholders allow users to specify the store number, date substring parameters, item number, and limit for the number of results returned.",13
movie_3,9285,7,Which city does the address 1623 Kingstown Drive belong to?,SELECT T1.city FROM city AS T1 INNER JOIN address AS T2 ON T2.city_id = T1.city_id WHERE T2.address = '1623 Kingstown Drive',SELECT city.city FROM address JOIN city ON address.city_id = city.city_id WHERE address.address = '1623 Kingstown Drive',SELECT c.city FROM address a JOIN city c ON a.city_id = c.city_id WHERE a.address = '1623 Kingstown Drive' AND a.address2 IS NULL;,No BOs provided,No BOs,No BOs provided
