db_id,sample_id,target_complexity,question,target,no_bos_pred,with_bos_pred,vt,ba,BO_complexity
synthea,1531,7,"Indicate the care plan needed for the patient living at 179 Sydni Roads, Taunton, MA 02780 US.",SELECT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.address = '179 Sydni Roads Taunton MA 02780 US',"SELECT careplans.description FROM careplans JOIN patients ON careplans.patient = patients.patient WHERE patients.address = '179 Sydni Roads, Taunton, MA 02780 US'",SELECT DISTINCT careplans.description FROM patients INNER JOIN careplans ON patients.patient = careplans.patient WHERE patients.address = '179 Sydni Roads Taunton MA 02780 US',SELECT DISTINCT careplans.description FROM patients INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE patients.first = '[placeholder-type:string]' AND patients.last = '[placeholder-type:string]',"The virtual table describes the distinct care plan descriptions associated with patients from the 'patients' table. It filters the results based on the first and last names of the patients, using placeholders for these string values.",9
talkingdata,1227,7,How many users belong to the same behavior category as comics?,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'comics',SELECT COUNT(DISTINCT a.app_id) FROM app_labels a JOIN label_categories l ON a.label_id = l.label_id WHERE l.category = 'comics' AND a.label_id = (SELECT label_id FROM app_labels WHERE label_id = (SELECT label_id FROM label_categories WHERE category = 'comics')),SELECT COUNT(app_labels.app_id) FROM app_labels INNER JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE label_categories.category = 'comics',SELECT COUNT(app_labels.app_id) FROM app_labels INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id WHERE label_categories.category = '[placeholder-type:string]',The virtual table counts the number of app users associated with a specific behavior category from the 'app_labels' table. It joins the 'app_labels' table with the 'label_categories' table to filter the results based on the specified category. The placeholder in the WHERE clause represents the category name.,7
talkingdata,1043,7,How many active users were there in the event id 2?,SELECT COUNT(is_active) FROM app_events WHERE event_id = 2 AND is_active = 1,SELECT COUNT(*) FROM app_events WHERE is_active = 1 AND event_id = 2;,SELECT COUNT(app_events.app_id) FROM app_events INNER JOIN events ON app_events.event_id = events.event_id WHERE app_events.is_active = 1 AND events.event_id = 2,SELECT COUNT(phone_brand_device_model2.device_id) FROM phone_brand_device_model2 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE phone_brand_device_model2.phone_brand = '[placeholder-type:string]' AND events.event_id = [placeholder-type:numeric],"The virtual table counts the number of devices from the 'phone_brand_device_model2' table that are associated with a specific event in the 'events' table. It filters the results based on a specified phone brand and event ID, using placeholders for these values.",8
airline,5839,7,Give the number of planes that took off from Los Angeles International airport on 2018/8/27.,"SELECT SUM(CASE WHEN T2.FL_DATE = '2018/8/27' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T1.Description = 'Los Angeles, CA: Los Angeles International'",SELECT COUNT(DISTINCT tail_num) FROM airlines WHERE origin = 'LAX' AND fl_date = '2018/8/27';,SELECT COUNT(*) FROM airlines WHERE fl_date = '2018/8/27' AND origin = 'LAX',SELECT COUNT(*) FROM airlines WHERE airlines.fl_date = '[placeholder-type:string]',The virtual table counts the number of flights from the 'airlines' table that are scheduled on a specific flight date. The placeholder in the WHERE clause represents the flight date being queried.,6
sales,5426,6,Calculate the percentage of sold blades in the total number of transactions.,"SELECT CAST(SUM(IIF(T1.Name = 'Blade', T2.Quantity, 0)) AS REAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID",SELECT (COUNT(CASE WHEN p.name = 'Blade' THEN 1 END) * 100.0) / COUNT(*) AS percentage_sold_blades FROM sales s JOIN products p ON s.productid = p.productid;,SELECT (SUM(CASE WHEN products.name = 'Blade' THEN sales.quantity ELSE 0 END) * 100.0 / SUM(sales.quantity)) AS percentage_sold_blades FROM sales INNER JOIN products ON sales.productid = products.productid,SELECT SUM(sales.quantity) FROM products INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE products.name = '[placeholder-type:string]',The virtual table calculates the total quantity sold of a specific product from the 'products' table by joining it with the 'sales' table. The placeholder in the WHERE clause represents the name of the product for which the total quantity is being calculated.,7
codebase_community,10136,7,List the comments commented by the user with a username of Harvey Motulsky.,SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky',SELECT * FROM comments WHERE userid = (SELECT id FROM users WHERE displayname = 'Harvey Motulsky'),SELECT comments.text FROM comments INNER JOIN users ON comments.userid = users.id WHERE users.displayname = 'Harvey Motulsky',SELECT comments.text FROM comments INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE posts.title = '[placeholder-type:string]',The virtual table retrieves the text of comments associated with posts that have a specific title. It joins the 'comments' table with the 'posts' table to filter comments based on the title of the post.,7
world_development_indicators,2163,6,Which countries use Euro as their currency? List down the table name.,SELECT TableName FROM Country WHERE CurrencyUnit = 'Euro',"SELECT shortname AS shortname, tablename FROM country WHERE currencyunit = 'Euro'",SELECT tablename FROM country WHERE currencyunit = 'Euro',SELECT countrynotes.seriescode FROM country INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE country.currencyunit = '[placeholder-type:string]',"The virtual table retrieves the series codes from the 'CountryNotes' table for countries that use a specific currency unit. It joins the 'country' table with the 'CountryNotes' table based on the country code, filtering the results to only include countries with the specified currency unit.",7
world_development_indicators,2182,6,Which country have completed vital registration? List all the countries.,SELECT ShortName FROM Country WHERE VitalRegistrationComplete = 'Yes',"SELECT shortname, longname FROM country WHERE vitalregistrationcomplete = 'Yes';",SELECT shortname FROM country WHERE vitalregistrationcomplete = 'Yes',SELECT country.tablename FROM country INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE countrynotes.seriescode = '[placeholder-type:string]',The virtual table lists the table names of countries from the 'country' table that have associated notes in the 'CountryNotes' table for a specific series code. The placeholder in the WHERE clause represents the series code being queried.,7
debit_card_specializing,10907,7,How much more was customer 7 consuming in April 2013 than customer 5?,"SELECT SUM(IIF(CustomerID = 7, Consumption, 0)) - SUM(IIF(CustomerID = 5, Consumption, 0)) FROM yearmonth WHERE Date = '201304'",SELECT (SUM(CASE WHEN customerid = '7' THEN consumption ELSE 0 END) - SUM(CASE WHEN customerid = '5' THEN consumption ELSE 0 END)) AS consumption_difference FROM yearmonth WHERE date BETWEEN 20130401 AND 20130430;,SELECT (SELECT SUM(yearmonth.consumption) FROM yearmonth WHERE yearmonth.customerid = '7' AND yearmonth.date = '201304') - (SELECT SUM(yearmonth.consumption) FROM yearmonth WHERE yearmonth.customerid = '5' AND yearmonth.date = '201304') AS consumption_difference,SELECT SUM(yearmonth.consumption) FROM customers INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE yearmonth.date = '[placeholder-type:string]' AND customers.segment = '[placeholder-type:string]',"The virtual table summarizes the total consumption of customers from the 'yearmonth' table, filtered by a specific date and customer segment. The placeholders in the WHERE clause represent the date and segment criteria.",8
bike_share_1,9050,7,What was the mean humidity of a trip with id 4275?,SELECT T2.mean_humidity FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.id = 4275,SELECT mean_humidity FROM weather WHERE date = (SELECT start_date FROM trip WHERE id = '4275'),SELECT weather.mean_humidity FROM trip INNER JOIN weather ON trip.zip_code = weather.zip_code WHERE trip.id = '4275',SELECT trip.id FROM trip INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE trip.bike_id = [placeholder-type:numeric] AND weather.mean_temperature_f > [placeholder-type:numeric] AND trip.subscription_type = '[placeholder-type:string]',"The virtual table retrieves the IDs of trips from the 'trip' table that meet specific conditions related to weather and bike usage. It joins the 'trip' table with the 'weather' table based on matching zip codes. The query filters trips based on the bike ID, ensures that the mean temperature is above a certain threshold, and specifies the type of subscription used for the trip.",10
bike_share_1,9034,5,How many stations in San Francisco are installed in 2014?,"SELECT SUM(CASE WHEN city = 'San Francisco' AND SUBSTR(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station",SELECT COUNT(*) FROM station WHERE city = 'San Francisco' AND installation_date LIKE '2014%',"SELECT COUNT(*) FROM station WHERE city = 'San Francisco' AND SUBSTRING(installation_date, -4) = '2014'","SELECT station.name, station.installation_date, station.city FROM station WHERE (SUBSTRING(CAST(station.installation_date AS TEXT), [placeholder-type:numeric], INSTR(station.installation_date, '/') - [placeholder-type:numeric]) = '[placeholder-type:string]' AND SUBSTRING(CAST(station.installation_date AS TEXT), INSTR(station.installation_date, '/') + [placeholder-type:numeric], -[placeholder-type:numeric]) >= '[placeholder-type:string]' AND SUBSTRING(CAST(station.installation_date AS TEXT), -[placeholder-type:numeric]) = '[placeholder-type:string]') OR (SUBSTRING(CAST(station.installation_date AS TEXT), [placeholder-type:numeric], INSTR(station.installation_date, '/') - [placeholder-type:numeric]) IN ('[placeholder-type:string]', '[placeholder-type:string]', '[placeholder-type:string]', '[placeholder-type:string]', '[placeholder-type:string]', '[placeholder-type:string]', '[placeholder-type:string]') AND SUBSTRING(CAST(station.installation_date AS TEXT), -[placeholder-type:numeric]) = '[placeholder-type:string]')","The virtual table describes the names, installation dates, and cities of bike stations from the 'station' table that meet specific date criteria. The placeholders in the WHERE clause represent various components of the installation date, allowing for filtering based on month, day, and year values.",15
donor,3266,7,How many donors who donated to the city of Pocatello are not teachers?,SELECT COUNT(donationid) FROM donations WHERE donor_city = 'Pocatello' AND is_teacher_acct = 'f',SELECT COUNT(DISTINCT donor_acctid) FROM donations WHERE donor_city = 'Pocatello' AND is_teacher_acct = 'f';,SELECT COUNT(donations.donationid) FROM donations WHERE donations.donor_city = 'Pocatello' AND donations.is_teacher_acct = 'f',SELECT COUNT(donations.donationid) FROM donations WHERE donations.is_teacher_acct = '[placeholder-type:string]' AND donations.donor_state = '[placeholder-type:string]',The virtual table counts the number of donations made by either teachers or non-teachers from a specific state. The placeholders represent the type of donor account and the state from which the donation was made.,7
legislator,4903,6,How many of the legislators are female?,SELECT COUNT(gender_bio) FROM current WHERE gender_bio = 'F',SELECT COUNT(*) FROM current WHERE gender_bio = 'Female';,SELECT COUNT(*) FROM current WHERE gender_bio = 'F',"SELECT COUNT(subquery_q0.cid) FROM (SELECT current.bioguide_id FROM current AS T1 INNER JOIN ""current-terms"" AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' GROUP BY T2.bioguide HAVING COUNT(T2.bioguide) > 4)","The virtual table counts the number of female legislators who have served more than four terms in the current-terms table. It retrieves the bioguide_id from the current table, joins it with the current-terms table based on the bioguide_id, filters for female legislators, groups the results by bioguide_id, and applies a condition to count only those with more than four terms.",15
legislator,4829,6,List the full name of legislators whose born in 1960.,SELECT official_full_name FROM current WHERE birthday_bio LIKE '1960%',SELECT first_name || ' ' || middle_name || ' ' || last_name AS full_name FROM current WHERE birthday_bio LIKE '1960-%';,SELECT official_full_name FROM current WHERE birthday_bio LIKE '1960-%',"SELECT current.official_full_name FROM current INNER JOIN ""current-terms"" AS T2 ON T1.bioguide_id = T2.bioguide WHERE current-terms.start = '[placeholder-type:string]'",The virtual table describes the official full names of legislators from the 'current' table who have a term starting on a specific date. The query joins the 'current' table with the 'current-terms' table using the bioguide ID to filter for legislators whose terms began on the specified start date.,7
legislator,4825,6,How many of the legislators are male?,SELECT COUNT(*) FROM current WHERE gender_bio = 'M',SELECT COUNT(*) FROM current WHERE gender_bio = 'male';,SELECT COUNT(*) FROM current WHERE current.gender_bio = 'M',SELECT COUNT(*) FROM current WHERE current.religion_bio = '[placeholder-type:string]' AND current.gender_bio = '[placeholder-type:string]',The virtual table counts the number of legislators from the 'current' table who belong to a specific religion and gender. The placeholders in the WHERE clause represent the religion and gender of the legislators.,7
legislator,4756,6,How many males were members of the current legislators?,SELECT COUNT(*) FROM current WHERE gender_bio = 'M',SELECT COUNT(*) FROM current WHERE gender_bio = 'male';,SELECT COUNT(*) FROM current WHERE current.gender_bio = 'M',SELECT COUNT(*) FROM current WHERE current.religion_bio = '[placeholder-type:string]' AND current.gender_bio = '[placeholder-type:string]',The virtual table counts the number of legislators from the 'current' table who belong to a specific religion and gender. The placeholders in the WHERE clause represent the religion and gender of the legislators.,7
works_cycles,7279,6,How many products are out of stock?,SELECT COUNT(ProductID) FROM ProductVendor WHERE OnOrderQty = 0,SELECT COUNT(p.productid) FROM product p JOIN productinventory pi ON p.productid = pi.productid WHERE pi.quantity = 0,SELECT COUNT(product.productid) FROM product WHERE product.safetystocklevel = 0,SELECT COUNT(product.productid) FROM product WHERE product.name LIKE '[placeholder-type:string]' OR product.name LIKE '[placeholder-type:string]',"The virtual table counts the number of products from the 'product' table that match specific name criteria. The placeholders in the WHERE clause represent the names of the products being searched for, allowing for flexible queries based on user input.",6
works_cycles,7457,6,"What is the cost for the product ""847""?",SELECT StandardCost FROM ProductCostHistory WHERE ProductID = 847,"SELECT standardcost, listprice FROM product WHERE productid = '847';",SELECT standardcost FROM product WHERE productid = 847,"SELECT product.listprice FROM product INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE product.listprice - product.standardcost > [placeholder-type:numeric] AND STRFTIME('%Y-%m-%d', productlistpricehistory.startdate) >= '[placeholder-type:string]'","The virtual table displays the list prices of products from the 'product' table that have a profit margin greater than a specified numeric value, and where the price history start date is on or after a specified date. The placeholders allow users to input their desired profit threshold and date for filtering the results.",9
works_cycles,7364,7,What is the name of the state that Racine belongs to?,SELECT T2.Name FROM Address AS T1 INNER JOIN StateProvince AS T2 ON T1.StateProvinceID = T2.StateProvinceID WHERE T1.City = 'Racine',SELECT sp.name FROM stateprovince AS sp JOIN salesterritory AS st ON sp.countryregioncode = st.countryregioncode WHERE st.name = 'Racine';,SELECT sp.name FROM stateprovince sp JOIN address a ON sp.stateprovinceid = a.stateprovinceid WHERE a.city = 'Racine',No BOs provided,No BOs,No BOs provided
address,5223,7,How many postal points are there under the congress representative in Puerto Rico?,SELECT COUNT(T2.zip_code) FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.state = 'Puerto Rico',SELECT COUNT(zip_data.zip_code) FROM zip_data JOIN zip_congress ON zip_data.zip_code = zip_congress.zip_code WHERE zip_data.state = 'Puerto Rico' AND zip_congress.district = (SELECT cognress_rep_id FROM congress WHERE state = 'Puerto Rico' AND abbreviation = 'PR'),SELECT COUNT(zip_data.zip_code) FROM congress INNER JOIN zip_data ON congress.abbreviation = zip_data.state WHERE congress.state = 'Puerto Rico',SELECT COUNT(zip_data.city) FROM congress INNER JOIN state AS T2 ON T1.abbreviation = T2.abbreviation INNER JOIN zip_data AS T3 ON T2.abbreviation = T3.state WHERE congress.first_name = '[placeholder-type:string]' AND congress.last_name = '[placeholder-type:string]' AND zip_data.employees = [placeholder-type:numeric],"The virtual table counts the number of cities associated with a specific congress representative based on their first and last names, while also filtering for cities that have a certain number of employees. It joins the 'congress' table with the 'state' table to match the state abbreviation and then joins with the 'zip_data' table to access city information.",10
cookbook,8923,7,Calculate the percentage of recipes with no cholesterol included and have a cooking time less than 20 minutes among all recipes.,SELECT CAST(SUM(CASE WHEN T1.cook_min < 20 AND T2.cholestrl = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM recipe)) AS percentage_no_cholesterol_recipes FROM recipe r JOIN nutrition n ON r.recipe_id = n.recipe_id WHERE n.cholestrl = '0' AND r.cook_min < 20;,SELECT (COUNT(CASE WHEN nutrition.cholestrl = '0' AND recipe.cook_min < 20 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_no_cholesterol FROM recipe INNER JOIN nutrition ON recipe.recipe_id = nutrition.recipe_id,SELECT AVG(nutrition.calories) FROM ingredient INNER JOIN Quantity AS T2 ON T2.ingredient_id = T1.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id WHERE ingredient.name = '[placeholder-type:string]',"The virtual table calculates the average calorie content of recipes that include a specific ingredient. It joins the 'ingredient', 'quantity', and 'nutrition' tables to gather the necessary data, filtering by the name of the ingredient provided as a placeholder.",8
books,5997,7,How many addresses are from the Philippines?,SELECT COUNT(T2.country_id) FROM address AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE T2.country_name = 'Philippines',SELECT COUNT(*) FROM address WHERE country_id = '[PLACEHOLDER-TYPE:STRING]' AND country_name = 'Philippines';,SELECT COUNT(*) FROM address INNER JOIN country ON address.country_id = country.country_id WHERE country.country_name = 'Philippines',SELECT COUNT(*) FROM customer_address INNER JOIN address_status AS T2 ON T1.status_id = T2.status_id WHERE address_status.address_status = '[placeholder-type:string]',The virtual table counts the number of customer addresses that have a specific status from the 'address_status' table. It joins the 'customer_address' table with the 'address_status' table to filter the results based on the address status provided by the user.,7
books,6042,7,How many books have been published in Japanese?,SELECT COUNT(*) FROM book_language AS T1 INNER JOIN book AS T2 ON T1.language_id = T2.language_id WHERE T1.language_name = 'Japanese',SELECT COUNT(b.book_id) FROM book b JOIN book_language bl ON b.language_id = bl.language_id WHERE bl.language_code = 'ja',SELECT COUNT(*) FROM book INNER JOIN book_language ON book.language_id = book_language.language_id WHERE book_language.language_name = 'Japanese',SELECT COUNT(*) FROM book INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE publisher.publisher_name = '[placeholder-type:string]' AND book.num_pages < [placeholder-type:numeric],The virtual table counts the number of books from the 'book' table that are published by a specific publisher and have a number of pages less than a specified value. The placeholders represent the publisher's name and the maximum number of pages for filtering the results.,9
books,5992,6,List all of the books that were published in 1995.,"SELECT title FROM book WHERE STRFTIME('%Y', publication_date) = '1995'",SELECT title FROM book WHERE publication_date = '1995-01-01';,"SELECT book.title FROM book WHERE STRFTIME('%Y', book.publication_date) = '1995'","SELECT book.title, publisher.publisher_name FROM book INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE STRFTIME('%Y', book.publication_date) = '[placeholder-type:string]' AND book.num_pages * [placeholder-type:numeric] > (SELECT AVG(book.num_pages) FROM book) * [placeholder-type:numeric]","The virtual table describes the titles of books along with their respective publisher names from the 'book' and 'publisher' tables. It filters the results to include only those books published in a specific year, indicated by a placeholder for the year, and ensures that the number of pages in each book, when multiplied by a specified numeric value, exceeds the average number of pages across all books, also multiplied by a different numeric placeholder.",14
trains,702,7,What is the total number of short cars on all the trains that run in the east direction?,SELECT SUM(CASE WHEN T1.len = 'short' then 1 ELSE 0 END)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east',SELECT COUNT(*) FROM cars JOIN trains ON cars.train_id = trains.id WHERE cars.len = 'short' AND trains.direction = 1;,SELECT COUNT(cars.id) FROM cars JOIN trains ON cars.train_id = trains.id WHERE trains.direction = 'east' AND cars.len = 'short',SELECT COUNT(trains.id) FROM trains WHERE trains.direction = '[placeholder-type:string]',"The virtual table counts the number of trains from the 'trains' table that are running in a specific direction. The placeholder in the WHERE clause represents the direction of the trains, which can be either east or west.",6
menu,5526,7,"What dishes made their first and last appearances in 1855 and 1900, respectively?",SELECT name FROM Dish WHERE first_appeared = 1855 AND last_appeared = 1900,SELECT * FROM dish WHERE first_appeared = '1855' AND last_appeared = '1900';,SELECT dish.name FROM dish WHERE dish.first_appeared = 1855 AND dish.last_appeared = 1900,SELECT dish.name FROM dish INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE dish.last_appeared - dish.first_appeared > [placeholder-type:numeric],"The virtual table describes the names of dishes from the 'dish' table that have a significant historical duration, indicated by the difference between the last and first appearance years being greater than a specified numeric value. The query joins the 'dish' table with the 'MenuItem' table to ensure that only dishes that are part of menu items are considered.",7
menu,5484,6,"How many dishes are there in total in the menus with the name ""Waldorf Astoria""?",SELECT SUM(CASE WHEN T3.name = 'Waldorf Astoria' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id,SELECT COUNT(DISTINCT menuitem.dish_id) AS total_dishes FROM menu JOIN menupage ON menu.id = menupage.menu_id JOIN menuitem ON menupage.id = menuitem.menu_page_id WHERE menu.name = 'Waldorf Astoria',SELECT COUNT(menuitem.dish_id) FROM menu INNER JOIN menupage ON menu.id = menupage.menu_id INNER JOIN menuitem ON menupage.id = menuitem.menu_page_id WHERE menu.name = 'Waldorf Astoria',SELECT SUM(CASE WHEN dish.name = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) FROM menuitem INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE menu.call_number IS NULL,"The virtual table calculates the total number of times a specific dish appears in the menu items, using a conditional sum based on the dish's name. It joins multiple tables: 'menuitem' to get the menu items, 'menupage' to link to the corresponding menu pages, 'menu' to filter menus that are DIY (without a sponsor), and 'dish' to identify the specific dish by its name. The placeholders represent the dish name and numeric values for the sum calculation.",9
shooting,2466,7,"Among the 'Handgun' weapon used by subject, how many percent were 'Shoot and Miss'?",SELECT CAST(SUM(subject_statuses = 'Shoot and Miss') AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE subject_weapon = 'Handgun',SELECT (CAST(COUNT(CASE WHEN subject_statuses = 'Shoot and Miss' THEN 1 END) AS FLOAT) / COUNT(*)) * 100 AS percentage FROM incidents WHERE subject_weapon = 'Handgun';,SELECT CAST(SUM(incidents.subject_statuses = 'Shoot and Miss') AS FLOAT) * 100 / COUNT(incidents.case_number) FROM incidents WHERE incidents.subject_weapon = 'Handgun',SELECT CAST(SUM(incidents.subject_statuses = '[placeholder-type:string]') AS FLOAT) * [placeholder-type:numeric] / COUNT(incidents.case_number) FROM incidents WHERE incidents.subject_weapon = '[placeholder-type:string]',"The virtual table calculates the proportion of incidents with a specific subject status and weapon type from the 'incidents' table. It sums the occurrences of a specified subject status, multiplies it by a numeric placeholder, and divides by the total count of case numbers to derive a ratio.",7
law_episode,1303,7,What is the title of the episodes that were least enjoyed?,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 1,SELECT episode.title FROM episode JOIN vote ON episode.episode_id = vote.episode_id WHERE vote.stars = '1' ORDER BY vote.stars ASC LIMIT 10,SELECT episode.title FROM episode INNER JOIN vote ON episode.episode_id = vote.episode_id GROUP BY episode.episode_id ORDER BY AVG(vote.stars) ASC,SELECT episode.title FROM episode INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE keyword.keyword = '[placeholder-type:string]',"The virtual table describes the titles of episodes from the 'episode' table that are associated with a specific keyword. The query uses an inner join with the 'keyword' table to filter episodes based on the provided keyword, represented by a placeholder.",7
european_football_2,10501,7,Which player is the tallest?,SELECT player_name FROM Player ORDER BY height DESC LIMIT 1,"SELECT player_name, height FROM player ORDER BY height DESC LIMIT 1;",SELECT player.player_name FROM player WHERE player.height = (SELECT MAX(player.height) FROM player),SELECT player.player_name FROM player WHERE player.height > [placeholder-type:numeric] ORDER BY player.player_name LIMIT [placeholder-type:numeric],"The virtual table describes the names of players from the 'player' table who have a height greater than a specified value. The results are ordered by the player's name and limited to a certain number of entries, as indicated by the placeholders.",9
soccer_2016,1818,5,"In the database, how many times is the number of Indian cities to the South African cities?",SELECT CAST(SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Country_Name = 'South Africa' THEN 1 ELSE 0 END) FROM City AS T1 INNER JOIN Country AS T2 ON T1.Country_Id = T2.Country_Id,SELECT (SELECT COUNT(*) FROM city WHERE country_id = (SELECT country_id FROM country WHERE country_name = 'India' LIMIT 1)) / (SELECT COUNT(*) FROM city WHERE country_id = (SELECT country_id FROM country WHERE country_name = 'South Africa' LIMIT 1)) AS city_ratio;,SELECT (SELECT COUNT(*) FROM city JOIN country ON city.country_id = country.country_id WHERE country.country_name = 'India') * 1.0 / (SELECT COUNT(*) FROM city JOIN country ON city.country_id = country.country_id WHERE country.country_name = 'South Africa') AS city_ratio;,No BOs provided,No BOs,No BOs provided
soccer_2016,2008,7,List the names of players who play by the left hand.,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T2.Batting_hand = 'Left-hand bat',SELECT player.player_name FROM player JOIN batting_style ON player.batting_hand = batting_style.batting_id WHERE batting_style.batting_hand = 'left';,SELECT player.player_name FROM player INNER JOIN batting_style ON player.batting_hand = batting_style.batting_id WHERE batting_style.batting_hand = 'Left-hand bat',SELECT player.player_name FROM player INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id WHERE bowling_style.bowling_skill = '[placeholder-type:string]',"The virtual table describes the names of players from the 'player' table who have a specific bowling skill. The query uses an INNER JOIN to connect the 'player' table with the 'bowling_style' table based on the bowling skill ID, allowing for filtering by a specific bowling skill using a placeholder.",7
public_review_platform,3774,6,"Give the percentage of ""Automotive"" businesses among all the Yelp businesses.","SELECT CAST(SUM(CASE WHEN T2.category_name LIKE 'Automotive' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) AS ""percentage"" FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id",SELECT (COUNT(CASE WHEN bc.category_id = (SELECT category_id FROM categories WHERE category_name = 'Automotive') THEN 1 END) * 100.0 / COUNT(*)) AS percentage_automotive FROM business b LEFT JOIN business_categories bc ON b.business_id = bc.business_id;,SELECT (COUNT(CASE WHEN categories.category_name = 'Automotive' THEN business.business_id END) * 100.0 / COUNT(business.business_id)) AS percentage_automotive FROM business INNER JOIN business_categories ON business.business_id = business_categories.business_id INNER JOIN categories ON business_categories.category_id = categories.category_id;,SELECT CAST(SUM(CASE WHEN categories.category_name = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) AS FLOAT) / SUM(CASE WHEN categories.category_name = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) FROM business_categories INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id,"The virtual table calculates the average of a specific numeric value from the 'business_categories' table, filtered by a given category name. It uses a conditional sum to differentiate between the specified category and others, ensuring that the average is computed correctly based on the provided category name.",5
public_review_platform,3967,5,"What is the percentage for the Yelp businesses in ""Pets"" category of all businesses?",SELECT CAST(SUM(CASE WHEN T2.category_name = 'Pets' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.category_name) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id,SELECT (COUNT(bc.business_id) * 100.0 / (SELECT COUNT(*) FROM business)) AS percentage FROM business_categories bc JOIN categories c ON bc.category_id = c.category_id WHERE c.category_name = 'Pets';,SELECT (CAST(COUNT(CASE WHEN categories.category_name = 'Pets' THEN business.business_id END) AS FLOAT) / COUNT(business.business_id)) * 100 AS percentage FROM business INNER JOIN business_categories ON business.business_id = business_categories.business_id INNER JOIN categories ON business_categories.category_id = categories.category_id,SELECT CAST(SUM(CASE WHEN categories.category_name = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) AS FLOAT) / SUM(CASE WHEN categories.category_name = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) FROM business_categories INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id,"The virtual table calculates the average of a specific numeric value from the 'business_categories' table, filtered by a given category name. It uses a conditional sum to differentiate between the specified category and others, ensuring that the average is computed correctly based on the provided category name.",5
public_review_platform,4013,7,How many short tips were left for the business with ID no.2?,SELECT COUNT(business_id) FROM Tips WHERE business_id = 2 AND tip_length = 'Short',SELECT COUNT(*) FROM tips WHERE business_id = '2' AND tip_length < 50;,SELECT COUNT(*) FROM tips WHERE business_id = '2' AND tip_length = 'Short',SELECT COUNT(business_attributes.business_id) FROM attributes INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE attributes.attribute_name = '[placeholder-type:string]' AND business_attributes.attribute_value = '[placeholder-type:string]',The virtual table counts the number of businesses that have a specific attribute based on the attribute name and its corresponding value. It joins the 'attributes' table with the 'business_attributes' table to filter the results accordingly.,8
video_games,3433,7,Indicate the name of all adventure games.,SELECT T2.game_name FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T1.genre_name = 'Adventure',SELECT genre_name FROM genre WHERE genre_name = 'Adventure',SELECT game.game_name FROM game JOIN genre ON game.genre_id = genre.id WHERE genre.genre_name = 'Adventure',SELECT game.genre_id FROM game WHERE game.game_name = '[placeholder-type:string]',The virtual table retrieves the genre identifier of a specific game from the 'game' table based on the game's name. The placeholder in the WHERE clause represents the name of the game being queried.,6
video_games,3483,6,Compute the average number of sales in region ID 3.,SELECT AVG(T.num_sales * 100000) FROM region_sales AS T WHERE T.region_id = 3,SELECT AVG(num_sales) FROM region_sales WHERE region_id = 3;,SELECT AVG(region_sales.num_sales * 100000) FROM region_sales WHERE region_sales.region_id = 3,SELECT region_sales.num_sales * [placeholder-type:numeric] FROM region_sales WHERE region_sales.region_id = [placeholder-type:numeric] AND region_sales.game_platform_id = [placeholder-type:numeric],"The virtual table calculates the total number of sales for a specific game platform in a specific region. The number of sales is derived from the 'num_sales' column in the 'region_sales' table, which is multiplied by a placeholder to represent the scaling factor for sales. The placeholders in the WHERE clause represent the unique identifiers for the region and the game platform.",7
toxicology,9690,7,What are the elements for bond id TR001_10_11?,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11',SELECT atom.element FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.bond_id = 'TR001_10_11',SELECT atom.element FROM connected INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE connected.bond_id = '[placeholder-type:string]',The virtual table describes the elements of atoms that are connected by a specific bond in the database. It retrieves the element type from the 'atom' table by joining it with the 'connected' table based on the bond identifier. The placeholder in the WHERE clause represents the bond's unique identifier.,7
disney,4637,6,"Give the name of the movie which the song ""I Thought I Lost You"" is associated with.",SELECT movie_title FROM characters WHERE song = 'I Thought I Lost You',SELECT characters.movie_title FROM characters JOIN round ON characters.movie_title = round.movie_title WHERE round.song = 'I Thought I Lost You';,SELECT movie_title FROM characters WHERE song = 'I Thought I Lost You',"SELECT movies_total_gross.movie_title FROM movies_total_gross INNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title WHERE characters.song IS NULL ORDER BY CAST(REPLACE(TRIM(movies_total_gross.total_gross, '[placeholder-type:string]'), ',', '') AS FLOAT) LIMIT [placeholder-type:numeric]","The virtual table lists the titles of movies from the 'movies_total_gross' table that do not have an associated song in the 'characters' table. The query joins the 'movies_total_gross' and 'characters' tables on the movie title, filtering for records where the song is null. The results are ordered by the total gross of the movies, with a limit on the number of results returned.",10
mondial_geo,8433,6,What is the population gap between the United Kingdom and Italy?,SELECT MAX(Population) - MIN(Population) FROM country WHERE Name = 'United Kingdom' OR Name = 'Italy',SELECT ABS((SELECT population FROM country WHERE name = 'United Kingdom' AND code = 'GB') - (SELECT population FROM country WHERE name = 'Italy' AND code = 'IT')) AS population_gap;,SELECT ABS((SELECT population FROM country WHERE name = 'United Kingdom' ) - (SELECT population FROM country WHERE name = 'Italy')) AS population_gap,SELECT country.area * [placeholder-type:numeric] / continent.area FROM country INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent WHERE continent.name = '[placeholder-type:string]' AND country.name = '[placeholder-type:string]',"The virtual table calculates the area of a specific country as a percentage of the total area of a specified continent. It retrieves the area of the country from the 'country' table and the area of the continent from the 'continent' table, using an inner join on the 'encompasses' table to link countries to their respective continents. The placeholders represent the continent's name and the country's name, allowing users to specify which country and continent they are interested in.",10
mondial_geo,8477,7,"Among the organizations where headquarters are in the 'USA', what is the percentage of the them are in 'Washington'?",SELECT CAST(SUM(CASE WHEN T2.City = 'Washington' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.City) FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T2.Country = 'USA',SELECT (COUNT(CASE WHEN province = 'Washington' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM organization WHERE country = 'USA';,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM organization WHERE country = 'USA')) AS percentage FROM organization WHERE country = 'USA' AND city = 'Washington',SELECT country.area * [placeholder-type:numeric] / continent.area FROM country INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent WHERE continent.name = '[placeholder-type:string]' AND country.name = '[placeholder-type:string]',"The virtual table calculates the area of a specific country as a percentage of the total area of a specified continent. It retrieves the area of the country from the 'country' table and the area of the continent from the 'continent' table, using an inner join on the 'encompasses' table to link countries to their respective continents. The placeholders represent the continent's name and the country's name, allowing users to specify which country and continent they are interested in.",10
cs_semester,966,7,"Among the students with a capability below 3, what is the difference of undergraduate students from research postgraduate students?",SELECT SUM(CASE WHEN T2.type = 'UG' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.type = 'RPG' THEN 1 ELSE 0 END) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.capability < 3,"SELECT COUNT(CASE WHEN s.type = 'UG' THEN 1 END) AS UG_count, COUNT(CASE WHEN s.type = 'RPG' THEN 1 END) AS RPG_count FROM student s JOIN ra r ON s.student_id = r.student_id WHERE r.capability < 3;",SELECT (SELECT CAST(SUM(ra.capability) AS FLOAT) / COUNT(ra.student_id) FROM ra INNER JOIN student ON ra.student_id = student.student_id WHERE ra.capability < 3 AND student.type = 'UG') - (SELECT CAST(SUM(ra.capability) AS FLOAT) / COUNT(ra.student_id) FROM ra INNER JOIN student ON ra.student_id = student.student_id WHERE ra.capability < 3 AND student.type = 'RPG') AS difference,SELECT CAST(SUM(ra.capability) AS FLOAT) / COUNT(ra.student_id) FROM ra INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE student.gpa < [placeholder-type:numeric],"The virtual table calculates the average research capability of students who have a GPA below a specified threshold. It does this by summing the research capabilities of the students from the 'ra' table and dividing it by the count of those students, ensuring that only students with a GPA less than the given value are included in the calculation.",8
cars,3145,7,Calculate the percentage of American cars among all cars.,SELECT CAST(SUM(CASE WHEN T3.country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country,SELECT (COUNT(CASE WHEN country.origin = 'USA' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_american_cars FROM production INNER JOIN country ON production.country = country.origin;,SELECT (COUNT(CASE WHEN country.country = 'USA' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_american_cars FROM production INNER JOIN country ON production.country = country.origin,SELECT CAST(SUM(CASE WHEN country.country = '[placeholder-type:string]' THEN [placeholder-type:numeric] ELSE [placeholder-type:numeric] END) AS FLOAT) * [placeholder-type:numeric] / COUNT(*) FROM production INNER JOIN country AS T2 ON T1.country = T2.origin,"The virtual table calculates the average price of cars from a specific country by summing the prices of cars that belong to that country and dividing by the total count of cars. The placeholders represent the country name, the price of the car, and a numeric value for scaling the result.",6
movie_3,9300,6,What are the ratings of the film featuring behind the scenes?,SELECT rating FROM film WHERE special_features LIKE '%Behind the Scenes%',SELECT rating FROM film WHERE description LIKE '%behind the scenes%';,SELECT film.rating FROM film INNER JOIN film_text ON film.film_id = film_text.film_id WHERE film.special_features LIKE '%Behind the Scenes%',SELECT film.rental_rate FROM film INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE category.name = '[placeholder-type:string]' ORDER BY film.rental_rate / film.rental_duration LIMIT [placeholder-type:numeric],"The virtual table retrieves the rental rates of films from the 'film' table, filtered by a specific category name. It joins the 'film' table with the 'film_category' table to associate films with their categories, and then further joins with the 'category' table to filter by the desired category. The results are ordered by the rental rate divided by the rental duration, allowing for a comparison of cost-effectiveness, and limited to a specified number of results.",12
movie_3,9382,6,List all the films that are rated as PG-13.,SELECT title FROM film WHERE rating = 'PG-13',SELECT * FROM film WHERE rating = 'PG-13';,SELECT title FROM film WHERE rating = 'PG-13',SELECT film.title FROM film INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE category.name = '[placeholder-type:string]' LIMIT [placeholder-type:numeric],"The virtual table lists the titles of films from the 'film' table that belong to a specific category. It joins the 'film' table with the 'film_category' table to associate films with their categories, and then further joins with the 'category' table to filter by the category name. The placeholders allow users to specify the desired category and limit the number of results returned.",9
